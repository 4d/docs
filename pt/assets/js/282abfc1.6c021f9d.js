"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[58075],{3905:(e,o,a)=>{a.d(o,{Zo:()=>m,kt:()=>c});var t=a(67294);function r(e,o,a){return o in e?Object.defineProperty(e,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[o]=a,e}function n(e,o){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);o&&(t=t.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),a.push.apply(a,t)}return a}function s(e){for(var o=1;o<arguments.length;o++){var a=null!=arguments[o]?arguments[o]:{};o%2?n(Object(a),!0).forEach((function(o){r(e,o,a[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(a,o))}))}return e}function l(e,o){if(null==e)return{};var a,t,r=function(e,o){if(null==e)return{};var a,t,r={},n=Object.keys(e);for(t=0;t<n.length;t++)a=n[t],o.indexOf(a)>=0||(r[a]=e[a]);return r}(e,o);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(t=0;t<n.length;t++)a=n[t],o.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=t.createContext({}),d=function(e){var o=t.useContext(i),a=o;return e&&(a="function"==typeof e?e(o):s(s({},o),e)),a},m=function(e){var o=d(e.components);return t.createElement(i.Provider,{value:o},e.children)},p={inlineCode:"code",wrapper:function(e){var o=e.children;return t.createElement(t.Fragment,{},o)}},u=t.forwardRef((function(e,o){var a=e.components,r=e.mdxType,n=e.originalType,i=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=d(a),c=r,k=u["".concat(i,".").concat(c)]||u[c]||p[c]||n;return a?t.createElement(k,s(s({ref:o},m),{},{components:a})):t.createElement(k,s({ref:o},m))}));function c(e,o){var a=arguments,r=o&&o.mdxType;if("string"==typeof e||r){var n=a.length,s=new Array(n);s[0]=u;var l={};for(var i in o)hasOwnProperty.call(o,i)&&(l[i]=o[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var d=2;d<n;d++)s[d]=a[d];return t.createElement.apply(null,s)}return t.createElement.apply(null,a)}u.displayName="MDXCreateElement"},79185:(e,o,a)=>{a.r(o),a.d(o,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>m});a(67294);var t=a(3905);function r(){return r=Object.assign||function(e){for(var o=1;o<arguments.length;o++){var a=arguments[o];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e},r.apply(this,arguments)}function n(e,o){if(null==e)return{};var a,t,r=function(e,o){if(null==e)return{};var a,t,r={},n=Object.keys(e);for(t=0;t<n.length;t++)a=n[t],o.indexOf(a)>=0||(r[a]=e[a]);return r}(e,o);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(t=0;t<n.length;t++)a=n[t],o.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}const s={id:"identifiers",title:"Identificadores"},l=void 0,i={unversionedId:"Concepts/identifiers",id:"version-18/Concepts/identifiers",title:"Identificadores",description:"Esta se\xe7\xe3o descreve as conven\xe7\xf5es e regras para nomear os v\xe1rios elementos da linguagem 4D (vari\xe1veis, tabelas, objetos, formul\xe1rios, etc)",source:"@site/i18n/pt/docusaurus-plugin-content-docs/version-18/Concepts/identifiers.md",sourceDirName:"Concepts",slug:"/Concepts/identifiers",permalink:"/docs/pt/18/Concepts/identifiers",draft:!1,editUrl:"https://github.com/4D/docs/edit/main/versioned_docs/version-18/Concepts/identifiers.md",tags:[],version:"18",frontMatter:{id:"identifiers",title:"Identificadores"},sidebar:"docs",previous:{title:"Plug-ins",permalink:"/docs/pt/18/Concepts/plug-ins"},next:{title:"Vis\xe3o Geral",permalink:"/docs/pt/18/Project/overview"}},d={},m=[{value:"Regras b\xe1sicas",id:"regras-b\xe1sicas",level:2},{value:"Regras adicionais para as propriedades dos objetos e os nomes ORDA",id:"regras-adicionais-para-as-propriedades-dos-objetos-e-os-nomes-orda",level:3},{value:"Regras adicionais para SQL",id:"regras-adicionais-para-sql",level:3},{value:"Tabelas",id:"tabelas",level:2},{value:"Campos",id:"campos",level:2},{value:"Vari\xe1veis interprocesso",id:"vari\xe1veis-interprocesso",level:2},{value:"Vari\xe1veis processo",id:"vari\xe1veis-processo",level:2},{value:"Vari\xe1veis locais",id:"vari\xe1veis-locais",level:2},{value:"Arrays",id:"arrays",level:2},{value:"Arrays interprocesso",id:"arrays-interprocesso",level:3},{value:"Arrays proceso",id:"arrays-proceso",level:3},{value:"Arrays locais",id:"arrays-locais",level:3},{value:"Elementos de arrays",id:"elementos-de-arrays",level:3},{value:"Elementos de arrays de duas dimens\xf5es",id:"elementos-de-arrays-de-duas-dimens\xf5es",level:3},{value:"Atributos de objetos",id:"atributos-de-objetos",level:2},{value:"Formul\xe1rios",id:"formul\xe1rios",level:2},{value:"Objetos de formul\xe1rios",id:"objetos-de-formul\xe1rios",level:2},{value:"M\xe9todos projeto",id:"m\xe9todos-projeto",level:2},{value:"Comandos de plug-in",id:"comandos-de-plug-in",level:2},{value:"Conjuntos",id:"conjuntos",level:2},{value:"Conjuntos interprocesso",id:"conjuntos-interprocesso",level:3},{value:"Conjuntos processo",id:"conjuntos-processo",level:3},{value:"Conjuntos clientes",id:"conjuntos-clientes",level:3},{value:"Sele\xe7\xf5es tempor\xe1rias",id:"sele\xe7\xf5es-tempor\xe1rias",level:2},{value:"Sele\xe7\xf5es interprocesso tempor\xe1rias",id:"sele\xe7\xf5es-interprocesso-tempor\xe1rias",level:3},{value:"Sele\xe7\xf5es processo tempor\xe1rias",id:"sele\xe7\xf5es-processo-tempor\xe1rias",level:3},{value:"Processos",id:"processos",level:2},{value:"Processos globais",id:"processos-globais",level:3},{value:"Processos locais",id:"processos-locais",level:3},{value:"Resumo das conven\xe7\xf5es de escrita em 4D",id:"resumo-das-conven\xe7\xf5es-de-escrita-em-4d",level:2},{value:"Resolu\xe7\xe3o de conflitos de nomes",id:"resolu\xe7\xe3o-de-conflitos-de-nomes",level:2}],p={toc:m};function u(e){var{components:o}=e,a=n(e,["components"]);return(0,t.kt)("wrapper",r({},p,a,{components:o,mdxType:"MDXLayout"}),(0,t.kt)("p",null,"Esta se\xe7\xe3o descreve as conven\xe7\xf5es e regras para nomear os v\xe1rios elementos da linguagem 4D (vari\xe1veis, tabelas, objetos, formul\xe1rios, etc)"),(0,t.kt)("h2",r({},{id:"regras-b\xe1sicas"}),"Regras b\xe1sicas"),(0,t.kt)("p",null,"As regras abaixo s\xe3o aplicadas \xe0 todas as estruturas de 4D."),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},'Um nome deve come\xe7ar por um caractere alfab\xe9tico, um subscrito ou um sinal de d\xf3lar ("$") (lembre que um sinal de d\xf3lar pode denotar um elemento local, ver abaixo).'),(0,t.kt)("li",{parentName:"ul"},'Depois disso, o nome pode incluir caracteres alfab\xe9ticos, num\xe9ricos, o caractere espa\xe7o e o caractere de sublinhado/tra\xe7o baixo ("_") .'),(0,t.kt)("li",{parentName:"ul"},'Pontos (".") Periods (".") and brackets ("',"[ ]",'") are not allowed in table, field, method, or variable names.'),(0,t.kt)("li",{parentName:"ul"},"N\xe3o s\xe3o permitidos v\xedrgulas, barras inclinadas, aspas nem dois pontos."),(0,t.kt)("li",{parentName:"ul"},"Os caracteres reservados para seu uso como oepradores como * e + n\xe3o est\xe3o permitidos."),(0,t.kt)("li",{parentName:"ul"},"N\xe3o use nomes reservados, ou seja, nomes de comando 4D (",(0,t.kt)("inlineCode",{parentName:"li"},"Date"),", ",(0,t.kt)("inlineCode",{parentName:"li"},"Time"),", etc), palavras chaves (If, For, etc.), e constantes."),(0,t.kt)("li",{parentName:"ul"},"Os espa\xe7os finais s\xe3o ignorados.")),(0,t.kt)("h3",r({},{id:"regras-adicionais-para-as-propriedades-dos-objetos-e-os-nomes-orda"}),"Regras adicionais para as propriedades dos objetos e os nomes ORDA"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Os caracteres de espa\xe7o n\xe3o est\xe3o permitidos."),(0,t.kt)("li",{parentName:"ul"},'Pontos (".") Periods (".") and brackets ("',"[ ]",'") are not allowed.'),(0,t.kt)("li",{parentName:"ul"},"Os nomes s\xe3o sens\xedveis \xe0s mai\xfasculas e min\xfasculas.")),(0,t.kt)("h3",r({},{id:"regras-adicionais-para-sql"}),"Regras adicionais para SQL"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"S\xf3 s\xe3o aceitos os caracteres _0123456789abcdefghijklmnopqrstuvwxyz"),(0,t.kt)("li",{parentName:"ul"},"Nomes n\xe3o devem incluir palavras chave SQL (comando, atributo, etc).")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Nota:"),' a \xe1rea "SQL" do Inspector no editor de estruturas indica automaticamente qualquer caractere n\xe3o autorizado no nome de uma tabela ou campo.'),(0,t.kt)("h2",r({},{id:"tabelas"}),"Tabelas"),(0,t.kt)("p",null,"Uma tabela se designa colocando seu nome entre par\xeanteses: ","[...]",". Um nome de tabela pode conter at\xe9 31 caracteres."),(0,t.kt)("p",null,"Exemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'DEFAULT TABLE([Orders])\nFORM SET INPUT([Clients];"Entry")\nADD RECORD([Letters])\n')),(0,t.kt)("h2",r({},{id:"campos"}),"Campos"),(0,t.kt)("p",null,"Para designar um campo, primeiro se especifica a tabela a qual pertence. O nome do campo segue imediatamene o nome da tabela. Um nome campo pode conter at\xe9 31 caracteres."),(0,t.kt)("p",null,"Exemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'[Orders]Total:=Sum([Line]Amount)\nQUERY([Clients];[Clients]Name="Smith")\n[Letters]Text:=Capitalize text([Letters]Text)\n')),(0,t.kt)("h2",r({},{id:"vari\xe1veis-interprocesso"}),"Vari\xe1veis interprocesso"),(0,t.kt)("p",null,"Designa-se uma vari\xe1vel interprocessada precedendo o nome da vari\xe1vel com os s\xedmbolos (",(0,t.kt)("inlineCode",{parentName:"p"},"<>"),') - um sinal "menos do que" seguido de um sinal "maior do que".'),(0,t.kt)("p",null,"O nome de uma vari\xe1vel interprocessada pode ter at\xe9 31 caracteres, n\xe3o incluindo os s\xedmbolos ",(0,t.kt)("inlineCode",{parentName:"p"},"<>")," ."),(0,t.kt)("p",null,"Exemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'<>vlProcessID:=Current process\n<>vsKey:=Char(KeyCode)\nIf(<>vtName#"")\n')),(0,t.kt)("h2",r({},{id:"vari\xe1veis-processo"}),"Vari\xe1veis processo"),(0,t.kt)("p",null,"Designa-se uma vari\xe1vel de processo utilizando o seu nome (que n\xe3o pode come\xe7ar com os s\xedmbolos ",(0,t.kt)("inlineCode",{parentName:"p"},"<>")," nem com o s\xedmbolo do d\xf3lar $). Um nome de processo pode conter at\xe9 31 caracteres."),(0,t.kt)("p",null,"Exemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'<>vrGrandTotal:=Sum([Accounts]Amount)\nIf(bValidate=1)\nvsCurrentName:=""\n')),(0,t.kt)("h2",r({},{id:"vari\xe1veis-locais"}),"Vari\xe1veis locais"),(0,t.kt)("p",null,"Uma vari\xe1vel local \xe9 determinada colocando um sinal de d\xf3lar ($) antes do nome da vari\xe1vel.  Um nome de vari\xe1vel local pode conter at\xe9 31 caracteres, sem incluir o sinal de d\xf3lar."),(0,t.kt)("p",null,"Exemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'For($vlRecord;1;100)\nIf($vsTempVar="No")\n$vsMyString:="Hello there"\n')),(0,t.kt)("h2",r({},{id:"arrays"}),"Arrays"),(0,t.kt)("p",null,"Um array se designa escrevendo seu nome, que \xe9 o nome que se passa a um comando de declara\xe7\xe3o de array (como ARRAY LONGINT) quando criar o array. Arrays s\xe3o vari\xe1veis, e desde o ponto de vista do escopo,da mesma forma que as vari\xe1veis, t\xeam tr\xeas tipos diferentes de arrays:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Arrays interprocesso,"),(0,t.kt)("li",{parentName:"ul"},"Arrays processo,"),(0,t.kt)("li",{parentName:"ul"},"Arrays local.")),(0,t.kt)("h3",r({},{id:"arrays-interprocesso"}),"Arrays interprocesso"),(0,t.kt)("p",null,"Designa-se uma vari\xe1vel interprocessada precedendo o nome da vari\xe1vel com os s\xedmbolos (",(0,t.kt)("inlineCode",{parentName:"p"},"<>"),') - um sinal "menos do que" seguido de um sinal "maior do que".'),(0,t.kt)("p",null,"O nome de uma vari\xe1vel interprocessada pode ter at\xe9 31 caracteres, n\xe3o incluindo os s\xedmbolos ",(0,t.kt)("inlineCode",{parentName:"p"},"<>")," ."),(0,t.kt)("p",null,"Exemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"ARRAY TEXT(<>atSubjects;Records in table([Topics]))\nSORT ARRAY(<>asKeywords;>)\nARRAY INTEGER(<>aiBigArray;10000)\n")),(0,t.kt)("h3",r({},{id:"arrays-proceso"}),"Arrays proceso"),(0,t.kt)("p",null,"Designa-se uma vari\xe1vel de processo utilizando o seu nome (que n\xe3o pode come\xe7ar com os s\xedmbolos ",(0,t.kt)("inlineCode",{parentName:"p"},"<>")," nem com o s\xedmbolo do d\xf3lar $). Um nome de array processo pode conter at\xe9 31 caracteres."),(0,t.kt)("p",null,"Exemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"ARRAY TEXT(atSubjects;Records in table([Topics]))\nSORT ARRAY(asKeywords;>)\nARRAY INTEGER(aiBigArray;10000)\n")),(0,t.kt)("h3",r({},{id:"arrays-locais"}),"Arrays locais"),(0,t.kt)("p",null,"O nome de um array local vai precedido do sinal de d\xf3lar ($). Um nome de array local pode conter at\xe9 31 caracteres, sem incluir o sinal de d\xf3lar."),(0,t.kt)("p",null,"Exemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"ARRAY TEXT($atSubjects;Records in table([Topics]))\nSORT ARRAY($asKeywords;>)\nARRAY INTEGER($aiBigArray;10000)\n")),(0,t.kt)("h3",r({},{id:"elementos-de-arrays"}),"Elementos de arrays"),(0,t.kt)("p",null,'A refer\xeancia a um elemento de um array local, processo ou interprocesso se realiza mediante chaves ("{ }"). O elemento ao qual faz refer\xeancia se indica com uma express\xe3o num\xe9rica.'),(0,t.kt)("p",null,"Exemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),' If(<>asKeywords{1}="Stop")\n<>atSubjects{$vlElem}:=[Topics]Subject\n$viNextValue:=<>aiBigArray{Size of array(<>aiBigArray)}\n\n    //Direcionar um elemento de um array processo If(asKeywords{1}="Stop")\natSubjects{$vlElem}:=[Topics]Subject\n$viNextValue:=aiBigArray{Size of array(aiBigArray)}\n\n    //Direcionar um elemento de um array local If($asKeywords{1}="Stop")\n$atSubjects{$vlElem}:=[Topics]Subject\n$viNextValue:=$aiBigArray{Size of array($aiBigArray)}\n')),(0,t.kt)("h3",r({},{id:"elementos-de-arrays-de-duas-dimens\xf5es"}),"Elementos de arrays de duas dimens\xf5es"),(0,t.kt)("p",null,'A refer\xeancia a um elemento de um array local, processo ou interprocesso se realiza mediante chaves ("{ }}) duas vezes. O elemento ao que se faz refer\xeancia se denota atrav\xe9s de duas express\xf5es num\xe9ricas em dois conjuntos de pares de chaves'),(0,t.kt)("p",null,"Exemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),' //Direcionamento de um elemento de um array interprocesso de duas dimens\xf5es If(<>asKeywords{$vlNextRow}{1}="Stop")\n<>atSubjects{10}{$vlElem}:=[Topics]Subject\n$viNextValue:=<>aiBigArray{$vlSet}{Size of array(<>aiBigArray{$vlSet})}\n\n    //Direcionar um elemento de uma array processo de duas dimens\xf5es If(asKeywords{$vlNextRow}{1}="Stop")\natSubjects{10}{$vlElem}:=[Topics]Subject\n$viNextValue:=aiBigArray{$vlSet}{Size of array(aiBigArray{$vlSet})}\n\n    //Direcionar um elemento de um array local de duas dimens\xf5es If($asKeywords{$vlNextRow}{1}="Stop")\n$atSubjects{10}{$vlElem}:=[Topics]Subject\n$viNextValue:=$aiBigArray{$vlSet}{Size of array($aiBigArray{$vlSet})}\n')),(0,t.kt)("h2",r({},{id:"atributos-de-objetos"}),"Atributos de objetos"),(0,t.kt)("p",null,'Quando a nota\xe7\xe3o objeto estiver ativada, \xe9 designado um atributo de objeto (tamb\xe9m chamado propriedade de objeto) colocando um ponto (".")  entre o nome do objeto (ou do atributo) e o nome do atributo. Um nome de atributo pode conter at\xe9 255 caracteres e diferencia entre  mai\xfasculas e min\xfasculas.'),(0,t.kt)("p",null,"Exemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'myObject.myAttribute:="10"\n$value:=$clientObj.data.address.city\n')),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Nota:")," s\xe3o aplicadas regras adicionais aos nomes de atributos de objetos (devem ser ajustados \xe0 especifica\xe7\xe3o ECMAScript). Para saber mais, consulte ",(0,t.kt)("a",r({parentName:"p"},{href:"/docs/pt/18/Concepts/object#object-property-identifiers"}),"Identificadores de propriedades de objetos"),"."),(0,t.kt)("h2",r({},{id:"formul\xe1rios"}),"Formul\xe1rios"),(0,t.kt)("p",null,"Um formul\xe1rio se designa mediante uma express\xe3o de tipo string que representa seu nome. Um nome de formul\xe1rio pode conter at\xe9 31 caracteres."),(0,t.kt)("p",null,"Exemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'FORM SET INPUT([People];"Input")\nFORM SET OUTPUT([People];"Output")\nDIALOG([Storage];"Note box"+String($vlStage))\n')),(0,t.kt)("h2",r({},{id:"objetos-de-formul\xe1rios"}),"Objetos de formul\xe1rios"),(0,t.kt)("p",null,"Se designar um objeto de formul\xe1rio passando seu nome como uma string, precedida pelo par\xe2metro *. Um nome de objeto de formul\xe1rio pode conter at\xe9 255 caracteres."),(0,t.kt)("p",null,"Exemplo:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'OBJECT SET FONT(*;"Binfo";"Times")\n')),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Nota:")," n\xe3o confunda os objetos de formul\xe1rio (bot\xf5es, list boxes, vari\xe1veis edit\xe1veis, etc.) e os objetos da linguagem 4D. Os objetos da linguagem 4D s\xe3o criados e manipulados atrav\xe9s da nota\xe7\xe3o de objetos ou de comandos dedicados."),(0,t.kt)("h2",r({},{id:"m\xe9todos-projeto"}),"M\xe9todos projeto"),(0,t.kt)("p",null,"Um m\xe9todo projeto (procedimento ou fun\xe7\xe3o) se designa utilizando seu nome. Um nome de m\xe9todo pode conter at\xe9 31 caracteres."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Nota:")," um m\xe9todo projeto que n\xe3o devolve um resultado tamb\xe9m se chama um procedimento. Um m\xe9todo projeto que devolve um resultado tamb\xe9m se denomina fun\xe7\xe3o."),(0,t.kt)("p",null,"Exemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"If(New client)\nDELETE DUPLICATED VALUES APPLY TO SELECTION([Employees];INCREASE SALARIES)\n")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Dica:")," \xe9 uma boa t\xe9cnica de programa\xe7\xe3o adotar a mesma conven\xe7\xe3o de nomenclatura que a utilizada por 4D para os m\xe9todos integrados. Use mai\xfasculas para nomear seus m\xe9todos, entretanto, se um m\xe9todo for uma fun\xe7\xe3o, coloque em mai\xfasculas o primeiro caractere de seu nome. Dessa maneira, quando reabrir um banco de dados para manuten\xe7\xe3o depois de alguns meses, j\xe1 saber\xe1 se um m\xe9todo retorna um resultado, simplesmente olhando seu nome na janela do Explorer."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Nota:")," quando chamar a um m\xe9todo, s\xf3 tem que escrever seu nome. Entretanto, alguns comandos integrados em 4D, como ",(0,t.kt)("inlineCode",{parentName:"p"},"ON EVENT CALL"),", assim como todos os comandos de Plug-In, esperam o nome de um m\xe9todo como uma string quando se passar um par\xe2metro de tipo m\xe9todo. Exemplo:"),(0,t.kt)("p",null,"Exemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),' // Este comando espera um m\xe9todo (fun\xe7\xe3o) ou f\xf3rmula\nQUERY BY FORMULA([aTable];Special query)\n // Este comando espera um m\xe9todo (procedimento) ou declara\xe7\xe3o\nAPPLY TO SELECTION([Employees];INCREASE SALARIES)\n //Mas este comando espera um nome de m\xe9todo\nON EVENT CALL("HANDLE EVENTS")\n')),(0,t.kt)("p",null,"Os m\xe9todos projeto podem aceitar par\xe2metros (argumentos). Os par\xe2metros se passam ao m\xe9todo entre par\xeantesis, depois do nome do m\xe9todo. Cada par\xe2metro est\xe1 separado do pr\xf3ximo por um ponto e v\xedrgula (;). Os par\xe2metros est\xe3o dispon\xedveis dentro do m\xe9todo chamado como vari\xe1veis locais numeradas sequencialmente: $1, $2,..., $n. Os parametros est\xe3o dispon\xedveis dentro do m\xe9todo chamado como vari\xe1veis locais numeradas consecutivamente: $1, $2,\u2026, $n. Al\xe9m disso, pode direcionar m\xfaltiplos par\xe2metros consecutivos com a sintaxe ${n} onde n, express\xe3o num\xe9rica, \xe9 o n\xfamero do par\xe2metro."),(0,t.kt)("p",null,"Dentro de uma fun\xe7\xe3o, a vari\xe1vel local $0 cont\xe9m o valor a devolver."),(0,t.kt)("p",null,"Exemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),' //Dentro de DROP SPACES $1 \xe9 um ponteiro ao campo [People]Name DROP SPACES(->[People]Name)\n\n    //Dentro de Calc creator:\n    //- $1 \xe9 num\xe9rico e igual a 1\n    //- $2 \xe9 num\xe9rico e igual a 5\n    //- $3 \xe9 texto ou string e igual a "Nice"\n    //- O valor do resultado se atribui a $0\n$vsResult:=Calc creator(1;5; "Nice")\n\n    //Dentro de Dump:\n    //- os tres par\xe2metros s\xe3o texto ou string\n    //- Se pode direcionar como $1, $2 ou $3\n    //- Tamb\xe9m  podem ser direcionados como, por exemplo, ${$vlParam} onde $vlParam \xe9 1, 2 ou 3\n    //- O valor resultante se atribui a $0\nvtClone:=Dump("is";"the";"it")\n')),(0,t.kt)("h2",r({},{id:"comandos-de-plug-in"}),"Comandos de plug-in"),(0,t.kt)("p",null,"Para designar um comando de plug-in se utiliza seu nome, tal e como o define o plug-in. O nome de um comando plug-in pode conter at\xe9 31 caracteres."),(0,t.kt)("p",null,"Exemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'$error:=SMTP_From($smtp_id;"henry@gmail.com")\n')),(0,t.kt)("h2",r({},{id:"conjuntos"}),"Conjuntos"),(0,t.kt)("p",null,"Desde o ponto de vista do escopo, h\xe1 dois tipos de conjuntos:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Conjuntos interprocesso"),(0,t.kt)("li",{parentName:"ul"},"Conjuntos processo")),(0,t.kt)("p",null,"4D Server tamb\xe9m inclui:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Conjuntos clientes")),(0,t.kt)("h3",r({},{id:"conjuntos-interprocesso"}),"Conjuntos interprocesso"),(0,t.kt)("p",null,"A set is an interprocess set if the name of the set is preceded by the symbols (",(0,t.kt)("inlineCode",{parentName:"p"},"<>"),") \u2014 a \u201cless than\u201d sign followed by a \u201cgreater than\u201d sign."),(0,t.kt)("p",null,"An interprocess set name can contain up to 255 characters, not including the ",(0,t.kt)("inlineCode",{parentName:"p"},"<>")," symbols."),(0,t.kt)("h3",r({},{id:"conjuntos-processo"}),"Conjuntos processo"),(0,t.kt)("p",null,"Para designar um conjunto processo se utilizar uma express\xe3o de tipo string que represente seu nome (que n\xe3o pode come\xe7ar com os s\xedmbolos ",(0,t.kt)("inlineCode",{parentName:"p"},"<>"),"  ou o sinal de d\xf3lar $). O nome de um conjunto processo pode conter at\xe9 255 caracteres."),(0,t.kt)("h3",r({},{id:"conjuntos-clientes"}),"Conjuntos clientes"),(0,t.kt)("p",null,"O nome de um conjunto cliente deve ser precedido do sinal de d\xf3lar ($). Um nome de conjunto cliente pode conter at\xe9 255 caracteres, sem incluir o sinal de d\xf3lar."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Nota:")," os conjuntos s\xe3o mantidos pelo equipamento servidor. Em certos casos, por motivos especiais ou por efici\xeancia, pode querer trabalhar com conjuntos localmente no equipamento Cliente. Para fazer isso, use conjuntos Clientes."),(0,t.kt)("p",null,"Exemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),' //Conjuntos interprocesso USE SET("<>Deleted Records")\nCREATE SET([Customers];"<>Customer Orders")\nIf(Records in set("<>Selection"+String($i))>0)\n //Conjuntos processo USE SET("Deleted Records")\nCREATE SET([Customers];"Customer Orders")\nIf(Records in set("<>Selection"+String($i))>0)\n //conjuntos clientes USE SET("$Deleted Records")\nCREATE SET([Customers];"$Customer Orders")\nIf(Records in set("$Selection"+String($i))>0)\n')),(0,t.kt)("h2",r({},{id:"sele\xe7\xf5es-tempor\xe1rias"}),"Sele\xe7\xf5es tempor\xe1rias"),(0,t.kt)("p",null,"Relativo ao escopo, h\xe1 dois tipos de sele\xe7\xf5es tempor\xe1rias/named:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Sele\xe7\xf5es interprocesso tempor\xe1rias"),(0,t.kt)("li",{parentName:"ul"},"Sele\xe7\xf5es processo tempor\xe1rias.")),(0,t.kt)("h3",r({},{id:"sele\xe7\xf5es-interprocesso-tempor\xe1rias"}),"Sele\xe7\xf5es interprocesso tempor\xe1rias"),(0,t.kt)("p",null,"Uma sele\xe7\xe3o tempor\xe1ria \xe9 uma sele\xe7\xe3o interprocesso tempor\xe1ria se seu nome for precedido dos s\xedmbolos (",(0,t.kt)("inlineCode",{parentName:"p"},"<>"),') - um sinal "menor que" seguido de um sinal "maior que".'),(0,t.kt)("p",null,"O nome de uma vari\xe1vel interprocessada pode ter at\xe9 255 caracteres, n\xe3o incluindo os s\xedmbolos ",(0,t.kt)("inlineCode",{parentName:"p"},"<>")," ."),(0,t.kt)("h3",r({},{id:"sele\xe7\xf5es-processo-tempor\xe1rias"}),"Sele\xe7\xf5es processo tempor\xe1rias"),(0,t.kt)("p",null,"Para designar uma sele\xe7\xe3o nomeada se utiliza uma express\xe3o de tipo string que represente seu nome (que n\xe3o pode come\xe7ar com os s\xedmbolos ",(0,t.kt)("inlineCode",{parentName:"p"},"<>"),"  ou o sinal de d\xf3lar $). O nome de uma sele\xe7\xe3o tempor\xe1ria pode conter at\xe9 255 caracteres."),(0,t.kt)("p",null,"Exemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),' //Sele\xe7\xe3o nomeada interprocesso\nUSE NAMED SELECTION([Customers];"<>ByZipcode")\n //Sele\xe7\xe3o nomeada processo\nUSE NAMED SELECTION([Customers];"<>ByZipcode")\n')),(0,t.kt)("h2",r({},{id:"processos"}),"Processos"),(0,t.kt)("p",null,"Em modo monousu\xe1rio, ou em Cliente/Servidor do lado do Cliente, h\xe1 dois tipos de processos:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Processos globais"),(0,t.kt)("li",{parentName:"ul"},"Processos locais.")),(0,t.kt)("h3",r({},{id:"processos-globais"}),"Processos globais"),(0,t.kt)("p",null,"Pode determinar um processo global usando uma express\xe3o string que represente seu nome (que n\xe3o pode come\xe7ar com o sinal de d\xf3lar $). Um nome de processo pode conter at\xe9 255 caracteres."),(0,t.kt)("h3",r({},{id:"processos-locais"}),"Processos locais"),(0,t.kt)("p",null,"Pode determinar um processo local se o nome do processo for precedido pelo sinal de d\xf3lar ($). O nome de processo pode conter at\xe9 255 caracteres, sem incluir o sinal de d\xf3lar."),(0,t.kt)("p",null,"Exemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),' //Iniciar processo global "Add Customers"\n$vlProcessID:=New process("P_ADD_CUSTOMERS";48*1024;"Add Customers")\n //Iniciar processo local "$Follow Mouse Moves"\n$vlProcessID:=New process("P_MOUSE_SNIFFER";16*1024;"$Follow Mouse Moves")\n')),(0,t.kt)("h2",r({},{id:"resumo-das-conven\xe7\xf5es-de-escrita-em-4d"}),"Resumo das conven\xe7\xf5es de escrita em 4D"),(0,t.kt)("p",null,"A tabela abaixo resume as conven\xe7\xf5es de nomes em 4D."),(0,t.kt)("table",null,(0,t.kt)("thead",{parentName:"table"},(0,t.kt)("tr",{parentName:"thead"},(0,t.kt)("th",r({parentName:"tr"},{align:null}),"Identificador"),(0,t.kt)("th",r({parentName:"tr"},{align:null}),"Tamanho M\xe1x"),(0,t.kt)("th",r({parentName:"tr"},{align:null}),"Exemplo"))),(0,t.kt)("tbody",{parentName:"table"},(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",r({parentName:"tr"},{align:null}),"Tabela"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),"31"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),"[Invoices]")),(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",r({parentName:"tr"},{align:null}),"Campo"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),"31"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),"[Employees]","Last Name")),(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",r({parentName:"tr"},{align:null}),"Vari\xe1vel/array interprocesso"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),(0,t.kt)("inlineCode",{parentName:"td"},"<>")," + 31"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),(0,t.kt)("inlineCode",{parentName:"td"},"<>vlNextProcessID"))),(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",r({parentName:"tr"},{align:null}),"Vari\xe1vel/Array processo"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),"31"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),"vsCurrentName")),(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",r({parentName:"tr"},{align:null}),"Vari\xe1vel/Array local"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),"$ + 31"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),"$vlLocalCounter")),(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",r({parentName:"tr"},{align:null}),"Propriedades de objetos"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),"255"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),"$o.myAttribute")),(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",r({parentName:"tr"},{align:null}),"Formul\xe1rio"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),"31"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),'"My Custom Web Input"')),(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",r({parentName:"tr"},{align:null}),"Objetos de formul\xe1rio"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),"255"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),'"MyButton"')),(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",r({parentName:"tr"},{align:null}),"M\xe9todo Projeto"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),"31"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),"M_ADD_CUSTOMERS")),(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",r({parentName:"tr"},{align:null}),"Comando de plug-in"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),"31"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),"PDF SET ROTATION")),(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",r({parentName:"tr"},{align:null}),"Conjuntos interprocesso"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),(0,t.kt)("inlineCode",{parentName:"td"},"<>")," + 255"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),(0,t.kt)("inlineCode",{parentName:"td"},'"<>Records to be Archived"'))),(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",r({parentName:"tr"},{align:null}),"Conjuntos processo"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),"255"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),'"Current selected records"')),(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",r({parentName:"tr"},{align:null}),"Conjunto cliente"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),"$ + 255"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),'"$Previous Subjects"')),(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",r({parentName:"tr"},{align:null}),"Sele\xe7\xe3o nomeada"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),"255"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),'"Employees A to Z"')),(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",r({parentName:"tr"},{align:null}),"Sele\xe7\xe3o temporal interprocesso"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),(0,t.kt)("inlineCode",{parentName:"td"},"<>")," + 255"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),(0,t.kt)("inlineCode",{parentName:"td"},'"<>Employees Z to A"'))),(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",r({parentName:"tr"},{align:null}),"Processo local"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),"$ + 255"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),'"$Follow Events"')),(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",r({parentName:"tr"},{align:null}),"Processo global"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),"255"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),'"',(0,t.kt)("em",{parentName:"td"},"P_INVOICES_MODULE"),'"')),(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",r({parentName:"tr"},{align:null}),"Sem\xe1foro"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),"255"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),'"mysemaphore"')))),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Nota:")," se caracteres n\xe3o romanos, fora do alfabeto latino, forem usados nos nomes dos identificadores, o tamanho m\xe1ximo pode ser menor."),(0,t.kt)("h2",r({},{id:"resolu\xe7\xe3o-de-conflitos-de-nomes"}),"Resolu\xe7\xe3o de conflitos de nomes"),(0,t.kt)("p",null,"Tenha certeza de usar nomes \xfanicos para os diferentes elementos de seu banco de dados. Se um objeto particular tiver o mesmo nome que outro objeto de diferente tipo (por exemplo, se um campo se chamar Pessoa e uma vari\xe1vel tamb\xe9m se chamar Pessoa), 4D utiliza um sistema de prioridade."),(0,t.kt)("p",null,"4D identifica os nomes utilizados nos m\xe9todos em fun\xe7\xe3o na seguinte ordem de ordem de prioridade:"),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},"Campos"),(0,t.kt)("li",{parentName:"ol"},"Comandos"),(0,t.kt)("li",{parentName:"ol"},"M\xe9todos"),(0,t.kt)("li",{parentName:"ol"},"Comandos de plug-in"),(0,t.kt)("li",{parentName:"ol"},"Constantes predefinidas"),(0,t.kt)("li",{parentName:"ol"},"Vari\xe1veis.")),(0,t.kt)("p",null,"Por exemplo, 4D tem um comando integrado chamado ",(0,t.kt)("inlineCode",{parentName:"p"},"Date"),". Se chamar a um m\xe9todo ",(0,t.kt)("em",{parentName:"p"},"Date"),", 4D o reconhecer\xe1 como o comando integrado ",(0,t.kt)("inlineCode",{parentName:"p"},"Date"),', e n\xe3o como seu m\xe9todo. Isso impediria de chamar seu m\xe9todo. Se entretanto, chamar um campo de "Date", 4D tentar\xe1 usar seu campo ao inv\xe9s do comando ',(0,t.kt)("inlineCode",{parentName:"p"},"Date"),"."))}u.isMDXComponent=!0}}]);