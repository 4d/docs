"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["44477"],{977952:function(e,t,o){o.r(t),o.d(t,{default:()=>u,frontMatter:()=>r,metadata:()=>i,assets:()=>c,toc:()=>a,contentTitle:()=>s});var i=JSON.parse('{"id":"REST/timeout","title":"$timeout","description":"Define o n\xfamero de segundos para guardar um conjunto de entidades na cache do 4D Server (e.g., $timeout=1800)","source":"@site/i18n/pt/docusaurus-plugin-content-docs/version-18/REST/$timeout.md","sourceDirName":"REST","slug":"/REST/timeout","permalink":"/docs/pt/18/REST/timeout","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20REST%2F%24timeout.md%20(18)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"18","frontMatter":{"id":"timeout","title":"$timeout"},"sidebar":"docs","previous":{"title":"$skip","permalink":"/docs/pt/18/REST/skip"},"next":{"title":"$top/$limit","permalink":"/docs/pt/18/REST/top_$limit"}}'),n=o("785893"),d=o("250065");let r={id:"timeout",title:"$timeout"},s=void 0,c={},a=[{value:"Descri\xe7\xe3o",id:"descri\xe7\xe3o",level:2},{value:"Exemplo",id:"exemplo",level:2}];function m(e){let t={a:"a",code:"code",em:"em",h2:"h2",p:"p",...(0,d.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["Define o n\xfamero de segundos para guardar um conjunto de entidades na cache do 4D Server (",(0,n.jsx)(t.em,{children:"e.g."}),", ",(0,n.jsx)(t.code,{children:"$timeout=1800"}),")"]}),"\n",(0,n.jsx)(t.h2,{id:"descri\xe7\xe3o",children:"Descri\xe7\xe3o"}),"\n",(0,n.jsxs)(t.p,{children:["Para definir um timeout para um conjunto de entidades criado com ",(0,n.jsx)(t.a,{href:"/docs/pt/18/REST/method#methodentityset",children:(0,n.jsx)(t.code,{children:"$method=entityset"})}),", passar o n\xfamero de segundos para ",(0,n.jsx)(t.code,{children:"$timeout"}),". Por exemplo, se pretender definir o tempo limite para 20 minutos, introduza 1200. Por defeito, o tempo limite \xe9 de duas (2) horas."]}),"\n",(0,n.jsxs)(t.p,{children:["Uma vez definido o tempo limite, sempre que um conjunto de entidades \xe9 chamado (utilizando ",(0,n.jsx)(t.code,{children:"$method=entityset"}),"), o tempo limite \xe9 recalculado com base na hora atual e no tempo limite."]}),"\n",(0,n.jsxs)(t.p,{children:["Se um conjunto de entidades for removido e depois recriado utilizando ",(0,n.jsx)(t.code,{children:"$method=entityset"})," com ",(0,n.jsx)(t.a,{href:"/docs/pt/18/REST/savedfilter",children:(0,n.jsx)(t.code,{children:"$savedfilter"})}),", o novo tempo limite predefinido \xe9 de 10 minutos, independentemente do tempo limite definido ao chamar ",(0,n.jsx)(t.code,{children:"$timeout"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"exemplo",children:"Exemplo"}),"\n",(0,n.jsx)(t.p,{children:"No nosso conjunto de entidades que criamos, definimos o tempo limite para 20 minutos:"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:'GET  /rest/Employee/?$filter="salary!=0"&$method=entityset&$timeout=1200'})})]})}function u(e={}){let{wrapper:t}={...(0,d.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},250065:function(e,t,o){o.d(t,{Z:function(){return s},a:function(){return r}});var i=o(667294);let n={},d=i.createContext(n);function r(e){let t=i.useContext(d);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),i.createElement(d.Provider,{value:t},e.children)}}}]);