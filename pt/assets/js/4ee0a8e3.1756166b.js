"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[94206],{603905:(e,a,o)=>{o.d(a,{Zo:()=>d,kt:()=>u});var t=o(667294);function r(e,a,o){return a in e?Object.defineProperty(e,a,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[a]=o,e}function n(e,a){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),o.push.apply(o,t)}return o}function s(e){for(var a=1;a<arguments.length;a++){var o=null!=arguments[a]?arguments[a]:{};a%2?n(Object(o),!0).forEach((function(a){r(e,a,o[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(o,a))}))}return e}function l(e,a){if(null==e)return{};var o,t,r=function(e,a){if(null==e)return{};var o,t,r={},n=Object.keys(e);for(t=0;t<n.length;t++)o=n[t],a.indexOf(o)>=0||(r[o]=e[o]);return r}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(t=0;t<n.length;t++)o=n[t],a.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var p=t.createContext({}),i=function(e){var a=t.useContext(p),o=a;return e&&(o="function"==typeof e?e(a):s(s({},a),e)),o},d=function(e){var a=i(e.components);return t.createElement(p.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},c=t.forwardRef((function(e,a){var o=e.components,r=e.mdxType,n=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=i(o),u=r,k=c["".concat(p,".").concat(u)]||c[u]||m[u]||n;return o?t.createElement(k,s(s({ref:a},d),{},{components:o})):t.createElement(k,s({ref:a},d))}));function u(e,a){var o=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var n=o.length,s=new Array(n);s[0]=c;var l={};for(var p in a)hasOwnProperty.call(a,p)&&(l[p]=a[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var i=2;i<n;i++)s[i]=o[i];return t.createElement.apply(null,s)}return t.createElement.apply(null,o)}c.displayName="MDXCreateElement"},499976:(e,a,o)=>{o.r(a),o.d(a,{assets:()=>i,contentTitle:()=>l,default:()=>c,frontMatter:()=>s,metadata:()=>p,toc:()=>d});o(667294);var t=o(603905);function r(){return r=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var o=arguments[a];for(var t in o)Object.prototype.hasOwnProperty.call(o,t)&&(e[t]=o[t])}return e},r.apply(this,arguments)}function n(e,a){if(null==e)return{};var o,t,r=function(e,a){if(null==e)return{};var o,t,r={},n=Object.keys(e);for(t=0;t<n.length;t++)o=n[t],a.indexOf(o)>=0||(r[o]=e[o]);return r}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(t=0;t<n.length;t++)o=n[t],a.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}const s={id:"parameters",title:"Par\xe2metros"},l=void 0,p={unversionedId:"Concepts/parameters",id:"version-20-R5/Concepts/parameters",title:"Par\xe2metros",description:"Frequentemente ser\xe1 preciso passar dados para seus m\xe9todos. Isso \xe9 facilmente feito com par\xe2metros.",source:"@site/i18n/pt/docusaurus-plugin-content-docs/version-20-R5/Concepts/parameters.md",sourceDirName:"Concepts",slug:"/Concepts/parameters",permalink:"/docs/pt/Concepts/parameters",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20Concepts%2Fparameters.md%20(20-R5)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R5",frontMatter:{id:"parameters",title:"Par\xe2metros"},sidebar:"docs",previous:{title:"P\xe1gina M\xe9todos",permalink:"/docs/pt/Concepts/methods"},next:{title:"Objetos e cole\xe7\xf5es compartilhados",permalink:"/docs/pt/Concepts/shared"}},i={},d=[{value:"Vis\xe3o Geral",id:"vis\xe3o-geral",level:2},{value:"Declara\xe7\xe3o de par\xe2metros",id:"declara\xe7\xe3o-de-par\xe2metros",level:2},{value:"Valor retornado",id:"valor-retornado",level:3},{value:"Tipos de datos compat\xedveis",id:"tipos-de-datos-compat\xedveis",level:3},{value:"Inicializa\xe7\xe3o",id:"inicializa\xe7\xe3o",level:3},{value:"<code>return {expression}</code>",id:"return-expression",level:2},{value:"Indire\xe7\xe3o dos par\xe2metros",id:"indire\xe7\xe3o-dos-par\xe2metros",level:2},{value:"Uso de par\xe2metros vari\xe1veis",id:"uso-de-par\xe2metros-vari\xe1veis",level:3},{value:"Declara\xe7\xe3o de par\xe2metros vari\xe1veis",id:"declara\xe7\xe3o-de-par\xe2metros-vari\xe1veis",level:3},{value:"Exemplo",id:"exemplo",level:4},{value:"Compila\xe7\xe3o",id:"compila\xe7\xe3o",level:2},{value:"Par\xe2metros declarados em prot\xf3tipos",id:"par\xe2metros-declarados-em-prot\xf3tipos",level:3},{value:"Par\xe2metros de m\xe9todo declarados fora dos prot\xf3tipos",id:"par\xe2metros-de-m\xe9todo-declarados-fora-dos-prot\xf3tipos",level:3},{value:"M\xe9todo <code>Compiler_Methods</code>",id:"m\xe9todo-compiler_methods",level:4},{value:"Conflitos entre declara\xe7\xf5es",id:"conflitos-entre-declara\xe7\xf5es",level:3},{value:"Tipo de par\xe1metro equivocado",id:"tipo-de-par\xe1metro-equivocado",level:2},{value:"Usando propriedades objeto como par\xe2metros nomeados",id:"usando-propriedades-objeto-como-par\xe2metros-nomeados",level:2},{value:"Par\xe2metros opcionais",id:"par\xe2metros-opcionais",level:2},{value:"Valores ou refer\xeancias",id:"valores-ou-refer\xeancias",level:2},{value:"Casos particulares: objetos e cole\xe7\xf5es",id:"casos-particulares-objetos-e-cole\xe7\xf5es",level:3}],m={toc:d};function c(e){var{components:a}=e,o=n(e,["components"]);return(0,t.kt)("wrapper",r({},m,o,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("p",null,"Frequentemente ser\xe1 preciso passar dados para seus m\xe9todos. Isso \xe9 facilmente feito com par\xe2metros."),(0,t.kt)("h2",r({},{id:"vis\xe3o-geral"}),"Vis\xe3o Geral"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Los par\xe1metros")," (o ",(0,t.kt)("strong",{parentName:"p"},"argumentos"),") son piezas de datos que un m\xe9todo o una funci\xf3n de clase necesita para realizar su tarea. Los t\xe9rminos ",(0,t.kt)("em",{parentName:"p"},"par\xe1metros")," y ",(0,t.kt)("em",{parentName:"p"},"argumentos"),' se utilizan indistintamente en este manual. Par\xe2metros tamb\xe9m s\xe3o passados para comandos integrados 4D. En este ejemplo, la cadena "Hello" es un argumento para el comando integrado ',(0,t.kt)("inlineCode",{parentName:"p"},"ALERT"),":"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'ALERT("Hello")\n')),(0,t.kt)("p",null,"Os par\xe2metros s\xe3o passados aos m\xe9todos da mesma maneira. Por ejemplo, si una funci\xf3n de clase llamada ",(0,t.kt)("inlineCode",{parentName:"p"},"getArea()")," acepta dos par\xe1metros, una llamada a la funci\xf3n de clase podr\xeda verse as\xed:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"$area:=$o.getArea(50;100)\n")),(0,t.kt)("p",null,"O, si un m\xe9todo proyecto llamado ",(0,t.kt)("inlineCode",{parentName:"p"},"DO_SOMETHING")," acepta tres par\xe1metros, una llamada al m\xe9todo podr\xeda verse as\xed:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"Essa fun\xe7\xe3o \xe9 chamada da maneira abaixo:\n")),(0,t.kt)("p",null,"Os par\xe2metros est\xe3o separados por ponto e v\xedrgula (;)."),(0,t.kt)("p",null,"Os mesmos princ\xedpios s\xe3o usados quando m\xe9todos forem executados atrav\xe9s de comandos dedicados, por exemplo:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'EXECUTE METHOD IN SUBFORM("Cal2";"SetCalendarDate";*;!05/05/20!)  \n//pass the !05/05/20! date as parameter to the SetCalendarDate  \n//in the context of a subform\n')),(0,t.kt)("p",null,"Los datos tambi\xe9n pueden ser ",(0,t.kt)("strong",{parentName:"p"},"devueltos"),"desde m\xe9todos y funciones de clase. Por ejemplo, la siguiente l\xednea de instrucci\xf3n utiliza el comando integrado, ",(0,t.kt)("inlineCode",{parentName:"p"},"Length"),", para devolver la longitud de una cadena. La instrucci\xf3n pone el valor devuelto por ",(0,t.kt)("inlineCode",{parentName:"p"},"Length")," en una variable llamada ",(0,t.kt)("em",{parentName:"p"},"MyLength"),". Esta \xe9 a instru\xe7\xe3o:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'MyLength:=Length("How did I get here?")\n')),(0,t.kt)("p",null,"Qualquer subrotina pode retornar um valor. S\xf3 se pode declarar um \xfanico par\xe1metro de sa\xedda por m\xe9todo ou fun\xe7\xe3o de classe."),(0,t.kt)("p",null,"Los valores de entrada y salida son ",(0,t.kt)("a",r({parentName:"p"},{href:"#values-or-references"}),"evaluados")," en el momento de la llamada y copiados en o desde variables locales dentro de la funci\xf3n o m\xe9todo de la clase llamada. Los par\xe1metros variables deben ser ",(0,t.kt)("a",r({parentName:"p"},{href:"#declaring-parameters"}),"declarados")," en el c\xf3digo llamado."),(0,t.kt)("admonition",r({},{title:"Compatibidade",type:"info"}),(0,t.kt)("p",{parentName:"admonition"},"Throughout the 4D documentation, you might see examples where parameters are automatically copied in sequentially numbered local variables ($0, $1, etc.) and declared using compiler directives. Ej: ",(0,t.kt)("inlineCode",{parentName:"p"},"C_TEXT($1;$2)"),". Esta sintaxe antiga ainda \xe9 suportada, mas j\xe1 n\xe3o \xe9 recomendada.")),(0,t.kt)("h2",r({},{id:"declara\xe7\xe3o-de-par\xe2metros"}),"Declara\xe7\xe3o de par\xe2metros"),(0,t.kt)("p",null,"Dentro de m\xe9todos ou fun\xe7\xf5es de classe chamados, valores par\xe2metros s\xe3o atribuidos \xe0 vari\xe1veis locais. Generalmente se declararan los par\xe1metros utilizando un ",(0,t.kt)("strong",{parentName:"p"},"nombre de par\xe1metro")," con un ",(0,t.kt)("strong",{parentName:"p"},"tipo de par\xe1metro"),", separados por dos puntos."),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Para las funciones de clase, los par\xe1metros se declaran junto con la palabra clave ",(0,t.kt)("inlineCode",{parentName:"li"},"Function"),"."),(0,t.kt)("li",{parentName:"ul"},"Para los m\xe9todos (m\xe9todos proyecto, m\xe9todos objeto formulario, m\xe9todos base y triggers), los par\xe1metros se declaran utilizando la palabra clave ",(0,t.kt)("inlineCode",{parentName:"li"},"#DECLARE")," al principio del c\xf3digo del m\xe9todo.")),(0,t.kt)("p",null,"Exemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"Function getArea($width : Integer; $height : Integer) -> $area : Integer\n")),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"})," //myProjectMethod\n#DECLARE ($i : Integer) -> $myResult : Object\n")),(0,t.kt)("p",null,"As regras abaixo s\xe3o v\xe1lidas:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"A linha de declara\xe7\xe3o deve ser a primeira linha do m\xe9todo ou c\xf3digo da fun\xe7\xe3o, sen\xe3o um erro \xe9 exibido (s\xf3 coment\xe1rios ou quebras de linha podem preceder a declara\xe7\xe3o)."),(0,t.kt)("li",{parentName:"ul"},"Los nombres de los par\xe1metros deben comenzar con un car\xe1cter ",(0,t.kt)("inlineCode",{parentName:"li"},"$")," y cumplir con ",(0,t.kt)("a",r({parentName:"li"},{href:"/docs/pt/Concepts/identifiers#object-properties"}),"reglas de denominaci\xf3n de las propiedades"),"."),(0,t.kt)("li",{parentName:"ul"},"Os par\xe2metros (e tipos) m\xfaltiplos s\xe3o separados por ponto e v\xedrgula (;)."),(0,t.kt)("li",{parentName:"ul"},'Sintaxes multilinha s\xe3o aceitas (usando "',"\\",'").')),(0,t.kt)("p",null,"Por ejemplo, cuando se llama a una funci\xf3n ",(0,t.kt)("inlineCode",{parentName:"p"},"getArea()")," con dos par\xe1metros:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"$area:=$o.getArea(50;100)\n")),(0,t.kt)("p",null,"No c\xf3digo da fun\xe7\xe3o classe, o valor de cada par\xe2metro se copia no par\xe2metro declarado correspondente:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"// Class: Polygon\nFunction getArea($width : Integer; $height : Integer)-> $area : Integer\n    $area:=$width*$height\n")),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},"If the type is not defined, the parameter will be defined as ",(0,t.kt)("a",r({parentName:"p"},{href:"/docs/pt/Concepts/variant"}),(0,t.kt)("inlineCode",{parentName:"a"},"Variant")),".")),(0,t.kt)("p",null,"Todos los tipos de m\xe9todos de 4D soportan la palabra clave ",(0,t.kt)("inlineCode",{parentName:"p"},"#DECLARE"),", incluidos los m\xe9todos base. Por ejemplo, en el m\xe9todo base ",(0,t.kt)("inlineCode",{parentName:"p"},"On Web Authentication"),", puede declarar par\xe1metros temporales:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'    // On Web Authentication database method\n#DECLARE ($url : Text; $header : Text; \\\n  $BrowserIP : Text; $ServerIP : Text; \\\n  $user : Text; $password : Text) \\\n  -> $RequestAccepted : Boolean\n$entitySelection:=ds.User.query("login=:1"; $user)\n// Check hash password...\n')),(0,t.kt)("h3",r({},{id:"valor-retornado"}),"Valor retornado"),(0,t.kt)("p",null,"El par\xe1metro de retorno de una funci\xf3n se declara a\xf1adiendo una flecha (->) y la definici\xf3n del par\xe1metro despu\xe9s de la lista de par\xe1metros de entrada. Por exemplo:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"Function add($x : Variant; $y : Integer) -> $result : Integer\n")),(0,t.kt)("p",null,"Tambi\xe9n puede declarar el par\xe1metro de retorno a\xf1adiendo s\xf3lo ",(0,t.kt)("inlineCode",{parentName:"p"},": type"),", en cuyo caso puede ser manejado por un ",(0,t.kt)("a",r({parentName:"p"},{href:"#return-expression"}),"return"),". Por exemplo:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"Function add($x : Variant; $y : Integer): Integer\n    return $x+$y\n")),(0,t.kt)("admonition",r({},{type:"warning"}),(0,t.kt)("p",{parentName:"admonition"},"Os par\xe2metros, que incluem o valor retornado, devem ser declarados apenas uma vez. Em particular, voc\xea n\xe3o pode declarar o mesmo par\xe2metro como entrada e sa\xedda, mesmo com o mesmo tipo. Por exemplo:"),(0,t.kt)("pre",{parentName:"admonition"},(0,t.kt)("code",r({parentName:"pre"},{className:"language-qs"}),"    //invalid declaration\nFunction myTransform ($x : Integer) -> $x : Integer \n    //error: $x is declared twice\n"))),(0,t.kt)("h3",r({},{id:"tipos-de-datos-compat\xedveis"}),"Tipos de datos compat\xedveis"),(0,t.kt)("p",null,"With named parameters, you can use the same data types as those which are ",(0,t.kt)("a",r({parentName:"p"},{href:"/docs/pt/Concepts/variables#using-the-var-keyword"}),"supported by the ",(0,t.kt)("inlineCode",{parentName:"a"},"var")," keyword"),", including class objects. Por exemplo:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"Function saveToFile($entity : cs. ShapesEntity; $file : 4D. File)\n")),(0,t.kt)("admonition",r({},{type:"note"}),(0,t.kt)("p",{parentName:"admonition"},"Las expresiones de tablas o arrays s\xf3lo pueden pasarse ",(0,t.kt)("a",r({parentName:"p"},{href:"/docs/pt/Concepts/pointer#pointers-as-parameters-to-methods"}),"como referencia utilizando un puntero"),".")),(0,t.kt)("h3",r({},{id:"inicializa\xe7\xe3o"}),"Inicializa\xe7\xe3o"),(0,t.kt)("p",null,"When parameters are declared, they are initialized to the ",(0,t.kt)("a",r({parentName:"p"},{href:"/docs/pt/Concepts/data-types#default-values"}),(0,t.kt)("strong",{parentName:"a"},"default value corresponding to their type")),", which they will keep during the session as long as they have not been assigned."),(0,t.kt)("h2",r({},{id:"return-expression"}),(0,t.kt)("inlineCode",{parentName:"h2"},"return {expression}")),(0,t.kt)("details",null,(0,t.kt)("summary",null,"Hist\xf3ria"),(0,t.kt)("table",null,(0,t.kt)("thead",{parentName:"table"},(0,t.kt)("tr",{parentName:"thead"},(0,t.kt)("th",r({parentName:"tr"},{align:null}),"Release"),(0,t.kt)("th",r({parentName:"tr"},{align:null}),"Mudan\xe7as"))),(0,t.kt)("tbody",{parentName:"table"},(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",r({parentName:"tr"},{align:null}),"19 R4"),(0,t.kt)("td",r({parentName:"tr"},{align:null}),"Adicionado"))))),(0,t.kt)("p",null,"La instrucci\xf3n ",(0,t.kt)("inlineCode",{parentName:"p"},"return")," finaliza la ejecuci\xf3n de una funci\xf3n o de un m\xe9todo y puede utilizarse para devolver una expresi\xf3n a quien la llama."),(0,t.kt)("p",null,"Por exemplo, a seguinte fun\xe7\xe3o devolve o quadrado de seu argumento, $x, onde $x \xe9 um n\xfamero."),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"Function square($x : Integer) \n   return $x * $x\n")),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},"Internamente, ",(0,t.kt)("inlineCode",{parentName:"p"},"return x")," ejecuta ",(0,t.kt)("inlineCode",{parentName:"p"},"$0:=x")," o (si se declara) ",(0,t.kt)("inlineCode",{parentName:"p"},"myReturnValue:=x"),", y devuelve al llamante. Si ",(0,t.kt)("inlineCode",{parentName:"p"},"return")," se utiliza sin una expresi\xf3n, la funci\xf3n o el m\xe9todo devuelve un valor nulo del tipo de retorno declarado (si lo hay), de lo contrario ",(0,t.kt)("em",{parentName:"p"},"undefined"),".")),(0,t.kt)("p",null,"La instrucci\xf3n ",(0,t.kt)("inlineCode",{parentName:"p"},"return")," puede utilizarse junto con la sintaxis est\xe1ndar para los ",(0,t.kt)("a",r({parentName:"p"},{href:"#valor-devuelto"}),"valores devueltos")," (el valor devuelto debe ser del tipo declarado). Entretanto lembre que isso finaliza imediatamente a execu\xe7\xe3o de c\xf3digo. Por exemplo:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"Function getValue\n    $0:=10\n    return 20\n    // returns 20\n\nFunction getValue -> $v : Integer\n    return 10\n    $v:=20 // never executed\n    // returns 10\n")),(0,t.kt)("h2",r({},{id:"indire\xe7\xe3o-dos-par\xe2metros"}),"Indire\xe7\xe3o dos par\xe2metros"),(0,t.kt)("p",null,"Os m\xe9todos e fun\xe7\xf5es 4D aceitam um n\xfamero vari\xe1vel de par\xe2metros. You can address those parameters with a ",(0,t.kt)("inlineCode",{parentName:"p"},"For...End for")," loop, the ",(0,t.kt)("a",r({parentName:"p"},{href:"https://doc.4d.com/4dv20/help/command/en/page259.html"}),(0,t.kt)("inlineCode",{parentName:"a"},"Count parameters"))," command and the ",(0,t.kt)("strong",{parentName:"p"},"parameter indirection syntax"),". Dentro del m\xe9todo, una direcci\xf3n de indirecci\xf3n tiene el formato ",(0,t.kt)("inlineCode",{parentName:"p"},"${N}"),", donde ",(0,t.kt)("inlineCode",{parentName:"p"},"N")," es una expresi\xf3n num\xe9rica."),(0,t.kt)("h3",r({},{id:"uso-de-par\xe2metros-vari\xe1veis"}),"Uso de par\xe2metros vari\xe1veis"),(0,t.kt)("p",null,"Por exemplo, considere uma fun\xe7\xe3o que some os valores e devolva a soma formatada segundo um formato que se passa como par\xe2metro. Cada vez que chamar a esse m\xe9todo, o n\xfamero de valores a somar pode variar. Devemos passar os valores como par\xe2metros ao m\xe9todo e o formato em forma de string dos caracteres. O n\xfamero de valores pode variar de chamada a chamada."),(0,t.kt)("p",null,"Aqu\xed est\xe1 el m\xe9todo, llamado ",(0,t.kt)("inlineCode",{parentName:"p"},"MySum"),":"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"})," #DECLARE($format : Text) -> $result : Text\n $sum:=0\n For($i;2;Count parameters)\n    $sum:=$sum+${$i}\n End for\n $result:=String($sum;$format)\n")),(0,t.kt)("p",null,"Os par\xe2metros da fun\xe7\xe3o devem ser passados na ordem correta: primeiro o formato e depois os valores."),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),' Result:=MySum("##0.00";125,2;33,5;24) //"182.70"\n Result:=MySum("000";1;2;200) //"203"\n')),(0,t.kt)("p",null,"Observe que, mesmo que tenha declarado 0, 1 ou mais par\xe2metros, voc\xea sempre poder\xe1 passar o n\xfamero de par\xe2metros que desejar. Los par\xe1metros est\xe1n todos disponibles dentro del c\xf3digo llamado a trav\xe9s de la sintaxis ",(0,t.kt)("inlineCode",{parentName:"p"},"${N}")," y el tipo de par\xe1metros extra es ",(0,t.kt)("a",r({parentName:"p"},{href:"/docs/pt/Concepts/variant"}),"Variant")," por defecto (puede declararlos utilizando la ",(0,t.kt)("a",r({parentName:"p"},{href:"#declaring-variadic-parameters"}),"notaci\xf3n variadic"),"). You just need to make sure parameters exist, thanks to the ",(0,t.kt)("a",r({parentName:"p"},{href:"https://doc.4d.com/4dv20/help/command/en/page259.html"}),(0,t.kt)("inlineCode",{parentName:"a"},"Count parameters"))," command. Por exemplo:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'//foo method\n#DECLARE($p1: Text;$p2 : Text; $p3 : Date) \nFor($i;1;Count parameters)\n    ALERT("param "+String($i)+" = "+String(${$i}))\nEnd for\n')),(0,t.kt)("p",null,"Esta fun\xe7\xe3o pode ser chamada agora de v\xe1rias formas:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'foo("hello";"world";!01/01/2021!;42;?12:00:00?) //extra parameters are passed\n')),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},"A indire\xe7\xe3o de par\xe2metros se gerencia melhor se respeitar a conven\xe7\xe3o abaixo: se s\xf3 alguns dos par\xe2metros forem endere\xe7ados por indire\xe7\xe3o, devem ser passados depois dos outros.")),(0,t.kt)("h3",r({},{id:"declara\xe7\xe3o-de-par\xe2metros-vari\xe1veis"}),"Declara\xe7\xe3o de par\xe2metros vari\xe1veis"),(0,t.kt)("p",null,"N\xe3o \xe9 obrigat\xf3rio declarar par\xe2metros vari\xe1veis. Los par\xe1metros variables no declarados obtienen autom\xe1ticamente el tipo ",(0,t.kt)("a",r({parentName:"p"},{href:"/docs/pt/Concepts/variant"}),"Variant"),"."),(0,t.kt)("p",null,'Entretanto, para evitar erros de incompatibilidade de tipos durante a execu\xe7\xe3o do c\xf3digo, voc\xea pode declarar um n\xfamero vari\xe1vel de par\xe2metros usando a nota\xe7\xe3o "..." nos prot\xf3tipos de suas fun\xe7\xf5es, construtores de classes e m\xe9todos (par\xe2metros vari\xe1dicos). Voc\xea especifica o tipo do par\xe2metro seguindo a nota\xe7\xe3o "..." com o tipo desejado.'),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"#DECLARE ( ... : Text ) // Undefined number of 'Text' parameters\n\n")),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"Function myfunction ( ... : Text)\n\n")),(0,t.kt)("p",null,"Ao declarar v\xe1rios par\xe2metros, a nota\xe7\xe3o variadic deve ser empregada na \xfaltima posi\xe7\xe3o, por exemplo:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"#DECLARE ( param: Real ; ... : Text )\n\n")),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"Function myfunction (var1: Integer ; ... : Text)\n")),(0,t.kt)("h4",r({},{id:"exemplo"}),"Exemplo"),(0,t.kt)("p",null,"Aqu\xed tenemos un m\xe9todo llamado ",(0,t.kt)("inlineCode",{parentName:"p"},"SumNumbers")," que devuelve el total calculado para todos los n\xfameros pasados como par\xe1metros:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"\n#DECLARE( ... : Real) : Real \n\n\n\nvar $number; $total : Real \n\nFor each ($number; 1; Count parameters)\n    $total+=${$number}\nEnd for each \n\nreturn $total\n\n")),(0,t.kt)("p",null,"Esse m\xe9todo pode ser chamado com um n\xfamero vari\xe1vel de par\xe2metros Real. No caso de um tipo de par\xe2metro incorreto, um erro ser\xe1 retornado antes que o m\xe9todo seja executado:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'\n$total1:=SumNumbers // returns 0 \n$total2:=SumNumbers(1; 2; 3; 4; 5) // returns 15\n$total3:=SumNumbers(1; 2; "hello"; 4; 5) // error\n\n')),(0,t.kt)("admonition",r({},{title:"Compatibility Note",type:"note"}),(0,t.kt)("p",{parentName:"admonition"},"La sintaxis heredada para declarar par\xe1metros vari\xe1dicos (",(0,t.kt)("inlineCode",{parentName:"p"},"C_TEXT(${4})"),") sigue siendo compatible, pero ahora se prefiere la notaci\xf3n variable.")),(0,t.kt)("h2",r({},{id:"compila\xe7\xe3o"}),"Compila\xe7\xe3o"),(0,t.kt)("p",null,"Incluso si no es obligatorio en ",(0,t.kt)("a",r({parentName:"p"},{href:"/docs/pt/Concepts/interpreted-compiled"}),"modo interpretado"),", debe asegurarse de que todos los par\xe1metros de m\xe9todo y funci\xf3n se declaren correctamente tan pronto como tenga la intenci\xf3n de compilar su proyecto."),(0,t.kt)("admonition",r({},{type:"note"}),(0,t.kt)("p",{parentName:"admonition"},"You can delegate the declaration of parameters (as well as all variables) to the compiler by checking the ",(0,t.kt)("a",r({parentName:"p"},{href:"/docs/pt/Project/compiler#compilation-path"}),(0,t.kt)("strong",{parentName:"a"},"Type the variable")," compilation path option"),". No entanto, essa op\xe7\xe3o aumenta significativamente o tempo de compila\xe7\xe3o.")),(0,t.kt)("h3",r({},{id:"par\xe2metros-declarados-em-prot\xf3tipos"}),"Par\xe2metros declarados em prot\xf3tipos"),(0,t.kt)("p",null,"Cuando se utilizan las palabras clave ",(0,t.kt)("inlineCode",{parentName:"p"},"#DECLARE")," o ",(0,t.kt)("inlineCode",{parentName:"p"},"Function"),", los par\xe1metros se declaran autom\xe1ticamente y no se necesita informaci\xf3n adicional para el compilador. Exemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"#DECLARE($myParam : Text; $myOtherParam : Integer) : Boolean\n    // all method parameters are declared with their type\n")),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"    // On Web Connection Database Method\n#DECLARE ($url : Text; $header : Text; \\\n  $BrowserIP : Text; $ServerIP : Text; \\\n  $user : Text; $password : Text)\n")),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"Function add($x : Variant; $y : Integer)-> $result : Integer\n    // all function parameters are declared with their type\n")),(0,t.kt)("admonition",r({},{type:"tip"}),(0,t.kt)("p",{parentName:"admonition"},"Declarar par\xe2metros em prot\xf3tipos \xe9 uma boa pr\xe1tica, mesmo em projetos n\xe3o compilados.")),(0,t.kt)("h3",r({},{id:"par\xe2metros-de-m\xe9todo-declarados-fora-dos-prot\xf3tipos"}),"Par\xe2metros de m\xe9todo declarados fora dos prot\xf3tipos"),(0,t.kt)("p",null,"Puede ocurrir que los par\xe1metros del m\xe9todo no se declaren en prototipos ",(0,t.kt)("inlineCode",{parentName:"p"},"#DECLARE"),". Essas declara\xe7\xf5es podem ser encontradas, em particular, no c\xf3digo 4D herdado. En este caso, debe configurar un m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"Compiler_Methods")," para reunir las declaraciones de estos par\xe1metros de m\xe9todo."),(0,t.kt)("h4",r({},{id:"m\xe9todo-compiler_methods"}),"M\xe9todo ",(0,t.kt)("inlineCode",{parentName:"h4"},"Compiler_Methods")),(0,t.kt)("p",null,"Cuando algunos par\xe1metros de m\xe9todo no se declaran en prototipos ",(0,t.kt)("inlineCode",{parentName:"p"},"#DECLARE"),", el compilador 4D necesita que los declare en un m\xe9todo espec\xedfico utilizando una sintaxis especial:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"\xe9 poss\xedvel agrupar todos os par\xe2metros de vari\xe1veis locais para m\xe9todos de projeto num ou mais m\xe9todos de projeto"),(0,t.kt)("li",{parentName:"ul"},'los nombres de los m\xe9todos deben empezar por "',(0,t.kt)("strong",{parentName:"li"},"Compiler_"),'", por defecto "Compiler_Methods".'),(0,t.kt)("li",{parentName:"ul"},"dentro de un m\xe9todo de este tipo, se predeclaran los par\xe1metros de cada m\xe9todo utilizando la siguiente sintaxis: ",(0,t.kt)("inlineCode",{parentName:"li"},"C_XXX(nombredelm\xe9todo;par\xe1metro)"),".")),(0,t.kt)("p",null,"Por exemplo:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"})," // Compiler_Methods\n C_REAL(OneMethodAmongOthers;$1;$2) \n")),(0,t.kt)("admonition",r({},{type:"note"}),(0,t.kt)("p",{parentName:"admonition"},"Esta sintaxe n\xe3o \xe9 execut\xe1vel em modo interpretado.")),(0,t.kt)("p",null,"You can create and fill automatically a ",(0,t.kt)("inlineCode",{parentName:"p"},"Compiler_Methods")," method containing all your parameters declared outside prototypes using the ",(0,t.kt)("a",r({parentName:"p"},{href:"/docs/pt/Project/compiler#compiler-methods-for"}),(0,t.kt)("strong",{parentName:"a"},"Compiler Methods for..."))," ",(0,t.kt)("strong",{parentName:"p"},"Methods")," button in the Compiler Settings dialog box."),(0,t.kt)("admonition",r({},{type:"info"}),(0,t.kt)("h4",r({parentName:"admonition"},{id:"casos-particulares"}),"Casos particulares"),(0,t.kt)("p",{parentName:"admonition"},'Alguns contextos n\xe3o suportam a declara\xe7\xe3o em um m\xe9todo "Compiler_", portanto, s\xe3o tratados especificamente:'),(0,t.kt)("ul",{parentName:"admonition"},(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"Triggers - O par\xe2metro $0 (Longint), o resultado de um trigger, ser\xe1 tipado pelo compilador se o par\xe2metro n\xe3o tiver sido declarado explicitamente. Entretanto, se quiser declar\xe1-lo, deve fazer isso no pr\xf3prio trigger.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"Objetos formulario que aceptan el evento formulario ",(0,t.kt)("inlineCode",{parentName:"p"},"On Drag Over")," - El par\xe1metro $0 (Entero largo), que es el resultado del evento formulario ",(0,t.kt)("inlineCode",{parentName:"p"},"On Drag Over"),", ser\xe1 digitado por el compilador si el par\xe1metro no ha sido declarado expl\xedcitamente. Entretanto, se quiser fazer a declara\xe7\xe3o, deve fazer isso no m\xe9todo objeto.\n",(0,t.kt)("strong",{parentName:"p"},"Nota:")," el compilador no inicializa el par\xe1metro $0. Por lo tanto, tan pronto como utilice el evento formulario ",(0,t.kt)("inlineCode",{parentName:"p"},"On Drag Over"),", debe inicializar $0. Por exemplo:"))),(0,t.kt)("pre",{parentName:"admonition"},(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"})," C_LONGINT($0)\n If(Form event code=On Drag Over)\n    $0:=0\n    ...\n    If($DataType=Is picture)\n       $0:=-1\n    End if\n    ...\n End if\n"))),(0,t.kt)("h3",r({},{id:"conflitos-entre-declara\xe7\xf5es"}),"Conflitos entre declara\xe7\xf5es"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Si un par\xe1metro se declara tanto en un prototipo ",(0,t.kt)("inlineCode",{parentName:"li"},"#DECLARE")," como en un m\xe9todo _Compiler",(0,t.kt)("strong",{parentName:"li"},", se ignora la entrada del m\xe9todo  _Compiler"),"."),(0,t.kt)("li",{parentName:"ul"},"Si un par\xe1metro se declara tanto en un prototipo ",(0,t.kt)("inlineCode",{parentName:"li"},"#DECLARE")," como en un m\xe9todo _Compiler__ pero con un tipo de datos diferente, Code Live Checker genera un error durante la verificaci\xf3n de sintaxis y la compilaci\xf3n.")),(0,t.kt)("h2",r({},{id:"tipo-de-par\xe1metro-equivocado"}),"Tipo de par\xe1metro equivocado"),(0,t.kt)("p",null,"Llamar a un par\xe1metro con un tipo incorrecto es un ",(0,t.kt)("a",r({parentName:"p"},{href:"/docs/pt/Concepts/error-handling"}),"error")," que impide la correcta ejecuci\xf3n. Por exemplo se executar os m\xe9todos"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"// method1\n#DECLARE($value : Text)\n")),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"// method2\nmethod1(42) //tipo incorrecto, texto esperado\n")),(0,t.kt)("p",null,"Este caso es tratado por 4D dependendo do contexto:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"en ",(0,t.kt)("a",r({parentName:"li"},{href:"/docs/pt/Concepts/interpreted-compiled"}),"proyectos compilados"),", se genera un error en el paso de compilaci\xf3n siempre que sea posible. Sen\xe3o, um erro \xe9 gerado quando o m\xe9todo for chamado."),(0,t.kt)("li",{parentName:"ul"},"em projetos interpretados:",(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},"si el par\xe1metro se declar\xf3 utilizando la ",(0,t.kt)("a",r({parentName:"li"},{href:"#named-parameters"}),"sintaxis nombrada")," (",(0,t.kt)("inlineCode",{parentName:"li"},"#DECLARE")," o ",(0,t.kt)("inlineCode",{parentName:"li"},"Function"),"), se genera un error cuando se llama al m\xe9todo."),(0,t.kt)("li",{parentName:"ul"},"si el par\xe1metro se declar\xf3 utilizando (",(0,t.kt)("inlineCode",{parentName:"li"},"C_XXX"),"), no se genera ning\xfan error, el m\xe9todo llamado recibe un valor vac\xedo del tipo esperado.")))),(0,t.kt)("h2",r({},{id:"usando-propriedades-objeto-como-par\xe2metros-nomeados"}),"Usando propriedades objeto como par\xe2metros nomeados"),(0,t.kt)("p",null,"La utilizaci\xf3n de objetos como par\xe1metros permite manejar ",(0,t.kt)("strong",{parentName:"p"},"par\xe1metros con nombre"),". Este estilo de programa\xe7\xe3o \xe9 simples, flex\xedvel e f\xe1cil de ler."),(0,t.kt)("p",null,"Por ejemplo, utilizando el m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"CreatePerson"),":"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'  //CreatePerson\n var $person : Object\n $person:=New object("Name";"Smith";"Age";40)\n ChangeAge($person)\n ALERT(String($person.Age))  \n')),(0,t.kt)("p",null,"En el m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"ChangeAge")," puede escribir:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'  //ChangeAge\n var $1; $para : Object\n $para:=$1  \n $para.Age:=$para.Age+10\n ALERT($para.Name+" is "+String($para.Age)+" years old.")\n')),(0,t.kt)("p",null,"Esto ofrece una poderosa manera de definir ",(0,t.kt)("a",r({parentName:"p"},{href:"#optional-parameters"}),"par\xe1metros opcionales")," (ver tambi\xe9n abajo). Para manejar os par\xe2metros que faltam, pode:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"verificar si se suministran todos los par\xe1metros esperados compar\xe1ndolos con el valor ",(0,t.kt)("inlineCode",{parentName:"li"},"Null"),", o"),(0,t.kt)("li",{parentName:"ul"},"pr\xe9-definir os valores dos par\xe2metros, ou"),(0,t.kt)("li",{parentName:"ul"},"us\xe1-los como valores vazios.")),(0,t.kt)("p",null,"En el m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"ChangeAge")," anterior, las propiedades Age y Name son obligatorias y producir\xedan errores si faltaran. Para evitar isso, pode escrever:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'  //ChangeAge\n var $1; $para : Object\n $para:=$1  \n $para.Age:=Num($para.Age)+10\n ALERT(String($para.Name)+" is "+String($para.Age)+" years old.")\n')),(0,t.kt)("p",null,'Ambos par\xe2metros s\xe3o opcionais: se n\xe3o forem preenchidos, o resultado ser\xe1 "\xe9 10 anos de idade", mas nenhum erro ser\xe1 gerado.'),(0,t.kt)("p",null,"Finalmente, com par\xe2metros com nome, a manuten\xe7\xe3o ou a reprodu\xe7\xe3o das aplica\xe7\xf5es \xe9 muito simples e seguro. Imagine que depois perceba de que adicionar 10 anos n\xe3o funciona sempre. You need another parameter to set how many years to add. You write: Escreva: Escreve:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'$person:=New object("Name";"Smith";"Age";40;"toAdd";10)\nChangeAge($person)\n\n//ChangeAge\nvar $1;$para : Object\n$para:=$1  \nIf ($para.toAdd=Null)\n    $para.toAdd:=10\nEnd if\n$para.Age:=Num($para.Age)+$para.toAdd\nALERT(String($para.Name)+" is "+String($para.Age)+" years old.")\n')),(0,t.kt)("p",null,"N\xe3o precisar\xe1 mudar seu c\xf3digo existente. Sempre funcionar\xe1 como na vers\xe3o anterior, mas se for necess\xe1rio, \xe9 poss\xedvel usar outro valor diferente de 10 anos."),(0,t.kt)("p",null,"Com vari\xe1veis com nome, qualquer par\xe2metro pode ser opcional. No exemplo acima, todos os par\xe2metros s\xe3o opcionais e qualquer pode ser dado em qualquer ordem."),(0,t.kt)("h2",r({},{id:"par\xe2metros-opcionais"}),"Par\xe2metros opcionais"),(0,t.kt)("p",null,"En el manual ",(0,t.kt)("em",{parentName:"p"},"Lenguaje de 4D"),", los caracteres { } (llaves) indican par\xe1metros opcionales. Por ejemplo, ",(0,t.kt)("inlineCode",{parentName:"p"},"ALERT (message{; okButtonTitle})")," significa que el par\xe1metro ",(0,t.kt)("em",{parentName:"p"},"okButtonTitle")," puede omitirse al llamar al comando. Pode fazer a chamada de duas maneiras:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'ALERT("Are you sure?";"Yes I am") //2 parameters ALERT("Time is over") //1 parameter\n')),(0,t.kt)("p",null,"Os m\xe9todos projeto 4D tamb\xe9m aceitam esses par\xe2metros opcionais, come\xe7ando pela direita. Pode declarar qualquer n\xfamero de par\xe2metros. Si llama a un m\xe9todo o funci\xf3n con menos par\xe1metros que los declarados, los par\xe1metros que faltan se procesan como valores por defecto en el c\xf3digo llamado, ",(0,t.kt)("a",r({parentName:"p"},{href:"/docs/pt/Concepts/data-types#default-values"}),"seg\xfan su tipo"),". Por exemplo:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'// funci\xf3n "concate" de myClass\nFunction concate ($param1 : Text ; $param2 : Text)->$result : Text\n$result:=$param1+" "+$param2\n')),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'  // M\xe9todo de chamada\n $class:=cs.myClass.new()\n $class.concate("Hello") // "Hello "\n $class.concate() // Mostra " "\n')),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},"Tamb\xe9m se pode chamar um m\xe9todo ou fun\xe7\xe3o com mais par\xe2metros do que os declarados. Estar\xe1n disponibles en el c\xf3digo llamado a trav\xe9s de la sintaxis ",(0,t.kt)("a",r({parentName:"p"},{href:"#parameter-indirection-n"}),"${N}"),".")),(0,t.kt)("p",null,"Utilizando el comando ",(0,t.kt)("inlineCode",{parentName:"p"},"Count parameters")," desde dentro del m\xe9todo llamado, puede detectar el n\xfamero real de par\xe1metros y realizar diferentes operaciones dependiendo de lo que haya recibido."),(0,t.kt)("p",null,"O exemplo abaixo mostra uma mensagem de texto e pode inserir o texto em um documento no disco ou em uma \xe1rea de 4D Write Pro:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"// APPEND TEXT Project Method\n// APPEND TEXT ( Text { ; Text { ; Object } } )\n// APPEND TEXT ( Message { ; Path { ; 4DWPArea } } )\n \n #DECLARE ($message : Text; $path : Text; $wpArea : Object)\n  \n ALERT($message)\n If(Count parameters>=3)\n    WP SET TEXT($wpArea;$1;wk append)\n Else\n    If(Count parameters>=2)\n       TEXT TO DOCUMENT($path;$message)\n    End if\n End if\n")),(0,t.kt)("p",null,"Depois de adicionar este m\xe9todo projeto a sua aplica\xe7\xe3o, pode escrever:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'APPEND TEXT(vtSomeText) //Will only display the  message APPEND TEXT(vtSomeText;$path) //Displays text message and appends it to document at $path APPEND TEXT(vtSomeText;"";$wpArea) //Displays text message and writes it to $wpArea\n')),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},"Cuando los par\xe1metros opcionales son necesarios en sus m\xe9todos, tambi\xe9n puede considerar el uso de ",(0,t.kt)("a",r({parentName:"p"},{href:"#using-objects-properties-as-named-parameters"}),"propiedades de objeto como par\xe1metros con nombre")," que ofrecen una forma flexible de manejar un n\xfamero variab")),(0,t.kt)("h2",r({},{id:"valores-ou-refer\xeancias"}),"Valores ou refer\xeancias"),(0,t.kt)("p",null,"Cuando pasa un par\xe1metro, 4D siempre eval\xfaa la expresi\xf3n del par\xe1metro en el contexto del m\xe9todo que llama y define el ",(0,t.kt)("strong",{parentName:"p"},"valor resultante")," en las variables locales en la funci\xf3n de clase o la subrutina. As vari\xe1veis locais/par\xe2metros n\xe3o s\xe3o os campos, vari\xe1veis ou express\xf5es realmente passadas pelo m\xe9todo chamada; eles apenas cont\xe9m os valores que foram passados. The local variables/parameters are not the actual fields, variables, or expressions passed by the calling method; they only contain the values that have been passed. Por exemplo:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'    //Here is some code from the method MY_METHOD\nDO_SOMETHING([People]Name) //Let\'s say [People]Name value is "williams"\nALERT([People]Name)\n \n    //Here is the code of the method DO_SOMETHING\n $1:=Uppercase($1)\n ALERT($1)\n')),(0,t.kt)("p",null,"La caja de alerta mostrada por ",(0,t.kt)("inlineCode",{parentName:"p"},"DO_SOMETHING"),' dir\xe1 "WILLIAMS" y la caja de alerta mostrada por ',(0,t.kt)("inlineCode",{parentName:"p"},"MY_METHOD"),' dir\xe1 "williams". El m\xe9todo cambi\xf3 localmente el valor del par\xe1metro $1, pero esto no afecta al valor del campo ',(0,t.kt)("inlineCode",{parentName:"p"},"[People]Name")," pasado como par\xe1metro por el m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"MY_METHOD"),"."),(0,t.kt)("p",null,"Hay dos formas de hacer que el m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"DO_SOMETHING")," cambie el valor del campo:"),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},"Ao inv\xe9s de passar o campo para o m\xe9todo, passa um ponteiro para ele, por isso pode escrever:")),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'  //Here is some code from the method MY_METHOD\n DO_SOMETHING(->[People]Name) //Let\'s say [People]Name value is "williams"\n ALERT([People]Last Name)\n \n  //Here the code of the method DO_SOMETHING\n $1->:=Uppercase($1->)\n ALERT($1->)\n')),(0,t.kt)("p",null,"Aqui \xe9 o par\xe2metro n\xe3o for o campo, mas sim um ponteiro ao mesmo. Por lo tanto, dentro del m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"DO SOMETHING"),", $1 ya no es el valor del campo sino un puntero al campo. El objeto ",(0,t.kt)("strong",{parentName:"p"},"referenciado"),' por $1 ($1-> en el c\xf3digo anterior) es el campo real. Portanto, mudar o objeto referenciado vai al\xe9m do escopo da subrotina, e o campo real n\xe3o \xe9 afetado. Neste exemplo, as duas caixas de alerta dir\xe3o "WILLIAMS".'),(0,t.kt)("ol",r({},{start:2}),(0,t.kt)("li",{parentName:"ol"},"En lugar de que el m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"li"},"DO_SOMETHING"),' "haga algo", puede reescribir el m\xe9todo para que devuelva un valor. Portanto escreveria:')),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'    //Here is some code from the method MY METHOD\n [People]Name:=DO_SOMETHING([People]Name) //Let\'s say [People]Name value is "williams"\n ALERT([People]Name)\n\n    //Here the code of the method DO SOMETHING\n $0:=Uppercase($1)\n ALERT($0)\n')),(0,t.kt)("p",null,'Esta segunda t\xe9cnica de retornar um valor por uma subrotina se chama " utilizar uma fun\xe7\xe3o" \xc9 descrita no par\xe1grafo ',(0,t.kt)("a",{href:"#functions"},"Fun\xe7\xf5es"),". Se describe en el p\xe1rrafo ",(0,t.kt)("a",r({parentName:"p"},{href:"#returning-values"}),"Valores devueltos"),"."),(0,t.kt)("h3",r({},{id:"casos-particulares-objetos-e-cole\xe7\xf5es"}),"Casos particulares: objetos e cole\xe7\xf5es"),(0,t.kt)("p",null,"Debe prestar atenci\xf3n al hecho de que los tipos de datos Objeto y Colecci\xf3n s\xf3lo pueden manejarse a trav\xe9s de una referencia (es decir, un ",(0,t.kt)("em",{parentName:"p"},"puntero")," interno)."),(0,t.kt)("p",null,"Por consiguiente, cuando se utilizan estos tipos de datos como par\xe1metros, ",(0,t.kt)("inlineCode",{parentName:"p"},"$1, $2...")," no contienen ",(0,t.kt)("em",{parentName:"p"},"valores")," sino ",(0,t.kt)("em",{parentName:"p"},"referencias"),". La modificaci\xf3n del valor de los par\xe1metros ",(0,t.kt)("inlineCode",{parentName:"p"},"$1, $2...")," dentro de la subrutina se propagar\xe1 a cualquier lugar donde se utilice el objeto o colecci\xf3n fuente. Este es el mismo principio que para ",(0,t.kt)("a",r({parentName:"p"},{href:"/docs/pt/Concepts/pointer#pointers-as-parameters-to-methods"}),"los punteros"),", excepto que los par\xe1metros ",(0,t.kt)("inlineCode",{parentName:"p"},"$1, $2...")," no necesitan ser desreferenciados en la subrutina."),(0,t.kt)("p",null,"Por ejemplo, considere el m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"CreatePerson")," que crea un objeto y lo env\xeda como par\xe1metro:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'  //CreatePerson\n var $person : Object\n $person:=New object("Name";"Smith";"Age";40)\n ChangeAge($person)\n ALERT(String($person.Age))  \n')),(0,t.kt)("p",null,"El m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"ChangeAge")," a\xf1ade 10 al atributo Age del objeto recibido"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"  //ChangeAge\n #DECLARE ($person : Object)\n $person.Age:=$person.Age+10\n ALERT(String($person.Age))\n")),(0,t.kt)("p",null,"Cuando se ejecuta el m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"CreatePerson"),', las dos cajas de alerta dir\xe1n "50" ya que la misma referencia de objeto es manejada por ambos m\xe9todos.'),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"4D Server:"),' cuando se pasan par\xe1metros entre m\xe9todos que no se ejecutan en la misma m\xe1quina (utilizando por ejemplo la opci\xf3n "Ejecutar en el servidor"), las referencias no son utilizables. Nestes casos, s\xe3o enviadas c\xf3pias dos par\xe2metros de objetos e cole\xe7\xf5es ao inv\xe9s de refer\xeancias.'))}c.isMDXComponent=!0}}]);