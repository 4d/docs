"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[73896],{603905:(e,t,a)=>{a.d(t,{Zo:()=>b,kt:()=>c});var n=a(667294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},b=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,b=i(e,["components","mdxType","originalType","parentName"]),d=s(a),c=l,u=d["".concat(p,".").concat(c)]||d[c]||m[c]||r;return a?n.createElement(u,o(o({ref:t},b),{},{components:a})):n.createElement(u,o({ref:t},b))}));function c(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,o=new Array(r);o[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var s=2;s<r;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},881514:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>b});a(667294);var n=a(603905);function l(){return l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},l.apply(this,arguments)}function r(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}const o={id:"BlobClass",title:"Blob"},i=void 0,p={unversionedId:"API/BlobClass",id:"version-20-R5/API/BlobClass",title:"Blob",description:"The Blob class lets you create and manipulate blob objects (4D.Blob).",source:"@site/i18n/pt/docusaurus-plugin-content-docs/version-20-R5/API/BlobClass.md",sourceDirName:"API",slug:"/API/BlobClass",permalink:"/docs/pt/API/BlobClass",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20API%2FBlobClass.md%20(20-R5)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R5",frontMatter:{id:"BlobClass",title:"Blob"},sidebar:"docs",previous:{title:"Fun\xe7\xf5es e comandos de classe",permalink:"/docs/pt/API/overview"},next:{title:"Class",permalink:"/docs/pt/API/ClassClass"}},s={},b=[{value:"Resumo",id:"resumo",level:3},{value:"4D. Blob.new()",id:"4d-blobnew",level:2},{value:"Descri\xe7\xe3o",id:"descri\xe7\xe3o",level:4},{value:".size",id:"size",level:2},{value:"Descri\xe7\xe3o",id:"descri\xe7\xe3o-1",level:4},{value:".slice()",id:"slice",level:2},{value:"Descri\xe7\xe3o",id:"descri\xe7\xe3o-2",level:4},{value:"Exemplo",id:"exemplo",level:4}],m={toc:b};function d(e){var{components:t}=e,a=r(e,["components"]);return(0,n.kt)("wrapper",l({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"The Blob class lets you create and manipulate ",(0,n.kt)("a",l({parentName:"p"},{href:"/docs/pt/Concepts/blob#blob-types"}),"blob objects")," (",(0,n.kt)("inlineCode",{parentName:"p"},"4D.Blob"),")."),(0,n.kt)("h3",l({},{id:"resumo"}),"Resumo"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null})))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),(0,n.kt)("a",l({parentName:"td"},{href:"#4dblobnew"}),(0,n.kt)("strong",{parentName:"a"},"4D.Blob.new()")," : 4D.Blob",(0,n.kt)("br",null),(0,n.kt)("strong",{parentName:"a"},"4D.Blob.new"),"( ",(0,n.kt)("em",{parentName:"a"},"blobScal")," : Blob ) : 4D.Blob",(0,n.kt)("br",null),(0,n.kt)("strong",{parentName:"a"},"4D.Blob.new"),"( ",(0,n.kt)("em",{parentName:"a"},"blobObj")," : 4D.Blob ) : 4D.Blob"),(0,n.kt)("br",null),"creates a new ",(0,n.kt)("inlineCode",{parentName:"td"},"4D.Blob")," object optionally encapsulating a copy of the data from another blob (scalar blob or ",(0,n.kt)("inlineCode",{parentName:"td"},"4D.Blob"),")")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),(0,n.kt)("a",l({parentName:"td"},{href:"#size"}),(0,n.kt)("strong",{parentName:"a"},".size")," : Real"),(0,n.kt)("br",null),"returns the size of a ",(0,n.kt)("inlineCode",{parentName:"td"},"4D.Blob"),", expressed in bytes.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),(0,n.kt)("a",l({parentName:"td"},{href:"#slice"}),(0,n.kt)("strong",{parentName:"a"},".slice()")," : 4D.Blob",(0,n.kt)("br",null),(0,n.kt)("strong",{parentName:"a"},".slice"),"( ",(0,n.kt)("em",{parentName:"a"},"start")," : Real ) : 4D.Blob",(0,n.kt)("br",null),(0,n.kt)("strong",{parentName:"a"},".slice"),"( ",(0,n.kt)("em",{parentName:"a"},"start")," : Real; ",(0,n.kt)("em",{parentName:"a"},"end")," : Real ) : 4D.Blob"),(0,n.kt)("br",null)," creates and returns a ",(0,n.kt)("inlineCode",{parentName:"td"},"4D.Blob ")," that references data from a subset of the blob on which it's called. The original blob is not altered.")))),(0,n.kt)("h2",l({},{id:"4d-blobnew"}),"4D. Blob.new()"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Hist\xf3ria"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Release"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Mudan\xe7as"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"19 R2"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Adicionado"))))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"4D.Blob.new()")," : 4D.Blob",(0,n.kt)("br",null),(0,n.kt)("strong",{parentName:"p"},"4D.Blob.new"),"( ",(0,n.kt)("em",{parentName:"p"},"blobScal")," : Blob ) : 4D.Blob",(0,n.kt)("br",null),(0,n.kt)("strong",{parentName:"p"},"4D.Blob.new"),"( ",(0,n.kt)("em",{parentName:"p"},"blobObj")," : 4D.Blob ) : 4D.Blob"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Par\xe2metro"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",l({parentName:"tr"},{align:"center"})),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Descri\xe7\xe3o"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"blob"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Blob or 4D. Blob"),(0,n.kt)("td",l({parentName:"tr"},{align:"center"}),"->"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Blob a copiar")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Resultados"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"4D. Blob"),(0,n.kt)("td",l({parentName:"tr"},{align:"center"}),"<-"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Novo 4D.Blob")))),(0,n.kt)("h4",l({},{id:"descri\xe7\xe3o"}),"Descri\xe7\xe3o"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"4D.Blob.new")," creates a new ",(0,n.kt)("inlineCode",{parentName:"p"},"4D.Blob")," object optionally encapsulating a copy of the data from another blob (scalar blob or ",(0,n.kt)("inlineCode",{parentName:"p"},"4D.Blob"),")."),(0,n.kt)("p",null,"If the ",(0,n.kt)("inlineCode",{parentName:"p"},"blob")," parameter is omitted, the method returns an empty 4D.Blob."),(0,n.kt)("h2",l({},{id:"size"}),".size"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},".size")," : Real"),(0,n.kt)("h4",l({},{id:"descri\xe7\xe3o-1"}),"Descri\xe7\xe3o"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},".size")," property returns the size of a ",(0,n.kt)("inlineCode",{parentName:"p"},"4D.Blob"),", expressed in bytes."),(0,n.kt)("h2",l({},{id:"slice"}),".slice()"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Hist\xf3ria"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Release"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Mudan\xe7as"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"19 R2"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Adicionado"))))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},".slice()")," : 4D.Blob",(0,n.kt)("br",null),(0,n.kt)("strong",{parentName:"p"},".slice"),"( ",(0,n.kt)("em",{parentName:"p"},"start")," : Real ) : 4D.Blob",(0,n.kt)("br",null),(0,n.kt)("strong",{parentName:"p"},".slice"),"( ",(0,n.kt)("em",{parentName:"p"},"start")," : Real; ",(0,n.kt)("em",{parentName:"p"},"end")," : Real ) : 4D.Blob"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Par\xe2metro"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",l({parentName:"tr"},{align:"center"})),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Descri\xe7\xe3o"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"start"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Real"),(0,n.kt)("td",l({parentName:"tr"},{align:"center"}),"->"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"index of the first byte to include in the new ",(0,n.kt)("inlineCode",{parentName:"td"},"4D.Blob"),".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"end"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Real"),(0,n.kt)("td",l({parentName:"tr"},{align:"center"}),"->"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"index of the first byte that will not be included in the new ",(0,n.kt)("inlineCode",{parentName:"td"},"4D.Blob"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Resultados"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"4D. Blob"),(0,n.kt)("td",l({parentName:"tr"},{align:"center"}),"<-"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Novo ",(0,n.kt)("inlineCode",{parentName:"td"},"4D.Blob"))))),(0,n.kt)("h4",l({},{id:"descri\xe7\xe3o-2"}),"Descri\xe7\xe3o"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},".slice()"),"  creates and returns a ",(0,n.kt)("inlineCode",{parentName:"p"},"4D.Blob ")," that references data from a subset of the blob on which it's called. The original blob is not altered."),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"start")," parameter is an index into the blob indicating the first byte to include in the new ",(0,n.kt)("inlineCode",{parentName:"p"},"4D.Blob"),". Se especificar um valor negativo, 4D trata-o como uma compensa\xe7\xe3o desde o fim da bolha at\xe9 ao in\xedcio. Por exemplo, -10 seria o 10\xba do \xfaltimo byte na bolha. O valor predefinido \xe9 0. If you specify a value for start that is larger than the size of the source blob, the returned ",(0,n.kt)("inlineCode",{parentName:"p"},"4D.Blob"),"'s size is 0, and it contains no data."),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"end")," parameter is an index into the blob indicating the first byte that will not be included in the new ",(0,n.kt)("inlineCode",{parentName:"p"},"4D.Blob")," (i.e. the byte exactly at this index is not included). Se especificar um valor negativo, 4D trata-o como uma compensa\xe7\xe3o desde o fim da bolha at\xe9 ao in\xedcio. Por exemplo, -10 seria o 10\xba do \xfaltimo byte na bolha. O valor por defeito \xe9 o tamanho do blob."),(0,n.kt)("h4",l({},{id:"exemplo"}),"Exemplo"),(0,n.kt)("pre",null,(0,n.kt)("code",l({parentName:"pre"},{className:"language-4d"}),'var $myBlob : 4D.Blob\n\n// Store text in a 4D.Blob\nCONVERT FROM TEXT("Hello, World!"; "UTF-8"; $myBlob)\n$is4DBlob:=OB Instance of($myBlob; 4D.Blob);   //True\n\n$myString:=Convert to text($myBlob; "UTF-8")\n// $myString contains "Hello, World!"\n\n// Create a new 4D.Blob from $myBlob\n$myNewBlob:=$myBlob.slice(0; 5)\n\n$myString:=Convert to text($myNewBlob; "UTF-8")\n// $myString contains "Hello"\n')))}d.isMDXComponent=!0}}]);