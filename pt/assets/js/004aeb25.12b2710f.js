"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["9604"],{298379:function(e,a,s){s.r(a),s.d(a,{frontMatter:()=>d,default:()=>u,toc:()=>c,metadata:()=>o,assets:()=>i,contentTitle:()=>t});var o=JSON.parse('{"id":"Develop-legacy/transactions","title":"Transa\xe7\xf5es","description":"Descri\xe7\xe3o","source":"@site/i18n/pt/docusaurus-plugin-content-docs/version-20-R10/Develop-legacy/transactions.md","sourceDirName":"Develop-legacy","slug":"/Develop-legacy/transactions","permalink":"/docs/pt/Develop-legacy/transactions","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20Develop-legacy%2Ftransactions.md%20(20-R10)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"20-R10","frontMatter":{"id":"transactions","title":"Transa\xe7\xf5es"},"sidebar":"docs","previous":{"title":"Processos preemptivos","permalink":"/docs/pt/Develop/preemptive-processes"},"next":{"title":"Etiquetas de transforma\xe7\xe3o","permalink":"/docs/pt/Tags/transformation-tags"}}'),n=s(785893),r=s(250065);let d={id:"transactions",title:"Transa\xe7\xf5es"},t=void 0,i={},c=[{value:"Descri\xe7\xe3o",id:"descri\xe7\xe3o",level:2},{value:"Exemplo",id:"exemplo",level:3},{value:"id: transactions\ntitle: Transactions",id:"id-transactionstitle-transactions",level:2},{value:"Description",id:"description",level:2},{value:"Example",id:"example",level:3},{value:"Suspens\xe3o de transa\xe7\xf5es",id:"suspens\xe3o-de-transa\xe7\xf5es",level:2},{value:"Princ\xedpio",id:"princ\xedpio",level:3},{value:"Exemplo",id:"exemplo-1",level:3},{value:"Opera\xe7\xe3o detalhada",id:"opera\xe7\xe3o-detalhada",level:3},{value:"Como funciona uma transa\xe7\xe3o suspensa?",id:"como-funciona-uma-transa\xe7\xe3o-suspensa",level:4},{value:"Transa\xe7\xf5es suspensas e estado do processo",id:"transa\xe7\xf5es-suspensas-e-estado-do-processo",level:4}];function l(e){let a={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h2,{id:"descri\xe7\xe3o",children:"Descri\xe7\xe3o"}),"\n",(0,n.jsxs)(a.p,{children:["As transa\xe7\xf5es s\xe3o uma s\xe9rie de modifica\xe7\xf5es de dados relacionadas que s\xe3o realizadas em um banco de dados ou armazenamento de dados dentro de um ",(0,n.jsx)(a.a,{href:"./processes.md",children:"process"}),". Uma transa\xe7\xe3o n\xe3o \xe9 salva em um banco de dados permanentemente at\xe9 que a transa\xe7\xe3o seja validada. Se uma transa\xe7\xe3o n\xe3o for conclu\xedda, seja porque \xe9 cancelada ou por algum evento externo, as modifica\xe7\xf5es n\xe3o s\xe3o salvas."]}),"\n",(0,n.jsxs)(a.p,{children:["Durante uma transa\xe7\xe3o, todas as altera\xe7\xf5es feitas nos dados do banco de dados dentro de um processo s\xe3o armazenadas localmente em um buffer tempor\xe1rio. Se a transa\xe7\xe3o for aceita com ",(0,n.jsx)(a.a,{href:"/docs/pt/commands/validate-transaction",children:(0,n.jsx)(a.code,{children:"VALIDATE TRANSACTION"})})," ou ",(0,n.jsx)(a.a,{href:"/docs/pt/API/DataStoreClass#validatetransaction",children:(0,n.jsx)(a.code,{children:"validateTransaction()"})}),", as altera\xe7\xf5es s\xe3o salvas permanentemente. Se a transa\xe7\xe3o for cancelada com ",(0,n.jsx)(a.a,{href:"/docs/pt/commands/cancel-transaction",children:(0,n.jsx)(a.code,{children:"CANCEL TRANSACTION"})})," ou ",(0,n.jsx)(a.a,{href:"/docs/pt/API/DataStoreClass#canceltransaction",children:(0,n.jsx)(a.code,{children:"cancelTransaction()"})}),", as altera\xe7\xf5es n\xe3o s\xe3o salvas. Em todos os casos, nem a sele\xe7\xe3o atual nem o registro atual s\xe3o modificados pelos comandos de gerenciamento de transa\xe7\xf5es."]}),"\n",(0,n.jsxs)(a.p,{children:["4D suporta transa\xe7\xf5es aninhadas, ou seja, transa\xe7\xf5es em v\xe1rios n\xedveis hier\xe1rquicos. O n\xfamero de subtransa\xe7\xf5es permitidas \xe9 ilimitado. O comando ",(0,n.jsx)(a.a,{href:"/docs/pt/commands/transaction-level",children:(0,n.jsx)(a.code,{children:"Transaction level"})})," pode ser usado para descobrir o n\xedvel de transa\xe7\xe3o atual em que o c\xf3digo est\xe1 sendo executado. Quando transa\xe7\xf5es aninhadas s\xe3o usadas, o resultado de cada subtransa\xe7\xe3o depende da valida\xe7\xe3o ou cancelamento da transa\xe7\xe3o de n\xedvel superior. Se a transa\xe7\xe3o de n\xedvel superior for validada, os resultados das subtransa\xe7\xf5es (valida\xe7\xe3o ou cancelamento) s\xe3o confirmados. Por outro lado, se a opera\xe7\xe3o de n\xedvel superior for anulada, todas as subopera\xe7\xf5es s\xe3o anuladas, independentemente de seus respectivos resultados."]}),"\n",(0,n.jsxs)(a.p,{children:["4D inclui uma funcionalidade que permite ",(0,n.jsx)(a.a,{href:"#suspending-transactions",children:"suspender e retomar transa\xe7\xf5es"})," dentro do seu c\xf3digo 4D. Quando uma transa\xe7\xe3o \xe9 suspensa, voc\xea pode executar opera\xe7\xf5es independentemente da transa\xe7\xe3o em si e, em seguida, retomar a transa\xe7\xe3o para valid\xe1-la ou cancel\xe1-la como de costume."]}),"\n",(0,n.jsx)(a.h3,{id:"exemplo",children:"Exemplo"}),"\n",(0,n.jsxs)(a.p,{children:["Neste exemplo, o banco de dados \xe9 um sistema de faturamento simples. As linhas de fatura s\xe3o armazenadas em uma tabela chamada [Invoice Lines], que est\xe1 relacionada \xe0 tabela [Invoices] por meio de um relacionamento entre os campos [Invoices]Invoice ID e [Invoice Lines]Invoice ID. Quando uma fatura \xe9 adicionada, um ID \xfanico \xe9 calculado, usando o comando ",(0,n.jsx)(a.a,{href:"/docs/pt/commands/sequence-number",children:(0,n.jsx)(a.code,{children:"Sequence number"})}),". O relacionamento entre [Invoices] e [Invoice Lines] \xe9 um relacionamento autom\xe1tico Relate Many. A caixa de sele\xe7\xe3o ",(0,n.jsx)(a.strong,{children:"Asignar autom\xe1ticamente valor relacionado en subformulario"})," est\xe1 marcada."]}),"\n",(0,n.jsx)(a.p,{children:"O relacionamento entre [Invoice Lines] e [Parts] \xe9 manual."}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.img,{src:s(328667).Z+"",width:"489",height:"259"})}),"\n",(0,n.jsx)(a.p,{children:"Quando uma fatura \xe9 adicionada, um ID \xfanico \xe9 calculado, usando o comando\nQuando um usu\xe1rio insere uma fatura, as seguintes a\xe7\xf5es s\xe3o executadas:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"Adicionar um registro na tabela [Invoices]."}),"\n",(0,n.jsx)(a.li,{children:"Adicionar v\xe1rios registros na tabela [Invoice Lines]."}),"\n",(0,n.jsx)(a.li,{children:"Atualizar o campo [Parts]In Warehouse de cada pe\xe7a listada na fatura."}),"\n"]}),"\n",(0,n.jsx)(a.p,{children:"Este exemplo \xe9 uma situa\xe7\xe3o t\xedpica em que voc\xea precisa usar uma transa\xe7\xe3o. Voc\xea deve ter certeza de que poder\xe1 salvar todos esses registros durante a opera\xe7\xe3o ou de que poder\xe1 cancelar a transa\xe7\xe3o se um registro n\xe3o puder ser adicionado ou atualizado. Em outras palavras, voc\xea deve salvar os dados relacionados. Se voc\xea n\xe3o usar uma transa\xe7\xe3o, n\xe3o poder\xe1 garantir a integridade l\xf3gica dos dados do seu banco de dados. Por exemplo, se um dos registros de [Parts] estiver bloqueado, voc\xea n\xe3o poder\xe1 atualizar a quantidade armazenada no campo [Parts]In Warehouse. Portanto, este campo ser\xe1 logicamente incorreto. A soma das pe\xe7as vendidas e das pe\xe7as restantes no armaz\xe9m n\xe3o ser\xe1 igual \xe0 quantidade original inserida no registro. Voc\xea pode evitar essa situa\xe7\xe3o usando transa\xe7\xf5es."}),"\n",(0,n.jsx)(a.p,{children:"Existem v\xe1rias maneiras de realizar a entrada de dados usando transa\xe7\xf5es:"}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsxs)(a.li,{children:["Voc\xea pode gerenciar as transa\xe7\xf5es voc\xea mesmo usando os comandos de transa\xe7\xe3o ",(0,n.jsx)(a.a,{href:"/docs/pt/commands/start-transaction",children:(0,n.jsx)(a.code,{children:"START TRANSACTION"})}),", ",(0,n.jsx)(a.a,{href:"/docs/pt/commands/validate-transaction",children:(0,n.jsx)(a.code,{children:"VALIDATE TRANSACTION"})})," e ",(0,n.jsx)(a.a,{href:"/docs/pt/commands/cancel-transaction",children:(0,n.jsx)(a.code,{children:"CANCEL TRANSACTION"})}),". Voc\xea pode escrever, por exemplo:"]}),"\n"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-4d",children:' READ WRITE([Invoice Lines])\n READ WRITE([Parts])\n FORM SET INPUT([Invoices];"Input")\n Repeat\n    START TRANSACTION\n    ADD RECORD([Invoices])\n    If(OK=1)\n       VALIDATE TRANSACTION\n    Else\n       CANCEL TRANSACTION\n    End if\n Until(OK=0)\n READ ONLY(*)\n'})}),"\n",(0,n.jsxs)(a.ol,{start:"2",children:["\n",(0,n.jsx)(a.li,{children:"Para reduzir o bloqueio de registros enquanto a entrada de dados est\xe1 sendo realizada, voc\xea tamb\xe9m pode optar por gerenciar as transa\xe7\xf5es a partir do m\xe9todo do formul\xe1rio e acessar as tabelas em READ WRITE apenas quando necess\xe1rio. A entrada de dados \xe9 realizada usando o formul\xe1rio de entrada de [Invoices], que cont\xe9m a tabela relacionada [Invoice Lines] em um subformul\xe1rio. O formul\xe1rio tem dois bot\xf5es: bCancel e bOK, que n\xe3o s\xe3o bot\xf5es de a\xe7\xe3o."}),"\n"]}),"\n",(0,n.jsx)(a.p,{children:"O loop de adi\xe7\xe3o se torna:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-4d",children:' READ WRITE([Invoice Lines])\n READ ONLY([Parts])\n FORM SET INPUT([Invoices];"Input")\n Repeat\n    ADD RECORD([Invoices])\n Until(bOK=0)\n READ ONLY([Invoice Lines])\n'})}),"\n",(0,n.jsx)(a.h2,{id:"id-transactionstitle-transactions",children:"id: transactions\ntitle: Transactions"}),"\n",(0,n.jsx)(a.h2,{id:"description",children:"Description"}),"\n",(0,n.jsxs)(a.p,{children:["As transa\xe7\xf5es s\xe3o uma s\xe9rie de modifica\xe7\xf5es de dados relacionadas que s\xe3o realizadas em um banco de dados ou armazenamento de dados dentro de um ",(0,n.jsx)(a.a,{href:"./processes.md",children:"processo"}),". Uma transa\xe7\xe3o n\xe3o \xe9 salva em um banco de dados permanentemente at\xe9 que a transa\xe7\xe3o seja validada. Se uma transa\xe7\xe3o n\xe3o for conclu\xedda, seja porque \xe9 cancelada ou por algum evento externo, as modifica\xe7\xf5es n\xe3o s\xe3o salvas."]}),"\n",(0,n.jsxs)(a.p,{children:["Durante uma transa\xe7\xe3o, todas as altera\xe7\xf5es feitas nos dados do banco de dados dentro de um processo s\xe3o armazenadas localmente em um buffer tempor\xe1rio. Se a transa\xe7\xe3o for aceita com ",(0,n.jsx)(a.a,{href:"https://www.google.com/search?q=../commands-legacy/validate-transaction.md",children:(0,n.jsx)(a.code,{children:"VALIDATE TRANSACTION"})})," ou ",(0,n.jsx)(a.a,{href:"/docs/pt/API/DataStoreClass#validatetransaction",children:(0,n.jsx)(a.code,{children:"validateTransaction()"})}),", as altera\xe7\xf5es s\xe3o salvas permanentemente. Se a transa\xe7\xe3o for cancelada com ",(0,n.jsx)(a.a,{href:"/docs/pt/commands/cancel-transaction",children:(0,n.jsx)(a.code,{children:"CANCEL TRANSACTION"})})," ou ",(0,n.jsx)(a.a,{href:"/docs/pt/API/DataStoreClass#canceltransaction",children:(0,n.jsx)(a.code,{children:"cancelTransaction()"})}),", as altera\xe7\xf5es n\xe3o s\xe3o salvas. Em todos os casos, nem a sele\xe7\xe3o atual nem o registro atual s\xe3o modificados pelos comandos de gerenciamento de transa\xe7\xf5es."]}),"\n",(0,n.jsxs)(a.p,{children:["O 4D suporta transa\xe7\xf5es aninhadas, ou seja, transa\xe7\xf5es em v\xe1rios n\xedveis hier\xe1rquicos. O n\xfamero de subtransa\xe7\xf5es permitidas \xe9 ilimitado. O comando ",(0,n.jsx)(a.a,{href:"https://www.google.com/search?q=../commands-legacy/transaction-level.md",children:(0,n.jsx)(a.code,{children:"Transaction level"})})," pode ser usado para descobrir o n\xedvel de transa\xe7\xe3o atual em que o c\xf3digo est\xe1 sendo executado. Quando transa\xe7\xf5es aninhadas s\xe3o usadas, o resultado de cada subtransa\xe7\xe3o depende da valida\xe7\xe3o ou cancelamento da transa\xe7\xe3o de n\xedvel superior. Se a transa\xe7\xe3o de n\xedvel superior for validada, os resultados das subtransa\xe7\xf5es (valida\xe7\xe3o ou cancelamento) s\xe3o confirmados. Por outro lado, se a opera\xe7\xe3o de n\xedvel superior for anulada, todas as subopera\xe7\xf5es s\xe3o anuladas, independentemente de seus respectivos resultados."]}),"\n",(0,n.jsxs)(a.p,{children:["O 4D inclui uma funcionalidade que permite ",(0,n.jsx)(a.a,{href:"#suspending-transactions",children:"suspender e retomar transa\xe7\xf5es"})," dentro do seu c\xf3digo 4D. Quando uma transa\xe7\xe3o \xe9 suspensa, voc\xea pode executar opera\xe7\xf5es independentemente da transa\xe7\xe3o em si e, em seguida, retomar a transa\xe7\xe3o para valid\xe1-la ou cancel\xe1-la como de costume."]}),"\n",(0,n.jsx)(a.h3,{id:"example",children:"Example"}),"\n",(0,n.jsxs)(a.p,{children:["Neste exemplo, o banco de dados \xe9 um sistema de faturamento simples. As linhas de fatura s\xe3o armazenadas em uma tabela chamada [Invoice Lines], que est\xe1 relacionada \xe0 tabela [Invoices] por meio de um relacionamento entre os campos [Invoices]Invoice ID e [Invoice Lines]Invoice ID. Quando uma fatura \xe9 adicionada, um ID \xfanico \xe9 calculado, usando o comando ",(0,n.jsx)(a.a,{href:"/docs/pt/commands/sequence-number",children:(0,n.jsx)(a.code,{children:"Sequence number"})}),". O relacionamento entre [Invoices] e [Invoice Lines] \xe9 um relacionamento autom\xe1tico Relate Many. A caixa de sele\xe7\xe3o ",(0,n.jsx)(a.strong,{children:"Asignar autom\xe1ticamente valor relacionado en subformulario"})," est\xe1 marcada."]}),"\n",(0,n.jsx)(a.p,{children:"O relacionamento entre [Invoice Lines] e [Parts] \xe9 manual."}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.img,{src:s(328667).Z+"",width:"489",height:"259"})}),"\n",(0,n.jsx)(a.p,{children:"Quando um usu\xe1rio insere uma fatura, as seguintes a\xe7\xf5es s\xe3o executadas:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"Adicionar um registro na tabela [Invoices]."}),"\n",(0,n.jsx)(a.li,{children:"Adicionar v\xe1rios registros na tabela [Invoice Lines]."}),"\n",(0,n.jsx)(a.li,{children:"Atualizar o campo [Parts]In Warehouse de cada pe\xe7a listada na fatura."}),"\n"]}),"\n",(0,n.jsx)(a.p,{children:"Este exemplo \xe9 uma situa\xe7\xe3o t\xedpica em que voc\xea precisa usar uma transa\xe7\xe3o. Voc\xea deve ter certeza de que poder\xe1 salvar todos esses registros durante a opera\xe7\xe3o ou de que poder\xe1 cancelar a transa\xe7\xe3o se um registro n\xe3o puder ser adicionado ou atualizado. Em outras palavras, voc\xea deve salvar os dados relacionados. Se voc\xea n\xe3o usar uma transa\xe7\xe3o, n\xe3o poder\xe1 garantir a integridade l\xf3gica dos dados do seu banco de dados. Por exemplo, se um dos registros de [Parts] estiver bloqueado, voc\xea n\xe3o poder\xe1 atualizar a quantidade armazenada no campo [Parts]In Warehouse. Portanto, este campo ser\xe1 logicamente incorreto. A soma das pe\xe7as vendidas e das pe\xe7as restantes no armaz\xe9m n\xe3o ser\xe1 igual \xe0 quantidade original inserida no registro. Voc\xea pode evitar essa situa\xe7\xe3o usando transa\xe7\xf5es."}),"\n",(0,n.jsx)(a.p,{children:"Existem v\xe1rias maneiras de realizar a entrada de dados usando transa\xe7\xf5es:"}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsxs)(a.li,{children:["Voc\xea pode gerenciar as transa\xe7\xf5es voc\xea mesmo usando os comandos de transa\xe7\xe3o ",(0,n.jsx)(a.a,{href:"/docs/pt/commands/start-transaction",children:(0,n.jsx)(a.code,{children:"START TRANSACTION"})}),", ",(0,n.jsx)(a.a,{href:"https://www.google.com/search?q=../commands-legacy/validate-transaction.md",children:(0,n.jsx)(a.code,{children:"VALIDATE TRANSACTION"})})," e ",(0,n.jsx)(a.a,{href:"/docs/pt/commands/cancel-transaction",children:(0,n.jsx)(a.code,{children:"CANCEL TRANSACTION"})}),". Voc\xea pode escrever, por exemplo:"]}),"\n"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-4d",children:'\xa0READ WRITE([Invoice Lines])\n\xa0READ WRITE([Parts])\n\xa0FORM SET INPUT([Invoices];"Input")\n\xa0Repeat\n\xa0 \xa0 START TRANSACTION\n\xa0 \xa0 ADD RECORD([Invoices])\n\xa0 \xa0 If(OK=1)\n\xa0 \xa0 \xa0 \xa0VALIDATE TRANSACTION\n\xa0 \xa0 Else\n\xa0 \xa0 \xa0 \xa0CANCEL TRANSACTION\n\xa0 \xa0 End if\n\xa0Until(OK=0)\n\xa0READ ONLY(*)\nPara reduzir o bloqueio de registros enquanto a entrada de dados est\xe1 sendo realizada, voc\xea tamb\xe9m pode optar por gerenciar as transa\xe7\xf5es a partir do m\xe9todo do formul\xe1rio e acessar as tabelas em READ WRITE apenas quando necess\xe1rio. A entrada de dados \xe9 realizada usando o formul\xe1rio de entrada de [Invoices], que cont\xe9m a tabela relacionada [Invoice Lines] em um subformul\xe1rio. O formul\xe1rio tem dois bot\xf5es: bCancel e bOK, que n\xe3o s\xe3o bot\xf5es de a\xe7\xe3o.\nO loop de adi\xe7\xe3o se torna:\n\n4D\n\n\xa0READ WRITE([Invoice Lines])\n\xa0READ ONLY([Parts])\n\xa0FORM SET INPUT([Invoices];"Input")\n\xa0Repeat\n\xa0 \xa0 ADD RECORD([Invoices])\n\xa0Until(bOK=0)\n\xa0READ ONLY([Invoice Lines])\nObserve que a tabela [Parts] agora est\xe1 em modo de acesso somente leitura durante a entrada de dados. O acesso de leitura/grava\xe7\xe3o s\xf3 estar\xe1 dispon\xedvel se a entrada de dados for validada.\n\nA transa\xe7\xe3o \xe9 iniciada no m\xe9todo do formul\xe1rio de entrada [Invoices] indicado abaixo:\n\n```4d\n Case of\n    :(Form event code=On Load)\n       START TRANSACTION\n       [Invoices]Invoice ID:=Sequence number([Invoices]Invoice ID)\n    Else\n       [Invoices]Total Invoice:=Sum([Invoice Lines]Total line)\n End case\n'})}),"\n",(0,n.jsxs)(a.p,{children:["If you click the ",(0,n.jsx)(a.em,{children:"bCancel"})," button, the data entry as well as the transaction must be canceled. Here is the object method of the ",(0,n.jsx)(a.em,{children:"bCancel"})," button:"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-4d",children:" Case of\n    :(Form event code=On Clicked)\n       CANCEL TRANSACTION\n       CANCEL\n End case\n"})}),"\n",(0,n.jsxs)(a.p,{children:["Se voc\xea clicar no bot\xe3o ",(0,n.jsx)(a.em,{children:"bOK"}),", tanto a entrada de dados quanto a transa\xe7\xe3o ser\xe3o canceladas. Este \xe9 o m\xe9todo objeto do bot\xe3o ",(0,n.jsx)(a.em,{children:"bOK"}),":"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-4d",children:' Case of\n    :(Form event code=On Clicked)\n       var $NbLines:=Records in selection([Invoice Lines])\n       READ WRITE([Parts]) //Mudar para acesso de Leitura/Grava\xe7\xe3o para a tabela [Parts]\n       FIRST RECORD([Invoice Lines]) //Come\xe7ar na primeira linha\n       var $ValidTrans:=True //Assumir que tudo estar\xe1 OK\n       var $Line : Integer\n       For($Line;1;$NbLines) //Para cada linha\n          RELATE ONE([Invoice Lines]Part No)\n          OK:=1 //Assumir que voc\xea quer continuar\n          While(Locked([Parts]) & (OK=1)) //Tentar obter o registro em acesso de Leitura/Grava\xe7\xe3o\n             CONFIRM("The Part "+[Invoice Lines]Part No+" is in use. Wait?")\n             If(OK=1)\n                DELAY PROCESS(Current process;60)\n                LOAD RECORD([Parts])\n             End if\n          End while\n          If(OK=1)\n               //Atualizar a quantidade no armaz\xe9m\n             [Parts]In Warehouse:=[Parts]In Warehouse-[Invoice Lines]Quantity\n             SAVE RECORD([Parts]) //Salvar o registro\n          Else\n             $Line:=$NbLines+1 //Sair do loop\n             $ValidTrans:=False\n          End if\n          NEXT RECORD([Invoice Lines]) //Ir para a pr\xf3xima linha\n       End for\n       READ ONLY([Parts]) //Definir o estado da tabela como somente leitura\n       If($ValidTrans)\n          SAVE RECORD([Invoices]) //Salvar o registro de Invoices\n          VALIDATE TRANSACTION //Validar todas as modifica\xe7\xf5es do banco de dados\n       Else\n          CANCEL TRANSACTION //Cancelar tudo\n       End if\n       CANCEL //air do formul\xe1rio\n End case\n'})}),"\n",(0,n.jsxs)(a.p,{children:["Neste c\xf3digo, chamamos o comando ",(0,n.jsx)(a.code,{children:"CANCEL"})," independentemente do bot\xe3o pressionado. O novo registro n\xe3o \xe9 validado por uma chamada a ",(0,n.jsx)(a.a,{href:"/docs/pt/commands/accept",children:(0,n.jsx)(a.code,{children:"ACCEPT"})}),", mas sim pelo comando ",(0,n.jsx)(a.a,{href:"/docs/pt/commands/save-record",children:(0,n.jsx)(a.code,{children:"SAVE RECORD"})})," Al\xe9m disso, observe que ",(0,n.jsx)(a.code,{children:"SAVE RECORD"})," \xe9 executado imediatamente antes do comando ",(0,n.jsx)(a.a,{href:"/docs/pt/commands/validate-transaction",children:(0,n.jsx)(a.code,{children:"VALIDATE TRANSACTION"})}),". Portanto, salvar o registro [Invoices] \xe9, na verdade, parte da transa\xe7\xe3o. O comando ACCEPT tamb\xe9m validaria o registro, mas neste caso a transa\xe7\xe3o seria validada antes de o registro [Invoices] ser salvo. Em outras palavras, o registro seria salvo fora da transa\xe7\xe3o."]}),"\n",(0,n.jsx)(a.p,{children:"Dependendo de suas necessidades, voc\xea pode personalizar seu banco de dados, conforme mostrado nestes exemplos. No \xfaltimo exemplo, o gerenciamento de registros bloqueados na tabela [Parts] poderia ser ainda mais desenvolvido."}),"\n",(0,n.jsx)(a.h2,{id:"suspens\xe3o-de-transa\xe7\xf5es",children:"Suspens\xe3o de transa\xe7\xf5es"}),"\n",(0,n.jsx)(a.h3,{id:"princ\xedpio",children:"Princ\xedpio"}),"\n",(0,n.jsx)(a.p,{children:"Suspender uma transa\xe7\xe3o \xe9 \xfatil quando voc\xea precisa realizar, de dentro de uma transa\xe7\xe3o, certas opera\xe7\xf5es que n\xe3o precisam ser executadas sob o controle dessa transa\xe7\xe3o. Por exemplo, imagine o caso em que um cliente faz um pedido, portanto dentro de uma transa\xe7\xe3o, e tamb\xe9m atualiza seu endere\xe7o. Em seguida, o cliente muda de ideia e cancela o pedido. A transa\xe7\xe3o \xe9 cancelada, mas voc\xea n\xe3o deseja que a altera\xe7\xe3o de endere\xe7o seja revertida. Este \xe9 um exemplo t\xedpico em que suspender a transa\xe7\xe3o \xe9 \xfatil. Tr\xeas comandos s\xe3o usados para suspender e retomar transa\xe7\xf5es:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"/docs/pt/commands/suspend-transaction",children:(0,n.jsx)(a.code,{children:"SUSPEND TRANSACTION"})}),": pausa a transa\xe7\xe3o atual. Os registros atualizados ou adicionados permanecem bloqueados."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"/docs/pt/commands/resume-transaction",children:(0,n.jsx)(a.code,{children:"RESUME TRANSACTION"})}),": reativa uma transa\xe7\xe3o suspensa."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"/docs/pt/commands/active-transaction",children:(0,n.jsx)(a.code,{children:"Active transaction"})}),": retorna False se a transa\xe7\xe3o estiver suspensa ou se n\xe3o houver transa\xe7\xe3o em andamento, e True se tiver sido iniciada ou retomada."]}),"\n"]}),"\n",(0,n.jsx)(a.h3,{id:"exemplo-1",children:"Exemplo"}),"\n",(0,n.jsx)(a.p,{children:"Este exemplo ilustra a necessidade de uma transa\xe7\xe3o suspensa. Em um banco de dados Invoices, queremos obter um novo n\xfamero de fatura durante uma transa\xe7\xe3o. Este n\xfamero \xe9 calculado e armazenado em uma tabela [Settings]. Em um ambiente multiusu\xe1rio, acessos concorrentes devem ser protegidos; no entanto, devido \xe0 transa\xe7\xe3o, a tabela [Settings] pode estar bloqueada por outro usu\xe1rio, embora esses dados sejam independentes da transa\xe7\xe3o principal. Neste caso, voc\xea pode suspender a transa\xe7\xe3o ao acessar a tabela."}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-4d",children:"  //M\xe9todo padr\xe3o que cria uma fatura\n START TRANSACTION\n ...\n CREATE RECORD([Invoices])\n //chamar o m\xe9todo para obter um n\xfamero dispon\xedvel\n [Invoices]InvoiceID:=GetInvoiceNum \n ...\n SAVE RECORD([Invoices])\n VALIDATE TRANSACTION\n\n"})}),"\n",(0,n.jsxs)(a.p,{children:["O m\xe9todo ",(0,n.jsx)(a.em,{children:"GetInvoiceNum"})," suspende a transa\xe7\xe3o antes de ser executado. Observe que este c\xf3digo funcionar\xe1 mesmo quando o m\xe9todo for chamado de fora de uma transa\xe7\xe3o:"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-4d",children:'  //M\xe9todo projeto GetInvoiceNum\n  //GetInvoiceNum -> Pr\xf3ximo n\xfamero de fatura dispon\xedvel\n #DECLARE -> $freeNum : Integer\n SUSPEND TRANSACTION\n ALL RECORDS([Settings])\n If(Locked([Settings])) //acesso multiusu\xe1rio\n    While(Locked([Settings]))\n       MESSAGE("Waiting for locked Settings record")\n       DELAY PROCESS(Current process;30)\n       LOAD RECORD([Settings])\n    End while\n End if\n [Settings]InvoiceNum:=[Settings]InvoiceNum+1\n $freeNum:=[Settings]InvoiceNum\n SAVE RECORD([Settings])\n UNLOAD RECORD([Settings])\n RESUME TRANSACTION\n\n'})}),"\n",(0,n.jsx)(a.h3,{id:"opera\xe7\xe3o-detalhada",children:"Opera\xe7\xe3o detalhada"}),"\n",(0,n.jsx)(a.h4,{id:"como-funciona-uma-transa\xe7\xe3o-suspensa",children:"Como funciona uma transa\xe7\xe3o suspensa?"}),"\n",(0,n.jsx)(a.p,{children:"Quando uma transa\xe7\xe3o \xe9 suspensa, os seguintes princ\xedpios s\xe3o aplicados:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"Voc\xea pode acessar os registros que foram adicionados ou modificados durante a transa\xe7\xe3o e n\xe3o pode ver os registros que foram exclu\xeddos durante a transa\xe7\xe3o."}),"\n",(0,n.jsx)(a.li,{children:"Voc\xea pode criar, salvar, excluir ou modificar registros fora da transa\xe7\xe3o."}),"\n",(0,n.jsx)(a.li,{children:"Voc\xea pode iniciar uma nova transa\xe7\xe3o, mas dentro desta transa\xe7\xe3o inclu\xedda, voc\xea n\xe3o poder\xe1 ver nenhum registro ou valor de registro que tenha sido adicionado ou modificado durante a transa\xe7\xe3o suspensa. De fato, esta nova transa\xe7\xe3o \xe9 totalmente independente da suspensa, semelhante a uma transa\xe7\xe3o de outro processo, e como a transa\xe7\xe3o suspensa pode ser retomada ou cancelada posteriormente, qualquer registro adicionado ou modificado \xe9 automaticamente ocultado para a nova transa\xe7\xe3o. Assim que a nova transa\xe7\xe3o for retomada ou cancelada, esses registros poder\xe3o ser vistos novamente."}),"\n",(0,n.jsx)(a.li,{children:"Os registros modificados, exclu\xeddos ou adicionados dentro da transa\xe7\xe3o suspensa permanecem bloqueados para outros processos. Se uma tentativa for feita para modificar ou excluir esses registros fora da transa\xe7\xe3o ou em uma nova transa\xe7\xe3o, um erro \xe9 gerado."}),"\n"]}),"\n",(0,n.jsx)(a.p,{children:"Essas implementa\xe7\xf5es s\xe3o resumidas no seguinte gr\xe1fico:"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.img,{src:s(635348).Z+"",width:"671",height:"302"})}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.em,{children:'Os valores editados durante a transa\xe7\xe3o A (o registro ID1 obt\xe9m Val11) n\xe3o est\xe3o dispon\xedveis em uma nova transa\xe7\xe3o (B) criada durante o per\xedodo "suspenso". Os valores editados durante o per\xedodo "suspenso" (o registro ID2 obt\xe9m Val22 e o registro ID3 obt\xe9m Val33) s\xe3o salvos mesmo ap\xf3s o cancelamento da transa\xe7\xe3o A.'})}),"\n",(0,n.jsx)(a.p,{children:"Funcionalidades espec\xedficas foram adicionadas para gerenciar erros:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"O registro atual de cada tabela \xe9 temporariamente bloqueado se for modificado durante a transa\xe7\xe3o e desbloqueado automaticamente quando a transa\xe7\xe3o \xe9 retomada. Este mecanismo \xe9 importante para evitar salvamentos indesejados em partes da transa\xe7\xe3o."}),"\n",(0,n.jsx)(a.li,{children:"Se uma sequ\xeancia inv\xe1lida for executada, como iniciar transa\xe7\xe3o / suspender transa\xe7\xe3o / iniciar transa\xe7\xe3o / retomar transa\xe7\xe3o, um erro \xe9 gerado. Este mecanismo evita que os desenvolvedores esque\xe7am de confirmar ou cancelar qualquer transa\xe7\xe3o inclu\xedda antes de retomar a transa\xe7\xe3o suspensa."}),"\n"]}),"\n",(0,n.jsx)(a.h4,{id:"transa\xe7\xf5es-suspensas-e-estado-do-processo",children:"Transa\xe7\xf5es suspensas e estado do processo"}),"\n",(0,n.jsxs)(a.p,{children:["O comando ",(0,n.jsx)(a.a,{href:"/docs/pt/commands/in-transaction",children:(0,n.jsx)(a.code,{children:"In transaction"})})," etorna True quando uma transa\xe7\xe3o foi iniciada, mesmo que esteja suspensa. Para saber se a transa\xe7\xe3o atual est\xe1 suspensa, \xe9 necess\xe1rio usar o comando ",(0,n.jsx)(a.a,{href:"/docs/pt/commands/active-transaction",children:(0,n.jsx)(a.code,{children:"Active transaction"})}),", que retorna False neste caso."]}),"\n",(0,n.jsxs)(a.p,{children:["Ambos os comandos, no entanto, tamb\xe9m retornam False se nenhuma transa\xe7\xe3o foi iniciada. Nesse caso, pode ser necess\xe1rio usar o comando ",(0,n.jsx)(a.a,{href:"/docs/pt/commands/transaction-level",children:(0,n.jsx)(a.code,{children:"Transaction level"})}),", que retorna 0 neste contexto (nenhuma transa\xe7\xe3o foi iniciada)."]}),"\n",(0,n.jsx)(a.p,{children:"O gr\xe1fico a seguir ilustra os diferentes contextos de transa\xe7\xe3o e os valores correspondentes retornados pelos comandos de transa\xe7\xe3o:"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.img,{src:s(942330).Z+"",width:"691",height:"304"})})]})}function u(e={}){let{wrapper:a}={...(0,r.a)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},635348:function(e,a,s){s.d(a,{Z:()=>o});let o=s.p+"assets/images/transactions-schema1-b8e1bad3d5f701207c70ba0375006274.png"},942330:function(e,a,s){s.d(a,{Z:()=>o});let o=s.p+"assets/images/transactions-schema2-aafb10d686c45336a126b62e3cb113bd.png"},328667:function(e,a,s){s.d(a,{Z:()=>o});let o=s.p+"assets/images/transactions-structure-c214a6d4a24718af8586b4af126d02bd.png"},250065:function(e,a,s){s.d(a,{Z:()=>t,a:()=>d});var o=s(667294);let n={},r=o.createContext(n);function d(e){let a=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function t(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),o.createElement(r.Provider,{value:a},e.children)}}}]);