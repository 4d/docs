"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["75169"],{556866:function(e,t,n){n.r(t),n.d(t,{default:()=>l,frontMatter:()=>i,metadata:()=>r,assets:()=>d,toc:()=>m,contentTitle:()=>s});var r=JSON.parse('{"id":"REST/imageformat","title":"$imageformat","description":"Define qu\xe9 formato de imagen utilizar para recuperar im\xe1genes (por ejemplo, $imageformat=png)","source":"@site/i18n/pt/docusaurus-plugin-content-docs/version-20-R9/REST/$imageformat.md","sourceDirName":"REST","slug":"/REST/imageformat","permalink":"/docs/pt/REST/imageformat","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20REST%2F%24imageformat.md%20(20-R9)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"20-R9","frontMatter":{"id":"imageformat","title":"$imageformat"},"sidebar":"docs","previous":{"title":"$format","permalink":"/docs/pt/REST/format"},"next":{"title":"$lock","permalink":"/docs/pt/REST/lock"}}'),o=n("785893"),a=n("250065");let i={id:"imageformat",title:"$imageformat"},s=void 0,d={},m=[{value:"Descri\xe7\xe3o",id:"descri\xe7\xe3o",level:2},{value:"Exemplo",id:"exemplo",level:2}];function c(e){let t={a:"a",code:"code",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["Define qu\xe9 formato de imagen utilizar para recuperar im\xe1genes (por ejemplo, ",(0,o.jsx)(t.code,{children:"$imageformat=png"}),")"]}),"\n",(0,o.jsx)(t.h2,{id:"descri\xe7\xe3o",children:"Descri\xe7\xe3o"}),"\n",(0,o.jsx)(t.p,{children:"Definir o formato a utilizar para mostrar imagens. Pode utilizar um dos seguintes formatos (s\xe3o suportadas extens\xf5es, tipos mime e OsType Mac):"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Tipo"}),(0,o.jsx)(t.th,{children:"Descri\xe7\xe3o"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:'"best"'}),(0,o.jsx)(t.td,{children:"Melhor formato com base na imagem"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:'".gif" ou "image/gif"'}),(0,o.jsx)(t.td,{children:"Formato GIF"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:'".png" ou "image/png"'}),(0,o.jsx)(t.td,{children:"Formato PNG"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:'".jpeg" or "image/jpeg"'}),(0,o.jsx)(t.td,{children:"Formato JPEG"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:'".tiff" ou "image/tiff"'}),(0,o.jsx)(t.td,{children:"Formato TIFF"})]})]})]}),"\n",(0,o.jsxs)(t.p,{children:["Uma vez definido o formato, \xe9 necess\xe1rio passar o atributo de imagem a ",(0,o.jsx)(t.a,{href:"/docs/pt/REST/expand",children:(0,o.jsx)(t.code,{children:"$expand"})})," para carregar completamente a fotografia."]}),"\n",(0,o.jsxs)(t.p,{children:["Se n\xe3o houver nenhuma imagem a carregar ou se o formato n\xe3o permitir que a imagem seja carregada, a resposta ser\xe1 um objeto vazio ",(0,o.jsx)(t.code,{children:"{}"}),"."]}),"\n",(0,o.jsx)(t.h2,{id:"exemplo",children:"Exemplo"}),"\n",(0,o.jsx)(t.p,{children:"O exemplo seguinte define o formato de imagem como JPEG, independentemente do tipo real da fotografia, e passa o n\xfamero de vers\xe3o real enviado pelo servidor:"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"GET  /rest/Employee(1)/photo?$imageformat=.jpeg&$version=3&$expand=photo"})})]})}function l(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},250065:function(e,t,n){n.d(t,{Z:function(){return s},a:function(){return i}});var r=n(667294);let o={},a=r.createContext(o);function i(e){let t=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);