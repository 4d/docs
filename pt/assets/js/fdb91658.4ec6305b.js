"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[80861],{603905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>c});var r=a(667294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),s=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),u=s(a),c=n,k=u["".concat(i,".").concat(c)]||u[c]||m[c]||l;return a?r.createElement(k,o(o({ref:t},d),{},{components:a})):r.createElement(k,o({ref:t},d))}));function c(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=u;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:n,o[1]=p;for(var s=2;s<l;s++)o[s]=a[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},81603:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>d});a(667294);var r=a(603905);function n(){return n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])}return e},n.apply(this,arguments)}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}const o={id:"operators",title:"Operadores"},p=void 0,i={unversionedId:"Concepts/operators",id:"version-20-R5/Concepts/operators",title:"Operadores",description:"Um operador \xe9 um s\xedmbolo ou um grupo de s\xedmbolos que \xe9 utilizado para verificar, modificar ou combinar valores. J\xe1 est\xe1 familiarizado com muitos operadores. Por ejemplo, 1 + 2 utiliza el operador de adici\xf3n (o signo m\xe1s) para sumar dos n\xfameros, y el resultado es 3. Los operadores de comparaci\xf3n, como = o >, le permiten comparar dos o m\xe1s valores.",source:"@site/i18n/pt/docusaurus-plugin-content-docs/version-20-R5/Concepts/operators.md",sourceDirName:"Concepts",slug:"/Concepts/operators",permalink:"/docs/pt/Concepts/operators",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20Concepts%2Foperators.md%20(20-R5)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R5",frontMatter:{id:"operators",title:"Operadores"},sidebar:"docs",previous:{title:"Uma visita r\xe1pida",permalink:"/docs/pt/Concepts/quick-tour"},next:{title:"Tipos de dados",permalink:"/docs/pt/Concepts/data-types"}},s={},d=[{value:"Terminologia",id:"terminologia",level:2},{value:"Operador de atribui\xe7\xe3o",id:"operador-de-atribui\xe7\xe3o",level:2},{value:"Operadores b\xe1sicos",id:"operadores-b\xe1sicos",level:2},{value:"Operadores de atribui\xe7\xe3o compostos",id:"operadores-de-atribui\xe7\xe3o-compostos",level:2},{value:"Exemplos",id:"exemplos",level:4},{value:"Operadores curto-circuito",id:"operadores-curto-circuito",level:2},{value:"Operador em curto-circuito AND (&amp;&amp;)",id:"operador-em-curto-circuito-and-",level:3},{value:"Exemplo 1",id:"exemplo-1",level:4},{value:"Exemplo 2",id:"exemplo-2",level:4},{value:"Exemplo 3",id:"exemplo-3",level:4},{value:"Operador em curto-circuito OR (||)",id:"operador-em-curto-circuito-or-",level:3},{value:"Exemplo 1",id:"exemplo-1-1",level:4},{value:"Exemplo 2",id:"exemplo-2-1",level:4},{value:"Preced\xeancia",id:"preced\xeancia",level:3},{value:"Operador tern\xe1rio",id:"operador-tern\xe1rio",level:2},{value:"Sintaxe",id:"sintaxe",level:3},{value:"Exemplos",id:"exemplos-1",level:3},{value:"Um exemplo simple",id:"um-exemplo-simple",level:4},{value:"Tratamento de dados de uma tabela",id:"tratamento-de-dados-de-uma-tabela",level:4},{value:"Truthy e falsy",id:"truthy-e-falsy",level:2}],m={toc:d};function u(e){var{components:t}=e,a=l(e,["components"]);return(0,r.kt)("wrapper",n({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Um operador \xe9 um s\xedmbolo ou um grupo de s\xedmbolos que \xe9 utilizado para verificar, modificar ou combinar valores. J\xe1 est\xe1 familiarizado com muitos operadores. Por ejemplo, ",(0,r.kt)("inlineCode",{parentName:"p"},"1 + 2")," utiliza el operador de adici\xf3n (o signo m\xe1s) para sumar dos n\xfameros, y el resultado es 3. Los operadores de comparaci\xf3n, como = o >, le permiten comparar dos o m\xe1s valores."),(0,r.kt)("p",null,"A linguagem 4D suporta os operadores que talvez j\xe1 conhe\xe7a de outras linguagens como C ou JavaScript. Sin embargo, el operador de asignaci\xf3n es ",(0,r.kt)("inlineCode",{parentName:"p"},":="),' para evitar que se utilice de forma err\xf3nea cuando el operador "igual a" (',(0,r.kt)("inlineCode",{parentName:"p"},"="),") est\xe1 planeado. ",(0,r.kt)("a",n({parentName:"p"},{href:"#basic-operators"}),"Basic operators")," such as arithmetic operators (+, -, ","*",", /, %...) and comparison operators (=, >, >=...) can be used with numbers, but also with boolean, text, date, time, pointer, or picture data types. Al igual que JavaScript, el lenguaje 4D soporta el concepto de valores ",(0,r.kt)("a",n({parentName:"p"},{href:"#truthy-and-falsy"}),"truthy y falsy"),", que se utilizan en ",(0,r.kt)("a",n({parentName:"p"},{href:"#short-circuit-operators"}),"los operadores de corto-cicrcuit"),"."),(0,r.kt)("h2",n({},{id:"terminologia"}),"Terminologia"),(0,r.kt)("p",null,"El lenguaje 4D soporta los operadores ",(0,r.kt)("strong",{parentName:"p"},"binarios")," y ",(0,r.kt)("strong",{parentName:"p"},"ternarios"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"los operadores binarios operan en dos objetivos (como ",(0,r.kt)("inlineCode",{parentName:"li"},"2 + 3"),") y aparecen entre sus dos objetivos."),(0,r.kt)("li",{parentName:"ul"},"os operadores tern\xe1rios operam em tr\xeas objectivos. Like C, 4D has only one ternary operator, the ",(0,r.kt)("a",n({parentName:"li"},{href:"#ternary-operator"}),"ternary conditional operator")," (",(0,r.kt)("inlineCode",{parentName:"li"},"a ? b : c"),").")),(0,r.kt)("p",null,"Os valores que os operadores afectam s\xe3o os operandos. En la expresi\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"1 + 2"),", el s\xedmbolo + es un operador binario y sus dos operandos son los valores 1 y 2."),(0,r.kt)("h2",n({},{id:"operador-de-atribui\xe7\xe3o"}),"Operador de atribui\xe7\xe3o"),(0,r.kt)("p",null,"El ",(0,r.kt)("strong",{parentName:"p"},"operador de asignaci\xf3n")," (",(0,r.kt)("inlineCode",{parentName:"p"},"a:=b"),") inicializa o actualiza el valor de ",(0,r.kt)("inlineCode",{parentName:"p"},"a")," con el valor de ",(0,r.kt)("inlineCode",{parentName:"p"},"b"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),'$myNumber:=3 //assigns 3 to MyNumber variable  \n$myDate:=!2018/01/21! //assigns a date literal\n$myLength:=Length("Acme") //assigns the result of the command (4) to $myLength\n$col:=New collection //$col is initialized with an empty collection\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"NO confunda el operador de asignaci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},":=")," con el operador de comparaci\xf3n de igualdad ",(0,r.kt)("inlineCode",{parentName:"p"},"="),". Se ha elegido deliberadamente un operador de asignaci\xf3n diferente (y no ",(0,r.kt)("inlineCode",{parentName:"p"},"="),") para evitar los problemas y la confusi\xf3n que suelen producirse con == o === en otros lenguajes de programaci\xf3n. Esses erros s\xe3o geralmente dif\xedceis de reconhecer pelo compilador e geram problemas trabalhosos.")),(0,r.kt)("h2",n({},{id:"operadores-b\xe1sicos"}),"Operadores b\xe1sicos"),(0,r.kt)("p",null,"Los resultados del operador dependen de los ",(0,r.kt)("strong",{parentName:"p"},"tipos de datos")," a los que se aplican. 4D soporta diferentes operadores en tipos de datos escalares. S\xe3o descritos com os tipos de dados, nas sec\xe7\xf5es seguintes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",n({parentName:"li"},{href:"/docs/pt/Concepts/boolean#logical-operators"}),(0,r.kt)("strong",{parentName:"a"},"Logical operators"))," (on ",(0,r.kt)("strong",{parentName:"li"},"boolean")," expressions)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",n({parentName:"li"},{href:"/docs/pt/Concepts/date#date-operators"}),(0,r.kt)("strong",{parentName:"a"},"Date operators"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",n({parentName:"li"},{href:"/docs/pt/Concepts/time#time-operators"}),(0,r.kt)("strong",{parentName:"a"},"Time operators"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",n({parentName:"li"},{href:"/docs/pt/Concepts/number#number-operators"}),(0,r.kt)("strong",{parentName:"a"},"Number operators"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",n({parentName:"li"},{href:"/docs/pt/Concepts/number#bitwise-operators"}),(0,r.kt)("strong",{parentName:"a"},"Bitwise operators"))," (on ",(0,r.kt)("strong",{parentName:"li"},"long integer")," expressions)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",n({parentName:"li"},{href:"/docs/pt/Concepts/picture#picture-operators"}),(0,r.kt)("strong",{parentName:"a"},"Picture operators"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",n({parentName:"li"},{href:"/docs/pt/Concepts/pointer#pointer-operators"}),(0,r.kt)("strong",{parentName:"a"},"Pointer operators"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",n({parentName:"li"},{href:"/docs/pt/Concepts/string#string-operators"}),(0,r.kt)("strong",{parentName:"a"},"String operators"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",n({parentName:"li"},{href:"/docs/pt/Concepts/null-undefined#null-operators"}),(0,r.kt)("strong",{parentName:"a"},"Null operators"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",n({parentName:"li"},{href:"/docs/pt/Concepts/null-undefined#undefined-operators"}),(0,r.kt)("strong",{parentName:"a"},"Undefined operators")))),(0,r.kt)("h2",n({},{id:"operadores-de-atribui\xe7\xe3o-compostos"}),"Operadores de atribui\xe7\xe3o compostos"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Hist\xf3ria"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Release"),(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Mudan\xe7as"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null}),"19 R4"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Adicionado"))))),(0,r.kt)("p",null,"4D ofrece ",(0,r.kt)("strong",{parentName:"p"},"operadores de asignaci\xf3n compuestos")," que combinan la asignaci\xf3n con otra operaci\xf3n. Um exemplo \xe9 o operador de atribui\xe7\xe3o de adi\xe7\xe3o (",(0,r.kt)("inlineCode",{parentName:"p"},"+="),"):"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"$a:=1 \n$a+=2 // $a=3\n")),(0,r.kt)("p",null,"S\xe3o suportados os seguintes operadores de atribui\xe7\xe3o compostos:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Operador"),(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Sintaxe"),(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Atribui\xe7\xf5es"),(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Exemplo"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Adi\xe7\xe3o"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Text += Text"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Text"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},'$t+=" World"  //$t:=$t+" World"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null})),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Number += Number"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Number"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"$n+=5 //$n:=$n+5"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null})),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Date += Number"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Date"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"$d+=5 //$d:=$d+5"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null})),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Time += Time"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Hora"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"$t1+=$t2 //$t1:=$t1+$t2"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null})),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Time += Number"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Number"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"$t1+=5 //$t1:=$t1+5"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null})),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Picture += Picture"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Imagem"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"$p1+=$p2 //$p1:=$p1+$p2 (add $p2 to the right of $p1)"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null})),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Picture += Number"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Imagem"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"$p1+=5 //$p1:=$p1+5 (move $p1 horizontally 5 pixels to the right)"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Subtra\xe7\xe3o"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Number -= Number"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Number"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"$n-=5 //$n:=$n-5"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null})),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Date -= Number"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Date"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"$d-=5 //$d:=$d-5"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null})),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Time -= Time"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Hora"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"$t1-=$t2 //$t1:=$t1-$t2"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null})),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Time -= Number"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Number"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"$t1-=5 //$t1:=$t1-5"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null})),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Picture -= Number"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Imagem"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"$p1-=5 //$p1:=$p1-5 (mover horizontalmente $p1 5 pixels para a esquerda)"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Divis\xe3o"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Number /= Number"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Number"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"$n/=5 //$n:=$n/5"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null})),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Time /= Time"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Hora"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"$t1/=$t2 //$t1:=$t1/$t2"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null})),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Time /= Number"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Number"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"$t1/=5 //$t1:=$t1/5"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null})),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Picture /= Picture"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Imagem"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"$p1/=$p2 //$p1:=$p1/$p2 (adicione $p2 ao fundo de $p1)"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null})),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Picture /= Number"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Imagem"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"$p1/=5 //$p1:=$p1/5 (mover $p1 verticalmente 5 pixels)"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Multiplica\xe7\xe3o"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Text ","*","= Number"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Text"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},'$t*="abc"  //$t:=$t*"abc"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null})),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Number ","*","= Number"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Number"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"$n*=5 //$n:=$n*5"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null})),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Time ","*","= Time"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Hora"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"$t1*=$t2 //$t1:=$t1*$t2"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null})),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Time ","*","= Number"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Number"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"$t1*=5 //$t1:=$t1*5"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null})),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Picture ","*","= Number"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Imagem"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"$p1*=5 //$p1:=$p1*5 (redimensionar $p1 por 5)"))))),(0,r.kt)("p",null,"Estos operadores se aplican a todas las ",(0,r.kt)("a",n({parentName:"p"},{href:"/docs/pt/Concepts/quick-tour#assignable-vs-non-assignable-expressions"}),"expresiones asignables")," (excepto de las im\xe1genes como propiedades de objeto o elementos de colecci\xf3n)."),(0,r.kt)("p",null,'La operaci\xf3n "source ',(0,r.kt)("inlineCode",{parentName:"p"},"operator"),' value" no es estrictamente equivalente a "source := source ',(0,r.kt)("inlineCode",{parentName:"p"},"operator"),' value" porque la expresi\xf3n que designa la fuente (variable, campo, propiedad del objeto, elemento de colecci\xf3n) s\xf3lo se eval\xfaa una vez. Por ejemplo, en una expresi\xf3n tal como ',(0,r.kt)("inlineCode",{parentName:"p"},"getPointer()->+=1")," el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"getPointer")," es llamado s\xf3lo una vez."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",n({parentName:"p"},{href:"/docs/pt/Concepts/string#character-reference-symbols"}),"La indexaci\xf3n de caracteres en el texto")," y ",(0,r.kt)("a",n({parentName:"p"},{href:"/docs/pt/Concepts/blob#accessing-a-scalar-blobs-bytes"}),"la indexaci\xf3n de bytes en el blob")," no soporta a estos operadores.")),(0,r.kt)("h4",n({},{id:"exemplos"}),"Exemplos"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),'// Addition\n$x:=2\n$x+=5 //$x=7\n\n$t:="Hello" \n$t+=" World" //$t="Hello World" \n\n$d:=!2000-11-10!\n$d+=10 //$d=!2000-11-20!\n\n// Subtraction\n$x1:=10\n$x1-=5 //$x1=5\n\n$d1:=!2000-11-10!\n$d1-=10 // $d1=!2000-10-31!\n\n// Division\n$x3:=10\n$x3/=2 // $x3=5\n\n\n// Multiplication\n$x2:=10\n$x2*=5 // $x2=10\n\n$t2:="Hello" \n$t2*=2 // $t2="HelloHello"\n\n')),(0,r.kt)("h2",n({},{id:"operadores-curto-circuito"}),"Operadores curto-circuito"),(0,r.kt)("p",null,"Los operadores ",(0,r.kt)("strong",{parentName:"p"},"&&")," y ",(0,r.kt)("strong",{parentName:"p"},"||")," son los ",(0,r.kt)("strong",{parentName:"p"},"operadores en cortocircuito"),". Um operador de curto-circuito \xe9 aquele que n\xe3o avalia necessariamente todos os seus operandos."),(0,r.kt)("p",null,"The difference with the single ",(0,r.kt)("a",n({parentName:"p"},{href:"/docs/pt/Concepts/boolean#logical-operators"}),(0,r.kt)("strong",{parentName:"a"},"&")," and ",(0,r.kt)("strong",{parentName:"a"},"|")," boolean operators")," is that the short-circuit operators ",(0,r.kt)("strong",{parentName:"p"},"&&")," and ",(0,r.kt)("strong",{parentName:"p"},"||")," don't return a boolean value. Eval\xfaan las expresiones como ",(0,r.kt)("a",n({parentName:"p"},{href:"#truthy-and-falsy"}),"truthy o falsy"),", y luego devuelven una de las expresiones."),(0,r.kt)("h3",n({},{id:"operador-em-curto-circuito-and-"}),"Operador em curto-circuito AND (&&)"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Hist\xf3ria"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Release"),(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Mudan\xe7as"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null}),"19 R4"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Adicionado"))))),(0,r.kt)("p",null,"A regra \xe9 a seguinte:"),(0,r.kt)("p",null,"Dado ",(0,r.kt)("inlineCode",{parentName:"p"},"Expr1 && Expr2"),":"),(0,r.kt)("p",null,"El operador en cortocircuito AND eval\xfaa los operandos de izquierda a derecha, devolviendo inmediatamente el valor del primer operando falso que encuentra; si todos los valores son ",(0,r.kt)("a",n({parentName:"p"},{href:"#truthy-and-falsy"}),"truthy"),", se devuelve el valor del \xfaltimo operando."),(0,r.kt)("p",null,"La siguiente tabla resume los diferentes casos para el operador ",(0,r.kt)("strong",{parentName:"p"},"&&"),":"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Expr1"),(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Expr2"),(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Valor devolvido"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null}),"truthy"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"truthy"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Expr2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null}),"truthy"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"falsy"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Expr2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null}),"falsy"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"truthy"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Expr1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null}),"falsy"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"falsy"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Expr1")))),(0,r.kt)("h4",n({},{id:"exemplo-1"}),"Exemplo 1"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),'var $v : Variant\n\n$v:= "Hello" && "World" //"World"\n$v:=False && 0 // False\n$v:=0 && False // False\n$v:=5 && !00-00-00! // 00/00/00\n$v := 5 && 10 && "hello" //"hello"\n')),(0,r.kt)("h4",n({},{id:"exemplo-2"}),"Exemplo 2"),(0,r.kt)("p",null,"Digamos que tem uma loja online e que alguns produtos t\xeam uma taxa de imposto aplicada e outros n\xe3o."),(0,r.kt)("p",null,"Para calcular o imposto, multiplica-se o pre\xe7o pela taxa de imposto, que pode n\xe3o ter sido especificada."),(0,r.kt)("p",null,"Portanto, pode escrever isto:"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"var $tax : Variant\n\n$tax:=$item.taxRate && ($item.price*$item.taxRate)\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"$tax")," sera NULL si taxRate es NULL (o indefinido), de lo contrario almacenar\xe1 el resultado del c\xe1lculo."),(0,r.kt)("h4",n({},{id:"exemplo-3"}),"Exemplo 3"),(0,r.kt)("p",null,"Os operadores de curto-circuito s\xe3o \xfateis em provas como:"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"If(($myObject#Null) && ($myObject.value>10))\n    //code\nEnd if\n")),(0,r.kt)("p",null,"Se $myObject for nulo, o segundo argumento n\xe3o \xe9 executado e, por conseguinte, n\xe3o \xe9 lan\xe7ado qualquer erro."),(0,r.kt)("h3",n({},{id:"operador-em-curto-circuito-or-"}),"Operador em curto-circuito OR (||)"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Hist\xf3ria"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Release"),(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Mudan\xe7as"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null}),"19 R4"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Adicionado"))))),(0,r.kt)("p",null,'O operador || devolve o valor de um dos operandos especificados. A express\xe3o \xe9 avaliada da esquerda para a direita e testada para uma poss\xedvel avalia\xe7\xe3o de "curto-circuito" utilizando a seguinte regra:'),(0,r.kt)("p",null,"Dado ",(0,r.kt)("inlineCode",{parentName:"p"},"Expr1 || Expr2"),":"),(0,r.kt)("p",null,"Si Expr1 es ",(0,r.kt)("a",n({parentName:"p"},{href:"#truthy-and-falsy"}),"truthy"),", Expr2 no se eval\xfaa y el c\xe1lculo devuelve Expr1."),(0,r.kt)("p",null,"Si Expr1 es ",(0,r.kt)("a",n({parentName:"p"},{href:"#truthy-and-falsy"}),"falsy"),", el c\xe1lculo devuelve Expr2."),(0,r.kt)("p",null,"La siguiente tabla resume los diferentes casos y el valor devuelto por el operador ",(0,r.kt)("strong",{parentName:"p"},"||"),":"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Expr1"),(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Expr2"),(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Valor devolvido"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null}),"truthy"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"truthy"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Expr1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null}),"truthy"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"falsy"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Expr1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null}),"falsy"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"truthy"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Expr2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null}),"falsy"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"falsy"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Expr2")))),(0,r.kt)("h4",n({},{id:"exemplo-1-1"}),"Exemplo 1"),(0,r.kt)("p",null,"Digamos que tem uma tabela chamada Employee. Alguns empregados introduziram um n\xfamero de telefone e outros n\xe3o. Esto significa que ",(0,r.kt)("inlineCode",{parentName:"p"},"$emp.phone")," podr\xeda ser NULL, y no se puede asignar NULL a una variable texto. Mas pode escrever o seguinte:"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),'var $phone : Text\n\n$phone:=$emp.phone || "n/a"\n')),(0,r.kt)("p",null,"En este caso, ",(0,r.kt)("inlineCode",{parentName:"p"},"$phone"),' almacenar\xe1 un n\xfamero de tel\xe9fono o la cadena "n/a".'),(0,r.kt)("h4",n({},{id:"exemplo-2-1"}),"Exemplo 2"),(0,r.kt)("p",null,"Dada una tabla llamada Person con un campo ",(0,r.kt)("em",{parentName:"p"},"name"),", as\xed como un campo ",(0,r.kt)("em",{parentName:"p"},"maiden name")," para las mujeres casadas."),(0,r.kt)("p",null,"O exemplo seguinte verifica se existe um nome de solteira e armazena-o numa vari\xe1vel; caso contr\xe1rio, armazena simplesmente o nome da pessoa:"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"var $name: Text\n\n$name:=$person.maidenName || $person.name\n")),(0,r.kt)("h3",n({},{id:"preced\xeancia"}),"Preced\xeancia"),(0,r.kt)("p",null,"Los operadores ",(0,r.kt)("inlineCode",{parentName:"p"},"&&")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"||")," tienen la misma prioridad que los operadores l\xf3gicos ",(0,r.kt)("inlineCode",{parentName:"p"},"&")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"|"),", y se eval\xfaan de izquierda a derecha."),(0,r.kt)("p",null,"Esto significa que ",(0,r.kt)("inlineCode",{parentName:"p"},"a || b && c")," se eval\xfaa como ",(0,r.kt)("inlineCode",{parentName:"p"},"(a || b) && c"),"."),(0,r.kt)("h2",n({},{id:"operador-tern\xe1rio"}),"Operador tern\xe1rio"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Hist\xf3ria"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Release"),(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Mudan\xe7as"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null}),"19 R4"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Adicionado"))))),(0,r.kt)("p",null,"O operador condicional tern\xe1rio permite-lhe escrever express\xf5es condicionais de uma linha. Por ejemplo, puede reemplazar una secuencia completa de instrucciones ",(0,r.kt)("a",n({parentName:"p"},{href:"/docs/pt/Concepts/control-flow#ifelseend-if"}),"If\u2026Else"),"."),(0,r.kt)("p",null,"Aceita tr\xeas operandos na seguinte ordem:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"uma condi\xe7\xe3o seguida de um ponto de interroga\xe7\xe3o (?)"),(0,r.kt)("li",{parentName:"ul"},"una expresi\xf3n a ejecutar si la condici\xf3n es ",(0,r.kt)("a",n({parentName:"li"},{href:"#truthy-and-falsy"}),"truthy"),", seguida de dos puntos (:)"),(0,r.kt)("li",{parentName:"ul"},"una expresi\xf3n a ejecutar si la condici\xf3n es ",(0,r.kt)("a",n({parentName:"li"},{href:"#truthy-and-falsy"}),"falsy"))),(0,r.kt)("h3",n({},{id:"sintaxe"}),"Sintaxe"),(0,r.kt)("p",null,"A sintaxe \xe9 a seguinte:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"condition ? exprIfTruthy : exprIfFalsy")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Dado que la ",(0,r.kt)("a",n({parentName:"p"},{href:"https://doc.4d.com/4Dv19/4D/19.5/Using-tokens-in-formulas.300-6136716.en.html"}),"sintaxis con tokens")," utiliza dos puntos, se recomienda insertar un espacio despu\xe9s de los dos puntos ",(0,r.kt)("inlineCode",{parentName:"p"},":")," o encerrar los tokens utilizando par\xe9ntesis para evitar cu")),(0,r.kt)("h3",n({},{id:"exemplos-1"}),"Exemplos"),(0,r.kt)("h4",n({},{id:"um-exemplo-simple"}),"Um exemplo simple"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),'var $age : Integer\nvar $beverage : Text\n\n$age:=26\n$beverage:=($age>=21) ? "Beer" : "Juice"\n\nALERT($beverage) // "Beer"\n')),(0,r.kt)("h4",n({},{id:"tratamento-de-dados-de-uma-tabela"}),"Tratamento de dados de uma tabela"),(0,r.kt)("p",null,"Este exemplo armazena o nome completo de uma pessoa numa vari\xe1vel e trata do caso em que n\xe3o foi especificado o primeiro nome ou o \xfaltimo nome:"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),'var $fullname : Text\n\n// If one of the names is missing, store the one that exists, otherwise store an empty string\n$fullname:=($person.firstname && $person.lastname) ? ($person.firstname+" "+$person.lastname) : ($person.lastname || $person.firstname) || ""\n')),(0,r.kt)("h2",n({},{id:"truthy-e-falsy"}),"Truthy e falsy"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Hist\xf3ria"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Release"),(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Mudan\xe7as"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null}),"19 R4"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Adicionado"))))),(0,r.kt)("p",null,"Adem\xe1s de un tipo, cada valor tambi\xe9n tiene un valor booleano inherente, conocido generalmente como ",(0,r.kt)("strong",{parentName:"p"},"truthy")," o ",(0,r.kt)("strong",{parentName:"p"},"falsy<"),"."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Los valores ",(0,r.kt)("strong",{parentName:"p"},"truthy")," y ",(0,r.kt)("strong",{parentName:"p"},"falsy")," s\xf3lo son evaluados por los operadores ",(0,r.kt)("a",n({parentName:"p"},{href:"#short-circuit-operators"}),"en cortocircuito")," y ",(0,r.kt)("a",n({parentName:"p"},{href:"#ternary-operator"}),"ternarios"),".")),(0,r.kt)("p",null,"Los siguientes valores son ",(0,r.kt)("strong",{parentName:"p"},"falsy"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"false"),(0,r.kt)("li",{parentName:"ul"},"Null"),(0,r.kt)("li",{parentName:"ul"},"indefinido"),(0,r.kt)("li",{parentName:"ul"},"Null object"),(0,r.kt)("li",{parentName:"ul"},"Null collection"),(0,r.kt)("li",{parentName:"ul"},"Null pointer"),(0,r.kt)("li",{parentName:"ul"},"Null picture"),(0,r.kt)("li",{parentName:"ul"},"Null date !00-00-00!"),(0,r.kt)("li",{parentName:"ul"},'"" - Empty strings'),(0,r.kt)("li",{parentName:"ul"},"[] - Colec\xe7\xf5es vazias"),(0,r.kt)("li",{parentName:"ul"},"{} - Objectos vazios")),(0,r.kt)("p",null,"Todos los dem\xe1s valores se consideran ",(0,r.kt)("strong",{parentName:"p"},"truthy"),", incluyendo:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"0 - zero num\xe9rico (inteiro ou n\xe3o)")),(0,r.kt)("p",null,"En 4D, la evaluaci\xf3n ",(0,r.kt)("strong",{parentName:"p"},"truthy")," y ",(0,r.kt)("strong",{parentName:"p"},"falsy")," refleja la ",(0,r.kt)("strong",{parentName:"p"},"usabilidad")," de un valor, lo que significa que un valor truthy existe y puede ser procesado por el c\xf3digo sin generar errores o resultados inesperados. La raz\xf3n de ser de esto es ofrecer una forma conveniente de manejar valores ",(0,r.kt)("em",{parentName:"p"},"undefined")," y ",(0,r.kt)("em",{parentName:"p"},"null")," en objetos y colecciones, de modo que un n\xfamero reducido de instrucciones ",(0,r.kt)("a",n({parentName:"p"},{href:"/docs/pt/Concepts/control-flow#ifelseend-if"}),"If\u2026Else")," sean necesarias para evitar errores de ejecu"),(0,r.kt)("p",null,"Por ejemplo, cuando se utiliza un operador en ",(0,r.kt)("a",n({parentName:"p"},{href:"#short-circuit-or-operator-"}),"cortocircuito OR"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"$value:=$object.value || $defaultValue\n")),(0,r.kt)("p",null,"... you get the default value whenever ",(0,r.kt)("em",{parentName:"p"},"$object")," does not contain the ",(0,r.kt)("inlineCode",{parentName:"p"},"value")," property OR when it is ",(0,r.kt)("em",{parentName:"p"},"null"),". Assim, este operador verifica a exist\xeancia ou a possibilidade de utiliza\xe7\xe3o do valor em vez de um valor espec\xedfico. Obs\xe9rvese que como el valor num\xe9rico 0 existe y es utilizable, no se le da un tratamiento especial, por lo que es ",(0,r.kt)("strong",{parentName:"p"},"truthy"),"."),(0,r.kt)("p",null,'En cuanto a los valores que representan las colecciones, los objetos o las cadenas, los valores "vac\xedos" se consideran como ',(0,r.kt)("strong",{parentName:"p"},"falsy"),". \xc9 \xfatil quando se pretende atribuir um valor por defeito sempre que se encontra um valor vazio."),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),'$phone:=$emp.phone || "n/a"\n')))}u.isMDXComponent=!0}}]);