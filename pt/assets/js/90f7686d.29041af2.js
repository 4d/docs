"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[71020],{603905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>u});var n=a(667294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),d=p(a),u=r,k=d["".concat(l,".").concat(u)]||d[u]||c[u]||o;return a?n.createElement(k,s(s({ref:t},m),{},{components:a})):n.createElement(k,s({ref:t},m))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var p=2;p<o;p++)s[p]=a[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},894661:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>m});a(667294);var n=a(603905);function r(){return r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},r.apply(this,arguments)}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}const s={id:"identifiers",title:"Identificadores"},i=void 0,l={unversionedId:"Concepts/identifiers",id:"version-20-R5/Concepts/identifiers",title:"Identificadores",description:"Esta se\xe7\xe3o descreve as conven\xe7\xf5es e regras para nomear os v\xe1rios elementos da linguagem 4D (vari\xe1veis, tabelas, objetos, formul\xe1rios, etc)",source:"@site/i18n/pt/docusaurus-plugin-content-docs/version-20-R5/Concepts/identifiers.md",sourceDirName:"Concepts",slug:"/Concepts/identifiers",permalink:"/docs/pt/Concepts/identifiers",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20Concepts%2Fidentifiers.md%20(20-R5)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R5",frontMatter:{id:"identifiers",title:"Identificadores"},sidebar:"docs",previous:{title:"Plug-ins",permalink:"/docs/pt/Concepts/plug-ins"},next:{title:"Pathnames",permalink:"/docs/pt/Concepts/paths"}},p={},m=[{value:"Arrays",id:"arrays",level:2},{value:"Classes",id:"classes",level:2},{value:"Fun\xe7\xf5es",id:"fun\xe7\xf5es",level:2},{value:"Propriedades dos objectos",id:"propriedades-dos-objectos",level:2},{value:"Par\xe2metros",id:"par\xe2metros",level:2},{value:"M\xe9todos projeto",id:"m\xe9todos-projeto",level:2},{value:"Tabela",id:"tabela",level:2},{value:"Vari\xe1veis.",id:"vari\xe1veis",level:2},{value:"Outros nomes",id:"outros-nomes",level:2}],c={toc:m};function d(e){var{components:t}=e,a=o(e,["components"]);return(0,n.kt)("wrapper",r({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Esta se\xe7\xe3o descreve as conven\xe7\xf5es e regras para nomear os v\xe1rios elementos da linguagem 4D (vari\xe1veis, tabelas, objetos, formul\xe1rios, etc)"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Se forem utilizados caracteres n\xe3o romanos nos nomes dos identificadores, o seu comprimento m\xe1ximo pode ser inferior.")),(0,n.kt)("h2",r({},{id:"arrays"}),"Arrays"),(0,n.kt)("p",null,"Array names follow the same rules as ",(0,n.kt)("a",r({parentName:"p"},{href:"#variables"}),"variables"),"."),(0,n.kt)("h2",r({},{id:"classes"}),"Classes"),(0,n.kt)("p",null,"Um nome de processo pode conter at\xe9 31 caracteres."),(0,n.kt)("p",null,"A class name must be compliant with standard ",(0,n.kt)("a",r({parentName:"p"},{href:"#object-properties"}),"property naming rules")," for dot notation."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Giving the same name to a class and a ",(0,n.kt)("a",r({parentName:"p"},{href:"#tables"}),"database table")," is not recommended, in order to prevent any conflict.")),(0,n.kt)("h2",r({},{id:"fun\xe7\xf5es"}),"Fun\xe7\xf5es"),(0,n.kt)("p",null,"Function names must be compliant with standard ",(0,n.kt)("a",r({parentName:"p"},{href:"#object-properties"}),"property naming rules")," for dot notation."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("strong",{parentName:"p"},"Tip:"),' Starting the function name with an underscore character ("_") will exclude the function from the autocompletion features in the 4D code editor.')),(0,n.kt)("h2",r({},{id:"propriedades-dos-objectos"}),"Propriedades dos objectos"),(0,n.kt)("p",null,"The name of an object property (also called object ",(0,n.kt)("em",{parentName:"p"},"attribute"),") can contain up to 255 characters."),(0,n.kt)("p",null,"As propriedades dos objetos podem fazer refer\xeancia a valores escalares, elementos ORDA, fun\xe7\xf5es de classe, outros objetos, etc. Whatever their nature, object property names must follow the following rules ",(0,n.kt)("strong",{parentName:"p"},"if you want to use the ",(0,n.kt)("a",r({parentName:"strong"},{href:"/docs/pt/Concepts/object#object-properties"}),"dot notation")),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'Um nome deve come\xe7ar por um caractere alfab\xe9tico, um subscrito ou um sinal de d\xf3lar ("$") (lembre que um sinal de d\xf3lar pode denotar um elemento local, ver abaixo).'),(0,n.kt)("li",{parentName:"ul"},'Depois disso, o nome pode incluir caracteres alfab\xe9ticos, num\xe9ricos, o caractere espa\xe7o e o caractere de sublinhado/tra\xe7o baixo ("_") .'),(0,n.kt)("li",{parentName:"ul"},"Os nomes s\xe3o sens\xedveis \xe0s mai\xfasculas e min\xfasculas.")),(0,n.kt)("p",null,"Exemplos:"),(0,n.kt)("pre",null,(0,n.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'myObject.myAttribute:="10"\n$value:=$clientObj.data.address.city\n')),(0,n.kt)("admonition",r({},{type:"tip"}),(0,n.kt)("p",{parentName:"admonition"},'Come\xe7ar o nome de uma propriedade de objecto com um car\xe1cter de sublinhado ("_") excluir\xe1 a propriedade das funcionalidades de preenchimento autom\xe1tico no editor de c\xf3digo 4D. For example, if you declare ',(0,n.kt)("inlineCode",{parentName:"p"},"$o._myPrivateProperty"),", it will not be proposed in the code editor when you type in ",(0,n.kt)("inlineCode",{parentName:"p"},'"$o. "'),".")),(0,n.kt)("p",null,"See also ",(0,n.kt)("a",r({parentName:"p"},{href:"https://www.ecma-international.org/ecma-262/5.1/#sec-7.6"}),"ECMA Script standard"),"."),(0,n.kt)("admonition",r({},{type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"If you use ",(0,n.kt)("strong",{parentName:"p"},"string notation")," within square brackets, property names can contain any characters (ex: ",(0,n.kt)("inlineCode",{parentName:"p"},'myObject["1. First property"]'),").")),(0,n.kt)("h2",r({},{id:"par\xe2metros"}),"Par\xe2metros"),(0,n.kt)("p",null,"Parameter names must start with a ",(0,n.kt)("inlineCode",{parentName:"p"},"$")," character and follow the same rules as ",(0,n.kt)("a",r({parentName:"p"},{href:"#variables"}),"variable names"),"."),(0,n.kt)("p",null,"Exemplos:"),(0,n.kt)("pre",null,(0,n.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"Function getArea($width : Integer; $height : Integer)-> $area : Integer\n\n#DECLARE ($i : Integer ; $param : Date) -> $myResult : Object\n")),(0,n.kt)("h2",r({},{id:"m\xe9todos-projeto"}),"M\xe9todos projeto"),(0,n.kt)("p",null,"Um m\xe9todo projeto (procedimento ou fun\xe7\xe3o) se designa utilizando seu nome. Um nome de m\xe9todo pode conter at\xe9 31 caracteres."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Um nome de m\xe9todo projecto deve come\xe7ar com uma letra, um d\xedgito, ou um sublinhado"),(0,n.kt)("li",{parentName:"ul"},'A partir da\xed, o nome pode incluir qualquer letra ou d\xedgito, o car\xe1cter de sublinhado ("_") ou o car\xe1cter de espa\xe7o.'),(0,n.kt)("li",{parentName:"ul"},"Do not use reserved names, i.e. 4D command names (",(0,n.kt)("inlineCode",{parentName:"li"},"Date"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"Time"),", etc), keywords (",(0,n.kt)("inlineCode",{parentName:"li"},"If"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"For"),", etc.), or constant names (",(0,n.kt)("inlineCode",{parentName:"li"},"Euro"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"Black"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"Friday"),", etc.)."),(0,n.kt)("li",{parentName:"ul"},"Os nomes dos m\xe9todos projecto s\xe3o insens\xedveis a mai\xfasculas e min\xfasculas.")),(0,n.kt)("p",null,"Exemplos:"),(0,n.kt)("pre",null,(0,n.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"If(New client)\nDELETE DUPLICATED VALUES APPLY TO SELECTION([Employees];INCREASE SALARIES)\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Tip:")," It is a good programming technique to adopt the same naming convention as the one used by 4D for built-in methods. Use mai\xfasculas para nomear seus m\xe9todos, entretanto, se um m\xe9todo for uma fun\xe7\xe3o, coloque em mai\xfasculas o primeiro caractere de seu nome. Dessa maneira, quando reabrir um banco de dados para manuten\xe7\xe3o depois de alguns meses, j\xe1 saber\xe1 se um m\xe9todo retorna um resultado, simplesmente olhando seu nome na janela do Explorer."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Quando chamar um m\xe9todo, apenas digite seu nome. However, some 4D built-in commands, such as ",(0,n.kt)("inlineCode",{parentName:"p"},"ON EVENT CALL"),", as well as all plug-in commands, expect the name of a method as a string when a method parameter is passed.")),(0,n.kt)("p",null,"Exemplos:"),(0,n.kt)("pre",null,(0,n.kt)("code",r({parentName:"pre"},{className:"language-4d"}),' //This command expects a method (function) or formula\nQUERY BY FORMULA([aTable];Special query)\n //This command expects a method (procedure) or statement\nAPPLY TO SELECTION([Employees];INCREASE SALARIES)\n //But this command expects a method name\nON EVENT CALL("HANDLE EVENTS")\n')),(0,n.kt)("h2",r({},{id:"tabela"}),"Tabela"),(0,n.kt)("p",null,"Uma tabela se designa colocando seu nome entre par\xeanteses: ","[...]",". Um nome de tabela pode conter at\xe9 31 caracteres."),(0,n.kt)("p",null,"O nome do campo segue imediatamene o nome da tabela. Um nome campo pode conter at\xe9 31 caracteres."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'O nome de uma tabela ou de um campo deve come\xe7ar por uma letra, um sublinhado ou um d\xf3lar ("$")'),(0,n.kt)("li",{parentName:"ul"},'Depois disso, o nome pode incluir caracteres alfab\xe9ticos, num\xe9ricos, o caractere espa\xe7o e o caractere de sublinhado/tra\xe7o baixo ("_") .'),(0,n.kt)("li",{parentName:"ul"},"Do not use reserved names, i.e. 4D command names (",(0,n.kt)("inlineCode",{parentName:"li"},"Date"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"Time"),", etc), keywords (",(0,n.kt)("inlineCode",{parentName:"li"},"If"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"For"),", etc.), or constant names (",(0,n.kt)("inlineCode",{parentName:"li"},"Euro"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"Black"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"Friday"),", etc.)."),(0,n.kt)("li",{parentName:"ul"},"Nomes n\xe3o devem incluir palavras chave SQL (comando, atributo, etc).")),(0,n.kt)("p",null,"Exemplos:"),(0,n.kt)("pre",null,(0,n.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'FORM SET INPUT([Clients];"Entry")\nADD RECORD([Letters])\n[Orders]Total:=Sum([Line]Amount)\nQUERY([Clients];[Clients]Name="Smith")\n[Letters]Text:=Capitalize text([Letters]Text)\n\n')),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Giving the same name to a table and a ",(0,n.kt)("a",r({parentName:"p"},{href:"#classes"}),"class")," is not recommended, in order to prevent any conflict.")),(0,n.kt)("h2",r({},{id:"vari\xe1veis"}),"Vari\xe1veis."),(0,n.kt)("p",null,"The name of a variable can be up to 31 characters, not including the scope symbols (",(0,n.kt)("inlineCode",{parentName:"p"},"$")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"<>"),")."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'A variable name must begin with a letter, an underscore, or a dollar ("$") for ',(0,n.kt)("a",r({parentName:"li"},{href:"/docs/pt/Concepts/parameters"}),"parameters")," and ",(0,n.kt)("a",r({parentName:"li"},{href:"/docs/pt/Concepts/variables#local-variables"}),"local variables"),", or ",(0,n.kt)("inlineCode",{parentName:"li"},"<>")," for ",(0,n.kt)("a",r({parentName:"li"},{href:"/docs/pt/Concepts/variables#interprocess-variables"}),"interprocess variables"),"."),(0,n.kt)("li",{parentName:"ul"},"A digit as first character is allowed but not recommended, and is not supported by the ",(0,n.kt)("a",r({parentName:"li"},{href:"/docs/pt/Concepts/variables#using-the-var-keyword"}),(0,n.kt)("inlineCode",{parentName:"a"},"var")," declaration syntax"),"."),(0,n.kt)("li",{parentName:"ul"},'A partir da\xed, o nome pode incluir qualquer letra ou d\xedgito e o car\xe1cter de sublinhado ("_").'),(0,n.kt)("li",{parentName:"ul"},"Space character is allowed but not recommended, and is not supported by the ",(0,n.kt)("a",r({parentName:"li"},{href:"/docs/pt/Concepts/variables#using-the-var-keyword"}),(0,n.kt)("inlineCode",{parentName:"a"},"var")," declaration syntax"),"."),(0,n.kt)("li",{parentName:"ul"},"Do not use reserved names, i.e. 4D command names (",(0,n.kt)("inlineCode",{parentName:"li"},"Date"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"Time"),", etc), keywords (",(0,n.kt)("inlineCode",{parentName:"li"},"If"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"For"),", etc.), or constant names (",(0,n.kt)("inlineCode",{parentName:"li"},"Euro"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"Black"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"Friday"),", etc.)."),(0,n.kt)("li",{parentName:"ul"},"O nome de uma vari\xe1vel interprocessada pode ter at\xe9 31 caracteres, n\xe3o incluindo os s\xedmbolos ",(0,n.kt)("code",null,"<",">")," .")),(0,n.kt)("p",null,"Exemplos:"),(0,n.kt)("pre",null,(0,n.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'For($vlRecord;1;100) //local variable\n$vsMyString:="Hello there" //local variable\nvar $vName; $vJob : Text //local variales \nIf(bValidate=1) //process variable\n<>vlProcessID:=Current process() //interprocess variable\n')),(0,n.kt)("h2",r({},{id:"outros-nomes"}),"Outros nomes"),(0,n.kt)("p",null,"In the 4D language, several elements have their names handled as strings: ",(0,n.kt)("strong",{parentName:"p"},"forms"),", ",(0,n.kt)("strong",{parentName:"p"},"form objects"),", ",(0,n.kt)("strong",{parentName:"p"},"named selections"),", ",(0,n.kt)("strong",{parentName:"p"},"processes"),", ",(0,n.kt)("strong",{parentName:"p"},"sets"),", ",(0,n.kt)("strong",{parentName:"p"},"menu bars"),", etc."),(0,n.kt)("p",null,"Such string names can contain up to 255 characters, not including the ",(0,n.kt)("inlineCode",{parentName:"p"},"$")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"<>")," characters (if any)."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Os nomes das cadeias de caracteres podem conter quaisquer caracteres."),(0,n.kt)("li",{parentName:"ul"},"Os caracteres de espa\xe7o n\xe3o est\xe3o permitidos.")),(0,n.kt)("p",null,"Exemplos:"),(0,n.kt)("pre",null,(0,n.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'DIALOG([Storage];"Note box"+String($vlStage))\nOBJECT SET FONT(*;"Binfo";"Times")\nUSE NAMED SELECTION([Customers];"Closed")//Process Named Selection\nUSE NAMED SELECTION([Customers];"<>ByZipcode") //Interprocess Named Selection\n //Starting the global process "Add Customers"\n$vlProcessID:=New process("P_ADD_CUSTOMERS";48*1024;"Add Customers")\n //Starting the local process "$Follow Mouse Moves"\n$vlProcessID:=New process("P_MOUSE_SNIFFER";16*1024;"$Follow Mouse Moves")\nCREATE SET([Customers];"Customer Orders")//Process set\nUSE SET("<>Deleted Records") //Interprocess set\nIf(Records in set("$Selection"+String($i))>0) //Client set\n\n')))}d.isMDXComponent=!0}}]);