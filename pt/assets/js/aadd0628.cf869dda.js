"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[13841],{466957:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>t,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>d,toc:()=>l});var a=n(474848),r=n(28453);const s={id:"listbox-insert-column",title:"LISTBOX INSERT COLUMN",slug:"/commands/listbox-insert-column",displayed_sidebar:"docs"},i=void 0,d={id:"commands-legacy/listbox-insert-column",title:"LISTBOX INSERT COLUMN",description:"LISTBOX INSERT COLUMN ( { ;} objeto ; posi\xe7aoCol ; nomeColuna ; variavelCol ; nomeCabe ; varTitulo {; nomRodap\xe9 ; nomeVar*} )",source:"@site/i18n/pt/docusaurus-plugin-content-docs/version-20-R7/commands-legacy/listbox-insert-column.md",sourceDirName:"commands-legacy",slug:"/commands/listbox-insert-column",permalink:"/docs/pt/commands/listbox-insert-column",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Flistbox-insert-column.md%20(20-R7)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R7",frontMatter:{id:"listbox-insert-column",title:"LISTBOX INSERT COLUMN",slug:"/commands/listbox-insert-column",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"LISTBOX GET TABLE SOURCE",permalink:"/docs/pt/commands/listbox-get-table-source"},next:{title:"LISTBOX INSERT COLUMN FORMULA",permalink:"/docs/pt/commands/listbox-insert-column-formula"}},t={},l=[{value:"Descri\xe7\xe3o",id:"descri\xe7\xe3o",level:4},{value:"Dynamic insertion",id:"dynamic-insertion",level:5},{value:"Exemplo 1",id:"exemplo-1",level:4},{value:"Exemplo 2",id:"exemplo-2",level:4},{value:"Exemplo 3",id:"exemplo-3",level:4},{value:"Ver tamb\xe9m",id:"ver-tamb\xe9m",level:4}];function c(e){const o={a:"a",br:"br",code:"code",em:"em",h4:"h4",h5:"h5",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.strong,{children:"LISTBOX INSERT COLUMN"})," ( {* ;} ",(0,a.jsx)(o.em,{children:"objeto"})," ; ",(0,a.jsx)(o.em,{children:"posi\xe7aoCol"})," ; ",(0,a.jsx)(o.em,{children:"nomeColuna"})," ; ",(0,a.jsx)(o.em,{children:"variavelCol"})," ; ",(0,a.jsx)(o.em,{children:"nomeCabe"})," ; ",(0,a.jsx)(o.em,{children:"varTitulo"})," {; ",(0,a.jsx)(o.em,{children:"nomRodap\xe9"})," ; ",(0,a.jsx)(o.em,{children:"nomeVar"}),"} )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(o.table,{children:[(0,a.jsx)(o.thead,{children:(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.th,{children:"Par\xe2metro"}),(0,a.jsx)(o.th,{children:"Tipo"}),(0,a.jsx)(o.th,{}),(0,a.jsx)(o.th,{children:"Descri\xe7\xe3o"})]})}),(0,a.jsxs)(o.tbody,{children:[(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.td,{children:"*"}),(0,a.jsx)(o.td,{children:"Operador"}),(0,a.jsx)(o.td,{children:"\u2192"}),(0,a.jsx)(o.td,{children:"se especificado, objeto \xe9 um nome de objeto (string). Se omitido, objeto \xe9 uma vari\xe1vel"})]}),(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.td,{children:"objeto"}),(0,a.jsx)(o.td,{children:"any"}),(0,a.jsx)(o.td,{children:"\u2192"}),(0,a.jsx)(o.td,{children:"Nome objeto (se * for especificado) ou Vari\xe1vel (se * \xe9 omitido)"})]}),(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.td,{children:"posi\xe7aoCol"}),(0,a.jsx)(o.td,{children:"Integer"}),(0,a.jsx)(o.td,{children:"\u2192"}),(0,a.jsx)(o.td,{children:"Localiza\xe7\xe3o da coluna a inserir"})]}),(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.td,{children:"nomeColuna"}),(0,a.jsx)(o.td,{children:"Text"}),(0,a.jsx)(o.td,{children:"\u2192"}),(0,a.jsx)(o.td,{children:"Nome do objeto coluna"})]}),(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.td,{children:"variavelCol"}),(0,a.jsx)(o.td,{children:"Array, Field, Variable, Pointer"}),(0,a.jsx)(o.td,{children:"\u2192"}),(0,a.jsx)(o.td,{children:"Nome de coluna do array ou campo ou vari\xe1vel"})]}),(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.td,{children:"nomeCabe"}),(0,a.jsx)(o.td,{children:"Text"}),(0,a.jsx)(o.td,{children:"\u2192"}),(0,a.jsx)(o.td,{children:"Nome do objeto t\xedtulo da coluna"})]}),(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.td,{children:"varTitulo"}),(0,a.jsx)(o.td,{children:"Integer, Pointer"}),(0,a.jsx)(o.td,{children:"\u2192"}),(0,a.jsx)(o.td,{children:"Vari\xe1vel t\xedtulo da coluna"})]}),(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.td,{children:"nomRodap\xe9"}),(0,a.jsx)(o.td,{children:"Text"}),(0,a.jsx)(o.td,{children:"\u2192"}),(0,a.jsx)(o.td,{children:"Nome do rodap\xe9 da coluna"})]}),(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.td,{children:"nomeVar"}),(0,a.jsx)(o.td,{children:"Variable, Pointer"}),(0,a.jsx)(o.td,{children:"\u2192"}),(0,a.jsx)(o.td,{children:"Vari\xe1vel do rodap\xe9 da coluna"})]})]})]}),"\n",(0,a.jsx)(o.p,{children:(0,a.jsx)(o.em,{children:"Esse comando n\xe3o \xe9 seguro para thread e n\xe3o pode ser usado em c\xf3digo adequado."})}),"\n",(0,a.jsx)(o.h4,{id:"descri\xe7\xe3o",children:"Descri\xe7\xe3o"}),"\n",(0,a.jsxs)(o.p,{children:["O comando LISTBOX INSERT COLUMN insere uma coluna no list box designado pelos par\xe2metros ",(0,a.jsx)(o.em,{children:"objeto"})," e ",(0,a.jsx)(o.em,{children:"*"}),"."]}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.strong,{children:"Nota"}),": este comando n\xe3o faz nada se aplica \xe0 primeira coluna de um lisbox mostrado em modo hier\xe1rquico."]}),"\n",(0,a.jsxs)(o.p,{children:["Se passa o par\xe2metro opcional ",(0,a.jsx)(o.em,{children:"*"}),", indica que o par\xe2metro ",(0,a.jsx)(o.em,{children:"objeto"})," \xe9 um nome de objeto (string). Se omitir este par\xe2metro, indica que o par\xe2metro ",(0,a.jsx)(o.em,{children:"objeto"})," \xe9 uma vari\xe1vel. Nesse caso, n\xe3o passa uma string, mas uma refer\xeancia de vari\xe1vel. Para maior informa\xe7\xe3o sobre nomes de objetos, consulte a se\xe7\xe3o ",(0,a.jsx)(o.em,{children:"Propriedades dos objetos"}),"."]}),"\n",(0,a.jsxs)(o.p,{children:["A nova coluna se insere justo em frente da coluna definida pelo par\xe2metro ",(0,a.jsx)(o.em,{children:"posi\xe7\xe3oCol"}),". Se o par\xe2metro ",(0,a.jsx)(o.em,{children:"posi\xe7\xe3oCol"})," \xe9 superior ao n\xfamero total de colunas, a coluna \xe9 adicionada depois da \xfaltima coluna."]}),"\n",(0,a.jsxs)(o.p,{children:["Passe o nome do objeto e da vari\xe1vel da coluna inserida nos par\xe2metros ",(0,a.jsx)(o.em,{children:"nomCol"})," e ",(0,a.jsx)(o.em,{children:"vari\xe1velCol"}),"."]}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsxs)(o.li,{children:["Com um array tipo list box, o nome da vari\xe1vel deve coincidir com o nome do array cujo conte\xfado se mostrar\xe1 na coluna.",(0,a.jsx)(o.br,{}),"\nPode passar um ponteiro ",(0,a.jsx)(o.strong,{children:"Nil (->[])"})," se utiliza o comando em um contexto din\xe2mico quando o formul\xe1rio se executa (ver abaixo)."]}),"\n",(0,a.jsxs)(o.li,{children:["Com uma sele\xe7\xe3o tipo list box, deve passar um campo ou vari\xe1vel no par\xe2metro ",(0,a.jsx)(o.em,{children:"vari\xe1velCol"}),'. O conte\xfado da coluna ser\xe1 ent\xe3o o valor do campo ou da vari\xe1vel, avaliado para cada registro da sele\xe7\xe3o associada ao list box. Este tipo de conte\xfados s\xf3 pode ser utilizado quando a propriedade "Fonte de dados" do list box \xe9 Sele\xe7\xe3o atual ou Sele\xe7\xe3o tempor\xe1ria (ver a se\xe7\xe3o ',(0,a.jsx)(o.em,{children:"Gest\xe3o de objetos List Box"}),"). Pode utilizar os campos ou as vari\xe1veis de tipo string, num\xe9rico, Data, Hora, Imagem e Booleano.\nNo contexto de list boxes baseadas em sele\xe7\xf5es ou registros, LISTBOX INSERT COLUMN pode ser utilizado para inserir elementos simples (campos ou vari\xe1veis). Se quiser manipular express\xf5es mais complexas (tais como f\xf3rmulas ou m\xe9todos), deve utilizar o comando ",(0,a.jsx)(o.a,{href:"/docs/pt/commands/listbox-insert-column-formula",children:"LISTBOX INSERT COLUMN FORMULA"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(o.p,{children:["List boxes de tipo Cole\xe7\xe3o ou Sele\xe7\xe3o de Entidades s\xe3o compat\xedveis, no entanto, o par\xe2metro colName ser\xe1 ignorado e deve-se ent\xe3o usar o comando ",(0,a.jsx)(o.a,{href:"/docs/pt/commands/listbox-set-column-formula",children:"LISTBOX SET COLUMN FORMULA"})," para atribuir a fonte de dados, veja ."]}),"\n",(0,a.jsx)(o.p,{children:"Nota: n\xe3o \xe9 poss\xedvel combinar em um mesmo list box colunas de tipo array (fonte de dados array) e colunas de tipo campo ou vari\xe1vel (fonte de dados sele\xe7\xe3o)."}),"\n",(0,a.jsxs)(o.p,{children:["Passe o nome do objeto e da vari\xe1vel do t\xedtulo da coluna inserida nos par\xe2metros ",(0,a.jsx)(o.em,{children:"nomTitulo"})," e ",(0,a.jsx)(o.em,{children:"varTitulo"})," Par\xe2metros."]}),"\n",(0,a.jsxs)(o.p,{children:["Pode passar nos par\xe2metros ",(0,a.jsx)(o.em,{children:"nomRodap\xe9"})," e ",(0,a.jsx)(o.em,{children:"nomVar"}),", o nome do objeto e a vari\xe1vel do rodap\xe9 da coluna inserida."]}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.strong,{children:"Nota:"})," os nomes dos objetos devem ser \xfanicos em um formul\xe1rio. Deve ter certeza de que os nomes passados nos par\xe2metros ",(0,a.jsx)(o.em,{children:"nomCol,"})," ",(0,a.jsx)(o.em,{children:"nomTitulo"})," e ",(0,a.jsx)(o.em,{children:"nomRodap\xe9"})," n\xe3o tenham sido utilizados. Do contr\xe1rio, a coluna n\xe3o \xe9 criada e \xe9 gerado um erro."]}),"\n",(0,a.jsx)(o.h5,{id:"dynamic-insertion",children:"Dynamic insertion"}),"\n",(0,a.jsx)(o.p,{children:"Pode utilizar este comando para inserir columnas nos list box de forma din\xe2mica durante a execu\xe7\xe3o do formul\xe1rio. 4D ir\xe1 gerenciar automaticamente a defini\xe7\xe3o das vari\xe1veis necess\xe1rias (rodap\xe9 de p\xe1gina e cabe\xe7alho)."}),"\n",(0,a.jsxs)(o.p,{children:["Para isso, ",(0,a.jsx)(o.strong,{children:"LISTBOX INSERT COLUMN"})," aceita um ponteiro ",(0,a.jsx)(o.strong,{children:"Nil (->[])"})," como valor valor para os par\xe2metros ",(0,a.jsx)(o.em,{children:"variavelCol"})," (list box de tipo array unicamente) ",(0,a.jsx)(o.em,{children:"varCabe"})," e ",(0,a.jsx)(o.em,{children:"varRodape"}),". Neste caso, quando se executa o comando, 4D cria as vari\xe1veis requeridas dinamicamente (para mais informa\xe7\xe3o, consulte a se\xe7\xe3o )."]}),"\n",(0,a.jsxs)(o.p,{children:['Note que as vari\xe1veis de cabe\xe7alho e de rodap\xe9 de p\xe1gina sempre s\xe3o criados com um tipo espec\xedfico (texto e inteiro longo, respectivamente). Pelo contr\xe1rio, as vari\xe1veis de coluna n\xe3o podem ser escritas durante a cria\xe7\xe3o porque os list boxes aceitam diferentes tipos de arrays para estas vari\xe1veis (array texto, array inteiro, etc.). Isto significa que voc\xea tem que definir o tipo de array manualmente (ver o exemplo 3). \xc9 importante realizar esta escrevendo antes de chamar a comandos como [# cmd id = "913" /] para inserir novos elementos no array. Ou bem, pode utilizar ',(0,a.jsx)(o.a,{href:"/docs/pt/commands/append-to-array",children:"APPEND TO ARRAY"})," tanto para definir o tipo do array como para a inser\xe7\xe3o de elementos."]}),"\n",(0,a.jsx)(o.h4,{id:"exemplo-1",children:"Exemplo 1"}),"\n",(0,a.jsx)(o.p,{children:"Imagine que queira adicionar uma coluna ao final do list box:"}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-4d",children:'\xa0var NomVarTitulo;$Ultimo;RecNum : Integer\n\xa0ALL RECORDS([Tabela 1])\n\xa0$RecNum:=Records in table([Tabela 1])\n\xa0ARRAY PICTURE(Imagem;$RecNum)\n\xa0\n\xa0$Ultimo:=Get number of listbox columns(*;"ListBox1")+1\n\xa0LISTBOX INSERT COLUMN(*;"ListBox1";$Ultimo;"ColumnImagem";Imagem;"imagemTitulo";NomVarTitulo)\n'})}),"\n",(0,a.jsx)(o.h4,{id:"exemplo-2",children:"Exemplo 2"}),"\n",(0,a.jsx)(o.p,{children:"Imagine que gostaria de adicionar uma coluna \xe0 direita do list box e associar-lhe os valores do campo [Transporte]Tarifas:"}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-4d",children:'\xa0$Ultimo:=Get number of listbox columns(*;"ListBox1")+1\n\xa0LISTBOX INSERT COLUMN(*;"ListBox1";$Ultimo;"CampoCol";[Transporte]Tarifas;"nomTitulo";varTitulo)\n'})}),"\n",(0,a.jsx)(o.h4,{id:"exemplo-3",children:"Exemplo 3"}),"\n",(0,a.jsx)(o.p,{children:"Voc\xea deseja inserir uma coluna de forma din\xe2mica em um array de tipo list box e definir seu cabe\xe7alho:"}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-4d",children:'\xa0var $NilPtr : Pointer\n\xa0LISTBOX INSERT COLUMN(*;"MyListBox";1;"MyNewColumn";$NilPtr;"MyNewHeader";$NilPtr)\n\xa0ColPtr:=OBJECT Get pointer(Object named;"MyNewColumn")\n\xa0ARRAY TEXT(ColPtr->;10)\n\xa0\xa0//Definition of header\n\xa0headprt:=OBJECT Get pointer(Object named;"MyNewHeader")\n\xa0OBJECT SET TITLE(headprt->;"Inserted header")\n'})}),"\n",(0,a.jsx)(o.h4,{id:"ver-tamb\xe9m",children:"Ver tamb\xe9m"}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.a,{href:"/docs/pt/commands/listbox-delete-column",children:"LISTBOX DELETE COLUMN"}),(0,a.jsx)(o.br,{}),"\n",(0,a.jsx)(o.a,{href:"/docs/pt/commands/listbox-insert-column-formula",children:"LISTBOX INSERT COLUMN FORMULA"})]})]})}function m(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,a.jsx)(o,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,o,n)=>{n.d(o,{R:()=>i,x:()=>d});var a=n(296540);const r={},s=a.createContext(r);function i(e){const o=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function d(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(s.Provider,{value:o},e.children)}}}]);