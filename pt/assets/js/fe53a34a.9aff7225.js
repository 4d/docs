"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[86200],{3905:(e,a,t)=>{t.d(a,{Zo:()=>m,kt:()=>d});var o=t(67294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,o)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,o,n=function(e,a){if(null==e)return{};var t,o,n={},l=Object.keys(e);for(o=0;o<l.length;o++)t=l[o],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)t=l[o],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var i=o.createContext({}),b=function(e){var a=o.useContext(i),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},m=function(e){var a=b(e.components);return o.createElement(i.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return o.createElement(o.Fragment,{},a)}},c=o.forwardRef((function(e,a){var t=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),c=b(t),d=n,u=c["".concat(i,".").concat(d)]||c[d]||p[d]||l;return t?o.createElement(u,r(r({ref:a},m),{},{components:t})):o.createElement(u,r({ref:a},m))}));function d(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var l=t.length,r=new Array(l);r[0]=c;var s={};for(var i in a)hasOwnProperty.call(a,i)&&(s[i]=a[i]);s.originalType=e,s.mdxType="string"==typeof e?e:n,r[1]=s;for(var b=2;b<l;b++)r[b]=t[b];return o.createElement.apply(null,r)}return o.createElement.apply(null,t)}c.displayName="MDXCreateElement"},87365:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>b,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>m});t(67294);var o=t(3905);function n(){return n=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e},n.apply(this,arguments)}function l(e,a){if(null==e)return{};var t,o,n=function(e,a){if(null==e)return{};var t,o,n={},l=Object.keys(e);for(o=0;o<l.length;o++)t=l[o],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)t=l[o],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}const r={id:"blob",title:"BLOB"},s=void 0,i={unversionedId:"Concepts/blob",id:"version-19-R8/Concepts/blob",title:"BLOB",description:"Um campo, vari\xe1vel ou express\xe3o BLOB (Binary Large OBject) \xe9 uma s\xe9rie cont\xedgua de bytes que podem ser tratados como um objeto inteiro, ou cujos bytes podem ser abordados individualmente.",source:"@site/i18n/pt/docusaurus-plugin-content-docs/version-19-R8/Concepts/dt_blob.md",sourceDirName:"Concepts",slug:"/Concepts/blob",permalink:"/docs/pt/Concepts/blob",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20Concepts%2Fdt_blob.md%20(19-R8)&body=Please%20enter%20your%20comment%3A",tags:[],version:"19-R8",frontMatter:{id:"blob",title:"BLOB"},sidebar:"docs",previous:{title:"Tipos de dados",permalink:"/docs/pt/Concepts/data-types"},next:{title:"Booleano",permalink:"/docs/pt/Concepts/boolean"}},b={},m=[{value:"Tipos de Blob",id:"tipos-de-blob",level:2},{value:"Checking if a variable holds a scalar blob or a <code>4D. Blob</code>",id:"checking-if-a-variable-holds-a-scalar-blob-or-a-4d-blob",level:2},{value:"Passing blobs as parameters",id:"passing-blobs-as-parameters",level:2},{value:"Passing blobs and blob objects to 4D commands",id:"passing-blobs-and-blob-objects-to-4d-commands",level:3},{value:"Passing blobs and blob objects to methods",id:"passing-blobs-and-blob-objects-to-methods",level:3},{value:"Passing a scalar blob by reference using a pointer",id:"passing-a-scalar-blob-by-reference-using-a-pointer",level:3},{value:"Atribui\xe7\xe3o de uma vari\xe1vel blob a outra",id:"atribui\xe7\xe3o-de-uma-vari\xe1vel-blob-a-outra",level:2},{value:"Automatic conversion of blob type",id:"automatic-conversion-of-blob-type",level:2},{value:"Modifica\xe7\xe3o de um blob escalar",id:"modifica\xe7\xe3o-de-um-blob-escalar",level:2},{value:"Individually accessing bytes in a blob",id:"individually-accessing-bytes-in-a-blob",level:2},{value:"Accessing a scalar blob&#39;s bytes",id:"accessing-a-scalar-blobs-bytes",level:4},{value:"Accessing a <code>4D. Blob</code>&#39;s bytes",id:"accessing-a-4d-blobs-bytes",level:4}],p={toc:m};function c(e){var{components:a}=e,t=l(e,["components"]);return(0,o.kt)("wrapper",n({},p,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Um campo, vari\xe1vel ou express\xe3o BLOB (Binary Large OBject) \xe9 uma s\xe9rie cont\xedgua de bytes que podem ser tratados como um objeto inteiro, ou cujos bytes podem ser abordados individualmente."),(0,o.kt)("p",null,"Um BLOB \xe9 carregado totalmente na mem\xf3ria. Uma vari\xe1vel BLOB \xe9 mantida e existe apenas na mem\xf3ria. Um campo BLOB \xe9 carregado na mem\xf3ria desde o disco, como o resto do registro ao que pertence."),(0,o.kt)("p",null,"Como os outros tipos de campo que podem reter uma grande quantidade de dados (tais como tipo de campo Imagem), os campos BLOB n\xe3o s\xe3o duplicados na mem\xf3ria quando um registro for modificado. Consequentemente o resultado devolvido pelos comandos ",(0,o.kt)("inlineCode",{parentName:"p"},"Old")," e ",(0,o.kt)("inlineCode",{parentName:"p"},"Modified")," n\xe3o \xe9 significativo quando for aplicado a um campo BLOB."),(0,o.kt)("h2",n({},{id:"tipos-de-blob"}),"Tipos de Blob"),(0,o.kt)("p",null,"Usando a linguagem 4D, h\xe1 duas maneiras de lidar com um blob:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"como um valor escalar"),": um blob pode ser armazenado numa vari\xe1vel ou campo Blob e alterado."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"as an object (",(0,o.kt)("inlineCode",{parentName:"strong"},"4D. Blob"),")"),": a ",(0,o.kt)("inlineCode",{parentName:"li"},"4D. Blob")," is a blob object. Pode encapsular um blob ou parte dele num ",(0,o.kt)("inlineCode",{parentName:"li"},"4D.Blob")," sem alterar o blob original. Este m\xe9todo chama-se ",(0,o.kt)("a",n({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Object_type_(object-oriented_programming)#Boxing"}),"boxing"),". Para mais informa\xe7\xf5es sobre como instanciar um ",(0,o.kt)("inlineCode",{parentName:"li"},"4D.Blob"),", ver ",(0,o.kt)("a",n({parentName:"li"},{href:"/docs/pt/API/BlobClass"}),"Blob Class"),".")),(0,o.kt)("p",null,"Cada tipo de blob tem as suas vantagens. Utilize a tabela seguinte para determinar qual se adequa \xe0s suas necessidades:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",n({parentName:"tr"},{align:null})),(0,o.kt)("th",n({parentName:"tr"},{align:"center"}),"Blob"),(0,o.kt)("th",n({parentName:"tr"},{align:"center"}),"4D.Blob"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",n({parentName:"tr"},{align:null}),"Edit\xe1vel"),(0,o.kt)("td",n({parentName:"tr"},{align:"center"}),"Sim"),(0,o.kt)("td",n({parentName:"tr"},{align:"center"}),"N\xe3o")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",n({parentName:"tr"},{align:null}),"Partilh\xe1vel em objectos e colec\xe7\xf5es"),(0,o.kt)("td",n({parentName:"tr"},{align:"center"}),"N\xe3o"),(0,o.kt)("td",n({parentName:"tr"},{align:"center"}),"Sim")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",n({parentName:"tr"},{align:null}),"Passado por refer\xeancia","*"),(0,o.kt)("td",n({parentName:"tr"},{align:"center"}),"N\xe3o"),(0,o.kt)("td",n({parentName:"tr"},{align:"center"}),"Sim")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",n({parentName:"tr"},{align:null}),"Desempenho ao acessar aos bytes"),(0,o.kt)("td",n({parentName:"tr"},{align:"center"}),"+"),(0,o.kt)("td",n({parentName:"tr"},{align:"center"}),"-")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",n({parentName:"tr"},{align:null}),"Tamanho m\xe1ximo"),(0,o.kt)("td",n({parentName:"tr"},{align:"center"}),"2GB"),(0,o.kt)("td",n({parentName:"tr"},{align:"center"}),"Memory")))),(0,o.kt)("p",null,"*","Diferente dos comandos 4D concebidos para tomar uma bolha escalar como par\xe2metro, passar um blob escalar para um m\xe9todo duplica-o na mem\xf3ria. Ao trabalhar com m\xe9todos, a utiliza\xe7\xe3o de objectos blob (",(0,o.kt)("inlineCode",{parentName:"p"},"4D.Blob"),") \xe9 mais eficiente, uma vez que s\xe3o passados por refer\xeancia."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Como padr\xe3o, 4D estabelece o tamanho blob m\xe1ximo para 2GB mas esse limite de tamanho pode ser menor dependendo de seu SO e de quanto espa\xe7o estiver dispon\xedvel.")),(0,o.kt)("p",null,"You cannot use operators on blobs."),(0,o.kt)("h2",n({},{id:"checking-if-a-variable-holds-a-scalar-blob-or-a-4d-blob"}),"Checking if a variable holds a scalar blob or a ",(0,o.kt)("inlineCode",{parentName:"h2"},"4D. Blob")),(0,o.kt)("p",null,"Use the ",(0,o.kt)("a",n({parentName:"p"},{href:"https://doc.4d.com/4dv19R/help/command/en/page1509.html"}),"Value type")," command to determine if a value is of type Blob or Object. To check that an object is a blob object (",(0,o.kt)("inlineCode",{parentName:"p"},"4D. Blob"),"), use ",(0,o.kt)("a",n({parentName:"p"},{href:"https://doc.4d.com/4dv19R/help/command/en/page1731.html"}),"OB instance of"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"var $myBlob: Blob\nvar $myBlobObject: 4D. Blob\n$myBlobObject:=4D. Blob.new()\n\n$type:= Value type($myblobObject) // 38 (object)\n$is4DBlob:= OB Instance of($myblobObject; 4D. Blob)  //True\n")),(0,o.kt)("h2",n({},{id:"passing-blobs-as-parameters"}),"Passing blobs as parameters"),(0,o.kt)("p",null,"Scalar blobs and blob objects can be passed as parameters to 4D commands or plug-in routines that expect blob parameters."),(0,o.kt)("h3",n({},{id:"passing-blobs-and-blob-objects-to-4d-commands"}),"Passing blobs and blob objects to 4D commands"),(0,o.kt)("p",null,"You can pass a scalar blob or a ",(0,o.kt)("inlineCode",{parentName:"p"},"4D. Blob")," to any 4D command that takes a blob as a parameter:"),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"}),'var $myBlob: 4D. Blob CONVERT FROM TEXT("Hello, World!"; "UTF-8"; $myBlob)\n$myText:= BLOB to text( $myBlob ; UTF8 text without length )\n')),(0,o.kt)("p",null,"Some 4D commands alter the original blob, and thus do not support the ",(0,o.kt)("inlineCode",{parentName:"p"},"4D. Blob")," type:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",n({parentName:"li"},{href:"https://doc.4d.com/4dv19/help/command/en/page560.html"}),"DELETE FROM BLOB")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",n({parentName:"li"},{href:"https://doc.4d.com/4dv19/help/command/en/page559.html"}),"INSERT IN BLOB")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",n({parentName:"li"},{href:"https://doc.4d.com/4dv19/help/command/en/page548.html"}),"INTEGER TO BLOB")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",n({parentName:"li"},{href:"https://doc.4d.com/4dv19/help/command/en/page550.html"}),"LONGINT TO BLOB")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",n({parentName:"li"},{href:"https://doc.4d.com/4dv19/help/command/en/page552.html"}),"REAL TO BLOB")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",n({parentName:"li"},{href:"https://doc.4d.com/4dv19/help/command/en/page606.html"}),"SET BLOB SIZE")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",n({parentName:"li"},{href:"https://doc.4d.com/4dv19/help/command/en/page554.html"}),"TEXT TO BLOB")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",n({parentName:"li"},{href:"https://doc.4d.com/4dv19/help/command/en/page532.html"}),"VARIABLE TO BLOB")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",n({parentName:"li"},{href:"https://doc.4d.com/4dv19/help/command/en/page556.html"}),"LIST TO BLOB")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",n({parentName:"li"},{href:"https://doc.4d.com/4dv19/help/command/en/page782.html"}),"SOAP DECLARATION")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",n({parentName:"li"},{href:"https://doc.4d.com/4dv19/help/command/en/page777.html"}),"WEB SERVICE SET PARAMETER"))),(0,o.kt)("h3",n({},{id:"passing-blobs-and-blob-objects-to-methods"}),"Passing blobs and blob objects to methods"),(0,o.kt)("p",null,"You can pass blobs and blob objects (",(0,o.kt)("inlineCode",{parentName:"p"},"4D. Blob"),") to methods. Keep in mind that unlike blob objects, which are passed by reference, scalar blobs are duplicated in memory when passed to methods."),(0,o.kt)("h3",n({},{id:"passing-a-scalar-blob-by-reference-using-a-pointer"}),"Passing a scalar blob by reference using a pointer"),(0,o.kt)("p",null,"To pass a scalar blob to your own methods without duplicating it in memory, define a pointer to the variable that stores it and pass the pointer as a parameter."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Exemplos:")),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"// Declare a variable of type Blob\nvar $myBlobVar: Blob\n// Pass the blob as parameter to a 4D command\n SET BLOB SIZE($myBlobVar;1024*1024)\n")),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"// Pass the blob as parameter to an external routine\n $errCode:=Do Something With This blob($myBlobVar)\n")),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"// Pass the blob as a parameter to a method that returns a blob\n var $retrieveBlob: Blob\n retrieveBlob:=Fill_Blob($myBlobVar)\n")),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"// Pass a pointer to the blob as a parameter to your own method, COMPUTE BLOB(->$myBlobVar)\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Nota para  desenvolvedores de plugins:"),' um par\xe2metro BLOB se declara como "&O" (a letra "O", n\xe3o o n\xfamero "0").'),(0,o.kt)("h2",n({},{id:"atribui\xe7\xe3o-de-uma-vari\xe1vel-blob-a-outra"}),"Atribui\xe7\xe3o de uma vari\xe1vel blob a outra"),(0,o.kt)("p",null,"You can assign a Blob variable to another:"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Exemplo:")),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"// Declare two variables of type Blob\n var $vBlobA; $vBlobB : Blob\n// Set the size of the first blob to 10K\n SET BLOB SIZE($vBlobA;10*1024)\n// Assign the first blob to the second one\n $vBlobB:=$vBlobA\n")),(0,o.kt)("h2",n({},{id:"automatic-conversion-of-blob-type"}),"Automatic conversion of blob type"),(0,o.kt)("p",null,"4D automatically converts scalar blobs to blob objects, and vice versa, when they're assigned to each other. Por exemplo:"),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"}),'// Create a variable of type Blob and an object variable\nvar $myBlob: Blob\nvar $myObject : Object\n\n// Assign that blob to a property of $myObject named "blob"\n$myObject:=New object("blob"; $myBlob)\n\n// The blob stored in $myBlob is automatically converted to a 4D. Blob\n$type:= OB Instance of($myObject.blob; 4D. Blob)  //True\n\n// Conversion from 4D. Blob to Blob\n$myBlob:= $myObject.blob\n$type:= Value type($myBlob) // Blob\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"When converting a ",(0,o.kt)("inlineCode",{parentName:"p"},"4D. Blob")," to a scalar blob, if the size of the ",(0,o.kt)("inlineCode",{parentName:"p"},"4D. Blob")," exceeds the maximum size for scalar blobs, the resulting scalar blob is empty. For example, when the maximum size for scalar blobs is 2GB, if you convert a ",(0,o.kt)("inlineCode",{parentName:"p"},"4D. Blob")," of 2.5GB to a scalar blob, you obtain an empty blob.")),(0,o.kt)("h2",n({},{id:"modifica\xe7\xe3o-de-um-blob-escalar"}),"Modifica\xe7\xe3o de um blob escalar"),(0,o.kt)("p",null,"Unlike blob objects, scalar blobs can be altered. Por exemplo:"),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"var $myBlob : Blob SET BLOB SIZE ($myBlob ; 16*1024)\n")),(0,o.kt)("h2",n({},{id:"individually-accessing-bytes-in-a-blob"}),"Individually accessing bytes in a blob"),(0,o.kt)("h4",n({},{id:"accessing-a-scalar-blobs-bytes"}),"Accessing a scalar blob's bytes"),(0,o.kt)("p",null,"You can access individual bytes of a scalar blob using curly brackets ",(0,o.kt)("inlineCode",{parentName:"p"},"{}"),". Within a blob, bytes are numbered from 0 to N-1, where N is the size of the BLOB:"),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"  // Declare a variable of type Blob\n var $vBlob : Blob\n  // Set the size of the blob to 256 bytes\n SET BLOB SIZE($vBlob;256)\n  // The following code loops through the blob to set each byte to zero\n For(vByte;0;BLOB size($vBlob)-1)\n    $vBlob{vByte}:=0\n End for\n")),(0,o.kt)("p",null,"Since you can address all the bytes of a blob individually, you can store whatever you want in a Blob variable or field."),(0,o.kt)("h4",n({},{id:"accessing-a-4d-blobs-bytes"}),"Accessing a ",(0,o.kt)("inlineCode",{parentName:"h4"},"4D. Blob"),"'s bytes"),(0,o.kt)("p",null,"Use square brackets ",(0,o.kt)("inlineCode",{parentName:"p"},"[]")," to directly access a specific byte in a ",(0,o.kt)("inlineCode",{parentName:"p"},"4D. Blob")),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"}),'var $myBlob: 4D. Blob CONVERT FROM TEXT("Hello, World!"; "UTF-8"; $myBlob)\n$myText:= BLOB to text ( $myBlob ; UTF8 text without length )\n$byte:=$myBlob[5]\n')),(0,o.kt)("p",null,"Since a ",(0,o.kt)("inlineCode",{parentName:"p"},"4D. Blob")," cannot be altered, you can read the bytes of a ",(0,o.kt)("inlineCode",{parentName:"p"},"4D. Blob")," using this syntax, but not modify them."))}c.isMDXComponent=!0}}]);