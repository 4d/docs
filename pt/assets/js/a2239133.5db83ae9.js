"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[65860],{603905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var r=n(667294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=r.createContext({}),s=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(n),u=o,h=m["".concat(d,".").concat(u)]||m[u]||p[u]||a;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},109842:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>d,toc:()=>c});n(667294);var r=n(603905);function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o.apply(this,arguments)}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const i={id:"error-handling",title:"Gest\xe3o de erros"},l=void 0,d={unversionedId:"Concepts/error-handling",id:"version-20-R5/Concepts/error-handling",title:"Gest\xe3o de erros",description:"O manejo de erros \xe9 o processo de antecipar e responder aos erros que possam ocorrer em sua aplica\xe7\xe3o. 4D oferece assist\xeancia completa \xe0 detec\xe7\xe3o e notifica\xe7\xe3o de erros no tempo de execu\xe7\xe3o, assim como a an\xe1lise de suas condi\xe7\xf5es.",source:"@site/i18n/pt/docusaurus-plugin-content-docs/version-20-R5/Concepts/error-handling.md",sourceDirName:"Concepts",slug:"/Concepts/error-handling",permalink:"/docs/pt/Concepts/error-handling",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20Concepts%2Ferror-handling.md%20(20-R5)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R5",frontMatter:{id:"error-handling",title:"Gest\xe3o de erros"},sidebar:"docs",previous:{title:"Fluxo de controlo",permalink:"/docs/pt/Concepts/control-flow"},next:{title:"Modos interpretado e compilado",permalink:"/docs/pt/Concepts/interpreted-compiled"}},s={},c=[{value:"Erro ou status",id:"erro-ou-status",level:2},{value:"Instala\xe7\xe3o de um m\xe9todo de gest\xe3o de erros",id:"instala\xe7\xe3o-de-um-m\xe9todo-de-gest\xe3o-de-erros",level:2},{value:"Alcance e componentes",id:"alcance-e-componentes",level:3},{value:"Manejo de erros dentro do m\xe9todo",id:"manejo-de-erros-dentro-do-m\xe9todo",level:3},{value:"Exemplo",id:"exemplo",level:4},{value:"Utilizar um m\xe9todo de gest\xe3o de erro vazio",id:"utilizar-um-m\xe9todo-de-gest\xe3o-de-erro-vazio",level:3},{value:"Try(expression)",id:"tryexpression",level:2},{value:"Exemplos",id:"exemplos",level:3},{value:"Try...Catch...End try",id:"trycatchend-try",level:2},{value:"Exemplo",id:"exemplo-1",level:3}],p={toc:c};function m(e){var{components:t}=e,i=a(e,["components"]);return(0,r.kt)("wrapper",o({},p,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"O manejo de erros \xe9 o processo de antecipar e responder aos erros que possam ocorrer em sua aplica\xe7\xe3o. 4D oferece assist\xeancia completa \xe0 detec\xe7\xe3o e notifica\xe7\xe3o de erros no tempo de execu\xe7\xe3o, assim como a an\xe1lise de suas condi\xe7\xf5es."),(0,r.kt)("p",null,"Manejo de erros responde \xe0 duas necessidades principais:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"descobrir e consertar erros potenciais e bugs no c\xf3digo durante a fase de desenvolvimento,"),(0,r.kt)("li",{parentName:"ul"},"catching and recovering from unexpected errors in deployed applications; in particular, you can replace system error dialogs (disk full, missing file, etc.) with you own interface.")),(0,r.kt)("p",null,"Basicamente, h\xe1 duas maneiras de lidar com erros em 4D. Pode:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",o({parentName:"li"},{href:"#installing-an-error-handling-method"}),"install an error-handling method"),", or"),(0,r.kt)("li",{parentName:"ul"},"use a ",(0,r.kt)("a",o({parentName:"li"},{href:"#tryexpression"}),(0,r.kt)("inlineCode",{parentName:"a"},"Try()")," keyword")," or a ",(0,r.kt)("a",o({parentName:"li"},{href:"#trycatchend-try"}),(0,r.kt)("inlineCode",{parentName:"a"},"Try/Catch")," structure")," before pieces of code that call a function, method, or expression that can throw an error.")),(0,r.kt)("admonition",o({},{title:"Good practice",type:"tip"}),(0,r.kt)("p",{parentName:"admonition"},">"," > \xc9 recomendado instalar um m\xe9todo de gerenciamento de erros em 4D Server, para todos os c\xf3digos rodando no servidor. When 4D Server is not running ",(0,r.kt)("a",o({parentName:"p"},{href:"/docs/pt/Admin/cli"}),"headless")," (i.e. launched with its ",(0,r.kt)("a",o({parentName:"p"},{href:"/docs/pt/ServerWindow/overview"}),"administration window"),"), this method would avoid unexpected dialog boxes to be displayed on the server machine. In headless mode, errors are logged in the ",(0,r.kt)("a",o({parentName:"p"},{href:"/docs/pt/Debugging/debugLogFiles#4ddebuglogtxt-standard"}),"4DDebugLog file")," for further analysis.")),(0,r.kt)("h2",o({},{id:"erro-ou-status"}),"Erro ou status"),(0,r.kt)("p",null,"Many 4D class functions, such as ",(0,r.kt)("inlineCode",{parentName:"p"},"entity.save()")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"transporter.send()"),", return a ",(0,r.kt)("em",{parentName:"p"},"status"),' object. Este objecto \xe9 utilizado para armazenar erros "previs\xedveis" no contexto do tempo de execu\xe7\xe3o, por exemplo, palavra-passe inv\xe1lida, entidade bloqueada, etc., que n\xe3o interrompem a execu\xe7\xe3o do programa. Esta categoria de erros pode ser tratada por c\xf3digo normal.'),(0,r.kt)("p",null,'Outros erros "imprevis\xedveis" incluem erro de grava\xe7\xe3o em disco, falha de rede, ou em geral qualquer interrup\xe7\xe3o inesperada. This category of errors generates exceptions and needs to be handled through an error-handling method or a ',(0,r.kt)("inlineCode",{parentName:"p"},"Try()")," keyword."),(0,r.kt)("h2",o({},{id:"instala\xe7\xe3o-de-um-m\xe9todo-de-gest\xe3o-de-erros"}),"Instala\xe7\xe3o de um m\xe9todo de gest\xe3o de erros"),(0,r.kt)("p",null,"In 4D, all errors can be caught and handled by specific project methods, named ",(0,r.kt)("strong",{parentName:"p"},"error-handling")," (or ",(0,r.kt)("strong",{parentName:"p"},"error-catching"),") methods."),(0,r.kt)("p",null,"Uma vez instalados, os manipuladores de erros s\xe3o automaticamente chamados em modo interpretado ou compilado em caso de erro na aplica\xe7\xe3o 4D ou num dos seus componentes. Um manipulador de erros diferente pode ser chamado em fun\xe7\xe3o do contexto de execu\xe7\xe3o (ver abaixo)."),(0,r.kt)("p",null,"To ",(0,r.kt)("em",{parentName:"p"},"install")," an error-handling project method, you just need to call the ",(0,r.kt)("a",o({parentName:"p"},{href:"https://doc.4d.com/4dv19/help/command/en/page155.html"}),(0,r.kt)("inlineCode",{parentName:"a"},"ON ERR CALL"))," command with the project method name and (optionnally) scope as parameters. Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'ON ERR CALL("IO_ERRORS") //Instala o m\xe9todo de gest\xe3o de erros\n')),(0,r.kt)("p",null,"To stop catching errors for an execution context and give back hand, call ",(0,r.kt)("inlineCode",{parentName:"p"},"ON ERR CALL")," with an empty string:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'ON ERR CALL("";ek local) // d\xe1 o controle para o processo local\n')),(0,r.kt)("p",null,"The  ",(0,r.kt)("a",o({parentName:"p"},{href:"https://doc.4d.com/4dv20/help/command/en/page704.html"}),(0,r.kt)("inlineCode",{parentName:"a"},"Method called on error"))," command allows you to know the name of the method installed by ",(0,r.kt)("inlineCode",{parentName:"p"},"ON ERR CALL")," for the current process. \xc9 particularmente \xfatil no contexto dos componentes porque permite mudar temporariamente e depois restaurar o m\xe9todo de captura de erros do banco de dados local:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),' $methCurrent:=Method called on error(ek local)\n ON ERR CALL("NewMethod";ek local)\n  //If the document cannot be opened, an error is generated\n $ref:=Open document("MyDocument")\n  //Reinstallation of previous method\n ON ERR CALL($methCurrent;ek local)\n\n')),(0,r.kt)("h3",o({},{id:"alcance-e-componentes"}),"Alcance e componentes"),(0,r.kt)("p",null,"Um m\xe9todo de tratamento de erros pode ser definido para diferentes contextos de execu\xe7\xe3o:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"for the ",(0,r.kt)("strong",{parentName:"li"},"current process"),"- a local error handler will be only called for errors that occurred in the current process of the current project,"),(0,r.kt)("li",{parentName:"ul"},"for the ",(0,r.kt)("strong",{parentName:"li"},"whole application"),"- a global error handler will be called for all errors that occurred in the application execution context of the current project,"),(0,r.kt)("li",{parentName:"ul"},"from the ",(0,r.kt)("strong",{parentName:"li"},"components"),"- this error handler is defined in a host project and will be called for all errors that occurred in the components when they were not already caught by a component handler.")),(0,r.kt)("p",null,"Exemplos:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'ON ERR CALL("IO_Errors";ek local) //Instala um m\xe9todo local de tratamento de erros ON ERR CALL("globalHandler";ek global) //Instala um m\xe9todo global de tratamento de erros ON ERR CALL("componentHandler";ek erros de componentes) //Instala um m\xe9todo de tratamento de erros de componentes\n')),(0,r.kt)("p",null,'Pode instalar um gerenciador de erros global que servir\xe1 como "fallback" e m\xe9todos de erros locais espec\xedficos para certos processos. Um manipulador de erros global \xe9 tamb\xe9m \xfatil no servidor para evitar di\xe1logos de erro no servidor quando executado com interface.'),(0,r.kt)("p",null,"Pode definir um \xfanico m\xe9todo de captura de erros para toda a aplica\xe7\xe3o ou diferentes m\xe9todos por m\xf3dulo de aplica\xe7\xe3o. Entretanto, apenas um m\xe9todo pode ser instalado por processo."),(0,r.kt)("p",null,"Quando ocorre um erro, apenas um m\xe9todo \xe9 chamado, como descrito no diagrama seguinte:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"error management",src:n(250161).Z,width:"1195",height:"578"})),(0,r.kt)("h3",o({},{id:"manejo-de-erros-dentro-do-m\xe9todo"}),"Manejo de erros dentro do m\xe9todo"),(0,r.kt)("p",null,"Within the custom error method, you have access to several pieces of information that will help you identifying the error:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"vari\xe1veis sistema (","*","):"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Error")," (longint): error code"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Error method")," (text): name of the method that triggered the error"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Error line")," (longint): line number in the method that triggered the error"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Error formula")," (text): formula of the 4D code (raw text) which is at the origin of the error.")))),(0,r.kt)("admonition",o({},{type:"info"}),(0,r.kt)("p",{parentName:"admonition"},"4D automatically maintains a number of variables called ",(0,r.kt)("strong",{parentName:"p"},"system variables"),", meeting different needs. Ver o manual da linguagem 4D","*",".")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"the ",(0,r.kt)("a",o({parentName:"li"},{href:"https://doc.4d.com/4dv19/help/command/en/page1799.html"}),(0,r.kt)("inlineCode",{parentName:"a"},"Last errors"))," command that returns a collection of the current stack of errors that occurred in the 4D application. You can also use the ",(0,r.kt)("a",o({parentName:"li"},{href:"https://doc.4d.com/4dv19/help/command/en/page1015.html"}),(0,r.kt)("inlineCode",{parentName:"a"},"GET LAST ERROR STACK"))," command that returns the same information as arrays."),(0,r.kt)("li",{parentName:"ul"},"the ",(0,r.kt)("inlineCode",{parentName:"li"},"Get call chain")," command that returns a collection of objects describing each step of the method call chain within the current process.")),(0,r.kt)("h4",o({},{id:"exemplo"}),"Exemplo"),(0,r.kt)("p",null,"Aqui est\xe1 um sistema de gest\xe3o de erros simples:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'//instalar o m\xe9todo de gest\xe3o de erros\n ON ERR CALL("errorMethod")\n //... executar o c\xf3digo\n ON ERR CALL("") //retorna o controle para 4D\n')),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'// errorMethod project method\n If(Error#1006) //this is not a user interruption\n    ALERT("The error "+String(Error)+" occurred". The code in question is: \\""+Error formula+"\\"")\n End if\n')),(0,r.kt)("h3",o({},{id:"utilizar-um-m\xe9todo-de-gest\xe3o-de-erro-vazio"}),"Utilizar um m\xe9todo de gest\xe3o de erro vazio"),(0,r.kt)("p",null,"Se quiser que a caixa de di\xe1logo fique escondida, pode instalar um m\xe9todo de gest\xe3o de erros vazio. The ",(0,r.kt)("inlineCode",{parentName:"p"},"Error")," system variable can be tested in any method, i.e. outside of the error-handling method:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'ON ERR CALL("emptyMethod") //emptyMethod exists but is empty\n$doc:=Open document( "myFile.txt")\nIf (Error=-43)\n    ALERT("File not found.")\nEnd if\nON ERR CALL("")\n')),(0,r.kt)("h2",o({},{id:"tryexpression"}),"Try(expression)"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Try(expression)")," statement allows you to test a single-line expression in its actual execution context (including, in particular, local variable values) and to intercept errors it throws so that the 4D error dialog box is not displayed. Using ",(0,r.kt)("inlineCode",{parentName:"p"},"Try(expression)")," provides an easy way to handle simple error cases with a very low number of code lines, and without requiring an error-handling method."),(0,r.kt)("admonition",o({},{type:"note"}),(0,r.kt)("p",{parentName:"admonition"},"If you want to try a more complex code than a single-line expression, you might consider using a ",(0,r.kt)("a",o({parentName:"p"},{href:"#trycatchend-try"}),(0,r.kt)("inlineCode",{parentName:"a"},"Try/Catch")," structure"),".")),(0,r.kt)("p",null,"The formal syntax of the ",(0,r.kt)("inlineCode",{parentName:"p"},"Try(expression)")," statement is:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),"\nTry (expression) : any | Undefined\n\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"expression")," can be any valid expression."),(0,r.kt)("p",null,"If an error occurred during its execution, it is intercepted and no error dialog is displayed, whether an ",(0,r.kt)("a",o({parentName:"p"},{href:"#installing-an-error-handling-method"}),"error-handling method")," was installed or not before the call to ",(0,r.kt)("inlineCode",{parentName:"p"},"Try()"),". If ",(0,r.kt)("em",{parentName:"p"},"expression")," returns a value, ",(0,r.kt)("inlineCode",{parentName:"p"},"Try()")," returns the last evaluated value, otherwise it returns ",(0,r.kt)("inlineCode",{parentName:"p"},"Undefined"),"."),(0,r.kt)("p",null,"You can handle the error(s) using the ",(0,r.kt)("a",o({parentName:"p"},{href:"https://doc.4d.com/4dv20/help/command/en/page1799.html"}),(0,r.kt)("inlineCode",{parentName:"a"},"Last errors"))," command. If ",(0,r.kt)("em",{parentName:"p"},"expression")," throws an error within a stack of ",(0,r.kt)("inlineCode",{parentName:"p"},"Try()")," calls, the execution flow stops and returns to the latest executed ",(0,r.kt)("inlineCode",{parentName:"p"},"Try()")," (the first found back in the call stack)."),(0,r.kt)("admonition",o({},{type:"note"}),(0,r.kt)("p",{parentName:"admonition"},"If an ",(0,r.kt)("a",o({parentName:"p"},{href:"#installing-an-error-handling-method"}),"error-handling method")," is installed by ",(0,r.kt)("em",{parentName:"p"},"expression"),", it is called in case of error.")),(0,r.kt)("h3",o({},{id:"exemplos"}),"Exemplos"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"You want to display the contents of a file if the file can be open without error, and if its contents can be read. Voc\xea pode escrever:")),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'var $text : Text\nvar $file : 4D.File := File("/RESOURCES/myFile.txt")\nvar $fileHandle : 4D.FileHandle := Try($file.open())\nIf ($fileHandle # Null)\n  $text:=Try($fileHandle.readText()) || "Erro ao ler o arquivo"\nEnd if\n')),(0,r.kt)("ol",o({},{start:2}),(0,r.kt)("li",{parentName:"ol"},"Voc\xea deseja tratar o erro de divis\xe3o por zero. Nesse caso, voc\xea deseja retornar 0 e lan\xe7ar um erro:")),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'function divide( $p1: real; $p2: real)-> $result: real\n  if ($p2=0)\n     $result:=0 //only for clarity (0 is the default for reals)\n     throw(-12345; "Division by zero")\n  else\n    $result:=$p1/$p2\n  end if\n\nfunction test()\n  $result:=Try(divide($p1;$p2))\n  If (Last errors # null)\n    ALERT("Error")\n  End if\n\n')),(0,r.kt)("ol",o({},{start:3}),(0,r.kt)("li",{parentName:"ol"},"You want to handle both ",(0,r.kt)("a",o({parentName:"li"},{href:"#error-or-status"}),"predictable and non-predictable")," errors:")),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'var $e:=ds.Employee.new()\n$e.name:="Smith"\n$status:=Try($e.save()) //catch predictable and non-predictable errors\nIf ($status.success)\n   ALERT( "Success")\nElse\n   ALERT( "Error: "+JSON Stringify($status.errors))\nEnd if\n\n')),(0,r.kt)("h2",o({},{id:"trycatchend-try"}),"Try...Catch...End try"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Try...Catch...End try")," structure allows you to test a block code in its actual execution context (including, in particular, local variable values) and to intercept errors it throws so that the 4D error dialog box is not displayed."),(0,r.kt)("p",null,"Unlike the ",(0,r.kt)("inlineCode",{parentName:"p"},"Try(expression)")," keyword that evaluates a single-line expression, the ",(0,r.kt)("inlineCode",{parentName:"p"},"Try...Catch...End try")," structure allows you to evaluate any code block, from the most simple to the most complex, without requiring an error-handling method. In addition, the ",(0,r.kt)("inlineCode",{parentName:"p"},"Catch")," block can be used to handle the error in any custom way."),(0,r.kt)("p",null,"The formal syntax of the ",(0,r.kt)("inlineCode",{parentName:"p"},"Try...Catch...End try")," structure is:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),"\nTry \n    statement(s) // Code to evaluate\nCatch\n    statement(s) // Code to execute in case of error\nEnd try\n\n")),(0,r.kt)("p",null,"The code placed between the ",(0,r.kt)("inlineCode",{parentName:"p"},"Try")," and the ",(0,r.kt)("inlineCode",{parentName:"p"},"Catch")," keywords is first executed, then the flow depends on the error(s) encountered during this execution."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If no error is thrown, the code execution continues after the corresponding ",(0,r.kt)("inlineCode",{parentName:"li"},"End try")," keyword. The code placed between the ",(0,r.kt)("inlineCode",{parentName:"li"},"Catch")," and the ",(0,r.kt)("inlineCode",{parentName:"li"},"End try")," keywords is not executed."),(0,r.kt)("li",{parentName:"ul"},"If the code block execution throws a ",(0,r.kt)("em",{parentName:"li"},"non-deferred error"),", the execution flow stops and executes the corresponding ",(0,r.kt)("inlineCode",{parentName:"li"},"Catch")," code block."),(0,r.kt)("li",{parentName:"ul"},"If the code block execution throws a ",(0,r.kt)("em",{parentName:"li"},"deferred error"),", the execution flow continues until the end of the ",(0,r.kt)("inlineCode",{parentName:"li"},"Try")," block and then executes the corresponding ",(0,r.kt)("inlineCode",{parentName:"li"},"Catch")," code block.")),(0,r.kt)("admonition",o({},{type:"note"}),(0,r.kt)("p",{parentName:"admonition"},"If a ",(0,r.kt)("em",{parentName:"p"},"deferred")," error is thrown outside of the ",(0,r.kt)("inlineCode",{parentName:"p"},"Try")," block, the code execution continues until the end of the method or function.")),(0,r.kt)("admonition",o({},{type:"info"}),(0,r.kt)("p",{parentName:"admonition"},"For more information on ",(0,r.kt)("em",{parentName:"p"},"deferred")," and ",(0,r.kt)("em",{parentName:"p"},"non-deferred")," errors, please refer to the ",(0,r.kt)("a",o({parentName:"p"},{href:"https://doc.4d.com/4dv20R/help/command/en/page1805.html"}),(0,r.kt)("inlineCode",{parentName:"a"},"throw"))," command description.")),(0,r.kt)("p",null,"In the ",(0,r.kt)("inlineCode",{parentName:"p"},"Catch")," code block, you can handle the error(s) using standard error handling commands. The ",(0,r.kt)("a",o({parentName:"p"},{href:"https://doc.4d.com/4dv20/help/command/en/page1799.html"}),(0,r.kt)("inlineCode",{parentName:"a"},"Last errors"))," function contains the last errors collection. You can ",(0,r.kt)("a",o({parentName:"p"},{href:"#installing-an-error-handling-method"}),"declare an error-handling method")," in this code block, in which case it is called in case of error (otherwise the 4D error dialog box is displayed)."),(0,r.kt)("admonition",o({},{type:"note"}),(0,r.kt)("p",{parentName:"admonition"},"If an ",(0,r.kt)("a",o({parentName:"p"},{href:"#installing-an-error-handling-method"}),"error-handling method")," is installed in the code placed between the ",(0,r.kt)("inlineCode",{parentName:"p"},"Try")," and the ",(0,r.kt)("inlineCode",{parentName:"p"},"Catch")," keywords, it is called in case of error.")),(0,r.kt)("h3",o({},{id:"exemplo-1"}),"Exemplo"),(0,r.kt)("p",null,"Combining transactions and ",(0,r.kt)("inlineCode",{parentName:"p"},"Try...Catch...End try")," structures allows writing secured code for critical features."),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),"Function createInvoice($customer : cs.customerEntity; $items : Collection; $invoiceRef : Text) : cs.invoiceEntity\n    var $newInvoice : cs.invoiceEntity\n    var $newInvoiceLine : cs.invoiceLineEntity\n    var $item : Object\n    ds.startTransaction()\n    Try\n        $newInvoice:=This.new()\n        $newInvoice.customer:=$customer\n        $newInvoice.invoiceRef:=$invoiceRef\n        For each ($item; $items)\n            $newInvoiceLine:=ds.invoiceLine.new()\n            $newInvoiceLine.item:=$item.item\n            $newInvoiceLine.amount:=$item.amount\n            $newInvoiceLine.invoice:=$newInvoice\n            //call other specific functions to validate invoiceline\n            $newInvoiceLine.save()\n        End for each \n        $newInvoice.save()\n        ds.validateTransaction()\n    Catch\n        ds.cancelTransaction()\n        ds.logErrors(Last errors)\n        $newInvoice:=Null\n    End try\n    return $newInvoice\n\n")))}m.isMDXComponent=!0},250161:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/error-schema-973d40c4618e79de87f884622e4e930f.png"}}]);