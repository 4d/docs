"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["68465"],{611557:function(e,s,o){o.r(s),o.d(s,{frontMatter:()=>d,default:()=>m,toc:()=>l,metadata:()=>r,assets:()=>t,contentTitle:()=>i});var r=JSON.parse('{"id":"commands-legacy/set-process-variable","title":"SET PROCESS VARIABLE","description":"SET PROCESS VARIABLE ( processo ; dstVar ; expr {; dstVar2 ; expr2 ; ... ; dstVarN ; exprN} )","source":"@site/i18n/pt/docusaurus-plugin-content-docs/version-20-R10/commands-legacy/set-process-variable.md","sourceDirName":"commands-legacy","slug":"/commands/set-process-variable","permalink":"/docs/pt/commands/set-process-variable","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fset-process-variable.md%20(20-R10)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"20-R10","frontMatter":{"id":"set-process-variable","title":"SET PROCESS VARIABLE","slug":"/commands/set-process-variable","displayed_sidebar":"docs"},"sidebar":"docs","previous":{"title":"Semaphore","permalink":"/docs/pt/commands/semaphore"},"next":{"title":"Test semaphore","permalink":"/docs/pt/commands/test-semaphore"}}'),n=o(785893),a=o(250065);let d={id:"set-process-variable",title:"SET PROCESS VARIABLE",slug:"/commands/set-process-variable",displayed_sidebar:"docs"},i=void 0,t={},l=[{value:"Descri\xe7\xe3o",id:"descri\xe7\xe3o",level:2},{value:"Restri\xe7\xf5es",id:"restri\xe7\xf5es",level:3},{value:"Exemplo 1",id:"exemplo-1",level:2},{value:"Exemplo 2",id:"exemplo-2",level:2},{value:"Exemplo 3",id:"exemplo-3",level:2},{value:"Exemplo 4",id:"exemplo-4",level:2},{value:"Exemplo 5",id:"exemplo-5",level:2},{value:"Ver tamb\xe9m",id:"ver-tamb\xe9m",level:2},{value:"Propriedades",id:"propriedades",level:2}];function c(e){let s={a:"a",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"SET PROCESS VARIABLE"})," ( ",(0,n.jsx)(s.em,{children:"processo"})," ; ",(0,n.jsx)(s.em,{children:"dstVar"})," ; ",(0,n.jsx)(s.em,{children:"expr"})," {; ",(0,n.jsx)(s.em,{children:"dstVar2"})," ; ",(0,n.jsx)(s.em,{children:"expr2"})," ; ... ; ",(0,n.jsx)(s.em,{children:"dstVarN"})," ; ",(0,n.jsx)(s.em,{children:"exprN"}),"} )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Par\xe2metro"}),(0,n.jsx)(s.th,{children:"Tipo"}),(0,n.jsx)(s.th,{}),(0,n.jsx)(s.th,{children:"Descri\xe7\xe3o"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"processo"}),(0,n.jsx)(s.td,{children:"Integer"}),(0,n.jsx)(s.td,{children:"\u2192"}),(0,n.jsx)(s.td,{children:"N\xfamero do processo de destino"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"dstVar"}),(0,n.jsx)(s.td,{children:"Variable"}),(0,n.jsx)(s.td,{children:"\u2192"}),(0,n.jsx)(s.td,{children:"Vari\xe1vel de destino"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"expr"}),(0,n.jsx)(s.td,{children:"Variable"}),(0,n.jsx)(s.td,{children:"\u2192"}),(0,n.jsx)(s.td,{children:"Fonte da express\xe3o (ou vari\xe1vel fonte)"})]})]})]}),"\n",(0,n.jsx)(s.h2,{id:"descri\xe7\xe3o",children:"Descri\xe7\xe3o"}),"\n",(0,n.jsxs)(s.p,{children:["O comando SET PROCESS VARIABLE escreve as vari\xe1veis processo ",(0,n.jsx)(s.em,{children:"dstVar"})," (",(0,n.jsx)(s.em,{children:"dstVar2"}),", etc.) do processo de destino cujo n\xfamero se passa em ",(0,n.jsx)(s.em,{children:"processo"})," utilizando os valores passados em ",(0,n.jsx)(s.em,{children:"expr1"})," (",(0,n.jsx)(s.em,{children:"expr2"}),", etc.)."]}),"\n",(0,n.jsx)(s.p,{children:"Cada vari\xe1vel de destino pode ser uma vari\xe1vel ou um elemento de array. Entretanto, veja as restri\xe7\xf5es listadas mais adiante nesta se\xe7\xe3o."}),"\n",(0,n.jsxs)(s.p,{children:["Para cada par de vari\xe1veis ",(0,n.jsx)(s.em,{children:"dstVar;expr"}),", a express\xe3o deve ser compat\xedvel com a vari\xe1vel de destino, do contr\xe1rio voc\xea pode terminar com um valor na vari\xe1vel que n\xe3o tenha significado. Em modo interpretado, se uma vari\xe1vel de destino n\xe3o existe, \xe9 criada e atribu\xedda com a express\xe3o."]}),"\n",(0,n.jsx)(s.p,{children:"O processo atual escreve as vari\xe1veis do processo de destino, o processo de destino n\xe3o \xe9 advertido de nenhuma maneira de que outro processo est\xe1 escrevendo a inst\xe2ncia de suas vari\xe1veis."}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"4D Server:"})," utilizando 4D Client, pode escrever vari\xe1veis em um processo de destino executado na m\xe1quina servidor (procedimento armazenado). Para fazer isto, coloque um sinal de menos antes do n\xfamero de identifica\xe7\xe3o do processo no par\xe2metro ",(0,n.jsx)(s.em,{children:"processo"}),".",(0,n.jsx)(s.br,{}),"\nA comunica\xe7\xe3o processo \u201CIntermachine\u201D, oferecida pelos comandos ",(0,n.jsx)(s.a,{href:"/docs/pt/commands/get-process-variable",title:"GET PROCESS VARIABLE",children:"GET PROCESS VARIABLE"}),", SET PROCESS VARIABLE e ",(0,n.jsx)(s.a,{href:"/docs/pt/commands/variable-to-variable",title:"VARIABLE TO VARIABLE",children:"VARIABLE TO VARIABLE"}),", \xe9 poss\xedvel unicamente desde o cliente ao servidor. Sempre \xe9 um processo cliente o que l\xea ou escreve as vari\xe1veis de um procedimento armazenado."]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Dica"}),": em outras palavras, n\xe3o \xe9 necess\xe1rio conhecer o n\xfamero de identifica\xe7\xe3o do processo para poder utilizar o comando SET PROCESS VARIABLE com as vari\xe1veis inter-processo do servidor. Esta possibilidade \xe9 muito \xfatil particularmente quando um procedimento armazenado se lan\xe7a utilizando o m\xe9todo base On server startup. Como as m\xe1quinas cliente n\xe3o conhecem automaticamente o n\xfamero de identifica\xe7\xe3o desse processo, todo valor negativo pode ser passado no par\xe2metro ",(0,n.jsx)(s.em,{children:"processo"}),"."]}),"\n",(0,n.jsx)(s.h3,{id:"restri\xe7\xf5es",children:"Restri\xe7\xf5es"}),"\n",(0,n.jsx)(s.p,{children:"SET PROCESS VARIABLE n\xe3o aceita vari\xe1veis locais como vari\xe1veis de destino."}),"\n",(0,n.jsx)(s.p,{children:"SET PROCESS VARIABLE aceita todo tipo de processo de vari\xe1vel processo ou inter-processo de destino, exceto:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Ponteiros"}),"\n",(0,n.jsxs)(s.li,{children:["Arrays de todo tipo. Para escrever um array como um todo de um processo a outro, utilize o comando ",(0,n.jsx)(s.a,{href:"/docs/pt/commands/variable-to-variable",title:"VARIABLE TO VARIABLE",children:"VARIABLE TO VARIABLE"}),". Note, entretanto, SET PROCESS VARIABLE lhe permite escrever o elemento de um array."]}),"\n",(0,n.jsx)(s.li,{children:"N\xe3o \xe9 poss\xedvel escrever o elemento de um array de ponteiros ou o elemento de um array de duas dimens\xf5es."}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["O processo de destino deve ser um processo usu\xe1rio; n\xe3o pode ser um processo kernel. Se o processo de destino n\xe3o existe, \xe9 gerado um erro. Pode encontrar este erro utilizando um m\xe9todo de gest\xe3o de erros instalado com ",(0,n.jsx)(s.a,{href:"/docs/pt/commands/on-err-call",title:"ON ERR CALL",children:"ON ERR CALL"}),"."]}),"\n",(0,n.jsx)(s.h2,{id:"exemplo-1",children:"Exemplo 1"}),"\n",(0,n.jsxs)(s.p,{children:["A seguinte linha de c\xf3digo atribui (\xe0 cadeia vazia) o texto da vari\xe1vel ",(0,n.jsx)(s.em,{children:"vtEstadoAtual"})," do processo cujo n\xfamero \xe9 ",(0,n.jsx)(s.em,{children:"$vlProcesso"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-4d",children:'\xa0SET PROCESS VARIABLE($vlProcesso;vtEstadoAtual;"")\n'})}),"\n",(0,n.jsx)(s.h2,{id:"exemplo-2",children:"Exemplo 2"}),"\n",(0,n.jsxs)(s.p,{children:["Esta linha de c\xf3digo atribui a vari\xe1vel texto ",(0,n.jsx)(s.em,{children:"vtEstadoAtual"})," do processo cujo n\xfamero \xe9 ",(0,n.jsx)(s.em,{children:"$vlProcesso"})," o valor da vari\xe1vel ",(0,n.jsx)(s.em,{children:"$vtInfo"})," desde o m\xe9todo de execu\xe7\xe3o no processo atual:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-4d",children:"\xa0SET PROCESS VARIABLE($vlProcesso;vtEstadoAtual;$vtInfo)\n"})}),"\n",(0,n.jsx)(s.h2,{id:"exemplo-3",children:"Exemplo 3"}),"\n",(0,n.jsxs)(s.p,{children:["Esta linha de c\xf3digo define o texto da vari\xe1vel ",(0,n.jsx)(s.em,{children:"vtEstadoAtual"})," do processo cujo n\xfamero for ",(0,n.jsx)(s.em,{children:"$vlProcesso"})," ao valor da mesma vari\xe1vel no processo atual:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-4d",children:"\xa0SET PROCESS VARIABLE($vlProcesso;vtEstadoAtual;vtEstadoAtual)\n"})}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Nota:"})," o primeiro ",(0,n.jsx)(s.em,{children:"vtEstadoAtual"})," atribui a inst\xe2ncia da vari\xe1vel no processo de destino. O segundo ",(0,n.jsx)(s.em,{children:"vtEstadoAtual"})," atribui a inst\xe2ncia da vari\xe1vel no processo atual."]}),"\n",(0,n.jsx)(s.h2,{id:"exemplo-4",children:"Exemplo 4"}),"\n",(0,n.jsxs)(s.p,{children:["Este exemplo transforma sequencialmente todos os elementos de um array processo em mai\xfasculas, desde o processo indicado por ",(0,n.jsx)(s.em,{children:"$vlProceso"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-4d",children:"\xa0GET PROCESS VARIABLE($vlProcesso;vl_IPCom_Array;$vlTam)\n\xa0For($vlElem;1;$vlTam)\n\xa0\xa0\xa0\xa0GET PROCESS VARIABLE($vlProcesso;at_IPCom_Array{$vlElem};$vtElem)\n\xa0\xa0\xa0\xa0SET PROCESS VARIABLE($vlProcesso;at_IPCom_Array{$vlElem};Uppercase($vtElem))\n\xa0End for\n"})}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Nota:"})," neste exemplo, a vari\xe1vel processo ",(0,n.jsx)(s.em,{children:"vl_IPCom_Array"})," cont\xe9m o tamanho do array ",(0,n.jsx)(s.em,{children:"at_IPCom_Array"})," e deve ser mantida pelo processo fonte/destino."]}),"\n",(0,n.jsx)(s.h2,{id:"exemplo-5",children:"Exemplo 5"}),"\n",(0,n.jsxs)(s.p,{children:["Este exemplo escreve a inst\xe2ncia das vari\xe1veis ",(0,n.jsx)(s.em,{children:"v1"}),", ",(0,n.jsx)(s.em,{children:"v2"})," e ",(0,n.jsx)(s.em,{children:"v3"})," utilizando a inst\xe2ncia das mesmas vari\xe1veis desde o processo atual:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-4d",children:"\xa0SET PROCESS VARIABLE($vlProcesso;v1;v1;v2;v2;v3;v3)\n"})}),"\n",(0,n.jsx)(s.h2,{id:"ver-tamb\xe9m",children:"Ver tamb\xe9m"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.a,{href:"/docs/pt/commands/get-process-variable",children:"GET PROCESS VARIABLE"}),(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.a,{href:"/docs/pt/commands/post-outside-call",children:"POST OUTSIDE CALL"}),(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.em,{children:"Processos"}),(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.a,{href:"/docs/pt/commands/variable-to-variable",children:"VARIABLE TO VARIABLE"})]}),"\n",(0,n.jsx)(s.h2,{id:"propriedades",children:"Propriedades"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{}),(0,n.jsx)(s.th,{})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"N\xfamero do comando"}),(0,n.jsx)(s.td,{children:"370"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Thread-seguro"}),(0,n.jsx)(s.td,{children:"\u2717"})]})]})]})]})}function m(e={}){let{wrapper:s}={...(0,a.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},250065:function(e,s,o){o.d(s,{Z:()=>i,a:()=>d});var r=o(667294);let n={},a=r.createContext(n);function d(e){let s=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),r.createElement(a.Provider,{value:s},e.children)}}}]);