"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[83762],{3905:(e,a,o)=>{o.d(a,{Zo:()=>d,kt:()=>c});var r=o(67294);function t(e,a,o){return a in e?Object.defineProperty(e,a,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[a]=o,e}function n(e,a){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),o.push.apply(o,r)}return o}function s(e){for(var a=1;a<arguments.length;a++){var o=null!=arguments[a]?arguments[a]:{};a%2?n(Object(o),!0).forEach((function(a){t(e,a,o[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(o,a))}))}return e}function p(e,a){if(null==e)return{};var o,r,t=function(e,a){if(null==e)return{};var o,r,t={},n=Object.keys(e);for(r=0;r<n.length;r++)o=n[r],a.indexOf(o)>=0||(t[o]=e[o]);return t}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],a.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(t[o]=e[o])}return t}var m=r.createContext({}),i=function(e){var a=r.useContext(m),o=a;return e&&(o="function"==typeof e?e(a):s(s({},a),e)),o},d=function(e){var a=i(e.components);return r.createElement(m.Provider,{value:a},e.children)},l={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},u=r.forwardRef((function(e,a){var o=e.components,t=e.mdxType,n=e.originalType,m=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),u=i(o),c=t,g=u["".concat(m,".").concat(c)]||u[c]||l[c]||n;return o?r.createElement(g,s(s({ref:a},d),{},{components:o})):r.createElement(g,s({ref:a},d))}));function c(e,a){var o=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var n=o.length,s=new Array(n);s[0]=u;var p={};for(var m in a)hasOwnProperty.call(a,m)&&(p[m]=a[m]);p.originalType=e,p.mdxType="string"==typeof e?e:t,s[1]=p;for(var i=2;i<n;i++)s[i]=o[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,o)}u.displayName="MDXCreateElement"},89243:(e,a,o)=>{o.r(a),o.d(a,{assets:()=>i,contentTitle:()=>p,default:()=>u,frontMatter:()=>s,metadata:()=>m,toc:()=>d});o(67294);var r=o(3905);function t(){return t=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var o=arguments[a];for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(e[r]=o[r])}return e},t.apply(this,arguments)}function n(e,a){if(null==e)return{};var o,r,t=function(e,a){if(null==e)return{};var o,r,t={},n=Object.keys(e);for(r=0;r<n.length;r++)o=n[r],a.indexOf(o)>=0||(t[o]=e[o]);return t}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],a.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(t[o]=e[o])}return t}const s={id:"parameters",title:"Par\xe2metros"},p=void 0,m={unversionedId:"Concepts/parameters",id:"version-18/Concepts/parameters",title:"Par\xe2metros",description:"Utiliza\xe7\xe3o de par\xe2metros",source:"@site/i18n/pt/docusaurus-plugin-content-docs/version-18/Concepts/parameters.md",sourceDirName:"Concepts",slug:"/Concepts/parameters",permalink:"/docs/pt/18/Concepts/parameters",draft:!1,editUrl:"https://github.com/4D/docs/edit/main/versioned_docs/version-18/Concepts/parameters.md",tags:[],version:"18",frontMatter:{id:"parameters",title:"Par\xe2metros"},sidebar:"docs",previous:{title:"M\xe9todos",permalink:"/docs/pt/18/Concepts/methods"},next:{title:"Objetos e cole\xe7\xf5es compartilhados",permalink:"/docs/pt/18/Concepts/shared"}},i={},d=[{value:"Utiliza\xe7\xe3o de par\xe2metros",id:"utiliza\xe7\xe3o-de-par\xe2metros",level:2},{value:"Express\xf5es compat\xedveis",id:"express\xf5es-compat\xedveis",level:3},{value:"Fun\xe7\xf5es",id:"fun\xe7\xf5es",level:2},{value:"Declara\xe7\xe3o de par\xe2metros",id:"declara\xe7\xe3o-de-par\xe2metros",level:2},{value:"Valores ou refer\xeancias",id:"valores-ou-refer\xeancias",level:2},{value:"Casos particulares: objetos e cole\xe7\xf5es",id:"casos-particulares-objetos-e-cole\xe7\xf5es",level:3},{value:"Par\xe2metros com nomes",id:"par\xe2metros-com-nomes",level:2},{value:"Par\xe2metros opcionais",id:"par\xe2metros-opcionais",level:2},{value:"Indire\xe7\xe3o dos par\xe2metros",id:"indire\xe7\xe3o-dos-par\xe2metros",level:2},{value:"Declara\xe7\xe3o de par\xe2metros gen\xe9ricos",id:"declara\xe7\xe3o-de-par\xe2metros-gen\xe9ricos",level:3}],l={toc:d};function u(e){var{components:a}=e,o=n(e,["components"]);return(0,r.kt)("wrapper",t({},l,o,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h2",t({},{id:"utiliza\xe7\xe3o-de-par\xe2metros"}),"Utiliza\xe7\xe3o de par\xe2metros"),(0,r.kt)("p",null,"Frequentemente ser\xe1 preciso passar dados para seus m\xe9todos. Isso \xe9 facilmente feito com par\xe2metros."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Os par\xe2metros")," (ou ",(0,r.kt)("strong",{parentName:"p"},"argumentos"),") s\xe3o pe\xe7as de dados que um m\xe9todo necessita para realizar sua tarefa. Os termos ",(0,r.kt)("em",{parentName:"p"},"par\xe1metros")," e ",(0,r.kt)("em",{parentName:"p"},"argumentos"),' s\xe3o utilizados indiferentemente neste manual. Par\xe2metros tamb\xe9m s\xe3o passados para comandos integrados 4D. Neste exemplo, a stirng "Hello" \xe9 um argumento para o comando integrado ',(0,r.kt)("inlineCode",{parentName:"p"},"ALERT"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'ALERT("Hello")\n')),(0,r.kt)("p",null,"Os par\xe2metros s\xe3o passados aos m\xe9todos da mesma maneira. Por exemplo, se um m\xe9todo projeto chamado DO SOMETHING aceitar tr\xeas par\xe2metros, uma chamada ao m\xe9todo poderia ter a seguinte forma:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"DO SOMETHING(WithThis;AndThat;ThisWay)\n")),(0,r.kt)("p",null,"Os par\xe2metros est\xe3o separados por ponto e v\xedrgula (;). Seu valor \xe9 avaliado no momento da chamada."),(0,r.kt)("p",null,"Na subrotina (o m\xe9todo chamado), o valor de cada par\xe2metro se copia automaticamente em vari\xe1veis locais numeradas sequencialmente: $1, $2, $3, etc. A numera\xe7\xe3o das vari\xe1veis locais representam a ordem dos par\xe2metros. A numera\xe7\xe3o das vari\xe1veis locais representam a ordem dos par\xe2metros."),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'  //C\xf3digo do m\xe9todo DO SOMETHING\n  //Assumindo que todos os par\xe2metros s\xe3o de tipo texto\n C_TEXT($1;$2;$3)\n ALERT("I received "+$1+" and "+$2+" and also "+$3)\n  //$1 cont\xe9m o par\xe2metro WithThis\n  //$2 cont\xe9m o par\xe2metro AndThat\n  //$3 cont\xe9m o par\xe2metro ThisWay\n')),(0,r.kt)("p",null,"Dentro da subrotina, pode utilizar os par\xe2metros $1, $2... da mesma maneira que utilizaria qualquer outra vari\xe1vel local. Entretanto, no caso de usar comandos que modifiquem o valor da vari\xe1vel passada como par\xe2metro (por exemplo ",(0,r.kt)("inlineCode",{parentName:"p"},"Find in field"),"), os par\xe2metros $1, $2, etc. n\xe3o podem ser utilizardos diretamente. Primeiro deve copi\xe1-los nas vari\xe1veis locais padr\xe3o (por exemplo: ",(0,r.kt)("inlineCode",{parentName:"p"},"$myvar:=$1"),")."),(0,r.kt)("p",null,"Os mesmos princ\xedpios s\xe3o usados quando m\xe9todos forem executados atrav\xe9s de comandos dedicados, por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'EXECUTE METHOD IN SUBFORM("Cal2";"SetCalendarDate";*;!05/05/10!)  \n//pass the !05/05/10!  \n//passe a data !05/05/10! como par\xe2metro del SetCalendarDate  \n// no contexto de um subformul\xe1rio\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Nota:")," para uma boa execu\xe7\xe3o do c\xf3digo, \xe9 necess\xe1rio ter certeza de que todos os par\xe2metros ",(0,r.kt)("inlineCode",{parentName:"p"},"$1"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"$2"),"... estejam corretamente declarados dentro dos m\xe9todos chamados (ver ",(0,r.kt)("a",t({parentName:"p"},{href:"#declaring-parameters"}),"Declara\xe7\xe3o de par\xe2metros")," mais abaixo)."),(0,r.kt)("h3",t({},{id:"express\xf5es-compat\xedveis"}),"Express\xf5es compat\xedveis"),(0,r.kt)("p",null,"Pode utilizar toda ",(0,r.kt)("a",t({parentName:"p"},{href:"/docs/pt/18/Concepts/quick-tour#expression-types"}),"express\xe3o")," como par\xe2metro, exceto:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"tabelas"),(0,r.kt)("li",{parentName:"ul"},"arrays")),(0,r.kt)("p",null,"As express\xf5es de tabelas ou arrays s\xf3 podem ser passadas ",(0,r.kt)("a",t({parentName:"p"},{href:"/docs/pt/18/Concepts/pointer#pointers-as-parameters-to-methods"}),"como refer\xeancia utilizando um ponteiro"),"."),(0,r.kt)("h2",t({},{id:"fun\xe7\xf5es"}),"Fun\xe7\xf5es"),(0,r.kt)("p",null,"Os dados podem ser devolvidos pelos m\xe9todos. Um m\xe9todo que devolve um valor se chama uma fun\xe7\xe3o."),(0,r.kt)("p",null,"Os comandos de 4D ou 4D Plug-in que devolvem um valor tamb\xe9m s\xe3o chamados fun\xe7\xf5es."),(0,r.kt)("p",null,"Por exemplo, a linha abaixo \xe9 uma senten\xe7a que usa a fun\xe7\xe3o integrada, ",(0,r.kt)("inlineCode",{parentName:"p"},"Length"),", para devolver a longitude de uma string. As instru\xe7\xf5es p\xf5e o valor devolvido por ",(0,r.kt)("inlineCode",{parentName:"p"},"Length")," em uma vari\xe1vel chamada ",(0,r.kt)("em",{parentName:"p"},"MyLength"),". Esta \xe9 a instru\xe7\xe3o:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'MyLength:=Length("How did I get here?")\n')),(0,r.kt)("p",null,"Qualquer subrotina pode retornar um valor. O valor a devolver \xe9 posto na vari\xe1vel local ",(0,r.kt)("inlineCode",{parentName:"p"},"$0"),"."),(0,r.kt)("p",null,"Por exemplo, a fun\xe7\xe3o abaixo, chamada ",(0,r.kt)("inlineCode",{parentName:"p"},"Uppercase4"),", devolve uma string com os quatro  primeiros caracteres da string que foram passados em mai\xfasculas:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"$0:=Uppercase(Substring($1;1;4))+Substring($1;5)\n")),(0,r.kt)("p",null,"Abaixo est\xe1 um exemplo que utiliza a fun\xe7\xe3o Uppercase4:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'NewPhrase:=Uppercase4("This is good.")\n')),(0,r.kt)("p",null,"Neste exemplo, a vari\xe1vel ",(0,r.kt)("em",{parentName:"p"},"NewPhrase")," recebe \u201cTHIS is good.\u201d"),(0,r.kt)("p",null,"O resultado da fun\xe7\xe3o, ",(0,r.kt)("inlineCode",{parentName:"p"},"$0"),", \xe9 uma vari\xe1vel local dentro da subrotina. Pode ser usado como tal dentro da subrotina. It can be used as such within the subroutine. Dentro de la subrotina, pode utilizar ",(0,r.kt)("inlineCode",{parentName:"p"},"$0")," da mesma maneira que utilizaria qualquer outra vari\xe1vel local. \xc9 4D quem devolve o valor de ",(0,r.kt)("inlineCode",{parentName:"p"},"$0")," (como estiver quando a subrotina terminar) ao m\xe9todo chamado."),(0,r.kt)("h2",t({},{id:"declara\xe7\xe3o-de-par\xe2metros"}),"Declara\xe7\xe3o de par\xe2metros"),(0,r.kt)("p",null,"Mesmo n\xe3o sendo obrigat\xf3rio em ",(0,r.kt)("a",t({parentName:"p"},{href:"/docs/pt/18/Concepts/interpreted-compiled"}),"modo interpretado"),", deve declarar cada par\xe2metro nos m\xe9todos chamados para evitar problemas."),(0,r.kt)("p",null,"No exemplo abaixo, o m\xe9todo de projeto ",(0,r.kt)("inlineCode",{parentName:"p"},"OneMethodAmongOthers")," declara tr\xeas par\xe2metros:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"  // M\xe9todo projeto OneMethodAmongOthers\n  // OneMethodAmongOthers ( Real ; Date { ; Long } )\n  // OneMethodAmongOthers ( Amount ; Date { ; Ratio } )\n\n C_REAL($1) // O primeiro par\xe2metro \xe9 de tipo Real\n C_DATE($2) // O segundo par\xe2metro \xe9 de tipo Data\n C_LONGINT($3) // O terceiro par\xe2metro \xe9 de tipo Inteiro longo\n")),(0,r.kt)("p",null,"No exemplo abaixo, o m\xe9todo projeto ",(0,r.kt)("inlineCode",{parentName:"p"},"Capitalize"),"  aceita um par\xe2metro texto e devolve um resultado texto:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"  // M\xe9todo projeto Mai\xfasculas\n  // Mai\xfasculas( Texto ) -> Texto\n  // Mai\xfasculas( Cadena fuente ) -> String com a primeira letra em mai\xfascula\n\n C_TEXT($0;$1)\n $0:=Uppercase(Substring($1;1;1))+Lowercase(Substring($1;2))\n")),(0,r.kt)("p",null,"A utiliza\xe7\xe3o de comandos tais como ",(0,r.kt)("inlineCode",{parentName:"p"},"New process")," com m\xe9todos processo que aceitem par\xe2metros tamb\xe9m requer que os par\xe2metros se declarem explicitamente no m\xe9todo chamado. Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'C_TEXT($string)\nC_LONGINT($idProc;$int)\nC_OBJECT($obj)\n\n$idProc:=New process("foo_method";0;"foo_process";$string;$int;$obj)\n')),(0,r.kt)("p",null,'Este c\xf3digo pode ser executado em modo compilado s\xf3 se "foo_method" declarar seus par\xe2metros:'),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"//foo_method C_TEXT($1)\nC_LONGINT($2)\nC_OBJECT($3)\n...\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Nota:"),' em modo compilado, pode agrupar todos os par\xe1metros das vari\xe1veis locais dos m\xe9todos projeto em um m\xe9todo espec\xedfico com um nome que comece por "Compiler". Dentro deste m\xe9todo, pode pr\xe9-declarar os par\xe2metros de cada m\xe9todo, por exemplo:'),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"})," C_REAL(OneMethodAmongOthers;$1)\n")),(0,r.kt)("p",null,"Ver a p\xe1gina ",(0,r.kt)("a",t({parentName:"p"},{href:"/docs/pt/18/Concepts/interpreted-compiled"}),"Modos interpretado e compilado")," para mais informa\xe7\xe3o."),(0,r.kt)("p",null,'A declara\xe7\xe3o de par\xe2metros tamb\xe9m \xe9 obrigat\xf3iria nos contextos abaixo (esses contextos n\xe3o s\xe3o compat\xedveis com declara\xe7\xf5es em um m\xe9todo "Compiler"):'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Database methods For example, the ",(0,r.kt)("inlineCode",{parentName:"li"},"On Web Connection Database Method")," receives six parameters, $1 to $6, of the data type Text. No come\xe7o do m\xe9todo database, tem que escrever (mesmo se todos os par\xe2metros n\xe3o forem usados):")),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"// On Web Connection C_TEXT($1;$2;$3;$4;$5;$6)\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Triggers The $0 parameter (Longint), which is the result of a trigger, will be typed by the compiler if the parameter has not been explicitly declared. Entretanto, se quiser declar\xe1-lo, deve fazer isso no pr\xf3prio trigger.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Form objects that accept the ",(0,r.kt)("inlineCode",{parentName:"p"},"On Drag Over")," form event The $0 parameter (Longint), which is the result of the ",(0,r.kt)("inlineCode",{parentName:"p"},"On Drag Over")," form event, is typed by the compiler if the parameter has not been explicitly declared. Entretanto, se quiser fazer a declara\xe7\xe3o, deve fazer isso no m\xe9todo objeto. ",(0,r.kt)("strong",{parentName:"p"},"Nota:")," o compilador n\xe3o inicializa o par\xe2metro $0. Portanto, logo que utilizar o evento formul\xe1rio ",(0,r.kt)("inlineCode",{parentName:"p"},"On Drag Over"),", deve inicializar $0. Por exemplo:"))),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"})," C_LONGINT($0)\n If(Form event=On Drag Over)\n    $0:=0\n    ...\n    If($DataType=Is picture)\n       $0:=-1\n    End if\n    ...\n End if\n")),(0,r.kt)("h2",t({},{id:"valores-ou-refer\xeancias"}),"Valores ou refer\xeancias"),(0,r.kt)("p",null,"Quando passar um par\xe2metro, 4D sempre avalia a express\xe3o do par\xe2metro no contexto do m\xe9todo que chama e define o ",(0,r.kt)("strong",{parentName:"p"},"valor resultante")," nas vari\xe1veis locais $1, $2... da subrotina (ver ",(0,r.kt)("a",t({parentName:"p"},{href:"#using-parameters"}),"Utiliza\xe7\xe3o dos par\xe2metros"),"). As vari\xe1veis locais/par\xe2metros n\xe3o s\xe3o os campos, vari\xe1veis ou express\xf5es realmente passadas pelo m\xe9todo chamada; eles apenas cont\xe9m os valores que foram passados. The local variables/parameters are not the actual fields, variables, or expressions passed by the calling method; they only contain the values that have been passed. Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'    //Here is some code from the method MY_METHOD DO_SOMETHING([People]Name) //Let\'s say [People]Name value is "williams" ALERT([People]Name)\n\n    //Here is the code of the method DO_SOMETHING\n $1:=Uppercase($1)\n ALERT($1)\n')),(0,r.kt)("p",null,"A caixa de alerta mostrada por ",(0,r.kt)("inlineCode",{parentName:"p"},"DO_SOMETHING"),' dir\xe1 "WILLIAMS" e a caixa de alerta mostrada por ',(0,r.kt)("inlineCode",{parentName:"p"},"MY_METHOD"),' dir\xe1 "williams". O m\xe9todo mudou localmente o valor do par\xe2metro $1, ma isso n\xe3o afeta o valor de campo ',(0,r.kt)("inlineCode",{parentName:"p"},"[People]Name")," passado como par\xe2metro pelo m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"MY_METHOD"),"."),(0,r.kt)("p",null,"H\xe1 duas formas de fazer com que o m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"DO_SOMETHING")," mude o valor de campo:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Ao inv\xe9s de passar o campo para o m\xe9todo, passa um ponteiro para ele, por isso pode escrever:")),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'  //Esta \xe9 uma parte do c\xf3digo do m\xe9todo MY_METHOD\n DO_SOMETHING(->[People]Name) //Suponha que o valor de [People]Name value seja "williams"\n ALERT([People]Last Name)\n\n  //Este \xe9 o c\xf3digo do m\xe9todo DO_SOMETHING\n $1->:=Uppercase($1->)\n ALERT($1->)\n')),(0,r.kt)("p",null,"Aqui \xe9 o par\xe2metro n\xe3o for o campo, mas sim um ponteiro ao mesmo. Portanto, dentro do m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"DO SOMETHING"),", $1 j\xe1 n\xe3o \xe9 o valor do campo mas um ponteiro ao campo. O objeto ",(0,r.kt)("strong",{parentName:"p"},"referenciado"),' por $1 ($1-> no c\xf3digo anterior) \xe9 o campo real. Portanto, mudar o objeto referenciado vai al\xe9m do escopo da subrotina, e o campo real n\xe3o \xe9 afetado. Neste exemplo, as duas caixas de alerta dir\xe3o "WILLIAMS".'),(0,r.kt)("ol",t({},{start:2}),(0,r.kt)("li",{parentName:"ol"},"Ao inv\xe9s de ter o m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"li"},"DO_SOMETHING"),' "fa\xe7a algo", pode reescrever o m\xe9todo para que devolva um valor. Portanto escreveria:')),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'    //Esta \xe9 uma parte do c\xf3digo do m\xe9todo MY_METHO\n [People]Name:=DO_SOMETHING([People]Name) //Suponha que o valor de [People]Name seja "williams"\n ALERT([People]Name)\n\n    //Este \xe9 o c\xf3digo do m\xe9todo DO_SOMETHING\n $0:=Uppercase($1)\n ALERT($0)\n')),(0,r.kt)("p",null,'Esta segunda t\xe9cnica de retornar um valor por uma subrotina se chama " utilizar uma fun\xe7\xe3o" \xc9 descrita no par\xe1grafo ',(0,r.kt)("a",t({parentName:"p"},{href:"#functions"}),"Fun\xe7\xf5es"),". \xc9 descrita no par\xe1grafo ",(0,r.kt)("a",t({parentName:"p"},{href:"#functions"}),"Fun\xe7\xf5es"),"."),(0,r.kt)("h3",t({},{id:"casos-particulares-objetos-e-cole\xe7\xf5es"}),"Casos particulares: objetos e cole\xe7\xf5es"),(0,r.kt)("p",null,"Deve prestar aten\xe7\xe3o ao fato de que os tipos de dados Objeto e Cole\xe7\xe3o s\xf3 podem ser manejados atrav\xe9s de uma refer\xeancia (ou seja, um  ",(0,r.kt)("em",{parentName:"p"},"ponteiro")," interno)."),(0,r.kt)("p",null,"Por isso, quando usar esses tipos de dados como par\xe2metros, ",(0,r.kt)("inlineCode",{parentName:"p"},"$1, $2...")," n\xe3o cont\xe9m ",(0,r.kt)("em",{parentName:"p"},"valores")," mas sim ",(0,r.kt)("em",{parentName:"p"},"refer\xeancias"),". A modifica\xe7\xe3o do valor dos par\xe2metros ",(0,r.kt)("inlineCode",{parentName:"p"},"$1, $2...")," dentro da subrotina se propagar\xe1 a qualquer lugar onde se utilize o objeto ou cole\xe7\xe3o fonte. Este \xe9 o mesmo principio que  ",(0,r.kt)("a",t({parentName:"p"},{href:"/docs/pt/18/Concepts/pointer#pointers-as-parameters-to-methods"}),"os ponteiros"),", exceto que os par\xe2metros ",(0,r.kt)("inlineCode",{parentName:"p"},"$1, $2...")," n\xe3o necessitam ser desreferenciados na subrotina."),(0,r.kt)("p",null,"Por exemplo, considere o m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"CreatePerson")," que cria um objeto e o envia como par\xe2metro:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'  //CreatePerson\n C_OBJECT($person)\n $person:=New object("Name";"Smith";"Age";40)\n ChangeAge($person)\n ALERT(String($person.  \n')),(0,r.kt)("p",null,"O m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"ChangeAge")," adiciona 10 ao atributo Age do objeto recebido"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"  //ChangeAge\n C_OBJECT($1)\n $1. Age:=$1. Age+10\n ALERT(String($1.\n")),(0,r.kt)("p",null,"Quando executar o m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"CreatePerson"),', as duas caixas de alerta dir\xe3o "50" j\xe1 que a mesma refer\xeancia de objeto \xe9 manejada por ambos m\xe9todos.'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"4D Server:"),' quando s\xe3o passados par\xe2metros entre m\xe9todos que n\xe3o s\xe3o executados na mesma m\xe1quina (utilizando por exemplo a op\xe7\xe3o "Executar no servidor"), as referencias n\xe3o s\xe3o utiliz\xe1veis. Nestes casos, s\xe3o enviadas c\xf3pias dos par\xe2metros de objetos e cole\xe7\xf5es ao inv\xe9s de refer\xeancias.'),(0,r.kt)("h2",t({},{id:"par\xe2metros-com-nomes"}),"Par\xe2metros com nomes"),(0,r.kt)("p",null,"A utiliza\xe7\xe3o de objetos como par\xe2metros permite manejar ",(0,r.kt)("strong",{parentName:"p"},"par\xe2metros com nome"),". Este estilo de programa\xe7\xe3o \xe9 simples, flex\xedvel e f\xe1cil de ler."),(0,r.kt)("p",null,"Por exemplo, utilizando o m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"CreatePerson"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'  //CreatePerson\n C_OBJECT($person)\n $person:=New object("Name";"Smith";"Age";40)\n ChangeAge($person)\n ALERT(String($person.  \n')),(0,r.kt)("p",null,"No m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"ChangeAge")," pode escrever:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'  //ChangeAge\n C_OBJECT($1;$para)\n $para:=$1  \n $para. Age:=$para. Age+10\n ALERT($para. Name+" is "+String($para.\n')),(0,r.kt)("p",null,"Isso oferece uma poderosa maneira de definir ",(0,r.kt)("a",t({parentName:"p"},{href:"#optional-parameters"}),"par\xe2metros opcionais")," (ver tamb\xe9m abaixo). Para manejar os par\xe2metros que faltam, pode:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"veja se todos os par\xe2metros esperados s\xe3o fornecidos comparando-os com o valor ",(0,r.kt)("inlineCode",{parentName:"li"},"Null"),", ou"),(0,r.kt)("li",{parentName:"ul"},"pr\xe9-definir os valores dos par\xe2metros, ou"),(0,r.kt)("li",{parentName:"ul"},"us\xe1-los como valores vazios.")),(0,r.kt)("p",null,"No m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"ChangeAge")," anterior, as propriedades Age e Name s\xe3o obrigat\xf3rias e produzir\xe3o erross se faltar\xe3o. Para evitar isso, pode escrever:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'  //ChangeAge\n C_OBJECT($1;$para)\n $para:=$1  \n $para. Age:=Num($para. Age)+10\n ALERT(String($para. Name)+" is "+String($para.\n')),(0,r.kt)("p",null,'Ambos par\xe2metros s\xe3o opcionais: se n\xe3o forem preenchidos, o resultado ser\xe1 "\xe9 10 anos de idade", mas nenhum erro ser\xe1 gerado.'),(0,r.kt)("p",null,"Finalmente, com par\xe2metros com nome, a manuten\xe7\xe3o ou a reprodu\xe7\xe3o das aplica\xe7\xf5es \xe9 muito simples e seguro. Imagine que depois perceba de que adicionar 10 anos n\xe3o funciona sempre. You need another parameter to set how many years to add. You write: Escreva:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'$person:=New object("Name";"Smith";"Age";40;"toAdd";10)\nChangeAge($person)\n\n//ChangeAge C_OBJECT($1;$para)\n$para:=$1 If ($para.toAdd=Null)\n    $para.toAdd:=10 End if\n$para. Age:=Num($para. Age)+$para.toAdd ALERT(String($para. Name)+" is "+String($para.\n')),(0,r.kt)("p",null,"N\xe3o precisar\xe1 mudar seu c\xf3digo existente. Sempre funcionar\xe1 como na vers\xe3o anterior, mas se for necess\xe1rio, \xe9 poss\xedvel usar outro valor diferente de 10 anos."),(0,r.kt)("p",null,"Com vari\xe1veis com nome, qualquer par\xe2metro pode ser opcional. No exemplo acima, todos os par\xe2metros s\xe3o opcionais e qualquer pode ser dado em qualquer ordem."),(0,r.kt)("h2",t({},{id:"par\xe2metros-opcionais"}),"Par\xe2metros opcionais"),(0,r.kt)("p",null,"No manual ",(0,r.kt)("em",{parentName:"p"},"Linguagem de 4D"),", os caracteres { } (chaves) indicam par\xe2metros opcionais. Por exemplo, ",(0,r.kt)("inlineCode",{parentName:"p"},"ALERT (message{; okButtonTitle})")," significa que o par\xe2metro ",(0,r.kt)("em",{parentName:"p"},"okButtonTitle")," pode omitir o chamado ao comando. Pode fazer a chamada de duas maneiras:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'ALERT("Are you sure?";"Yes I am") //2 parameters ALERT("Time is over") //1 parameter\n')),(0,r.kt)("p",null,"Os m\xe9todos projeto 4D tamb\xe9m aceitam esses par\xe2metros opcionais, come\xe7ando pela direita. O problema com os par\xe2metros opcionais \xe9 como manejar o caso em que alguns deles estejam faltando no m\xe9todo chamado, nunca deveria produzir um erro. Uma boa pr\xe1tica \xe9 atribuir valores padr\xe3o aos par\xe2metros n\xe3o utilizados."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Quando os par\xe2metros opcionais forem necess\xe1rios em seus m\xe9todos, tamb\xe9m pode considerar o uso de ",(0,r.kt)("a",t({parentName:"p"},{href:"#named-parameters"}),"par\xe2metros com nome")," que oferecem uma forma flex\xedvel de manejar um n\xfamero vari\xe1vel de par\xe2metros.")),(0,r.kt)("p",null,"Utilizando o comando ",(0,r.kt)("inlineCode",{parentName:"p"},"Count parameters")," desde dentro do m\xe9todo chamado, pode detectar o n\xfamero real de par\xe2metros e realizar diferentes opera\xe7\xf5es dependendo do que tenha recebido."),(0,r.kt)("p",null,"O exemplo abaixo mostra uma mensagem de texto e pode inserir o texto em um documento no disco ou em uma \xe1rea de 4D Write Pro:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"// M\xe9todo projeto APPEND TEXT\n// APPEND TEXT ( Text { ; Text { ; Object } } )\n// APPEND TEXT ( Message { ; Path { ; 4DWPArea } } )\n\n C_TEXT($1;$2)\n C_OBJECT($3)\n\n ALERT($1)\n If(Count parameters>=3)\n    WP SET TEXT($3;$1;wk append)\n Else\n    If(Count parameters>=2)\n       TEXT TO DOCUMENT($2;$1)\n    End if\n End if\n")),(0,r.kt)("p",null,"Depois de adicionar este m\xe9todo projeto a sua aplica\xe7\xe3o, pode escrever:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'APPEND TEXT(vtSomeText) //Will only display the  message APPEND TEXT(vtSomeText;$path) //Displays text message and appends it to document at $path APPEND TEXT(vtSomeText;"";$wpArea) //Displays text message and writes it to $wpArea\n')),(0,r.kt)("h2",t({},{id:"indire\xe7\xe3o-dos-par\xe2metros"}),"Indire\xe7\xe3o dos par\xe2metros"),(0,r.kt)("p",null,"Os m\xe9todos projeto 4D aceitam um n\xfamero vari\xe1vel de parametros do mesmo tipo, come\xe7ando pela direita. Este princ\xedpio se chama ",(0,r.kt)("strong",{parentName:"p"},"la indire\xe7\xe3o de par\xe2metros"),". Using the ",(0,r.kt)("inlineCode",{parentName:"p"},"Count parameters")," command you can then address those parameters with a ",(0,r.kt)("inlineCode",{parentName:"p"},"For... End for")," loop and the parameter indirection syntax."),(0,r.kt)("p",null,"No exemplo abaixo, o m\xe9todo projeto ",(0,r.kt)("inlineCode",{parentName:"p"},"SEND PACKETS")," aceita um par\xe2metro de tempo seguido de um n\xfamero vari\xe1vel de par\xe2metros de texto:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"  //M\xe9todo projeto SEND PACKETS\n  //SEND PACKETS ( Time ; Text { ; Text2... ; TextN } )\n  //SEND PACKETS ( docRef ; Data { ; Data2... ; DataN } )\n\n C_TIME($1)\n C_TEXT(${2})\n C_LONGINT($vlPacket)\n\n For($vlPacket;2;Count parameters)\n    SEND PACKET($1;${$vlPacket})\n End for\n")),(0,r.kt)("p",null,"A indire\xe7\xe3o de par\xe2metros se gerencia melhor se respeitar a conven\xe7\xe3o abaixo: se s\xf3 alguns dos par\xe2metros forem endere\xe7ados por indire\xe7\xe3o, devem ser passados depois dos outros. Dentro do m\xe9todo, um endere\xe7o de indire\xe7ao \xe9 formatado: ${$i}, onde $i for uma vari\xe1vel num\xe9rica. ${$i} se denomina ",(0,r.kt)("strong",{parentName:"p"},"par\xe2metro gen\xe9rico"),"."),(0,r.kt)("p",null,"Por exemplo, considere uma fun\xe7\xe3o que some os valores e devolva a soma formatada segundo um formato que se passa como par\xe2metro. Cada vez que chamar a esse m\xe9todo, o n\xfamero de valores a somar pode variar. Devemos passar os valores como par\xe2metros ao m\xe9todo e o formato em forma de string dos caracteres. O n\xfamero de valores pode variar de chamada a chamada."),(0,r.kt)("p",null,"Essa fun\xe7\xe3o \xe9 chamada da maneira abaixo:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),' Result:=MySum("##0.00";125,2;33,5;24)\n\n')),(0,r.kt)("p",null,'Neste caso, o m\xe9todo que chama obter\xe1 a string "182,70", que \xe9 a soma dos n\xfameros, com o formato especificado. Os par\xe2metros da fun\xe7\xe3o devem ser passados na ordem correta: primeiro o formato e depois os valores.'),(0,r.kt)("p",null,"Aqui est\xe1 a fun\xe7\xe3o, chamada ",(0,r.kt)("inlineCode",{parentName:"p"},"MySum"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"})," $Sum:=0\n For($i;2;Count parameters)\n    $Sum:=$Sum+${$i}\n End for\n $0:=String($Sum;$1)\n")),(0,r.kt)("p",null,"Esta fun\xe7\xe3o pode ser chamada agora de v\xe1rias formas:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),' Result:=MySum("##0.00";125,2;33,5;24)\n Result:=MySum("000";1;18;4;23;17)\n')),(0,r.kt)("h3",t({},{id:"declara\xe7\xe3o-de-par\xe2metros-gen\xe9ricos"}),"Declara\xe7\xe3o de par\xe2metros gen\xe9ricos"),(0,r.kt)("p",null,"Da mesma forma que com outras vari\xe1veis locais, n\xe3o \xe9 obrigat\xf3rio declarar os par\xe2metros gen\xe9ricos mediante uma diretiva de compilador. Entretanto \xe9 recomendado que se evite qualquer ambiguidade. Para declarar estes par\xe2metros, se utiliza uma diretriz do  compilador \xe0 qual se passa ${N} como par\xe2metro, onde N especifica o primeiro par\xe2metro gen\xe9rico."),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"})," C_LONGINT(${4})\n")),(0,r.kt)("p",null,"Esse comando significa que a partir do quarto par\xe2metro (inclu\xeddo), o m\xe9todo pode receber um n\xfamero vari\xe1vel de par\xe2metros de tipo longint. $1, $2 e $3 podem ser de qualquer tipo de dados. Entretanto, se usar $2 por indire\xe7\xe3o, o tipo de dados usados ser\xe1 do tipo gen\xe9rico. $1, $2 and $3 can be of any data type."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Nota:")," O n\xfamero na declara\xe7\xe3o tem que ser uma constante e n\xe3o uma vari\xe1vel."))}u.isMDXComponent=!0}}]);