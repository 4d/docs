"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[31858],{603905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>v});var a=r(667294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=a.createContext({}),s=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(r),v=o,m=d["".concat(p,".").concat(v)]||d[v]||u[v]||n;return r?a.createElement(m,i(i({ref:t},c),{},{components:r})):a.createElement(m,i({ref:t},c))}));function v(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,i=new Array(n);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<n;s++)i[s]=r[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},355572:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>c});r(667294);var a=r(603905);function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a])}return e},o.apply(this,arguments)}function n(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}const i={id:"variant",title:"Diferente de"},l=void 0,p={unversionedId:"Concepts/variant",id:"version-20-R5/Concepts/variant",title:"Diferente de",description:"Variante \xe9 um tipo de vari\xe1vel que permite encapsular dados de qualquer tipo regular v\xe1lido numa vari\xe1vel. Normalmente, este tipo de vari\xe1vel pode ser utilizado para escrever c\xf3digo gen\xe9rico que devolve ou recebe valores para os quais o tipo n\xe3o \xe9 conhecido. \xc9 o caso, por exemplo, do c\xf3digo que trata os atributos dos objectos.",source:"@site/i18n/pt/docusaurus-plugin-content-docs/version-20-R5/Concepts/dt_variant.md",sourceDirName:"Concepts",slug:"/Concepts/variant",permalink:"/docs/pt/Concepts/variant",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20Concepts%2Fdt_variant.md%20(20-R5)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R5",frontMatter:{id:"variant",title:"Diferente de"},sidebar:"docs",previous:{title:"Hora",permalink:"/docs/pt/Concepts/time"},next:{title:"Vari\xe1veis.",permalink:"/docs/pt/Concepts/variables"}},s={},c=[],u={toc:c};function d(e){var{components:t}=e,r=n(e,["components"]);return(0,a.kt)("wrapper",o({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Variante \xe9 um tipo de vari\xe1vel que permite encapsular dados de qualquer tipo regular v\xe1lido numa vari\xe1vel. Normalmente, este tipo de vari\xe1vel pode ser utilizado para escrever c\xf3digo gen\xe9rico que devolve ou recebe valores para os quais o tipo n\xe3o \xe9 conhecido. \xc9 o caso, por exemplo, do c\xf3digo que trata os atributos dos objectos."),(0,a.kt)("p",null,"Uma vari\xe1vel de tipo variante pode conter um valor dos seguintes tipos de dados:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"BLOB"),(0,a.kt)("li",{parentName:"ul"},"boolean"),(0,a.kt)("li",{parentName:"ul"},"collection"),(0,a.kt)("li",{parentName:"ul"},"date"),(0,a.kt)("li",{parentName:"ul"},"inteiro longo"),(0,a.kt)("li",{parentName:"ul"},"object"),(0,a.kt)("li",{parentName:"ul"},"picture"),(0,a.kt)("li",{parentName:"ul"},"pointer"),(0,a.kt)("li",{parentName:"ul"},"real"),(0,a.kt)("li",{parentName:"ul"},"text"),(0,a.kt)("li",{parentName:"ul"},"time"),(0,a.kt)("li",{parentName:"ul"},"null"),(0,a.kt)("li",{parentName:"ul"},"indefinido")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Os arrays n\xe3o podem ser armazenados em vari\xe1veis variant.")),(0,a.kt)("p",null,"Tanto no modo interpretado como no modo compilado, a uma mesma vari\xe1vel variante podem ser atribu\xeddos conte\xfados de tipos diferentes. Ao contr\xe1rio dos tipos de vari\xe1veis regulares, o tipo de conte\xfado da vari\xe1vel de variante \xe9 diferente do pr\xf3prio tipo de vari\xe1vel variant. Por exemplo:"),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'C_VARIANT($variant)\n\n$variant:="hello world"\n$vtype:=Type($variant) // 12 (Is variant)\n$vtypeVal:=Value type($variant) // 2 (Is text)\n\n$variant:=42\n$vtype:=Type($variant) // 12 (Is variant)\n$vtypeVal:=Value type($variant) // 1 (Is real)\n')),(0,a.kt)("p",null,"Pode utilizar vari\xe1veis variant onde quer que sejam esperadas vari\xe1veis, apenas tem de se certificar de que o tipo de dados do conte\xfado da vari\xe1vel \xe9 do tipo esperado. Ao aceder a vari\xe1veis variant, apenas o seu valor actual \xe9 tido em conta. Por exemplo:"),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'C_VARIANT($v)\n$v:="hello world"\n$v2:=$v //atribuir vari\xe1vel a outra vari\xe1vel\n\n$t:=Type($v) // 12 (Is variant)\n$t2:=Type($v2) // 2 (Is text)\n')),(0,a.kt)("p",null,"Variant can be used to declare method parameters ($0, $1,...) that can be of various types. Neste caso, pode construir o seu c\xf3digo testando, por exemplo, o tipo de valor do par\xe2metro:"),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-4d"}),"C_VARIANT($1)\nCase of\n: (Value type($1)=Is longint)\n...\n: (Value type($1)=Is text)\n...\nEnd case\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Quando as vari\xe1veis variant n\xe3o s\xe3o necess\xe1rias (ou seja, quando o tipo de dados \xe9 conhecido), recomenda-se a utiliza\xe7\xe3o de vari\xe1veis de tipo regular. As vari\xe1veis de tipo regular proporcionam um melhor desempenho, tornam o c\xf3digo mais claro e s\xe3o \xfateis para o compilador evitar erros relacionados com a passagem de tipos de dados inesperados.")))}d.isMDXComponent=!0}}]);