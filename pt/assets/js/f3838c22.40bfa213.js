/*! For license information please see f3838c22.40bfa213.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[69406],{177724:(e,o,r)=>{r.r(o),r.d(o,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>n,metadata:()=>i,toc:()=>l});var t=r(474848),s=r(28453);const n={id:"control-flow",title:"Vis\xe3o geral do fluxo de controle"},a=void 0,i={id:"Concepts/control-flow",title:"Vis\xe3o geral do fluxo de controle",description:"Regardless of the simplicity or complexity of a method, you will always use one or more of three types of programming structures. As estruturas de programa\xe7\xe3o determinam o fluxo de execu\xe7\xe3o, se ser\xe3o executadas, e a ordem das linhas de instru\xe7\xf5es dentro do m\xe9todo. H\xe1 tr\xeas tipos de estruturas:",source:"@site/i18n/pt/docusaurus-plugin-content-docs/version-19/Concepts/flow-control.md",sourceDirName:"Concepts",slug:"/Concepts/control-flow",permalink:"/docs/pt/19/Concepts/control-flow",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20Concepts%2Fflow-control.md%20(19)&body=Please%20enter%20your%20comment%3A",tags:[],version:"19",frontMatter:{id:"control-flow",title:"Vis\xe3o geral do fluxo de controle"},sidebar:"docs",previous:{title:"Classes",permalink:"/docs/pt/19/Concepts/classes"},next:{title:"Estruturas condicionais",permalink:"/docs/pt/19/Concepts/branching"}},c={},l=[];function d(e){const o={a:"a",br:"br",code:"code",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.p,{children:"Regardless of the simplicity or complexity of a method, you will always use one or more of three types of programming structures. As estruturas de programa\xe7\xe3o determinam o fluxo de execu\xe7\xe3o, se ser\xe3o executadas, e a ordem das linhas de instru\xe7\xf5es dentro do m\xe9todo. H\xe1 tr\xeas tipos de estruturas:"}),"\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"Sequencial"}),": uma estrutura sequencial \xe9 uma estrutura simples e linear. Uma sequ\xeancia \xe9 uma s\xe9rie de senten\xe7as que 4D executa uma atr\xe1s da outra, da primera \xe0 \xfaltima. Uma instru\xe7\xe3o de uma linha, utilizada frequentemente para os m\xe9todos dos objetos, \xe9 o caso mais simples de uma estrutura sequencial. Por exemplo: ",(0,t.jsx)(o.code,{children:"[People]lastName:=Uppercase([People]lastName)"})]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:(0,t.jsx)(o.a,{href:"/docs/pt/19/Concepts/branching",children:"Branching"})}),": A branching structure allows methods to test a condition and take alternative paths, depending on the result. A condi\xe7\xe3o \xe9 uma express\xe3o booleana, uma express\xe3o que avalia TRUE ou FALSE. One branching structure is the ",(0,t.jsx)(o.code,{children:"If...Else...End if"})," structure, which directs program flow along one of two paths. The other branching structure is the ",(0,t.jsx)(o.code,{children:"Case of...Else...End case"})," structure, which directs program flow to one of many paths."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:(0,t.jsx)(o.a,{href:"/docs/pt/19/Concepts/looping",children:"Looping"})}),": When writing methods, it is very common to find that you need a sequence of statements to repeat a number of times. Para lidar com esta necessidade, a linguagem 4D oferece as estruturas de loop abaixo:\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsx)(o.li,{children:(0,t.jsx)(o.code,{children:"While... End while"})}),"\n",(0,t.jsx)(o.li,{children:(0,t.jsx)(o.code,{children:"Repeat... Until"})}),"\n",(0,t.jsx)(o.li,{children:(0,t.jsx)(o.code,{children:"For...End for"})}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.code,{children:"For each...End for each"}),(0,t.jsx)(o.br,{})," The loops are controlled in two ways: either they loop until a condition is met, or they loop a specified number of times. Cada estrutura de looping pode ser usada de qualquer forma, mas loops",(0,t.jsx)(o.code,{children:"While"}),"  e ",(0,t.jsx)(o.code,{children:"Repeat"})," s\xe3o mais apropriados para repetir at\xe9 que uma condi\xe7\xe3o seja satisfeita, e loops ",(0,t.jsx)(o.code,{children:"For"})," s\xe3o mais apropriados para looping um n\xfamero especificado de vezes. ",(0,t.jsx)(o.code,{children:"For each... End for each"})," permite misturar ambas as formas e foi concebido para fazer loop dentro de objectos e colec\xe7\xf5es."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.strong,{children:"Nota:"}),' 4D permite incorporar estruturas de programa\xe7\xe3o at\xe9 uma "profundidade" de 512 n\xedveis.']})]})}function u(e={}){const{wrapper:o}={...(0,s.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},221020:(e,o,r)=>{var t=r(296540),s=Symbol.for("react.element"),n=Symbol.for("react.fragment"),a=Object.prototype.hasOwnProperty,i=t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,o,r){var t,n={},l=null,d=null;for(t in void 0!==r&&(l=""+r),void 0!==o.key&&(l=""+o.key),void 0!==o.ref&&(d=o.ref),o)a.call(o,t)&&!c.hasOwnProperty(t)&&(n[t]=o[t]);if(e&&e.defaultProps)for(t in o=e.defaultProps)void 0===n[t]&&(n[t]=o[t]);return{$$typeof:s,type:e,key:l,ref:d,props:n,_owner:i.current}}o.Fragment=n,o.jsx=l,o.jsxs=l},474848:(e,o,r)=>{e.exports=r(221020)},28453:(e,o,r)=>{r.d(o,{R:()=>a,x:()=>i});var t=r(296540);const s={},n=t.createContext(s);function a(e){const o=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(n.Provider,{value:o},e.children)}}}]);