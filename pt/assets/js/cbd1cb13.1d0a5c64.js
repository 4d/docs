"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[69336],{3905:(e,a,t)=>{t.d(a,{Zo:()=>m,kt:()=>c});var r=t(67294);function o(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function n(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?n(Object(t),!0).forEach((function(a){o(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,r,o=function(e,a){if(null==e)return{};var t,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)t=n[r],a.indexOf(t)>=0||(o[t]=e[t]);return o}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)t=n[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),i=function(e){var a=r.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},m=function(e){var a=i(e.components);return r.createElement(l.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},u=r.forwardRef((function(e,a){var t=e.components,o=e.mdxType,n=e.originalType,l=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),u=i(t),c=o,h=u["".concat(l,".").concat(c)]||u[c]||d[c]||n;return t?r.createElement(h,s(s({ref:a},m),{},{components:t})):r.createElement(h,s({ref:a},m))}));function c(e,a){var t=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var n=t.length,s=new Array(n);s[0]=u;var p={};for(var l in a)hasOwnProperty.call(a,l)&&(p[l]=a[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,s[1]=p;for(var i=2;i<n;i++)s[i]=t[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},43870:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>i,contentTitle:()=>p,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>m});t(67294);var r=t(3905);function o(){return o=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},o.apply(this,arguments)}function n(e,a){if(null==e)return{};var t,r,o=function(e,a){if(null==e)return{};var t,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)t=n[r],a.indexOf(t)>=0||(o[t]=e[t]);return o}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)t=n[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}const s={id:"parameters",title:"Par\xe2metros"},p=void 0,l={unversionedId:"Concepts/parameters",id:"version-19-R6/Concepts/parameters",title:"Par\xe2metros",description:"Frequentemente ser\xe1 preciso passar dados para seus m\xe9todos e fun\xe7\xf5es. Isso \xe9 facilmente feito com par\xe2metros.",source:"@site/i18n/pt/docusaurus-plugin-content-docs/version-19-R6/Concepts/parameters.md",sourceDirName:"Concepts",slug:"/Concepts/parameters",permalink:"/docs/pt/19-R6/Concepts/parameters",draft:!1,tags:[],version:"19-R6",frontMatter:{id:"parameters",title:"Par\xe2metros"},sidebar:"docs",previous:{title:"M\xe9todos",permalink:"/docs/pt/19-R6/Concepts/methods"},next:{title:"Objetos e cole\xe7\xf5es compartilhados",permalink:"/docs/pt/19-R6/Concepts/shared"}},i={},m=[{value:"Vis\xe3o Geral",id:"vis\xe3o-geral",level:2},{value:"Par\xe2metros com nomes",id:"par\xe2metros-com-nomes",level:2},{value:"Valor retornado",id:"valor-retornado",level:3},{value:"Supported data types",id:"supported-data-types",level:3},{value:"Sequential parameters",id:"sequential-parameters",level:2},{value:"Valor retornado",id:"valor-retornado-1",level:3},{value:"Supported data types",id:"supported-data-types-1",level:3},{value:"<code>return {expression}</code>",id:"return-expression",level:2},{value:"Indire\xe7\xe3o dos par\xe2metros (${N})",id:"indire\xe7\xe3o-dos-par\xe2metros-n",level:2},{value:"Using generic parameters",id:"using-generic-parameters",level:3},{value:"Declara\xe7\xe3o de par\xe2metros gen\xe9ricos",id:"declara\xe7\xe3o-de-par\xe2metros-gen\xe9ricos",level:3},{value:"Declaring parameters for compiled mode",id:"declaring-parameters-for-compiled-mode",level:2},{value:"Wrong parameter type",id:"wrong-parameter-type",level:2},{value:"Input/Output variables",id:"inputoutput-variables",level:2},{value:"Using object properties as named parameters",id:"using-object-properties-as-named-parameters",level:2},{value:"Par\xe2metros opcionais",id:"par\xe2metros-opcionais",level:2},{value:"Valores ou refer\xeancias",id:"valores-ou-refer\xeancias",level:2},{value:"Casos particulares: objetos e cole\xe7\xf5es",id:"casos-particulares-objetos-e-cole\xe7\xf5es",level:3}],d={toc:m};function u(e){var{components:a}=e,t=n(e,["components"]);return(0,r.kt)("wrapper",o({},d,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Frequentemente ser\xe1 preciso passar dados para seus m\xe9todos e fun\xe7\xf5es. Isso \xe9 facilmente feito com par\xe2metros."),(0,r.kt)("h2",o({},{id:"vis\xe3o-geral"}),"Vis\xe3o Geral"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Os par\xe2metros")," (ou ",(0,r.kt)("strong",{parentName:"p"},"argumentos"),") s\xe3o pe\xe7as de dados que um m\xe9todo ou uma  fun\xe7\xe3o de classe necessita para realizar sua tarefa. Os termos ",(0,r.kt)("em",{parentName:"p"},"par\xe1metros")," e ",(0,r.kt)("em",{parentName:"p"},"argumentos"),' s\xe3o utilizados indiferentemente neste manual. Par\xe2metros tamb\xe9m s\xe3o passados para comandos integrados 4D. Neste exemplo, a stirng "Hello" \xe9 um argumento para o comando integrado ',(0,r.kt)("inlineCode",{parentName:"p"},"ALERT"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'ALERT("Hello")\n')),(0,r.kt)("p",null,"Os par\xe2metros s\xe3o passados aos m\xe9todos ou fun\xe7\xf5es de classe da mesma maneira. Por exemplo, se uma fun\xe7\xe3o de classe chamada ",(0,r.kt)("inlineCode",{parentName:"p"},"getArea()")," aceita dois par\xe2metros, uma chamada \xe0 fun\xe7\xe3o de classe poderia ver-se assim:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{}),"$area:=$o.getArea(50;100)\n")),(0,r.kt)("p",null,"Ou, se um m\xe9todo projeto chamado ",(0,r.kt)("inlineCode",{parentName:"p"},"DO_SOMETHING")," aceitar tr\xeas par\xe2metros, uma chamada ao m\xe9todo poderia ter a seguinte forma:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),"DO_SOMETHING($WithThis;$AndThat;$ThisWay)\n")),(0,r.kt)("p",null,"Os par\xe2metros input est\xe3o separados por ponto e v\xedrgula (;)."),(0,r.kt)("p",null,"Os mesmos princ\xedpios s\xe3o usados quando m\xe9todos forem executados atrav\xe9s de comandos dedicados, por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'EXECUTE METHOD IN SUBFORM("Cal2";"SetCalendarDate";*;!05/05/20!)  \n//pass the !05/05/20!  \n//passe a data !05/05/20! como par\xe2metro del SetCalendarDate  \n// no contexto de um subformul\xe1rio\n')),(0,r.kt)("p",null,"Dados tamb\xe9m podem ser ",(0,r.kt)("strong",{parentName:"p"},"devolvidos"),"desde m\xe9todos e fun\xe7\xf5es de classe. Por exemplo, a linha abaixo \xe9 uma senten\xe7a que usa o comando integrado, ",(0,r.kt)("inlineCode",{parentName:"p"},"Length"),", para devolver a longitude de uma string. As instru\xe7\xf5es p\xf5e o valor devolvido por ",(0,r.kt)("inlineCode",{parentName:"p"},"Length")," em uma vari\xe1vel chamada ",(0,r.kt)("em",{parentName:"p"},"MyLength"),". Esta \xe9 a instru\xe7\xe3o:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'MyLength:=Length("How did I get here?")\n')),(0,r.kt)("p",null,"Qualquer subrotina pode retornar um valor. S\xf3 se pode declarar um \xfanico par\xe1metro de sa\xedda por m\xe9todo ou fun\xe7\xe3o de classe."),(0,r.kt)("p",null,"Os valores de entrada e saida s\xe3o ",(0,r.kt)("a",o({parentName:"p"},{href:"#values-or-references"}),"avaliados")," no momento da chamada e copiados em vari\xe1veis locais dentro da fun\xe7\xe3o ou m\xe9todo da classe chamada. Duas sintaxes s\xe3o propostas para declarar os par\xe2metros das vari\xe1veis no codigo chamado:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",o({parentName:"li"},{href:"#named-parameters"}),"named variables")," (recomendado na maioria dos casos) ou"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",o({parentName:"li"},{href:"#sequential-parameters"}),"vari\xe1veis numeradas sequencialmente"),".")),(0,r.kt)("p",null,"Both ",(0,r.kt)("a",o({parentName:"p"},{href:"#named-parameters"}),"named")," and ",(0,r.kt)("a",o({parentName:"p"},{href:"#sequential-parameters"}),"sequential")," syntaxes can be mixed with no restriction to declare parameters. Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),"Function add($x : Integer)\n var $0;$2 : Integer\n $0:=$x+$2\n")),(0,r.kt)("h2",o({},{id:"par\xe2metros-com-nomes"}),"Par\xe2metros com nomes"),(0,r.kt)("p",null,"Inside called methods or class functions, parameter values are assigned to local variables. You can declare parameters using a ",(0,r.kt)("strong",{parentName:"p"},"parameter name")," along with a ",(0,r.kt)("strong",{parentName:"p"},"parameter type"),", separated by colon."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For class functions, parameters are declared along with the ",(0,r.kt)("inlineCode",{parentName:"li"},"Function")," keyword."),(0,r.kt)("li",{parentName:"ul"},"For methods (project methods, form object methods, database methods, and triggers), parameters are declared using the ",(0,r.kt)("inlineCode",{parentName:"li"},"#DECLARE")," keyword at the beginning of the method code.")),(0,r.kt)("p",null,"Exemplos:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),"Function getArea($width : Integer; $height : Integer) -> $area : Integer\n")),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"})," //myProjectMethod\n#DECLARE ($i : Integer) -> $myResult : Object\n")),(0,r.kt)("p",null,"The following rules apply:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The declaration line must be the first line of the method or function code, otherwise an error is displayed (only comments or line breaks can precede the declaration)."),(0,r.kt)("li",{parentName:"ul"},"Parameter names must start with a ",(0,r.kt)("inlineCode",{parentName:"li"},"$")," character and be compliant with ",(0,r.kt)("a",o({parentName:"li"},{href:"/docs/pt/19-R6/Concepts/identifiers#object-properties"}),"property naming rules"),"."),(0,r.kt)("li",{parentName:"ul"},"Multiple parameters (and types) are separated by semicolons (;)."),(0,r.kt)("li",{parentName:"ul"},'Multiline syntaxes are supported (using "',"\\",'" character).')),(0,r.kt)("p",null,"For example, when you call a ",(0,r.kt)("inlineCode",{parentName:"p"},"getArea()")," function with two parameters:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),"$area:=$o.getArea(50;100)\n")),(0,r.kt)("p",null,"In the class function code, the value of each parameter is copied into the corresponding declared parameter:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),"// Class: Polygon Function getArea($width : Integer; $height : Integer)-> $area : Integer\n $area:=$width*$height\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"If the type is not defined, the parameter will be defined as ",(0,r.kt)("a",o({parentName:"p"},{href:"/docs/pt/19-R6/Concepts/variant"}),(0,r.kt)("inlineCode",{parentName:"a"},"Variant")),".")),(0,r.kt)("p",null,"All 4D method kinds support the ",(0,r.kt)("inlineCode",{parentName:"p"},"#DECLARE")," keyword, including database methods. For example, in the ",(0,r.kt)("inlineCode",{parentName:"p"},"On Web Authentication")," database method, you can declare named parameters:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),' // On Web Authentication database method\n#DECLARE ($url : Text; $header : Text; \\\n  $BrowserIP : Text; $ServerIP : Text; \\\n  $user : Text; $password : Text) \\\n  -> $RequestAccepted : Boolean\n$entitySelection:=ds. User.query("login=:1"; $user)\n// Check hash password...\n')),(0,r.kt)("h3",o({},{id:"valor-retornado"}),"Valor retornado"),(0,r.kt)("p",null,"You declare the return parameter of a function by adding an arrow (->) and the parameter definition after the input parameter(s) list. Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),"Function add($x : Variant; $y : Integer) -> $result : Integer\n")),(0,r.kt)("p",null,"You can also declare the return parameter only by adding ",(0,r.kt)("inlineCode",{parentName:"p"},": type"),", in which case it can be handled by a ",(0,r.kt)("a",o({parentName:"p"},{href:"#return-expression"}),"return statement")," or through ",(0,r.kt)("inlineCode",{parentName:"p"},"$0"),"in the ",(0,r.kt)("a",o({parentName:"p"},{href:"#returned-value-1"}),"sequential syntax"),"). Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),"Function add($x : Variant; $y : Integer): Integer\n $0:=$x+$y\n")),(0,r.kt)("h3",o({},{id:"supported-data-types"}),"Supported data types"),(0,r.kt)("p",null,"With named parameters, you can use the same data types as those which are ",(0,r.kt)("a",o({parentName:"p"},{href:"/docs/pt/19-R6/Concepts/variables#using-the-var-keyword"}),"supported by the ",(0,r.kt)("inlineCode",{parentName:"a"},"var")," keyword"),", including class objects.  Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),"Function saveToFile($entity : cs. ShapesEntity; $file : 4D. File)\n")),(0,r.kt)("h2",o({},{id:"sequential-parameters"}),"Sequential parameters"),(0,r.kt)("p",null,"As an alternative to ",(0,r.kt)("a",o({parentName:"p"},{href:"#named-parameters"}),"named parameters")," syntax, you can declare parameters using sequentially numbered variables: ",(0,r.kt)("strong",{parentName:"p"},"$1"),", ",(0,r.kt)("strong",{parentName:"p"},"$2"),", ",(0,r.kt)("strong",{parentName:"p"},"$3"),", and so on. A numera\xe7\xe3o das vari\xe1veis locais representam a ordem dos par\xe2metros."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Although this syntax is supported by class functions, it is recommended to use ",(0,r.kt)("a",o({parentName:"p"},{href:"#named-parameters"}),"named parameters")," syntax in this case.")),(0,r.kt)("p",null,"For example, when you call a ",(0,r.kt)("inlineCode",{parentName:"p"},"DO_SOMETHING")," project method with three parameters:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),"DO_SOMETHING($WithThis;$AndThat;$ThisWay)\n")),(0,r.kt)("p",null,"In the method code, the value of each parameter is automatically copied into $1, $2, $3 variables:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'  //Code of the method DO_SOMETHING\n  //Assuming all parameters are of the text type\n C_TEXT($1;$2;$3)\n ALERT("I received "+$1+" and "+$2+" and also "+$3)\n  //$1 contains the $WithThis parameter\n  //$2 contains the $AndThat parameter\n  //$3 contains the $ThisWay parameter\n')),(0,r.kt)("h3",o({},{id:"valor-retornado-1"}),"Valor retornado"),(0,r.kt)("p",null,"The value to be returned is automatically put into the local variable ",(0,r.kt)("inlineCode",{parentName:"p"},"$0"),"."),(0,r.kt)("p",null,"For example, the following method, called ",(0,r.kt)("inlineCode",{parentName:"p"},"Uppercase4"),", returns a string with the first four characters of the string passed to it in uppercase:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),"$0:=Uppercase(Substring($1;1;4))+Substring($1;5)\n")),(0,r.kt)("p",null,"The following is an example that uses the Uppercase4 method:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'$NewPhrase:=Uppercase4("This is good.")\n')),(0,r.kt)("p",null,"In this example, the variable ",(0,r.kt)("em",{parentName:"p"},"$NewPhrase")," gets \u201cTHIS is good.\u201d"),(0,r.kt)("p",null,"The returned value, ",(0,r.kt)("inlineCode",{parentName:"p"},"$0"),", is a local variable within the subroutine. Pode ser usado como tal dentro da subrotina. Por exemplo, pode escrever:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),"// Do_something\n$0:=Uppercase($1)\nALERT($0)\n")),(0,r.kt)("p",null,"In this example, ",(0,r.kt)("inlineCode",{parentName:"p"},"$0")," is first assigned the value of ",(0,r.kt)("inlineCode",{parentName:"p"},"$1"),", then used as parameter to the ",(0,r.kt)("inlineCode",{parentName:"p"},"ALERT")," command. Dentro de la subrotina, pode utilizar ",(0,r.kt)("inlineCode",{parentName:"p"},"$0")," da mesma maneira que utilizaria qualquer outra vari\xe1vel local. \xc9 4D quem devolve o valor de ",(0,r.kt)("inlineCode",{parentName:"p"},"$0")," (como estiver quando a subrotina terminar) ao m\xe9todo chamado."),(0,r.kt)("h3",o({},{id:"supported-data-types-1"}),"Supported data types"),(0,r.kt)("p",null,"You can use any ",(0,r.kt)("a",o({parentName:"p"},{href:"/docs/pt/19-R6/Concepts/quick-tour#expression-types"}),"expression")," as sequential parameter, except:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"tabelas"),(0,r.kt)("li",{parentName:"ul"},"arrays")),(0,r.kt)("p",null,"As express\xf5es de tabelas ou arrays s\xf3 podem ser passadas ",(0,r.kt)("a",o({parentName:"p"},{href:"/docs/pt/19-R6/Concepts/pointer#pointers-as-parameters-to-methods"}),"como refer\xeancia utilizando um ponteiro"),"."),(0,r.kt)("h2",o({},{id:"return-expression"}),(0,r.kt)("inlineCode",{parentName:"h2"},"return {expression}")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Hist\xf3rico"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",o({parentName:"tr"},{align:null}),"Vers\xe3o"),(0,r.kt)("th",o({parentName:"tr"},{align:null}),"Mudan\xe7as"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",o({parentName:"tr"},{align:null}),"v19 R4"),(0,r.kt)("td",o({parentName:"tr"},{align:null}),"Adicionado"))))),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"return")," statement ends function or method execution and can be used to return an expression to the caller."),(0,r.kt)("p",null,"For example, the following function returns the square of its argument, $x, where $x is a number."),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),"Function square($x : Integer) \n   return $x * $x\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Internally, ",(0,r.kt)("inlineCode",{parentName:"p"},"return x")," executes ",(0,r.kt)("inlineCode",{parentName:"p"},"$0:=x")," or (if declared) ",(0,r.kt)("inlineCode",{parentName:"p"},"myReturnValue:=x"),", and returns to the caller. If ",(0,r.kt)("inlineCode",{parentName:"p"},"return")," is used without an expression, the function or method returns a null value of the declared return type (if any), otherwise ",(0,r.kt)("em",{parentName:"p"},"undefined"),".")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"return")," statement can be used along with the standard syntax for ",(0,r.kt)("a",o({parentName:"p"},{href:"#returned-value"}),"returned values")," (the returned value must be of the declared type). However, note that it ends immediately the code execution. Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),"Function getValue\n $0:=10\n return 20\n // returns 20 Function getValue -> $v : Integer\n return 10\n $v:=20 // never executed\n // returns 10\n")),(0,r.kt)("h2",o({},{id:"indire\xe7\xe3o-dos-par\xe2metros-n"}),"Indire\xe7\xe3o dos par\xe2metros (${N})"),(0,r.kt)("p",null,"4D project methods accept a variable number of parameters. You can address those parameters with a ",(0,r.kt)("inlineCode",{parentName:"p"},"For... End for")," loop, the ",(0,r.kt)("a",o({parentName:"p"},{href:"https://doc.4d.com/4dv19/help/command/en/page259.html"}),(0,r.kt)("inlineCode",{parentName:"a"},"Count parameters"))," command and the ",(0,r.kt)("strong",{parentName:"p"},"parameter indirection syntax"),". Within the method, an indirection address is formatted ",(0,r.kt)("inlineCode",{parentName:"p"},"${N}"),", where ",(0,r.kt)("inlineCode",{parentName:"p"},"N")," is a numeric expression. ",(0,r.kt)("inlineCode",{parentName:"p"},"${N}")," se denomina un ",(0,r.kt)("strong",{parentName:"p"},"par\xe2metro gen\xe9rico"),"."),(0,r.kt)("h3",o({},{id:"using-generic-parameters"}),"Using generic parameters"),(0,r.kt)("p",null,"For example, consider a method that adds values and returns the sum formatted according to a format that is passed as a parameter. Cada vez que chamar a esse m\xe9todo, o n\xfamero de valores a somar pode variar. Devemos passar os valores como par\xe2metros ao m\xe9todo e o formato em forma de string dos caracteres. O n\xfamero de valores pode variar de chamada a chamada."),(0,r.kt)("p",null,"Here is the method, named ",(0,r.kt)("inlineCode",{parentName:"p"},"MySum"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"})," #DECLARE($format : Text) -> $result : Text\n $sum:=0\n For($i;2;Count parameters)\n    $sum:=$sum+${$i}\n End for\n $result:=String($sum;$format)\n")),(0,r.kt)("p",null,"The method's parameters must be passed in the correct order, first the format and then a variable number of values:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),' Result:=MySum("##0.00";125,2;33,5;24) //"182.70"\n Result:=MySum("000";1;2;200) //"203"\n')),(0,r.kt)("p",null,"Note that even if you declared 0, 1, or more parameters in the method, you can always pass the number of parameters that you want. Parameters are all available within the called method through the ",(0,r.kt)("inlineCode",{parentName:"p"},"${N}")," syntax and extra parameters type is ",(0,r.kt)("a",o({parentName:"p"},{href:"/docs/pt/19-R6/Concepts/variant"}),"Variant")," by default (you can declare them using a ",(0,r.kt)("a",o({parentName:"p"},{href:"#declaring-generic-parameters"}),"compiler directive"),"). You just need to make sure parameters exist, thanks to the ",(0,r.kt)("a",o({parentName:"p"},{href:"https://doc.4d.com/4dv19/help/command/en/page259.html"}),(0,r.kt)("inlineCode",{parentName:"a"},"Count parameters"))," command. Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'//foo method\n#DECLARE($p1: Text;$p2 : Text; $p3 : Date) For($i;1;Count parameters)\n ALERT("param "+String($i)+" = "+String(${$i}))\nEnd for\n')),(0,r.kt)("p",null,"This method can be called:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'foo("hello";"world";!01/01/2021!;42;?12:00:00?) //extra parameters are passed //extra parameters are passed\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"A indire\xe7\xe3o de par\xe2metros se gerencia melhor se respeitar a conven\xe7\xe3o abaixo: se s\xf3 alguns dos par\xe2metros forem endere\xe7ados por indire\xe7\xe3o, devem ser passados depois dos outros.")),(0,r.kt)("h3",o({},{id:"declara\xe7\xe3o-de-par\xe2metros-gen\xe9ricos"}),"Declara\xe7\xe3o de par\xe2metros gen\xe9ricos"),(0,r.kt)("p",null,"Da mesma forma que com outras vari\xe1veis locais, n\xe3o \xe9 obrigat\xf3rio declarar os par\xe2metros gen\xe9ricos mediante uma diretiva de compilador. Entretanto \xe9 recomendado que se evite qualquer ambiguidade. Non-declared generic parameters automatically get the ",(0,r.kt)("a",o({parentName:"p"},{href:"/docs/pt/19-R6/Concepts/variant"}),"Variant")," type."),(0,r.kt)("p",null,"Para declarar par\xe2metros gen\xe9ricos, se utiliza uma diretriz do compilador \xe0 qual se passa ${N} como par\xe2metro, onde N especifica o primeiro par\xe2metro gen\xe9rico."),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"})," C_TEXT(${4})\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Declaring generic parameters can only be done with the ",(0,r.kt)("a",o({parentName:"p"},{href:"#sequential-parameters"}),"sequential syntax"),".")),(0,r.kt)("p",null,"This command means that starting with the fourth parameter (included), the method can receive a variable number of parameters of text type. $1, $2 e $3 podem ser de qualquer tipo de dados. Entretanto, se usar $2 por indire\xe7\xe3o, o tipo de dados usados ser\xe1 do tipo gen\xe9rico. $1, $2 e $3 podem ser de qualquer tipo de dados."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The number in the declaration has to be a constant and not a variable.")),(0,r.kt)("h2",o({},{id:"declaring-parameters-for-compiled-mode"}),"Declaring parameters for compiled mode"),(0,r.kt)("p",null,"Even if it is not mandatory in ",(0,r.kt)("a",o({parentName:"p"},{href:"/docs/pt/19-R6/Concepts/interpreted-compiled"}),"interpreted mode"),", you must declare each parameter in the called methods or functions to prevent any trouble."),(0,r.kt)("p",null,"When using the ",(0,r.kt)("a",o({parentName:"p"},{href:"#named-parameters"}),"named variable syntax"),", parameters are automatically declared through the ",(0,r.kt)("inlineCode",{parentName:"p"},"#DECLARE")," keyword or ",(0,r.kt)("inlineCode",{parentName:"p"},"Function")," prototype. Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),"Function add($x : Variant; $y : Integer)-> $result : Integer\n // all parameters are declared with their type\n")),(0,r.kt)("p",null,"When using the ",(0,r.kt)("a",o({parentName:"p"},{href:"#sequential-parameters"}),"sequential variable syntax"),", you need to make sure all parameters are properly declared. No exemplo abaixo, o m\xe9todo projeto ",(0,r.kt)("inlineCode",{parentName:"p"},"Capitalize"),"  aceita um par\xe2metro texto e devolve um resultado texto:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),"  // M\xe9todo projeto Mai\xfasculas\n  // Mai\xfasculas( Texto ) -> Texto\n  // Mai\xfasculas( Cadena fuente ) -> String com a primeira letra em mai\xfascula\n\n C_TEXT($0;$1)\n $0:=Uppercase(Substring($1;1;1))+Lowercase(Substring($1;2))\n")),(0,r.kt)("p",null,"A utiliza\xe7\xe3o de comandos tais como ",(0,r.kt)("inlineCode",{parentName:"p"},"New process")," com m\xe9todos processo que aceitem par\xe2metros tamb\xe9m requer que os par\xe2metros se declarem explicitamente no m\xe9todo chamado. Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'C_TEXT($string)\nC_LONGINT($idProc;$int)\nC_OBJECT($obj)\n\n$idProc:=New process("foo_method";0;"foo_process";$string;$int;$obj)\n')),(0,r.kt)("p",null,'Este c\xf3digo pode ser executado em modo compilado s\xf3 se "foo_method" declarar seus par\xe2metros:'),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),"//foo_method C_TEXT($1)\nC_LONGINT($2)\nC_OBJECT($3)\n...\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},'For compiled mode, you can group all local variable parameters for project methods in a specific method with a name starting with "Compiler". Dentro deste m\xe9todo, pode pr\xe9-declarar os par\xe2metros de cada m\xe9todo, por exemplo:')),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"})," // Compiler_method\n C_REAL(OneMethodAmongOthers;$1) \n")),(0,r.kt)("p",null,"Ver a p\xe1gina ",(0,r.kt)("a",o({parentName:"p"},{href:"/docs/pt/19-R6/Concepts/interpreted-compiled"}),"Modos interpretado e compilado")," para mais informa\xe7\xe3o."),(0,r.kt)("p",null,'A declara\xe7\xe3o de par\xe2metros tamb\xe9m \xe9 obrigat\xf3iria nos contextos abaixo (esses contextos n\xe3o s\xe3o compat\xedveis com declara\xe7\xf5es em um m\xe9todo "Compiler"):'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Database methods - For example, the ",(0,r.kt)("inlineCode",{parentName:"li"},"On Web Connection Database Method")," receives six parameters, $1 to $6, of the data type Text. No come\xe7o do m\xe9todo database, tem que escrever (mesmo se todos os par\xe2metros n\xe3o forem usados):")),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),"// On Web Connection C_TEXT($1;$2;$3;$4;$5;$6)\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"You can also use ",(0,r.kt)("a",o({parentName:"p"},{href:"#named-parameters"}),"named parameters")," with the ",(0,r.kt)("inlineCode",{parentName:"p"},"#DECLARE")," keyword.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Triggers - The $0 parameter (Longint), which is the result of a trigger, will be typed by the compiler if the parameter has not been explicitly declared. Entretanto, se quiser declar\xe1-lo, deve fazer isso no pr\xf3prio trigger.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Form objects that accept the ",(0,r.kt)("inlineCode",{parentName:"p"},"On Drag Over")," form event - The $0 parameter (Longint), which is the result of the ",(0,r.kt)("inlineCode",{parentName:"p"},"On Drag Over")," form event, is typed by the compiler if the parameter has not been explicitly declared. Entretanto, se quiser fazer a declara\xe7\xe3o, deve fazer isso no m\xe9todo objeto. ",(0,r.kt)("strong",{parentName:"p"},"Nota:")," o compilador n\xe3o inicializa o par\xe2metro $0. Portanto, logo que utilizar o evento formul\xe1rio ",(0,r.kt)("inlineCode",{parentName:"p"},"On Drag Over"),", deve inicializar $0. Por exemplo:"))),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"})," C_LONGINT($0)\n If(Form event=On Drag Over)\n    $0:=0\n    ...\n    If($DataType=Is picture)\n       $0:=-1\n    End if\n    ...\n End if\n")),(0,r.kt)("h2",o({},{id:"wrong-parameter-type"}),"Wrong parameter type"),(0,r.kt)("p",null,"Calling a parameter with an wrong type is an ",(0,r.kt)("a",o({parentName:"p"},{href:"/docs/pt/19-R6/Concepts/error-handling"}),"error")," that prevents correct execution. For example, if you write the following methods:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),"// method1\n#DECLARE($value : Text)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),"// method2\nmethod1(42) //wrong type, text expected\n")),(0,r.kt)("p",null,"This case is handled by 4D depending on the context:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"in ",(0,r.kt)("a",o({parentName:"li"},{href:"/docs/pt/19-R6/Concepts/interpreted-compiled"}),"compiled projects"),", an error is generated at the compilation step whenever possible. Otherwise, an error is generated when the method is called."),(0,r.kt)("li",{parentName:"ul"},"in interpreted projects:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"if the parameter was declared using the ",(0,r.kt)("a",o({parentName:"li"},{href:"#named-parameters"}),"named syntax")," (",(0,r.kt)("inlineCode",{parentName:"li"},"#DECLARE")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"Function"),"), an error is generated when the method is called."),(0,r.kt)("li",{parentName:"ul"},"if the parameter was declared using the ",(0,r.kt)("a",o({parentName:"li"},{href:"#sequential-parameters"}),"sequential syntax")," (",(0,r.kt)("inlineCode",{parentName:"li"},"C_XXX"),"), no error is generated, the called method receives an empty value of the expected type.")))),(0,r.kt)("h2",o({},{id:"inputoutput-variables"}),"Input/Output variables"),(0,r.kt)("p",null,"Dentro da subrotina, pode utilizar os par\xe2metros $1, $2... da mesma maneira que utilizaria qualquer outra vari\xe1vel local. Entretanto, no caso de usar comandos que modifiquem o valor da vari\xe1vel passada como par\xe2metro (por exemplo ",(0,r.kt)("inlineCode",{parentName:"p"},"Find in field"),"), os par\xe2metros $1, $2, etc. n\xe3o podem ser utilizardos diretamente. Primeiro deve copi\xe1-los nas vari\xe1veis locais padr\xe3o (por exemplo: ",(0,r.kt)("inlineCode",{parentName:"p"},"$myvar:=$1"),")."),(0,r.kt)("h2",o({},{id:"using-object-properties-as-named-parameters"}),"Using object properties as named parameters"),(0,r.kt)("p",null,"A utiliza\xe7\xe3o de objetos como par\xe2metros permite manejar ",(0,r.kt)("strong",{parentName:"p"},"par\xe2metros com nome"),". Este estilo de programa\xe7\xe3o \xe9 simples, flex\xedvel e f\xe1cil de ler."),(0,r.kt)("p",null,"Por exemplo, utilizando o m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"CreatePerson"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'  //CreatePerson\n var $person : Object\n $person:=New object("Name";"Smith";"Age";40)\n ChangeAge($person)\n ALERT(String($person.  \n')),(0,r.kt)("p",null,"No m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"ChangeAge")," pode escrever:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'  //ChangeAge\n var $1; $para : Object\n $para:=$1  \n $para.Age:=$para.Age+10\n ALERT($para.Name+" is "+String($para.Age)+" years old.")\n')),(0,r.kt)("p",null,"Isso oferece uma poderosa maneira de definir ",(0,r.kt)("a",o({parentName:"p"},{href:"#optional-parameters"}),"par\xe2metros opcionais")," (ver tamb\xe9m abaixo). Para manejar os par\xe2metros que faltam, pode:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"veja se todos os par\xe2metros esperados s\xe3o fornecidos comparando-os com o valor ",(0,r.kt)("inlineCode",{parentName:"li"},"Null"),", ou"),(0,r.kt)("li",{parentName:"ul"},"pr\xe9-definir os valores dos par\xe2metros, ou"),(0,r.kt)("li",{parentName:"ul"},"us\xe1-los como valores vazios.")),(0,r.kt)("p",null,"No m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"ChangeAge")," anterior, as propriedades Age e Name s\xe3o obrigat\xf3rias e produzir\xe3o erross se faltar\xe3o. Para evitar isso, pode escrever:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'  //ChangeAge\n var $1; $para : Object\n $para:=$1  \n $para. Age:=Num($para. Age)+10\n ALERT(String($para. Name)+" is "+String($para. Age)+" years old.")\n')),(0,r.kt)("p",null,'Ambos par\xe2metros s\xe3o opcionais: se n\xe3o forem preenchidos, o resultado ser\xe1 "\xe9 10 anos de idade", mas nenhum erro ser\xe1 gerado.'),(0,r.kt)("p",null,"Finalmente, com par\xe2metros com nome, a manuten\xe7\xe3o ou a reprodu\xe7\xe3o das aplica\xe7\xf5es \xe9 muito simples e seguro. Imagine que depois perceba de que adicionar 10 anos n\xe3o funciona sempre. You need another parameter to set how many years to add. You write: Escreva:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'$person:=New object("Name";"Smith";"Age";40;"toAdd";10)\nChangeAge($person)\n\n//ChangeAge\nvar $1;$para : Object\n$para:=$1 If ($para.toAdd=Null)\n $para.toAdd:=10 End if\n$para. Age:=Num($para. Age)+$para.toAdd ALERT(String($para. Name)+" is "+String($para.\n')),(0,r.kt)("p",null,"N\xe3o precisar\xe1 mudar seu c\xf3digo existente. Sempre funcionar\xe1 como na vers\xe3o anterior, mas se for necess\xe1rio, \xe9 poss\xedvel usar outro valor diferente de 10 anos."),(0,r.kt)("p",null,"Com vari\xe1veis com nome, qualquer par\xe2metro pode ser opcional. No exemplo acima, todos os par\xe2metros s\xe3o opcionais e qualquer pode ser dado em qualquer ordem."),(0,r.kt)("h2",o({},{id:"par\xe2metros-opcionais"}),"Par\xe2metros opcionais"),(0,r.kt)("p",null,"No manual ",(0,r.kt)("em",{parentName:"p"},"Linguagem de 4D"),", os caracteres { } (chaves) indicam par\xe2metros opcionais. Por exemplo, ",(0,r.kt)("inlineCode",{parentName:"p"},"ALERT (message{; okButtonTitle})")," significa que o par\xe2metro ",(0,r.kt)("em",{parentName:"p"},"okButtonTitle")," pode omitir o chamado ao comando. Pode fazer a chamada de duas maneiras:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'ALERT("Are you sure?";"Yes I am") //2 parameters ALERT("Time is over") //1 parameter\n')),(0,r.kt)("p",null,"4D methods and functions also accept such optional parameters. You can declare any number of parameters. If you call a method or function with less parameters than declared, missing parameters are processed as default values in the called code, ",(0,r.kt)("a",o({parentName:"p"},{href:"/docs/pt/19-R6/Concepts/data-types#default-values"}),"according to their type"),". Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'// "concate" function of myClass Function concate ($param1 : Text ; $param2 : Text)->$result : Text\n$result:=$param1+" "+$param2\n')),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'  // Calling method\n $class:=cs.myClass.new()\n $class.concate("Hello") // "Hello "\n $class.concate() // Displays " "\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"You can also call a method or function with more parameters than declared. They will be available within the called code through the ",(0,r.kt)("a",o({parentName:"p"},{href:"#parameter-indirection-n"}),"${N} syntax"),".")),(0,r.kt)("p",null,"Utilizando o comando ",(0,r.kt)("inlineCode",{parentName:"p"},"Count parameters")," desde dentro do m\xe9todo chamado, pode detectar o n\xfamero real de par\xe2metros e realizar diferentes opera\xe7\xf5es dependendo do que tenha recebido."),(0,r.kt)("p",null,"O exemplo abaixo mostra uma mensagem de texto e pode inserir o texto em um documento no disco ou em uma \xe1rea de 4D Write Pro:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),"// APPEND TEXT Project Method\n// APPEND TEXT ( Text { ; Text { ; Object } } )\n// APPEND TEXT ( Message { ; Path { ; 4DWPArea } } )\n\n Method($message : Text; $path : Text; $wpArea : Object)\n\n ALERT($message)\n If(Count parameters>=3)\n    WP SET TEXT($wpArea;$1;wk append)\n Else\n    If(Count parameters>=2)\n       TEXT TO DOCUMENT($path;$message)\n    End if\n End if\n")),(0,r.kt)("p",null,"Depois de adicionar este m\xe9todo projeto a sua aplica\xe7\xe3o, pode escrever:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'APPEND TEXT(vtSomeText) //Will only display the  message APPEND TEXT(vtSomeText;$path) //Displays text message and appends it to document at $path APPEND TEXT(vtSomeText;"";$wpArea) //Displays text message and writes it to $wpArea\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"When optional parameters are needed in your methods, you might also consider using ",(0,r.kt)("a",o({parentName:"p"},{href:"#using-objects-properties-as-named-parameters"}),"object properties as named parameters")," which provide a flexible way to handle variable numbers of parameters.")),(0,r.kt)("h2",o({},{id:"valores-ou-refer\xeancias"}),"Valores ou refer\xeancias"),(0,r.kt)("p",null,"When you pass a parameter, 4D always evaluates the parameter expression in the context of the calling method and sets the ",(0,r.kt)("strong",{parentName:"p"},"resulting value")," to the local variables in the class function or subroutine. As vari\xe1veis locais/par\xe2metros n\xe3o s\xe3o os campos, vari\xe1veis ou express\xf5es realmente passadas pelo m\xe9todo chamada; eles apenas cont\xe9m os valores que foram passados. As vari\xe1veis locais/par\xe2metros n\xe3o s\xe3o os campos, vari\xe1veis ou express\xf5es realmente passadas pelo m\xe9todo chamada; eles apenas cont\xe9m os valores que foram passados. Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),' //Here is some code from the method MY_METHOD DO_SOMETHING([People]Name) //Let\'s say [People]Name value is "williams" ALERT([People]Name)\n\n //Here is the code of the method DO_SOMETHING\n $1:=Uppercase($1)\n ALERT($1)\n')),(0,r.kt)("p",null,"A caixa de alerta mostrada por ",(0,r.kt)("inlineCode",{parentName:"p"},"DO_SOMETHING"),' dir\xe1 "WILLIAMS" e a caixa de alerta mostrada por ',(0,r.kt)("inlineCode",{parentName:"p"},"MY_METHOD"),' dir\xe1 "williams". O m\xe9todo mudou localmente o valor do par\xe2metro $1, ma isso n\xe3o afeta o valor de campo ',(0,r.kt)("inlineCode",{parentName:"p"},"[People]Name")," passado como par\xe2metro pelo m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"MY_METHOD"),"."),(0,r.kt)("p",null,"H\xe1 duas formas de fazer com que o m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"DO_SOMETHING")," mude o valor de campo:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Ao inv\xe9s de passar o campo para o m\xe9todo, passa um ponteiro para ele, por isso pode escrever:")),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'  //Esta \xe9 uma parte do c\xf3digo do m\xe9todo MY_METHOD\n DO_SOMETHING(->[People]Name) //Suponha que o valor de [People]Name value seja "williams"\n ALERT([People]Last Name)\n\n  //Este \xe9 o c\xf3digo do m\xe9todo DO_SOMETHING\n $1->:=Uppercase($1->)\n ALERT($1->)\n')),(0,r.kt)("p",null,"Aqui \xe9 o par\xe2metro n\xe3o for o campo, mas sim um ponteiro ao mesmo. Portanto, dentro do m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"DO SOMETHING"),", $1 j\xe1 n\xe3o \xe9 o valor do campo mas um ponteiro ao campo. O objeto ",(0,r.kt)("strong",{parentName:"p"},"referenciado"),' por $1 ($1-> no c\xf3digo anterior) \xe9 o campo real. Portanto, mudar o objeto referenciado vai al\xe9m do escopo da subrotina, e o campo real n\xe3o \xe9 afetado. Neste exemplo, as duas caixas de alerta dir\xe3o "WILLIAMS".'),(0,r.kt)("ol",o({},{start:2}),(0,r.kt)("li",{parentName:"ol"},"Ao inv\xe9s de ter o m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"li"},"DO_SOMETHING"),' "fa\xe7a algo", pode reescrever o m\xe9todo para que devolva um valor. Portanto escreveria:')),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),' //Here is some code from the method MY METHOD\n [People]Name:=DO_SOMETHING([People]Name) //Let\'s say [People]Name value is "williams"\n ALERT([People]Name)\n\n //Here the code of the method DO SOMETHING\n $0:=Uppercase($1)\n ALERT($0)\n')),(0,r.kt)("p",null,'Esta segunda t\xe9cnica de retornar um valor por uma subrotina se chama " utilizar uma fun\xe7\xe3o" \xc9 descrita no par\xe1grafo ',(0,r.kt)("a",o({parentName:"p"},{href:"#functions"}),"Fun\xe7\xf5es"),'. Esta segunda t\xe9cnica de retornar um valor por uma subrotina se chama " utilizar uma fun\xe7\xe3o" \xc9 descrita no par\xe1grafo ',(0,r.kt)("a",o({parentName:"p"},{href:"#functions"}),"Fun\xe7\xf5es"),"."),(0,r.kt)("h3",o({},{id:"casos-particulares-objetos-e-cole\xe7\xf5es"}),"Casos particulares: objetos e cole\xe7\xf5es"),(0,r.kt)("p",null,"Deve prestar aten\xe7\xe3o ao fato de que os tipos de dados Objeto e Cole\xe7\xe3o s\xf3 podem ser manejados atrav\xe9s de uma refer\xeancia (ou seja, um  ",(0,r.kt)("em",{parentName:"p"},"ponteiro")," interno)."),(0,r.kt)("p",null,"Por isso, quando usar esses tipos de dados como par\xe2metros, ",(0,r.kt)("inlineCode",{parentName:"p"},"$1, $2...")," n\xe3o cont\xe9m ",(0,r.kt)("em",{parentName:"p"},"valores")," mas sim ",(0,r.kt)("em",{parentName:"p"},"refer\xeancias"),". A modifica\xe7\xe3o do valor dos par\xe2metros ",(0,r.kt)("inlineCode",{parentName:"p"},"$1, $2...")," dentro da subrotina se propagar\xe1 a qualquer lugar onde se utilize o objeto ou cole\xe7\xe3o fonte. Este \xe9 o mesmo principio que  ",(0,r.kt)("a",o({parentName:"p"},{href:"/docs/pt/19-R6/Concepts/pointer#pointers-as-parameters-to-methods"}),"os ponteiros"),", exceto que os par\xe2metros ",(0,r.kt)("inlineCode",{parentName:"p"},"$1, $2...")," n\xe3o necessitam ser desreferenciados na subrotina."),(0,r.kt)("p",null,"Por exemplo, considere o m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"CreatePerson")," que cria um objeto e o envia como par\xe2metro:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'  //CreatePerson\n var $person : Object\n $person:=New object("Name";"Smith";"Age";40)\n ChangeAge($person)\n ALERT(String($person.  \n')),(0,r.kt)("p",null,"O m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"ChangeAge")," adiciona 10 ao atributo Age do objeto recebido"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-4d"}),"  //ChangeAge\n #DECLARE ($person : Object)\n $person. Age:=$person. Age+10\n ALERT(String($person.\n")),(0,r.kt)("p",null,"Quando executar o m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"CreatePerson"),', as duas caixas de alerta dir\xe3o "50" j\xe1 que a mesma refer\xeancia de objeto \xe9 manejada por ambos m\xe9todos.'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"4D Server:"),' quando s\xe3o passados par\xe2metros entre m\xe9todos que n\xe3o s\xe3o executados na mesma m\xe1quina (utilizando por exemplo a op\xe7\xe3o "Executar no servidor"), as referencias n\xe3o s\xe3o utiliz\xe1veis. Nestes casos, s\xe3o enviadas c\xf3pias dos par\xe2metros de objetos e cole\xe7\xf5es ao inv\xe9s de refer\xeancias.'))}u.isMDXComponent=!0}}]);