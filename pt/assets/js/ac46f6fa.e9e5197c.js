"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[50106],{94812:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>m});var n=o(474848),r=o(28453);const i={id:"imageformat",title:"$imageformat"},a=void 0,s={id:"REST/imageformat",title:"$imageformat",description:"Define o formato de imagem a utilizar para a recupera\xe7\xe3o de imagens (por exemplo, $imageformat=png)",source:"@site/i18n/pt/docusaurus-plugin-content-docs/version-18/REST/$imageformat.md",sourceDirName:"REST",slug:"/REST/imageformat",permalink:"/docs/pt/18/REST/imageformat",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20REST%2F%24imageformat.md%20(18)&body=Please%20enter%20your%20comment%3A",tags:[],version:"18",frontMatter:{id:"imageformat",title:"$imageformat"},sidebar:"docs",previous:{title:"$filter",permalink:"/docs/pt/18/REST/filter"},next:{title:"$method",permalink:"/docs/pt/18/REST/method"}},d={},m=[{value:"Descri\xe7\xe3o",id:"descri\xe7\xe3o",level:2},{value:"Exemplo",id:"exemplo",level:2}];function c(e){const t={a:"a",code:"code",em:"em",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["Define o formato de imagem a utilizar para a recupera\xe7\xe3o de imagens (",(0,n.jsx)(t.em,{children:"por exemplo"}),", ",(0,n.jsx)(t.code,{children:"$imageformat=png"}),")"]}),"\n",(0,n.jsx)(t.h2,{id:"descri\xe7\xe3o",children:"Descri\xe7\xe3o"}),"\n",(0,n.jsx)(t.p,{children:"Definir o formato a utilizar para mostrar imagens. Pode utilizar um dos seguintes formatos (s\xe3o suportadas extens\xf5es, tipos mime e OsType Mac):"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Tipo"}),(0,n.jsx)(t.th,{children:"Descri\xe7\xe3o"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:'"best"'}),(0,n.jsx)(t.td,{children:"Melhor formato com base na imagem"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:'".gif" ou "image/gif"'}),(0,n.jsx)(t.td,{children:"Formato GIF"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:'".png" ou "image/png"'}),(0,n.jsx)(t.td,{children:"Formato PNG"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:'".jpeg" or "image/jpeg"'}),(0,n.jsx)(t.td,{children:"Formato JPEG"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:'".tiff" ou "image/tiff"'}),(0,n.jsx)(t.td,{children:"Formato TIFF"})]})]})]}),"\n",(0,n.jsxs)(t.p,{children:["Uma vez definido o formato, \xe9 necess\xe1rio passar o atributo de imagem a ",(0,n.jsx)(t.a,{href:"/docs/pt/18/REST/expand",children:(0,n.jsx)(t.code,{children:"$expand"})})," para carregar completamente a fotografia."]}),"\n",(0,n.jsxs)(t.p,{children:["Se n\xe3o houver nenhuma imagem a carregar ou se o formato n\xe3o permitir que a imagem seja carregada, a resposta ser\xe1 um objeto vazio ",(0,n.jsx)(t.code,{children:"{}"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"exemplo",children:"Exemplo"}),"\n",(0,n.jsx)(t.p,{children:"O exemplo seguinte define o formato de imagem como JPEG, independentemente do tipo real da fotografia, e passa o n\xfamero de vers\xe3o real enviado pelo servidor:"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:"GET  /rest/Employee(1)/photo?$imageformat=.jpeg&$version=3&$expand=photo"})})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,t,o)=>{o.d(t,{R:()=>a,x:()=>s});var n=o(296540);const r={},i=n.createContext(r);function a(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);