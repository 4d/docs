"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[43940],{3905:(e,a,o)=>{o.d(a,{Zo:()=>l,kt:()=>c});var r=o(67294);function t(e,a,o){return a in e?Object.defineProperty(e,a,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[a]=o,e}function n(e,a){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),o.push.apply(o,r)}return o}function s(e){for(var a=1;a<arguments.length;a++){var o=null!=arguments[a]?arguments[a]:{};a%2?n(Object(o),!0).forEach((function(a){t(e,a,o[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(o,a))}))}return e}function p(e,a){if(null==e)return{};var o,r,t=function(e,a){if(null==e)return{};var o,r,t={},n=Object.keys(e);for(r=0;r<n.length;r++)o=n[r],a.indexOf(o)>=0||(t[o]=e[o]);return t}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],a.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(t[o]=e[o])}return t}var m=r.createContext({}),d=function(e){var a=r.useContext(m),o=a;return e&&(o="function"==typeof e?e(a):s(s({},a),e)),o},l=function(e){var a=d(e.components);return r.createElement(m.Provider,{value:a},e.children)},i={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},u=r.forwardRef((function(e,a){var o=e.components,t=e.mdxType,n=e.originalType,m=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=d(o),c=t,k=u["".concat(m,".").concat(c)]||u[c]||i[c]||n;return o?r.createElement(k,s(s({ref:a},l),{},{components:o})):r.createElement(k,s({ref:a},l))}));function c(e,a){var o=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var n=o.length,s=new Array(n);s[0]=u;var p={};for(var m in a)hasOwnProperty.call(a,m)&&(p[m]=a[m]);p.originalType=e,p.mdxType="string"==typeof e?e:t,s[1]=p;for(var d=2;d<n;d++)s[d]=o[d];return r.createElement.apply(null,s)}return r.createElement.apply(null,o)}u.displayName="MDXCreateElement"},91669:(e,a,o)=>{o.r(a),o.d(a,{assets:()=>d,contentTitle:()=>p,default:()=>u,frontMatter:()=>s,metadata:()=>m,toc:()=>l});o(67294);var r=o(3905);function t(){return t=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var o=arguments[a];for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(e[r]=o[r])}return e},t.apply(this,arguments)}function n(e,a){if(null==e)return{};var o,r,t=function(e,a){if(null==e)return{};var o,r,t={},n=Object.keys(e);for(r=0;r<n.length;r++)o=n[r],a.indexOf(o)>=0||(t[o]=e[o]);return t}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],a.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(t[o]=e[o])}return t}const s={id:"parameters",title:"Par\xe2metros"},p=void 0,m={unversionedId:"Concepts/parameters",id:"version-19-R7/Concepts/parameters",title:"Par\xe2metros",description:"Frequentemente ser\xe1 preciso passar dados para seus m\xe9todos e fun\xe7\xf5es. Isso \xe9 facilmente feito com par\xe2metros.",source:"@site/i18n/pt/docusaurus-plugin-content-docs/version-19-R7/Concepts/parameters.md",sourceDirName:"Concepts",slug:"/Concepts/parameters",permalink:"/docs/pt/19-R7/Concepts/parameters",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20Concepts%2Fparameters.md%20(19-R7)&body=Please%20enter%20your%20comment%3A",tags:[],version:"19-R7",frontMatter:{id:"parameters",title:"Par\xe2metros"},sidebar:"docs",previous:{title:"M\xe9todos",permalink:"/docs/pt/19-R7/Concepts/methods"},next:{title:"Objetos e cole\xe7\xf5es compartilhados",permalink:"/docs/pt/19-R7/Concepts/shared"}},d={},l=[{value:"Vis\xe3o Geral",id:"vis\xe3o-geral",level:2},{value:"Inicializa\xe7\xe3o",id:"inicializa\xe7\xe3o",level:3},{value:"Par\xe2metros com nomes",id:"par\xe2metros-com-nomes",level:2},{value:"Valor retornado",id:"valor-retornado",level:3},{value:"Tipos de datos compat\xedveis",id:"tipos-de-datos-compat\xedveis",level:3},{value:"Par\xe1metros sequenciais",id:"par\xe1metros-sequenciais",level:2},{value:"Valor retornado",id:"valor-retornado-1",level:3},{value:"Tipos de datos compat\xedveis",id:"tipos-de-datos-compat\xedveis-1",level:3},{value:"<code>return {expression}</code>",id:"return-expression",level:2},{value:"Indire\xe7\xe3o dos par\xe2metros (${N})",id:"indire\xe7\xe3o-dos-par\xe2metros-n",level:2},{value:"Usar par\xe2metros gen\xe9ricos",id:"usar-par\xe2metros-gen\xe9ricos",level:3},{value:"Declara\xe7\xe3o de par\xe2metros gen\xe9ricos",id:"declara\xe7\xe3o-de-par\xe2metros-gen\xe9ricos",level:3},{value:"Declara\xe7\xe3o dos par\xe2metros para o modo compilado",id:"declara\xe7\xe3o-dos-par\xe2metros-para-o-modo-compilado",level:2},{value:"Tipo de par\xe1metro equivocado",id:"tipo-de-par\xe1metro-equivocado",level:2},{value:"Vari\xe1veis input output",id:"vari\xe1veis-input-output",level:2},{value:"Usando propriedades objeto como par\xe2metros nomeados",id:"usando-propriedades-objeto-como-par\xe2metros-nomeados",level:2},{value:"Par\xe2metros opcionais",id:"par\xe2metros-opcionais",level:2},{value:"Valores ou refer\xeancias",id:"valores-ou-refer\xeancias",level:2},{value:"Casos particulares: objetos e cole\xe7\xf5es",id:"casos-particulares-objetos-e-cole\xe7\xf5es",level:3}],i={toc:l};function u(e){var{components:a}=e,o=n(e,["components"]);return(0,r.kt)("wrapper",t({},i,o,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Frequentemente ser\xe1 preciso passar dados para seus m\xe9todos e fun\xe7\xf5es. Isso \xe9 facilmente feito com par\xe2metros."),(0,r.kt)("h2",t({},{id:"vis\xe3o-geral"}),"Vis\xe3o Geral"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Os par\xe2metros")," (ou ",(0,r.kt)("strong",{parentName:"p"},"argumentos"),") s\xe3o pe\xe7as de dados que um m\xe9todo ou uma  fun\xe7\xe3o de classe necessita para realizar sua tarefa. Os termos ",(0,r.kt)("em",{parentName:"p"},"par\xe1metros")," e ",(0,r.kt)("em",{parentName:"p"},"argumentos"),' s\xe3o utilizados indiferentemente neste manual. Par\xe2metros tamb\xe9m s\xe3o passados para comandos integrados 4D. Neste exemplo, a stirng "Hello" \xe9 um argumento para o comando integrado ',(0,r.kt)("inlineCode",{parentName:"p"},"ALERT"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'ALERT("Hello")\n')),(0,r.kt)("p",null,"Os par\xe2metros s\xe3o passados aos m\xe9todos ou fun\xe7\xf5es de classe da mesma maneira. Por exemplo, se uma fun\xe7\xe3o de classe chamada ",(0,r.kt)("inlineCode",{parentName:"p"},"getArea()")," aceita dois par\xe2metros, uma chamada \xe0 fun\xe7\xe3o de classe poderia ver-se assim:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{}),"$area:=$o.getArea(50;100)\n")),(0,r.kt)("p",null,"Ou, se um m\xe9todo projeto chamado ",(0,r.kt)("inlineCode",{parentName:"p"},"DO_SOMETHING")," aceitar tr\xeas par\xe2metros, uma chamada ao m\xe9todo poderia ter a seguinte forma:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"DO_SOMETHING($WithThis;$AndThat;$ThisWay)\n")),(0,r.kt)("p",null,"Os par\xe2metros input est\xe3o separados por ponto e v\xedrgula (;)."),(0,r.kt)("p",null,"Os mesmos princ\xedpios s\xe3o usados quando m\xe9todos forem executados atrav\xe9s de comandos dedicados, por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'EXECUTE METHOD IN SUBFORM("Cal2";"SetCalendarDate";*;!05/05/20!)  \n//pass the !05/05/20!  \n//passe a data !05/05/20! como par\xe2metro del SetCalendarDate  \n// no contexto de um subformul\xe1rio\n')),(0,r.kt)("p",null,"Dados tamb\xe9m podem ser ",(0,r.kt)("strong",{parentName:"p"},"devolvidos"),"desde m\xe9todos e fun\xe7\xf5es de classe. Por exemplo, a linha abaixo \xe9 uma senten\xe7a que usa o comando integrado, ",(0,r.kt)("inlineCode",{parentName:"p"},"Length"),", para devolver a longitude de uma string. As instru\xe7\xf5es p\xf5e o valor devolvido por ",(0,r.kt)("inlineCode",{parentName:"p"},"Length")," em uma vari\xe1vel chamada ",(0,r.kt)("em",{parentName:"p"},"MyLength"),". Esta \xe9 a instru\xe7\xe3o:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'MyLength:=Length("How did I get here?")\n')),(0,r.kt)("p",null,"Qualquer subrotina pode retornar um valor. S\xf3 se pode declarar um \xfanico par\xe1metro de sa\xedda por m\xe9todo ou fun\xe7\xe3o de classe."),(0,r.kt)("p",null,"Os valores de entrada e saida s\xe3o ",(0,r.kt)("a",t({parentName:"p"},{href:"#values-or-references"}),"avaliados")," no momento da chamada e copiados em vari\xe1veis locais dentro da fun\xe7\xe3o ou m\xe9todo da classe chamada. Duas sintaxes s\xe3o propostas para declarar os par\xe2metros das vari\xe1veis no codigo chamado:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",t({parentName:"li"},{href:"#named-parameters"}),"named variables")," (recomendado na maioria dos casos) ou"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",t({parentName:"li"},{href:"#sequential-parameters"}),"vari\xe1veis numeradas sequencialmente"),".")),(0,r.kt)("p",null,"Tanto a sintaxe ",(0,r.kt)("a",t({parentName:"p"},{href:"#named-parameters"}),"named")," como ",(0,r.kt)("a",t({parentName:"p"},{href:"#sequential-parameters"}),"seq\xfcencial"),"  podem ser misturadas sem restri\xe7\xf5es para declarar par\xe2metros. Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"Function add($x : Integer)\n    var $0;$2 : Integer\n    $0:=$x+$2\n")),(0,r.kt)("h3",t({},{id:"inicializa\xe7\xe3o"}),"Inicializa\xe7\xe3o"),(0,r.kt)("p",null,"When parameters are declared, they are initialized to the ",(0,r.kt)("a",t({parentName:"p"},{href:"/docs/pt/19-R7/Concepts/data-types#default-values"}),(0,r.kt)("strong",{parentName:"a"},"default value corresponding to their type")),", which they will keep during the session as long as they have not been assigned."),(0,r.kt)("h2",t({},{id:"par\xe2metros-com-nomes"}),"Par\xe2metros com nomes"),(0,r.kt)("p",null,"Dentro de m\xe9todos ou fun\xe7\xf5es de classe chamados, valores par\xe2metros s\xe3o atribuidos \xe0 vari\xe1veis locais. Pode declarar par\xe2metros usando um ",(0,r.kt)("strong",{parentName:"p"},"nome de par\xe2metro")," junto com um ",(0,r.kt)("strong",{parentName:"p"},"tipo de par\xe2metro"),", separado por v\xedrgula."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Para as fun\xe7\xf5es de classe, os par\xe2metros se declaram junto com a palavra chave ",(0,r.kt)("inlineCode",{parentName:"li"},"Function"),"."),(0,r.kt)("li",{parentName:"ul"},"Para os m\xe9todos (m\xe9todos projeto, m\xe9todos objeto formulario, m\xe9todos base e triggers), os par\xe2metros se declaram utilizando a palavra chave ",(0,r.kt)("inlineCode",{parentName:"li"},"#DECLARE")," ao principio do c\xf3digo do m\xe9todo.")),(0,r.kt)("p",null,"Exemplos:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"Function getArea($width : Integer; $height : Integer) -> $area : Integer\n")),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"})," //myProjectMethod\n#DECLARE ($i : Integer) -> $myResult : Object\n")),(0,r.kt)("p",null,"As regras abaixo s\xe3o v\xe1lidas:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A linha de declara\xe7\xe3o deve ser a primeira linha do m\xe9todo ou c\xf3digo da fun\xe7\xe3o, sen\xe3o um erro \xe9 exibido (s\xf3 coment\xe1rios ou quebras de linha podem preceder a declara\xe7\xe3o)."),(0,r.kt)("li",{parentName:"ul"},"Os nomes dos par\xe2metros devem come\xe7ar com um caractere ",(0,r.kt)("inlineCode",{parentName:"li"},"$")," e cumprir com ",(0,r.kt)("a",t({parentName:"li"},{href:"/docs/pt/19-R7/Concepts/identifiers#object-properties"}),"as regras de denomina\xe7\xe3o das propriedades"),"."),(0,r.kt)("li",{parentName:"ul"},"Multiple parameters (and types) are separated by semicolons (;)."),(0,r.kt)("li",{parentName:"ul"},'Sintaxes multilinha s\xe3o aceitas (usando "',"\\",'").')),(0,r.kt)("p",null,"Por exemplo, pode chamar uma fun\xe7\xe3o ",(0,r.kt)("inlineCode",{parentName:"p"},"getArea()")," com dois par\xe2metros:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"$area:=$o.getArea(50;100)\n")),(0,r.kt)("p",null,"No c\xf3digo da fun\xe7\xe3o classe, o valor de cada par\xe2metro se copia no par\xe2metro declarado correspondente:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"// Class: Polygon Function getArea($width : Integer; $height : Integer)-> $area : Integer\n    $area:=$width*$height\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Se o tipo n\xe3o for definido, o par\xe2metro ser\xe1 definido como ",(0,r.kt)("a",t({parentName:"p"},{href:"/docs/pt/19-R7/Concepts/variant"}),(0,r.kt)("inlineCode",{parentName:"a"},"Variant")),".")),(0,r.kt)("p",null,"Todos os m\xe9todos 4D s\xe3o compat\xedveis com a palavra chave ",(0,r.kt)("inlineCode",{parentName:"p"},"#DECLARE")," incluindo os m\xe9todos de banco de dados. Por exemplo, no m\xe9todo de database ",(0,r.kt)("inlineCode",{parentName:"p"},"On Web Authentication")," pode declarar par\xe2metros nomeados:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'    // On Web Authentication database method\n#DECLARE ($url : Text; $header : Text; \\\n  $BrowserIP : Text; $ServerIP : Text; \\\n  $user : Text; $password : Text) \\\n  -> $RequestAccepted : Boolean\n$entitySelection:=ds. User.query("login=:1"; $user)\n// Check hash password...\n')),(0,r.kt)("h3",t({},{id:"valor-retornado"}),"Valor retornado"),(0,r.kt)("p",null,"Pode declarar o par\xe2metro retornado de uma fun\xe7\xe3o adicionado uma flecha (->) e a defini\xe7\xe3o de par\xe2metro depois da lista de par\xe2metros de input. Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"Function add($x : Variant; $y : Integer) -> $result : Integer\n")),(0,r.kt)("p",null,"Tamb\xe9m pode declarar o par\xe2metro de retorno s\xf3 adicionando ",(0,r.kt)("inlineCode",{parentName:"p"},": tipo"),", em cujo caso pode ser manejado mediante uma ",(0,r.kt)("a",t({parentName:"p"},{href:"#return-expression"}),"instru\xe7\xe3o de retorno")," ou atrav\xe9s de ",(0,r.kt)("inlineCode",{parentName:"p"},"$0")," na ",(0,r.kt)("a",t({parentName:"p"},{href:"#returned-value-1"}),"sintaxe sequencial"),"). Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"Function add($x : Variant; $y : Integer): Integer\n    $0:=$x+$y\n")),(0,r.kt)("h3",t({},{id:"tipos-de-datos-compat\xedveis"}),"Tipos de datos compat\xedveis"),(0,r.kt)("p",null,"Com par\xe2metros nomeados, pode usar os mesmos tipos dados que aqueles ",(0,r.kt)("a",t({parentName:"p"},{href:"/docs/pt/19-R7/Concepts/variables#using-the-var-keyword"}),"que s\xe3o compat\xedveis com ",(0,r.kt)("inlineCode",{parentName:"a"},"var")," keyword"),", incluindo objetos classe.  Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"Function saveToFile($entity : cs. ShapesEntity; $file : 4D. File)\n")),(0,r.kt)("h2",t({},{id:"par\xe1metros-sequenciais"}),"Par\xe1metros sequenciais"),(0,r.kt)("p",null,"Como uma alternativa a sintaxe ",(0,r.kt)("a",t({parentName:"p"},{href:"#named-parameters"}),"named parameters"),", pode declarar par\xe2metros usando vari\xe1veis numeradas: ",(0,r.kt)("strong",{parentName:"p"},"$1"),", ",(0,r.kt)("strong",{parentName:"p"},"$2"),", ",(0,r.kt)("strong",{parentName:"p"},"$3"),", e assim por diante. A numera\xe7\xe3o das vari\xe1veis locais representam a ordem dos par\xe2metros."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Apesar dessa sintaxe ser compat\xedvel com fun\xe7\xf5es de classe, \xe9 recomendado usar a sintaxe ",(0,r.kt)("a",t({parentName:"p"},{href:"#named-parameters"}),"named parameters")," neste caso.")),(0,r.kt)("p",null,"Por exemplo quando chamar um m\xe9todo de projeto ",(0,r.kt)("inlineCode",{parentName:"p"},"DO_SOMETHING")," com tr\xeas par\xe2metros:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"DO_SOMETHING($WithThis;$AndThat;$ThisWay)\n")),(0,r.kt)("p",null,"No c\xf3digo m\xe9todo, o valor de cada par\xe2metro \xe9 automaticamente copiado em vari\xe1veis $1, $2, $3:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'  //C\xf3digo do m\xe9todo DO_SOMETHING\n  //Assume que todos os par\xe2metros s\xe3o do tipo texto\n C_TEXT($1;$2;$3)\n ALERT("I received "+$1+" and "+$2+" and also "+$3)\n  //$1 cont\xe9m o par\xe2metro $WithThis\n  //$2 cont\xe9m o par\xe2metro $AndThat\n  //$3 cont\xe9m o par\xe2metro $ThisWay\n')),(0,r.kt)("h3",t({},{id:"valor-retornado-1"}),"Valor retornado"),(0,r.kt)("p",null,"O valor a devolver \xe9 posto na vari\xe1vel local ",(0,r.kt)("inlineCode",{parentName:"p"},"$0"),"."),(0,r.kt)("p",null,"Por exemplo, a fun\xe7\xe3o abaixo, chamada ",(0,r.kt)("inlineCode",{parentName:"p"},"Uppercase4"),", devolve uma string com os quatro  primeiros caracteres da string que foram passados em mai\xfasculas:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"$0:=Uppercase(Substring($1;1;4))+Substring($1;5)\n")),(0,r.kt)("p",null,"Abaixo est\xe1 um exemplo que utiliza o m\xe9todo Uppercase4:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'$NewPhrase:=Uppercase4("This is good.")\n')),(0,r.kt)("p",null,"Neste exemplo, a vari\xe1vel ",(0,r.kt)("em",{parentName:"p"},"$NewPhrase")," recebe \u201cTHIS is good.\u201d"),(0,r.kt)("p",null,"O resultado do valor, ",(0,r.kt)("inlineCode",{parentName:"p"},"$0"),", \xe9 uma vari\xe1vel local dentro da subrotina. Pode ser usado como tal dentro da subrotina. Por exemplo, pode escrever:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"// Do_something\n$0:=Uppercase($1)\nALERT($0)\n")),(0,r.kt)("p",null,"Neste exemplo, ",(0,r.kt)("inlineCode",{parentName:"p"},"$0")," \xe9 atribu\xeddo primeiro o valor de ",(0,r.kt)("inlineCode",{parentName:"p"},"$1"),", e depois usado como par\xe2metro do comando ",(0,r.kt)("inlineCode",{parentName:"p"},"ALERT"),". Dentro de la subrotina, pode utilizar ",(0,r.kt)("inlineCode",{parentName:"p"},"$0")," da mesma maneira que utilizaria qualquer outra vari\xe1vel local. \xc9 4D quem devolve o valor de ",(0,r.kt)("inlineCode",{parentName:"p"},"$0")," (como estiver quando a subrotina terminar) ao m\xe9todo chamado."),(0,r.kt)("h3",t({},{id:"tipos-de-datos-compat\xedveis-1"}),"Tipos de datos compat\xedveis"),(0,r.kt)("p",null,"Pode utilizar toda ",(0,r.kt)("a",t({parentName:"p"},{href:"/docs/pt/19-R7/Concepts/quick-tour#expression-types"}),"express\xe3o")," como par\xe2metro, exceto:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"tabelas"),(0,r.kt)("li",{parentName:"ul"},"arrays")),(0,r.kt)("p",null,"As express\xf5es de tabelas ou arrays s\xf3 podem ser passadas ",(0,r.kt)("a",t({parentName:"p"},{href:"/docs/pt/19-R7/Concepts/pointer#pointers-as-parameters-to-methods"}),"como refer\xeancia utilizando um ponteiro"),"."),(0,r.kt)("h2",t({},{id:"return-expression"}),(0,r.kt)("inlineCode",{parentName:"h2"},"return {expression}")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Hist\xf3rico"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",t({parentName:"tr"},{align:null}),"Vers\xe3o"),(0,r.kt)("th",t({parentName:"tr"},{align:null}),"Mudan\xe7as"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",t({parentName:"tr"},{align:null}),"v19 R4"),(0,r.kt)("td",t({parentName:"tr"},{align:null}),"Adicionado"))))),(0,r.kt)("p",null,"A declara\xe7\xe3o ",(0,r.kt)("inlineCode",{parentName:"p"},"return")," finaliza a execu\xe7\xe3o de uma fun\xe7\xe3o ou de um m\xe9todo e pode ser utilizado para devolver uma express\xe3o a quem chamar."),(0,r.kt)("p",null,"Por exemplo, a seguinte fun\xe7\xe3o devolve o quadrado de seu argumento, $x, onde $x \xe9 um n\xfamero."),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"Function square($x : Integer) \n   return $x * $x\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Internamente, ",(0,r.kt)("inlineCode",{parentName:"p"},"return x")," executa ",(0,r.kt)("inlineCode",{parentName:"p"},"$0:=x")," ou (if declared) ",(0,r.kt)("inlineCode",{parentName:"p"},"myReturnValue:=x"),", e retorna ao chamante. Se ",(0,r.kt)("inlineCode",{parentName:"p"},"return")," for usado sem uma express\xe3o, a fun\xe7\xe3o ou m\xe9todo retorna um valor null do tipo retornado declarado (se houver), sen\xe3o ",(0,r.kt)("em",{parentName:"p"},"undefined"),".")),(0,r.kt)("p",null,"A declara\xe7\xe3o ",(0,r.kt)("inlineCode",{parentName:"p"},"return")," pode ser usado com a sintaxe padr\xe3o para ",(0,r.kt)("a",t({parentName:"p"},{href:"#returned-value"}),"valores retornados")," (o valor retornado deve ser do tipo declarado). Entretanto lembre que isso finaliza imediatamente a execu\xe7\xe3o de c\xf3digo. Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"Function getValue\n    $0:=10\n    return 20\n    // returns 20 Function getValue -> $v : Integer\n    return 10\n    $v:=20 // never executed\n    // returns 10\n")),(0,r.kt)("h2",t({},{id:"indire\xe7\xe3o-dos-par\xe2metros-n"}),"Indire\xe7\xe3o dos par\xe2metros (${N})"),(0,r.kt)("p",null,"M\xe9todos de projeto 4D aceita um n\xfamero de vari\xe1veis de par\xe2metros. Pode abordar esses par\xe2metros com um ",(0,r.kt)("inlineCode",{parentName:"p"},"For...End for")," loop, o comando ",(0,r.kt)("a",t({parentName:"p"},{href:"https://doc.4d.com/4dv19/help/command/en/page259.html"}),(0,r.kt)("inlineCode",{parentName:"a"},"par\xe2metros de contagem"))," e o par\xe2metro ",(0,r.kt)("strong",{parentName:"p"},"sintaxe de indire\xe7\xe3o"),". Dentro do m\xe9todo, um endere\xe7o de indire\xe7\xe3o \xe9 formatado ",(0,r.kt)("inlineCode",{parentName:"p"},"${N}"),", onde ",(0,r.kt)("inlineCode",{parentName:"p"},"N")," \xe9 uma express\xe3o num\xe9rica. ",(0,r.kt)("inlineCode",{parentName:"p"},"${N}")," se denomina un ",(0,r.kt)("strong",{parentName:"p"},"par\xe2metro gen\xe9rico"),"."),(0,r.kt)("h3",t({},{id:"usar-par\xe2metros-gen\xe9ricos"}),"Usar par\xe2metros gen\xe9ricos"),(0,r.kt)("p",null,"Por exemplo, considere uma fun\xe7\xe3o que some os valores e devolva a soma formatada segundo um formato que se passa como par\xe2metro. Cada vez que chamar a esse m\xe9todo, o n\xfamero de valores a somar pode variar. Devemos passar os valores como par\xe2metros ao m\xe9todo e o formato em forma de string dos caracteres. O n\xfamero de valores pode variar de chamada a chamada."),(0,r.kt)("p",null,"Aqui est\xe1 um m\xe9todo, chamada ",(0,r.kt)("inlineCode",{parentName:"p"},"MySum"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"})," #DECLARE($format : Text) -> $result : Text\n $sum:=0\n For($i;2;Count parameters)\n    $sum:=$sum+${$i}\n End for\n $result:=String($sum;$format)\n")),(0,r.kt)("p",null,"Os par\xe2metros do m\xe9todo devem ser passados na ordem correta: primeiro o formato e depois os valores:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),' Result:=MySum("##0.00";125,2;33,5;24) //"182.70"\n Result:=MySum("000";1;2;200) //"203"\n')),(0,r.kt)("p",null,"Note que mesmo se declarar 0, 1 ou mais par\xe2metros no metodo, pode sempre passar o n\xfamero de par\xe2metros que quiser. Os par\xe2metros todos disponiveisss dentro do metodo de chamada atraves da sintaxe ",(0,r.kt)("inlineCode",{parentName:"p"},"${N}")," e tipo par\xe2metro extra ",(0,r.kt)("a",t({parentName:"p"},{href:"/docs/pt/19-R7/Concepts/variant"}),"Variant")," como padr\xe3o (pode declarar usando ",(0,r.kt)("a",t({parentName:"p"},{href:"#declaring-generic-parameters"}),"compiler directive"),"). Basta ter a certeza de que os par\xe2metros existem, gra\xe7as ao comando ",(0,r.kt)("a",t({parentName:"p"},{href:"https://doc.4d.com/4dv19/help/command/en/page259.html"}),(0,r.kt)("inlineCode",{parentName:"a"},"Count parameters"))," . Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'//foo method\n#DECLARE($p1: Text;$p2 : Text; $p3 : Date) For($i;1;Count parameters)\n    ALERT("param "+String($i)+" = "+String(${$i}))\nEnd for\n')),(0,r.kt)("p",null,"Este m\xe9todo pode sr chamado:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'foo("hello";"world";!01/01/2021!;42;?12:00:00?) //extra parameters are passed //extra parameters are passed\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"A indire\xe7\xe3o de par\xe2metros se gerencia melhor se respeitar a conven\xe7\xe3o abaixo: se s\xf3 alguns dos par\xe2metros forem endere\xe7ados por indire\xe7\xe3o, devem ser passados depois dos outros.")),(0,r.kt)("h3",t({},{id:"declara\xe7\xe3o-de-par\xe2metros-gen\xe9ricos"}),"Declara\xe7\xe3o de par\xe2metros gen\xe9ricos"),(0,r.kt)("p",null,"Da mesma forma que com outras vari\xe1veis locais, n\xe3o \xe9 obrigat\xf3rio declarar os par\xe2metros gen\xe9ricos mediante uma diretiva de compilador. Entretanto \xe9 recomendado que se evite qualquer ambiguidade. Os par\xe2metros gen\xe9ricos n\xe3o declarados obt\xeam automaticamente o tipo ",(0,r.kt)("a",t({parentName:"p"},{href:"/docs/pt/19-R7/Concepts/variant"}),"Variante")," ."),(0,r.kt)("p",null,"Para declarar par\xe2metros gen\xe9ricos, se utiliza uma diretriz do compilador \xe0 qual se passa ${N} como par\xe2metro, onde N especifica o primeiro par\xe2metro gen\xe9rico."),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"})," C_TEXT(${4})\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"A declara\xe7\xe3o de par\xe1metros gen\xe9ricos s\xf3 pode ser feita com ",(0,r.kt)("a",t({parentName:"p"},{href:"#sequential-parameters"}),"a sintaxe sequencial"),".")),(0,r.kt)("p",null,"Esse comando significa que a partir do quarto par\xe2metro (inclu\xeddo), o m\xe9todo pode receber um n\xfamero vari\xe1vel de par\xe2metros de tipo texto $1, $2 e $3 podem ser de qualquer tipo de dados. Entretanto, se usar $2 por indire\xe7\xe3o, o tipo de dados usados ser\xe1 do tipo gen\xe9rico. $1, $2 e $3 podem ser de qualquer tipo de dados."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"O n\xfamero na declara\xe7\xe3o tem que ser uma constante e n\xe3o uma vari\xe1vel.")),(0,r.kt)("h2",t({},{id:"declara\xe7\xe3o-dos-par\xe2metros-para-o-modo-compilado"}),"Declara\xe7\xe3o dos par\xe2metros para o modo compilado"),(0,r.kt)("p",null,"Mesmo n\xe3o sendo obrigat\xf3rio em ",(0,r.kt)("a",t({parentName:"p"},{href:"/docs/pt/19-R7/Concepts/interpreted-compiled"}),"modo interpretado"),", deve declarar cada par\xe2metro nos m\xe9todos chamados ou fun\xe7\xf5es para evitar problemas."),(0,r.kt)("p",null,"Quando se utiliza la ",(0,r.kt)("a",t({parentName:"p"},{href:"#named-parameters"}),"sintaxe de vari\xe1veis nomeadas"),", os par\xe1metros se declaram autom\xe1ticamente atrav\xe9s da palavra chave ",(0,r.kt)("inlineCode",{parentName:"p"},"#DECLARE")," ou o prototipo ",(0,r.kt)("inlineCode",{parentName:"p"},"Function"),". Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"Fun\xe7\xe3o add($x : Variante; $y : Integer)-> $result : Integer\n    // todos os par\xe2metros s\xe3o declarados com o seu tipo\n")),(0,r.kt)("p",null,"Quando usar  ",(0,r.kt)("a",t({parentName:"p"},{href:"#sequential-parameters"}),"sintaxe de vari\xe1vel sequencial"),", precisa ter certeza que todos os par\xe2metros foram declarados. No exemplo abaixo, o m\xe9todo projeto ",(0,r.kt)("inlineCode",{parentName:"p"},"Capitalize"),"  aceita um par\xe2metro texto e devolve um resultado texto:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"  // M\xe9todo projeto Mai\xfasculas\n  // Mai\xfasculas( Texto ) -> Texto\n  // Mai\xfasculas( Cadena fuente ) -> String com a primeira letra em mai\xfascula\n\n C_TEXT($0;$1)\n $0:=Uppercase(Substring($1;1;1))+Lowercase(Substring($1;2))\n")),(0,r.kt)("p",null,"A utiliza\xe7\xe3o de comandos tais como ",(0,r.kt)("inlineCode",{parentName:"p"},"New process")," com m\xe9todos processo que aceitem par\xe2metros tamb\xe9m requer que os par\xe2metros se declarem explicitamente no m\xe9todo chamado. Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'C_TEXT($string)\nC_LONGINT($idProc;$int)\nC_OBJECT($obj)\n\n$idProc:=New process("foo_method";0;"foo_process";$string;$int;$obj)\n')),(0,r.kt)("p",null,'Este c\xf3digo pode ser executado em modo compilado s\xf3 se "foo_method" declarar seus par\xe2metros:'),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"//foo_method C_TEXT($1)\nC_LONGINT($2)\nC_OBJECT($3)\n...\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},'em modo compilado, pode agrupar todos os par\xe1metros das vari\xe1veis locais dos m\xe9todos projeto em um m\xe9todo espec\xedfico com um nome que comece por "Compiler". Dentro deste m\xe9todo, pode pr\xe9-declarar os par\xe2metros de cada m\xe9todo, por exemplo:'),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"})," // Compiler_method\n C_REAL(OneMethodAmongOthers;$1) \n")),(0,r.kt)("p",{parentName:"blockquote"},"Ver a p\xe1gina ",(0,r.kt)("a",t({parentName:"p"},{href:"/docs/pt/19-R7/Concepts/interpreted-compiled"}),"Modos interpretado e compilado")," para mais informa\xe7\xe3o.")),(0,r.kt)("p",null,'A declara\xe7\xe3o de par\xe2metros tamb\xe9m \xe9 obrigat\xf3iria nos contextos abaixo (esses contextos n\xe3o s\xe3o compat\xedveis com declara\xe7\xf5es em um m\xe9todo "Compiler"):'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"M\xe9todos de banco de dados Por exemplo, o m\xe9todo banco ",(0,r.kt)("inlineCode",{parentName:"li"},"On Web Connection Database Method")," recebe seis par\xe2metros, de $1 a $6, del tipo Texto. No come\xe7o do m\xe9todo database, tem que escrever (mesmo se todos os par\xe2metros n\xe3o forem usados):")),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"// On Web Connection C_TEXT($1;$2;$3;$4;$5;$6)\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Pode usar ",(0,r.kt)("a",t({parentName:"p"},{href:"#named-parameters"}),"parametros nomeados")," com a palavra chave ",(0,r.kt)("inlineCode",{parentName:"p"},"#DECLARE"),".")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Triggers O par\xe2metro $0 (Inteiro longo), que \xe9 o resultado de um trigger, ser\xe1 digitado pelo compilador se o par\xe2metro n\xe3o tiver sido declarado explicitamente. Entretanto, se quiser declar\xe1-lo, deve fazer isso no pr\xf3prio trigger.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Objetos formul\xe1rio que aceitam o evento formul\xe1rio ",(0,r.kt)("inlineCode",{parentName:"p"},"On Drag Over")," O par\xe2metro $0 (Inteiro longo), que \xe9 o resultado do evento formul\xe1rio ",(0,r.kt)("inlineCode",{parentName:"p"},"On Drag Over"),", ser\xe1 digitado pelo compilador se o par\xe2metro n\xe3o tiver sido declarado expl\xedcita mente. Entretanto, se quiser fazer a declara\xe7\xe3o, deve fazer isso no m\xe9todo objeto. ",(0,r.kt)("strong",{parentName:"p"},"Nota:")," o compilador n\xe3o inicializa o par\xe2metro $0. Portanto, logo que utilizar o evento formul\xe1rio ",(0,r.kt)("inlineCode",{parentName:"p"},"On Drag Over"),", deve inicializar $0. Por exemplo:"))),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"})," C_LONGINT($0)\n If(Form event=On Drag Over)\n    $0:=0\n    ...\n    If($DataType=Is picture)\n       $0:=-1\n    End if\n    ...\n End if\n")),(0,r.kt)("h2",t({},{id:"tipo-de-par\xe1metro-equivocado"}),"Tipo de par\xe1metro equivocado"),(0,r.kt)("p",null,"Chamar a um par\xe1metro com um tipo incorreto \xe9 um ",(0,r.kt)("a",t({parentName:"p"},{href:"/docs/pt/19-R7/Concepts/error-handling"}),"erro")," que impede a correta execu\xe7\xe3o. Por exemplo se executar os m\xe9todos"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"// method1\n#DECLARE($value : Text)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"// method2\nmethod1(42) //tipo incorrecto, texto esperado\n")),(0,r.kt)("p",null,"Este caso es tratado por 4D dependendo do contexto:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"em",(0,r.kt)("a",t({parentName:"li"},{href:"/docs/pt/19-R7/Concepts/interpreted-compiled"}),"projetos compilados"),", se gera um erro no passo de compila\xe7\xe3o sempre que seja poss\xedvel. Sen\xe3o, um erro \xe9 gerado quando o m\xe9todo for chamado."),(0,r.kt)("li",{parentName:"ul"},"em projetos interpretados:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"se o par\xe1metro se declarou utilizando la ",(0,r.kt)("a",t({parentName:"li"},{href:"#named-parameters"}),"sintaxe nomeada")," (",(0,r.kt)("inlineCode",{parentName:"li"},"#DECLARE")," ou ",(0,r.kt)("inlineCode",{parentName:"li"},"Function"),"), se gera um erro quando se chama ao m\xe9todo."),(0,r.kt)("li",{parentName:"ul"},"Se o par\xe2metro for declarado usando a ",(0,r.kt)("a",t({parentName:"li"},{href:"#sequential-parameters"}),"sintaxe sequencial")," (",(0,r.kt)("inlineCode",{parentName:"li"},"C_XXX"),"), nenhum erro \xe9 gerado, o m\xe9todo chamado recebe um valor vazio no tipo esperado.")))),(0,r.kt)("h2",t({},{id:"vari\xe1veis-input-output"}),"Vari\xe1veis input output"),(0,r.kt)("p",null,"Dentro da subrotina, pode utilizar os par\xe2metros $1, $2... da mesma maneira que utilizaria qualquer outra vari\xe1vel local. Entretanto, no caso de usar comandos que modifiquem o valor da vari\xe1vel passada como par\xe2metro (por exemplo ",(0,r.kt)("inlineCode",{parentName:"p"},"Find in field"),"), os par\xe2metros $1, $2, etc. n\xe3o podem ser utilizardos diretamente. Primeiro deve copi\xe1-los nas vari\xe1veis locais padr\xe3o (por exemplo: ",(0,r.kt)("inlineCode",{parentName:"p"},"$myvar:=$1"),")."),(0,r.kt)("h2",t({},{id:"usando-propriedades-objeto-como-par\xe2metros-nomeados"}),"Usando propriedades objeto como par\xe2metros nomeados"),(0,r.kt)("p",null,"A utiliza\xe7\xe3o de objetos como par\xe2metros permite manejar ",(0,r.kt)("strong",{parentName:"p"},"par\xe2metros com nome"),". Este estilo de programa\xe7\xe3o \xe9 simples, flex\xedvel e f\xe1cil de ler."),(0,r.kt)("p",null,"Por exemplo, utilizando o m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"CreatePerson"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'  //CreatePerson\n var $person : Object\n $person:=New object("Name";"Smith";"Age";40)\n ChangeAge($person)\n ALERT(String($person.  \n')),(0,r.kt)("p",null,"No m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"ChangeAge")," pode escrever:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'  //ChangeAge\n var $1; $para : Object\n $para:=$1  \n $para.Age:=$para.Age+10\n ALERT($para.Name+" is "+String($para.Age)+" years old.")\n')),(0,r.kt)("p",null,"Isso oferece uma poderosa maneira de definir ",(0,r.kt)("a",t({parentName:"p"},{href:"#optional-parameters"}),"par\xe2metros opcionais")," (ver tamb\xe9m abaixo). Para manejar os par\xe2metros que faltam, pode:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"veja se todos os par\xe2metros esperados s\xe3o fornecidos comparando-os com o valor ",(0,r.kt)("inlineCode",{parentName:"li"},"Null"),", ou"),(0,r.kt)("li",{parentName:"ul"},"pr\xe9-definir os valores dos par\xe2metros, ou"),(0,r.kt)("li",{parentName:"ul"},"us\xe1-los como valores vazios.")),(0,r.kt)("p",null,"No m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"ChangeAge")," anterior, as propriedades Age e Name s\xe3o obrigat\xf3rias e produzir\xe3o erross se faltar\xe3o. Para evitar isso, pode escrever:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'  //ChangeAge\n var $1; $para : Object\n $para:=$1  \n $para. Age:=Num($para. Age)+10\n ALERT(String($para. Name)+" is "+String($para. Age)+" years old.")\n')),(0,r.kt)("p",null,'Ambos par\xe2metros s\xe3o opcionais: se n\xe3o forem preenchidos, o resultado ser\xe1 "\xe9 10 anos de idade", mas nenhum erro ser\xe1 gerado.'),(0,r.kt)("p",null,"Finalmente, com par\xe2metros com nome, a manuten\xe7\xe3o ou a reprodu\xe7\xe3o das aplica\xe7\xf5es \xe9 muito simples e seguro. Imagine que depois perceba de que adicionar 10 anos n\xe3o funciona sempre. You need another parameter to set how many years to add. You write: Escreva:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'$person:=New object("Name";"Smith";"Age";40;"toAdd";10)\nChangeAge($person)\n\n//ChangeAge\nvar $1;$para : Object\n$para:=$1 If ($para.toAdd=Null)\n    $para.toAdd:=10 End if\n$para. Age:=Num($para. Age)+$para.toAdd ALERT(String($para. Name)+" is "+String($para.\n')),(0,r.kt)("p",null,"N\xe3o precisar\xe1 mudar seu c\xf3digo existente. Sempre funcionar\xe1 como na vers\xe3o anterior, mas se for necess\xe1rio, \xe9 poss\xedvel usar outro valor diferente de 10 anos."),(0,r.kt)("p",null,"Com vari\xe1veis com nome, qualquer par\xe2metro pode ser opcional. No exemplo acima, todos os par\xe2metros s\xe3o opcionais e qualquer pode ser dado em qualquer ordem."),(0,r.kt)("h2",t({},{id:"par\xe2metros-opcionais"}),"Par\xe2metros opcionais"),(0,r.kt)("p",null,"No manual ",(0,r.kt)("em",{parentName:"p"},"Linguagem de 4D"),", os caracteres { } (chaves) indicam par\xe2metros opcionais. Por exemplo, ",(0,r.kt)("inlineCode",{parentName:"p"},"ALERT (message{; okButtonTitle})")," significa que o par\xe2metro ",(0,r.kt)("em",{parentName:"p"},"okButtonTitle")," pode omitir o chamado ao comando. Pode fazer a chamada de duas maneiras:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'ALERT("Are you sure?";"Yes I am") //2 parameters ALERT("Time is over") //1 parameter\n')),(0,r.kt)("p",null,"Os m\xe9todos e fun\xe7\xf5es 4D tamb\xe9m aceitam tais par\xe2metros opcionais. Pode declarar qualquer n\xfamero de par\xe2metros. Se chamar um m\xe9todo ou fun\xe7\xe3o com par\xe2metros menos que declarados, parametros faltantes s\xe3o processados como valores padr\xe3o no modo chamado, ",(0,r.kt)("a",t({parentName:"p"},{href:"/docs/pt/19-R7/Concepts/data-types#default-values"}),"de acordo com seu tipo"),". Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'// "concate" function of myClass Function concate ($param1 : Text ; $param2 : Text)->$result : Text\n$result:=$param1+" "+$param2\n')),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'  // Calling method\n $class:=cs.myClass.new()\n $class.concate("Hello") // "Hello "\n $class.concate() // Displays " "\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Tamb\xe9m se pode chamar um m\xe9todo ou fun\xe7\xe3o com mais par\xe2metros do que os declarados. Estar\xe1 dispon\xedvel dentro do c\xf3digo chamado atraves da  ",(0,r.kt)("a",t({parentName:"p"},{href:"#parameter-indirection-n"}),"${N} sintaxe"),".")),(0,r.kt)("p",null,"Utilizando o comando ",(0,r.kt)("inlineCode",{parentName:"p"},"Count parameters")," desde dentro do m\xe9todo chamado, pode detectar o n\xfamero real de par\xe2metros e realizar diferentes opera\xe7\xf5es dependendo do que tenha recebido."),(0,r.kt)("p",null,"O exemplo abaixo mostra uma mensagem de texto e pode inserir o texto em um documento no disco ou em uma \xe1rea de 4D Write Pro:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"// APPEND TEXT Project Method\n// APPEND TEXT ( Text { ; Text { ; Object } } )\n// APPEND TEXT ( Message { ; Path { ; 4DWPArea } } )\n\n #DECLARE($message : Text; $path : Text; $wpArea : Object)\n\n ALERT($message)\n If(Count parameters>=3)\n    WP SET TEXT($wpArea;$1;wk append)\n Else\n    If(Count parameters>=2)\n       TEXT TO DOCUMENT($path;$message)\n    End if\n End if\n")),(0,r.kt)("p",null,"Depois de adicionar este m\xe9todo projeto a sua aplica\xe7\xe3o, pode escrever:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'APPEND TEXT(vtSomeText) //Will only display the  message APPEND TEXT(vtSomeText;$path) //Displays text message and appends it to document at $path APPEND TEXT(vtSomeText;"";$wpArea) //Displays text message and writes it to $wpArea\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Quando os par\xe2metros opcionais forem necess\xe1rios em seus m\xe9todos, tamb\xe9m pode considerar o uso de ",(0,r.kt)("a",t({parentName:"p"},{href:"#using-objects-properties-as-named-parameters"}),"propriedades objetos par\xe2metros com nome")," que oferecem uma forma flex\xedvel de manejar um n\xfamero vari\xe1vel de par\xe2metros.")),(0,r.kt)("h2",t({},{id:"valores-ou-refer\xeancias"}),"Valores ou refer\xeancias"),(0,r.kt)("p",null,"Quando passar um par\xe2metro, 4D sempre avalia a express\xe3o do par\xe2metro no contexto do m\xe9todo que chama e define o ",(0,r.kt)("strong",{parentName:"p"},"valor resultante")," nas vari\xe1veis locais $1, $... da subrotina ou fun\xe7\xe3o classe As vari\xe1veis locais/par\xe2metros n\xe3o s\xe3o os campos, vari\xe1veis ou express\xf5es realmente passadas pelo m\xe9todo chamada; eles apenas cont\xe9m os valores que foram passados. As vari\xe1veis locais/par\xe2metros n\xe3o s\xe3o os campos, vari\xe1veis ou express\xf5es realmente passadas pelo m\xe9todo chamada; eles apenas cont\xe9m os valores que foram passados. Por exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'    //Here is some code from the method MY_METHOD DO_SOMETHING([People]Name) //Let\'s say [People]Name value is "williams" ALERT([People]Name)\n\n    //Here is the code of the method DO_SOMETHING\n $1:=Uppercase($1)\n ALERT($1)\n')),(0,r.kt)("p",null,"A caixa de alerta mostrada por ",(0,r.kt)("inlineCode",{parentName:"p"},"DO_SOMETHING"),' dir\xe1 "WILLIAMS" e a caixa de alerta mostrada por ',(0,r.kt)("inlineCode",{parentName:"p"},"MY_METHOD"),' dir\xe1 "williams". O m\xe9todo mudou localmente o valor do par\xe2metro $1, ma isso n\xe3o afeta o valor de campo ',(0,r.kt)("inlineCode",{parentName:"p"},"[People]Name")," passado como par\xe2metro pelo m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"MY_METHOD"),"."),(0,r.kt)("p",null,"H\xe1 duas formas de fazer com que o m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"DO_SOMETHING")," mude o valor de campo:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Ao inv\xe9s de passar o campo para o m\xe9todo, passa um ponteiro para ele, por isso pode escrever:")),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'  //Esta \xe9 uma parte do c\xf3digo do m\xe9todo MY_METHOD\n DO_SOMETHING(->[People]Name) //Suponha que o valor de [People]Name value seja "williams"\n ALERT([People]Last Name)\n\n  //Este \xe9 o c\xf3digo do m\xe9todo DO_SOMETHING\n $1->:=Uppercase($1->)\n ALERT($1->)\n')),(0,r.kt)("p",null,"Aqui \xe9 o par\xe2metro n\xe3o for o campo, mas sim um ponteiro ao mesmo. Portanto, dentro do m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"DO SOMETHING"),", $1 j\xe1 n\xe3o \xe9 o valor do campo mas um ponteiro ao campo. O objeto ",(0,r.kt)("strong",{parentName:"p"},"referenciado"),' por $1 ($1-> no c\xf3digo anterior) \xe9 o campo real. Portanto, mudar o objeto referenciado vai al\xe9m do escopo da subrotina, e o campo real n\xe3o \xe9 afetado. Neste exemplo, as duas caixas de alerta dir\xe3o "WILLIAMS".'),(0,r.kt)("ol",t({},{start:2}),(0,r.kt)("li",{parentName:"ol"},"Ao inv\xe9s de ter o m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"li"},"DO_SOMETHING"),' "fa\xe7a algo", pode reescrever o m\xe9todo para que devolva um valor. Portanto escreveria:')),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'    //Esta \xe9 uma parte do c\xf3digo do m\xe9todo MY_METHO\n [People]Name:=DO_SOMETHING([People]Name) //Suponha que o valor de [People]Name seja "williams"\n ALERT([People]Name)\n\n    //Este \xe9 o c\xf3digo do m\xe9todo DO_SOMETHING\n $0:=Uppercase($1)\n ALERT($0)\n')),(0,r.kt)("p",null,'Esta segunda t\xe9cnica de retornar um valor por uma subrotina se chama " utilizar uma fun\xe7\xe3o" \xc9 descrita no par\xe1grafo ',(0,r.kt)("a",t({parentName:"p"},{href:"#functions"}),"Fun\xe7\xf5es"),'. Esta segunda t\xe9cnica de retornar um valor por uma subrotina se chama " utilizar uma fun\xe7\xe3o" \xc9 descrita no par\xe1grafo ',(0,r.kt)("a",t({parentName:"p"},{href:"#functions"}),"Fun\xe7\xf5es"),"."),(0,r.kt)("h3",t({},{id:"casos-particulares-objetos-e-cole\xe7\xf5es"}),"Casos particulares: objetos e cole\xe7\xf5es"),(0,r.kt)("p",null,"Deve prestar aten\xe7\xe3o ao fato de que os tipos de dados Objeto e Cole\xe7\xe3o s\xf3 podem ser manejados atrav\xe9s de uma refer\xeancia (ou seja, um  ",(0,r.kt)("em",{parentName:"p"},"ponteiro")," interno)."),(0,r.kt)("p",null,"Por isso, quando usar esses tipos de dados como par\xe2metros, ",(0,r.kt)("inlineCode",{parentName:"p"},"$1, $2...")," n\xe3o cont\xe9m ",(0,r.kt)("em",{parentName:"p"},"valores")," mas sim ",(0,r.kt)("em",{parentName:"p"},"refer\xeancias"),". A modifica\xe7\xe3o do valor dos par\xe2metros ",(0,r.kt)("inlineCode",{parentName:"p"},"$1, $2...")," dentro da subrotina se propagar\xe1 a qualquer lugar onde se utilize o objeto ou cole\xe7\xe3o fonte. Este \xe9 o mesmo principio que  ",(0,r.kt)("a",t({parentName:"p"},{href:"/docs/pt/19-R7/Concepts/pointer#pointers-as-parameters-to-methods"}),"os ponteiros"),", exceto que os par\xe2metros ",(0,r.kt)("inlineCode",{parentName:"p"},"$1, $2...")," n\xe3o necessitam ser desreferenciados na subrotina."),(0,r.kt)("p",null,"Por exemplo, considere o m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"CreatePerson")," que cria um objeto e o envia como par\xe2metro:"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),'  //CreatePerson\n var $person : Object\n $person:=New object("Name";"Smith";"Age";40)\n ChangeAge($person)\n ALERT(String($person.  \n')),(0,r.kt)("p",null,"O m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"ChangeAge")," adiciona 10 ao atributo Age do objeto recebido"),(0,r.kt)("pre",null,(0,r.kt)("code",t({parentName:"pre"},{className:"language-4d"}),"  //ChangeAge\n #DECLARE ($person : Object)\n $person. Age:=$person. Age+10\n ALERT(String($person.\n")),(0,r.kt)("p",null,"Quando executar o m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"CreatePerson"),', as duas caixas de alerta dir\xe3o "50" j\xe1 que a mesma refer\xeancia de objeto \xe9 manejada por ambos m\xe9todos.'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"4D Server:"),' quando s\xe3o passados par\xe2metros entre m\xe9todos que n\xe3o s\xe3o executados na mesma m\xe1quina (utilizando por exemplo a op\xe7\xe3o "Executar no servidor"), as referencias n\xe3o s\xe3o utiliz\xe1veis. Nestes casos, s\xe3o enviadas c\xf3pias dos par\xe2metros de objetos e cole\xe7\xf5es ao inv\xe9s de refer\xeancias.'))}u.isMDXComponent=!0}}]);