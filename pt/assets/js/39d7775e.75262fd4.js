"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[59124],{3905:(e,a,t)=>{t.d(a,{Zo:()=>m,kt:()=>c});var o=t(67294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function n(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?n(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,o,r=function(e,a){if(null==e)return{};var t,o,r={},n=Object.keys(e);for(o=0;o<n.length;o++)t=n[o],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)t=n[o],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=o.createContext({}),d=function(e){var a=o.useContext(i),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},m=function(e){var a=d(e.components);return o.createElement(i.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return o.createElement(o.Fragment,{},a)}},u=o.forwardRef((function(e,a){var t=e.components,r=e.mdxType,n=e.originalType,i=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=d(t),c=r,g=u["".concat(i,".").concat(c)]||u[c]||p[c]||n;return t?o.createElement(g,l(l({ref:a},m),{},{components:t})):o.createElement(g,l({ref:a},m))}));function c(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var n=t.length,l=new Array(n);l[0]=u;var s={};for(var i in a)hasOwnProperty.call(a,i)&&(s[i]=a[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var d=2;d<n;d++)l[d]=t[d];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},17382:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>m});t(67294);var o=t(3905);function r(){return r=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e},r.apply(this,arguments)}function n(e,a){if(null==e)return{};var t,o,r=function(e,a){if(null==e)return{};var t,o,r={},n=Object.keys(e);for(o=0;o<n.length;o++)t=n[o],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)t=n[o],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}const l={id:"quick-tour",title:"Uma visita r\xe1pida",sidebar_label:"Uma visita r\xe1pida"},s=void 0,i={unversionedId:"Concepts/quick-tour",id:"version-18/Concepts/quick-tour",title:"Uma visita r\xe1pida",description:'Usando a linguagem 4D, imprimir a mensagem tradicional ""Hello, world!" na tela pode ser feito de v\xe1rias maneiras. A maneira mais simples \xe9 provavelmente escrever a linha \xfanica abaixo em um m\xe9todo de projeto:',source:"@site/i18n/pt/docusaurus-plugin-content-docs/version-18/Concepts/quick-tour.md",sourceDirName:"Concepts",slug:"/Concepts/quick-tour",permalink:"/docs/pt/18/Concepts/quick-tour",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20Concepts%2Fquick-tour.md%20(18)&body=Please%20enter%20your%20comment%3A",tags:[],version:"18",frontMatter:{id:"quick-tour",title:"Uma visita r\xe1pida",sidebar_label:"Uma visita r\xe1pida"},sidebar:"docs",previous:{title:"Sobre a linguagem 4D",permalink:"/docs/pt/18/Concepts/about"},next:{title:"Tipos de dados",permalink:"/docs/pt/18/Concepts/data-types"}},d={},m=[{value:"Atribuir valores",id:"atribuir-valores",level:2},{value:"Vari\xe1veis.",id:"vari\xe1veis",level:2},{value:"Comandos",id:"comandos",level:2},{value:"Constantes",id:"constantes",level:2},{value:"P\xe1gina M\xe9todos",id:"p\xe1gina-m\xe9todos",level:2},{value:"Tipos de dados",id:"tipos-de-dados",level:2},{value:"Objectos e colec\xe7\xf5es",id:"objectos-e-colec\xe7\xf5es",level:2},{value:"Operadores",id:"operadores",level:2},{value:"Express\xf5es",id:"express\xf5es",level:2},{value:"Tipos de express\xf5es",id:"tipos-de-express\xf5es",level:3},{value:"Express\xf5es atribu\xedveis vs express\xf5es n\xe3o atribu\xedveis",id:"express\xf5es-atribu\xedveis-vs-express\xf5es-n\xe3o-atribu\xedveis",level:3},{value:"Ponteiro",id:"ponteiro",level:2},{value:"Coment\xe1rios",id:"coment\xe1rios",level:2},{value:"Single line comments (//)",id:"single-line-comments-",level:4},{value:"Coment\xe1rios em linha ou em v\xe1rias linhas (/**/)",id:"coment\xe1rios-em-linha-ou-em-v\xe1rias-linhas-",level:4}],p={toc:m};function u(e){var{components:a}=e,l=n(e,["components"]);return(0,o.kt)("wrapper",r({},p,l,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("p",null,'Usando a linguagem 4D, imprimir a mensagem tradicional ""Hello, world!" na tela pode ser feito de v\xe1rias maneiras. A maneira mais simples \xe9 provavelmente escrever a linha \xfanica abaixo em um m\xe9todo de projeto:'),(0,o.kt)("pre",null,(0,o.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'ALERT("Hello, World!")\n')),(0,o.kt)("p",null,'Esse c\xf3digo vai exibir um alerta normal de plataforma com a mensagem "hello world" contendo um bot\xe3o OK. To execute the code, you just need to click on the execution button in the Method editor:'),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"alt-text",src:t(72065).Z,width:"613",height:"322"})),(0,o.kt)("p",null,"Ou poderia anexar esse c\xf3digo a um bot\xe3o em um formul\xe1rio e executar o formul\xe1rio, nesse caso, clicar no bot\xe3o exibira a caixa de di\xe1logo de alerta. Em qualquer caso, acabou de executar sua primeira linha de c\xf3digo 4D!"),(0,o.kt)("h2",r({},{id:"atribuir-valores"}),"Atribuir valores"),(0,o.kt)("p",null,"Dados podem ser colocado ou copiados de ou em vari\xe1veis, campos, elementos arrays... Colocar dados em uma vari\xe1vel \xe9 chamado atribuiindo os dados a uma vari\xe1vel e \xe9 feito com o operador de atribui\xe7\xe3o (:=). O operador de atribui\xe7\xe3o tamb\xe9m \xe9 usado para atribuir dados para elementos campos ou arrays."),(0,o.kt)("pre",null,(0,o.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'$MyNumber:=3 //assigns 3 to MyNumber variable  \n[Products]Size:=$MyNumber //assigns MyNumber variable to [Products]Size field\narrDays{2}:="Tuesday" //assigns "Tuesday" string to the 2nd arrDays element MyVar:=Length("Acme") //assigns the result of the function (4) to MyVar\n$myDate:=!2018/01/21! //atribui uma data literal\n$myHour:=?08:12:55? //atribui uma hora literal\n')),(0,o.kt)("p",null,"Voc\xea DEVE diferenciar o operador atribui\xe7\xe3o := dos outros operadores. Ao inv\xe9s de combinar express\xf5es a uma nova, o operador de atribui\xe7\xe3o copia o valor da express\xe3o para a direita do operador de atribui\xe7\xe3o para a vari\xe1vel ou campo para a esquerda do operador."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Importante:")," N\xe3o confunda o operador de atribui\xe7\xe3o := com o operador de compara\xe7\xe3o de igualdade =. Um operador de atribui\xe7\xe3o diferente (e n\xe3o =) foi escolhido deliberadamente para evitar problemas e confus\xe3o que ocorrem frequentemente em outras linguagens com operadores como == ou ===. Esses erros s\xe3o geralmente dif\xedceis de reconhecer pelo compilador e geram problemas trabalhosos."),(0,o.kt)("h2",r({},{id:"vari\xe1veis"}),"Vari\xe1veis."),(0,o.kt)("p",null,"A linguagem 4D \xe9 baseada em tipos, mas com alguma flexibilidade. You create a typed variable using a ",(0,o.kt)("inlineCode",{parentName:"p"},"C_XXX")," command. Por exemplo, para criar uma vari\xe1vel do tipo dados, pode escrever:"),(0,o.kt)("pre",null,(0,o.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"C_DATE(MyDate) //Date type for MyDate variable\n")),(0,o.kt)("p",null,"Even if it is usually not recommended, you can create variables simply by using them; you do not necessarily need to formally define them as you do with fields. Por exemplo, se quiser criar uma vari\xe1vel que contenha a data atual mais 30 dias, pode escrever:"),(0,o.kt)("pre",null,(0,o.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"MyOtherDate:=Current date+30\n")),(0,o.kt)("p",null,"A linha de c\xf3digo l\xea \u201cMyOtherDate gets the current date plus 30 days.\u201d This line creates the variable, assigns it with both the (temporary) date type and a content. A variable created by assignment is interpreted as typeless, that is, it can be assigned with other types in other lines and then changes the type dynamically. A variable typed with ",(0,o.kt)("inlineCode",{parentName:"p"},"C_XXX")," cannot change the type. In compiled mode, the type can never be changed, regardless of how the variable was created."),(0,o.kt)("h2",r({},{id:"comandos"}),"Comandos"),(0,o.kt)("p",null,"Os comandos 4D s\xe3o m\xe9todos integrados para realizar uma a\xe7\xe3o. All 4D commands, such as ",(0,o.kt)("inlineCode",{parentName:"p"},"CREATE RECORD"),", or ",(0,o.kt)("inlineCode",{parentName:"p"},"ALERT"),", are described in the ",(0,o.kt)("em",{parentName:"p"},"4D Language Reference")," manual, grouped by theme. Comandos s\xe3o frequentemente usados com par\xe2metros, que s\xe3o passados em par\xeanteses () e separados por ponto e v\xedrgula (;). Exemplo:"),(0,o.kt)("pre",null,(0,o.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'COPY DOCUMENT("folder1\\\\name1";"folder2\\\\" ; "new")\n')),(0,o.kt)("p",null,"Some commands are attached to collections or objects, in which case they are named methods and are used using the dot notation. Por exemplo:"),(0,o.kt)("pre",null,(0,o.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"$c:=New collection(1;2;3;4;5)\n$nc:=$c.slice(0;3) //$nc=[1,2,3]  \n\n$lastEmployee:=$employee.last()\n")),(0,o.kt)("p",null,"Pode utilizar os plug-ins ou os componentes 4D que adicionem novos comandos a seu entorno de desenvolvimento 4D."),(0,o.kt)("p",null,"H\xe1 v\xe1rios plug-ins propostos pela comunidade de usu\xe1rios 4D ou desenvolvedores de terceira parte no mercado. Por exemplo, usar ",(0,o.kt)("a",r({parentName:"p"},{href:"https://github.com/miyako/4d-plugin-pdf-pages"}),"4d-plugin-pdf-pages")," em macOS:"),(0,o.kt)("pre",null,(0,o.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"PDF REMOVE PAGE(path;page)\n")),(0,o.kt)("p",null,"4D SVG \xe9 um exemplo de componente utilit\xe1rio que aumenta as capacidades de sua aplica\xe7\xe3o:"),(0,o.kt)("pre",null,(0,o.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"//desenhar uma imagem\nsvgRef:=SVG_New\nobjectRef:=SVG_New_arc(svgRef;100;100;90;90;180)\n")),(0,o.kt)("p",null,"4D SVG \xe9 inclu\xeddo em 4D."),(0,o.kt)("h2",r({},{id:"constantes"}),"Constantes"),(0,o.kt)("p",null,"4D oferece um conjunto extensivo de constantes predefinidas, cujos valores s\xe3o acess\xedveis por nome. Por exemplo, ",(0,o.kt)("inlineCode",{parentName:"p"},"Read Mode")," \xe9 uma constante (valor 2). Predefined constants appear underlined by default in the 4D Method editor. Isso permite escrever c\xf3digo mais leg\xedvel."),(0,o.kt)("pre",null,(0,o.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'vRef:=Open document("PassFile";"TEXT";Read Mode) // abre documento em modo apenas leitura\n')),(0,o.kt)("h2",r({},{id:"p\xe1gina-m\xe9todos"}),"P\xe1gina M\xe9todos"),(0,o.kt)("p",null,"4D oferece un grande n\xfamero de m\xe9todos (ou comandos) integrados, mas tamb\xe9m lhe permite criar seus pr\xf3prios ",(0,o.kt)("strong",{parentName:"p"},"m\xe9todos de projeto"),". Os m\xe9todos de projeto s\xe3o m\xe9todos definidos pelo usu\xe1rio que contenham comandos, operadores e outras partes da linguaje. Los m\xe9todos projeto s\xe3o m\xe9todos gen\xe9ricos, mas h\xe1 outros tipos de m\xe9todos: m\xe9todos objeto, m\xe9todos formul\xe1rio, m\xe9todos tabela (Triggers) e m\xe9todos base."),(0,o.kt)("p",null,"Um m\xe9todo projeto \xe9 composto de v\xe1rias linhas de instru\xe7\xf5es, cada uma das quais consta de uma linha no m\xe9todo. Uma linha de instru\xe7\xe3o realiza uma a\xe7\xe3o e pode ser simples ou complexa."),(0,o.kt)("p",null,"Por exemplo, a linha abaixo \xe9 uma declara\xe7\xe3o que mostar\xe1 uma caixa de di\xe1logo de confirma\xe7\xe3o:"),(0,o.kt)("pre",null,(0,o.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'CONFIRM("Quer realmente fechar esta conta?"; "S\xedm"; "N\xe3o")\n')),(0,o.kt)("p",null,"Um m\xe9todo tamb\xe9m cont\xe9m testes e loops que controlam o fluxo da execu\xe7\xe3o. 4D methods support ",(0,o.kt)("inlineCode",{parentName:"p"},"If... End if")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Case of... End case")," branching structures as well as looping structures: ",(0,o.kt)("inlineCode",{parentName:"p"},"While... End while"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Repeat... Until"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"For... End for"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"For each... End for each"),":"),(0,o.kt)("p",null,"O exemplo abaixo recorre todos os caracteres do texto vtSomeText:"),(0,o.kt)("pre",null,(0,o.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"For($vlChar;1;Length(vtSomeText))\n //Fazer algo com o car\xe1cter se for um TAB\n If(Character code(vtSomeText[[$vlChar]])=Tab)\n  //...\n End for\n")),(0,o.kt)("p",null,"Um m\xe9todo projeto pode chamar a outro m\xe9todo projeto com ou sem par\xe2metros (argumentos). Os par\xe2metros se passam ao m\xe9todo entre par\xeantesis, depois do nome do m\xe9todo. Cada par\xe2metro est\xe1 separado do pr\xf3ximo por um ponto e v\xedrgula (;). Os par\xe2metros est\xe3o dispon\xedveis dentro do m\xe9todo chamado como vari\xe1veis locais numeradas sequencialmente: $1, $2,..., $n. A method can return a single value in the $0 parameter. Quando chamar um m\xe9todo, apenas digite seu nome:"),(0,o.kt)("pre",null,(0,o.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'$myText:="hello"\n$myText:=Do_Something($myText) //Chamar o m\xe9todo Do_Something\nALERT($myText) //"HELLO"\n\n  //Aqui o c\xf3digo do m\xe9todo Do_Something\n$0:=Uppercase($1)\n')),(0,o.kt)("h2",r({},{id:"tipos-de-dados"}),"Tipos de dados"),(0,o.kt)("p",null,"Na linguagem, os diferentes tipos de dados que podem ser manejados s\xe3o denominados tipos de dados. Existem tipos de dados b\xe1sicos (string, num\xe9rico, data, hora, booleano, imagem, ponteiros, arrays), e tamb\xe9m tipos de dados compostos (BLOBs, objetos, cole\xe7\xf5es)."),(0,o.kt)("p",null,"Lembre que os dados de tipo string e num\xe9rico podem ser associados a mais de um tipo de campo. Quando s\xe3o introduzidos dados em um campo, a linguagem converte automaticamente os dados no tipo correto para o campo. Por exemplo, se um campo inteiro for usado, seus dados s\xe3o tratados automaticamente como num\xe9ricos. Em outras palavras n\xe3o precisa se preocupar sobre misturar tipos de campos similares quando usando a linguagem; vai ser gerenciada por voc\xea."),(0,o.kt)("p",null,'Entretanto, quando usar a linguagem \xe9 importante que n\xe3o misture diferentes tipos de dados. Da mesma forma que n\xe3o tem sentido armazenar "ABC" em um campo de data, tampouco tem sentido por "ABC" em uma vari\xe1vel utilizada para datas. Na maioria dos casos, 4D \xe9 muito tolerante e tentar\xe1 dar sentido ao que est\xe1 fazendo. For example, if you add a number to a date, 4D will assume that you want to add that number of days to the date, but if you try to add a string to a date, 4D will tell you that the operation cannot work.'),(0,o.kt)("p",null,"There are cases in which you need to store data as one type and use it as another type. The language contains a full complement of commands that let you convert from one data type to another. For example, you may need to create a part number that starts with a number and ends with characters such as \u201cabc\u201d. Neste caso, poder\xe1 escrever:"),(0,o.kt)("pre",null,(0,o.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'[Products]Part Number:=String(Number)+"abc"\n')),(0,o.kt)("p",null,"If ",(0,o.kt)("em",{parentName:"p"},"Number")," is 17, then ",(0,o.kt)("em",{parentName:"p"},"[Products]","Part Number")," will get the string \u201c17abc\u201d."),(0,o.kt)("p",null,"The data types are fully defined in the section ",(0,o.kt)("a",r({parentName:"p"},{href:"/docs/pt/18/Concepts/data-types"}),"Data Types"),"."),(0,o.kt)("h2",r({},{id:"objectos-e-colec\xe7\xf5es"}),"Objectos e colec\xe7\xf5es"),(0,o.kt)("p",null,"You can handle 4D language objects and collections using the object notation to get or to set their values. Por exemplo:"),(0,o.kt)("pre",null,(0,o.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'employee.name:="Smith"\n')),(0,o.kt)("p",null,"You can also use a string within square brackets, for example:"),(0,o.kt)("pre",null,(0,o.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'$vName:=employee["name"]\n')),(0,o.kt)("p",null,"Uma vez que um valor de propriedade de objeto pode ser um objeto ou uma cole\xe7\xe3o, a nota\xe7\xe3o de objeto aceita uma sequ\xeancia de s\xedmbolos para acessar subpropriedades, por exemplo:"),(0,o.kt)("pre",null,(0,o.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"$vAge:=employee.children[2].age\n")),(0,o.kt)("p",null,"Note that if the object property value is an object that encapsulates a method (a formula), you need to add parenthesis () to the property name to execute the method:"),(0,o.kt)("pre",null,(0,o.kt)("code",r({parentName:"pre"},{}),'$f:=New object\n$f.message:=New formula(ALERT("Hello world!"))\n$myText:="hello"\n$myText:=Do_Something($myText) //Call the Do_Something method\n')),(0,o.kt)("p",null,"To access a collection element, you have to pass the element number embedded in square brackets:"),(0,o.kt)("pre",null,(0,o.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'C_COLLECTION(myColl)\nmyColl:=New collection("A";"B";1;2;Current time)\nmyColl[3]  //access to 4th element of the collection\n')),(0,o.kt)("h2",r({},{id:"operadores"}),"Operadores"),(0,o.kt)("p",null,"When you use the language, it is rare that you will simply want a piece of data. It is more likely that you will want to do something to or with that data. You perform such calculations with operators. Operators, in general, take two pieces of data and perform an operation on them that results in a new piece of data. J\xe1 est\xe1 familiarizado com muitos operadores. You are already familiar with many operators. You are already familiar with many operators."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",r({parentName:"tr"},{align:null}),"Operador"),(0,o.kt)("th",r({parentName:"tr"},{align:null}),"Opera\xe7\xe3o"),(0,o.kt)("th",r({parentName:"tr"},{align:null}),"Exemplo"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"+"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Adi\xe7\xe3o"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"1 +2 = 3")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"\u2013"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Subtra\xe7\xe3o"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"3 - 2 = 1")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"*"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Multiplica\xe7\xe3o"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"2 * 3 = 6")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"/"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Divis\xe3o"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"6 / 2 = 3")))),(0,o.kt)("p",null,"Os operadores num\xe9ricos s\xe3o apenas um dos tipos de operadores dispon\xedveis. 4D supports many different types of data, such as numbers, text, dates, and pictures, so there are operators that perform operations on these different data types."),(0,o.kt)("p",null,"The same symbols are often used for different operations, depending on the data type. For example, the plus sign (+) performs different operations with different data:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",r({parentName:"tr"},{align:null}),"Tipo de dados"),(0,o.kt)("th",r({parentName:"tr"},{align:null}),"Opera\xe7\xe3o"),(0,o.kt)("th",r({parentName:"tr"},{align:null}),"Exemplo"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Number"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Adi\xe7\xe3o"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"1 + 2 adiciona os n\xfameros e resultados em 3")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"String"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Concatena\xe7\xe3o"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"\u201cHello \u201d + \u201cthere\u201d concatenates (joins together) the strings and results in \u201cHello there\u201d")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Data e N\xfamero"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Date addition"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"!1989-01-01! + 20 adds 20 days to the date January 1, 1989, and results in the date January 21, 1989")))),(0,o.kt)("h2",r({},{id:"express\xf5es"}),"Express\xf5es"),(0,o.kt)("p",null,"Em termos simples, as express\xf5es retornam um valor. In fact, when using the 4D language, you use expressions all the time and tend to think of them only in terms of the value they represent. Expressions are also sometimes referred to as formulas."),(0,o.kt)("p",null,"Expressions are made up of almost all the other parts of the language: commands, operators, variables, fields, object properties, and collection elements. Utiliza express\xf5es para escrever linhas de c\xf3digo, que por sua vez s\xe3o utilizadas para construir os m\xe9todos. A linguagem utiliza express\xf5es sempre que necessita de um dado."),(0,o.kt)("p",null,'As express\xf5es raramente s\xe3o "aut\xf3nomas." H\xe1 v\xe1rios s\xedtios em 4D onde uma express\xe3o pode ser usada por si s\xf3. Inclui:'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Editor de f\xf3rmulas (apply formula, query with formula, order by formula)"),(0,o.kt)("li",{parentName:"ul"},"O comando ",(0,o.kt)("inlineCode",{parentName:"li"},"EXECUTE FORMULA")),(0,o.kt)("li",{parentName:"ul"},"A lista de propriedades, onde uma express\xe3o pode ser usada como fonte de dados para a maioria dos widgets"),(0,o.kt)("li",{parentName:"ul"},"Depurador onde o valor das express\xf5es pode ser verificado"),(0,o.kt)("li",{parentName:"ul"},"Editor de relat\xf3rios r\xe1pidos como uma f\xf3rmula para uma coluna")),(0,o.kt)("h3",r({},{id:"tipos-de-express\xf5es"}),"Tipos de express\xf5es"),(0,o.kt)("p",null,"Refere-se a uma express\xe3o pelo tipo de dados que devolve. Existem v\xe1rios tipos de express\xe3o. A tabela seguinte apresenta exemplos de cada tipo de express\xe3o."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",r({parentName:"tr"},{align:null}),"Expression"),(0,o.kt)("th",r({parentName:"tr"},{align:null}),"Tipo"),(0,o.kt)("th",r({parentName:"tr"},{align:null}),"Descri\xe7\xe3o"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"\u201cHello\u201d"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"String"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"A palavra Hello \xe9 uma constante cadeia de caracteres, indicada pelas aspas duplas.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"\u201cHello \u201d + \u201cthere\u201d"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"String"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),'Duas cadeias, "Hello " e "there", s\xe3o adicionadas (concatenadas) com o operador de concatena\xe7\xe3o de cadeias (+). \xc9 devolvida a cadeia de caracteres "Hello there".')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"\u201cSr. \u201d + ","[People]","Name"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"String"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),'S\xe3o concatenadas duas cadeias: a cadeia "Mr. " e o valor atual do campo Name na tabela People. Se o campo contiver "Smith", a express\xe3o devolve "Mr. Smith".')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),'Uppercase("smith")'),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"String"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Esta express\xe3o utiliza ",(0,o.kt)("inlineCode",{parentName:"td"},"Uppercase"),', um comando da linguagem, para converter a cadeia de caracteres "smith" em mai\xfasculas. Retorna "SMITH".')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"4"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Number"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Esta \xe9 uma constante num\xe9rica, 4.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"4 * 2"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Number"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Dois n\xfameros, 4 e 2, s\xe3o multiplicados utilizando o operador de multiplica\xe7\xe3o (*). O resultado \xe9 o n\xfamero 8.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"myButton"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Number"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Esta \xe9 uma vari\xe1vel associada a um bot\xe3o. Devolve o valor atual do bot\xe3o: 1 se foi clicado, 0 se n\xe3o foi.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"!1997-01-25!"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Date"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Esta \xe9 uma constante data para a data 1/25/97 (25 de janeiro de 1997).")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Current date+ 30"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Date"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Esta \xe9 uma express\xe3o de tipo data que utiliza o comando ",(0,o.kt)("inlineCode",{parentName:"td"},"Current date")," para obter a data de hoje. Adiciona 30 dias \xe0 data de hoje e devolve a nova data.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"?8:05:30?"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Hora"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Esta \xe9 uma constante de tempo que representa 8 horas, 5 minutos e 30 segundos.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"?2:03:04? + ?1:02:03?"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Hora"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Esta express\xe3o soma dois horas e devolve a hora 3:05:07.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"True"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Par\xe2metros"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Este comando devolve o valor Booleano TRUE.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"10 # 20"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Par\xe2metros"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),'Trata-se de uma compara\xe7\xe3o l\xf3gica entre dois n\xfameros. O sinal de n\xfamero (#) significa "n\xe3o \xe9 igual a". Como 10 "n\xe3o \xe9 igual a" 20, a express\xe3o devolve TRUE.')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"\u201cABC\u201d = \u201cXYZ\u201d"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Par\xe2metros"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Trata-se de uma compara\xe7\xe3o l\xf3gica entre duas cadeias. N\xe3o s\xe3o iguais, pelo que a express\xe3o devolve FALSE.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"My Picture + 50"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Imagem"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Esta express\xe3o pega na imagem em My Picture, move-a 50 p\xedxeis para a direita e devolve a imagem resultante.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"->","[People]","Name"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Ponteiro"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Esta express\xe3o devolve um ponteiro ao campo chamado ","[People]","Name.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Table(1)"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Ponteiro"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Este \xe9 um comando que devolve um ponteiro para a primeira tabela.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"JSON Parse (MyString)"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Object"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Este \xe9 um comando que devolve MyString como um objeto (se o formato \xe9 adequado)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"JSON Parse (MyJSONArray)"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Collection"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Este \xe9 um comando que devolve MyJSONArray como uma cole\xe7\xe3o (se o formato \xe9 adequado)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Form.pageNumber"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Propriedade objecto"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Uma propriedade objeto \xe9 uma express\xe3o que pode ser de qualquer tipo suportado")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Col","[5]"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Elemento de colec\xe7\xe3o"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Um elemento de cole\xe7\xe3o \xe9 uma express\xe3o que pode ser de qualquer tipo suportado")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",r({parentName:"tr"},{align:null}),"$entitySel","[0]"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Entity"),(0,o.kt)("td",r({parentName:"tr"},{align:null}),"Um elemento de uma sele\xe7\xe3o de entidade ORDA \xe9 uma express\xe3o do tipo entidade. Este tipo de express\xe3o \xe9 ",(0,o.kt)("strong",{parentName:"td"},"n\xe3o atribu\xedvel"))))),(0,o.kt)("h3",r({},{id:"express\xf5es-atribu\xedveis-vs-express\xf5es-n\xe3o-atribu\xedveis"}),"Express\xf5es atribu\xedveis vs express\xf5es n\xe3o atribu\xedveis"),(0,o.kt)("p",null,'Uma express\xe3o pode ser simplesmente uma constante literal, como o n\xfamero 4 ou a string "Hello", ou uma vari\xe1vel como ',(0,o.kt)("inlineCode",{parentName:"p"},"$myButton"),". Tamb\xe9m pode utilizar operadores. Por exemplo, 4 + 2 \xe9 uma express\xe3o que utiliza o operador de adi\xe7\xe3o para somar dois n\xfameros e devolver o resultado 6. Em qualquer dos casos, estas express\xf5es s\xe3o ",(0,o.kt)("strong",{parentName:"p"},"n\xe3o atribu\xedveis"),", o que significa que n\xe3o lhes pode ser atribu\xeddo um valor. Em 4D, as express\xf5es podem ser ",(0,o.kt)("strong",{parentName:"p"},"atribu\xedveis"),". Uma express\xe3o \xe9 atribu\xedvel quando pode ser utilizada no lado esquerdo de uma atribui\xe7\xe3o. Por exemplo:"),(0,o.kt)("pre",null,(0,o.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'//$myVar variable is assignable, you can write:  \n$myVar:="Hello" //assign "Hello" to myVar\n//Form.pageNumber is assignable, you can write: Form.pageNumber:=10 //assign 10 to Form.pageNumber\n//Form.pageTotal-Form.pageNumber is not assignable: Form.pageTotal- Form.pageNumber:=10 //error, non-assignable\n')),(0,o.kt)("p",null,"Em geral, as express\xf5es que utilizam um operador n\xe3o s\xe3o atribu\xedveis. Por exemplo, ",(0,o.kt)("inlineCode",{parentName:"p"},'[Person]FirstName+" "+[Person]LastName')," n\xe3o \xe9 atribu\xedvel."),(0,o.kt)("h2",r({},{id:"ponteiro"}),"Ponteiro"),(0,o.kt)("p",null,"A linguagem 4D fornece uma implementa\xe7\xe3o avan\xe7ada de ponteiros, que permite escrever c\xf3digo poderoso e modular. \xc9 poss\xedvel utilizar ponteiros para referenciar tabelas, campos, vari\xe1veis, arrays e elementos de arrays."),(0,o.kt)("p",null,'Um ponteiro para um elemento \xe9 criado adicionando um s\xedmbolo "->" antes do nome do elemento, e pode ser desreferenciado adicionando o s\xedmbolo "->" ap\xf3s o nome do ponteiro.'),(0,o.kt)("pre",null,(0,o.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'MyVar:="Hello" MyPointer:=->MyVar ALERT(MyPointer->)\n')),(0,o.kt)("h2",r({},{id:"coment\xe1rios"}),"Coment\xe1rios"),(0,o.kt)("p",null,"Os coment\xe1rios s\xe3o linhas de c\xf3digo inactivas. Estas linhas n\xe3o s\xe3o interpretadas pela linguagem 4D e n\xe3o s\xe3o executadas quando o c\xf3digo \xe9 chamado."),(0,o.kt)("p",null,"Existem duas formas de criar coment\xe1rios:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"//")," para coment\xe1rios de linha \xfanica"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"/*...*/")," para comentarios em linha ou multilinha.")),(0,o.kt)("p",null,"Ambos os estilos de coment\xe1rios podem ser utilizados em simult\xe2neo."),(0,o.kt)("h4",r({},{id:"single-line-comments-"}),"Single line comments (//)"),(0,o.kt)("p",null,"Inserir ",(0,o.kt)("inlineCode",{parentName:"p"},"//")," no in\xedcio de uma linha ou depois de uma declara\xe7\xe3o para adicionar um coment\xe1rio de linha \xfanica. Exemplo:"),(0,o.kt)("pre",null,(0,o.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"/Este \xe9 um coment\xe1rio\nFor($vCounter;1;100) //Starting loop\n  //comment\n  //comment\n  //comment\n End for\n")),(0,o.kt)("h4",r({},{id:"coment\xe1rios-em-linha-ou-em-v\xe1rias-linhas-"}),"Coment\xe1rios em linha ou em v\xe1rias linhas (/**/)"),(0,o.kt)("p",null,"Envolva o conte\xfado com caracteres ",(0,o.kt)("inlineCode",{parentName:"p"},"/*")," ... ",(0,o.kt)("inlineCode",{parentName:"p"},"*/")," para criar coment\xe1rios em linha ou blocos de coment\xe1rios de v\xe1rias linhas. Os blocos de coment\xe1rios, tanto em linha como em v\xe1rias linhas, come\xe7am com ",(0,o.kt)("inlineCode",{parentName:"p"},"/*")," e terminam com ",(0,o.kt)("inlineCode",{parentName:"p"},"*/"),"."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Inline comments")," can be inserted anywhere in the code. Exemplo:")),(0,o.kt)("pre",null,(0,o.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"For /* inline comment */ ($vCounter;1;100)\n ...\nEnd for\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Multiline comment blocks")," allows commenting an unlimited number of lines. Comment blocks can be nested (useful since the 4D code editor supports block collapsing). Exemplo:")),(0,o.kt)("pre",null,(0,o.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"For ($vCounter;1;100)\n/*\ncomentarios  \n    /*\n    outros comentarios\n    */\n*/\n...\nEnd for\n")))}u.isMDXComponent=!0},72065:(e,a,t)=>{t.d(a,{Z:()=>o});const o=t.p+"assets/images/helloworld-3e6e70b5b735baa9c97019730d06bfdd.png"}}]);