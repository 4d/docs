"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[53535],{3905:(t,e,a)=>{a.d(e,{Zo:()=>d,kt:()=>k});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function p(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function i(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var o=n.createContext({}),m=function(t){var e=n.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):p(p({},e),t)),a},d=function(t){var e=m(t.components);return n.createElement(o.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},s=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,o=t.parentName,d=i(t,["components","mdxType","originalType","parentName"]),s=m(a),k=r,N=s["".concat(o,".").concat(k)]||s[k]||u[k]||l;return a?n.createElement(N,p(p({ref:e},d),{},{components:a})):n.createElement(N,p({ref:e},d))}));function k(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,p=new Array(l);p[0]=s;var i={};for(var o in e)hasOwnProperty.call(e,o)&&(i[o]=e[o]);i.originalType=t,i.mdxType="string"==typeof t?t:r,p[1]=i;for(var m=2;m<l;m++)p[m]=a[m];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},12420:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>m,contentTitle:()=>i,default:()=>s,frontMatter:()=>p,metadata:()=>o,toc:()=>d});a(67294);var n=a(3905);function r(){return r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(t[n]=a[n])}return t},r.apply(this,arguments)}function l(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}const p={id:"CryptoKeyClass",title:"CryptoKey"},i=void 0,o={unversionedId:"API/CryptoKeyClass",id:"version-19-R7/API/CryptoKeyClass",title:"CryptoKey",description:"A classe CryptoKey da linguagem 4D cont\xe9m um par de chaves de cifrado assim\xe9trico.",source:"@site/i18n/pt/docusaurus-plugin-content-docs/version-19-R7/API/CryptoKeyClass.md",sourceDirName:"API",slug:"/API/CryptoKeyClass",permalink:"/docs/pt/19-R7/API/CryptoKeyClass",draft:!1,editUrl:"https://github.com/4D/docs/edit/main/versioned_docs/version-19-R7/API/CryptoKeyClass.md",tags:[],version:"19-R7",frontMatter:{id:"CryptoKeyClass",title:"CryptoKey"},sidebar:"docs",previous:{title:"Collection",permalink:"/docs/pt/19-R7/API/CollectionClass"},next:{title:"DataClass",permalink:"/docs/pt/19-R7/API/DataClassClass"}},m={},d=[{value:"Exemplo",id:"exemplo",level:3},{value:"Resumo",id:"resumo",level:3},{value:"4D. CryptoKey.new()",id:"4d-cryptokeynew",level:2},{value:"<em>settings</em>",id:"settings",level:4},{value:"<em>CryptoKey</em>",id:"cryptokey",level:4},{value:".curve",id:"curve",level:2},{value:".decrypt()",id:"decrypt",level:2},{value:"<em>options</em>",id:"options",level:4},{value:"<em>Resultados</em>",id:"resultados",level:4},{value:".encrypt()",id:"encrypt",level:2},{value:"<em>options</em>",id:"options-1",level:5},{value:"<em>Resultados</em>",id:"resultados-1",level:4},{value:".getPrivateKey()",id:"getprivatekey",level:2},{value:"<em>Resultados</em>",id:"resultados-2",level:4},{value:".getPublicKey()",id:"getpublickey",level:2},{value:"<em>Resultados</em>",id:"resultados-3",level:4},{value:".pem",id:"pem",level:2},{value:".sign()",id:"sign",level:2},{value:"<em>options</em>",id:"options-2",level:4},{value:"<em>Resultados</em>",id:"resultados-4",level:4},{value:".size",id:"size",level:2},{value:".type",id:"type",level:2},{value:".verify()",id:"verify",level:2},{value:"<em>options</em>",id:"options-3",level:4},{value:"<em>Resultados</em>",id:"resultados-5",level:4}],u={toc:d};function s(t){var{components:e}=t,a=l(t,["components"]);return(0,n.kt)("wrapper",r({},u,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"A classe ",(0,n.kt)("inlineCode",{parentName:"p"},"CryptoKey")," da linguagem 4D cont\xe9m um par de chaves de cifrado assim\xe9trico."),(0,n.kt)("p",null,"Esta classe est\xe1 dispon\xedvel na loja de classes de ",(0,n.kt)("inlineCode",{parentName:"p"},"4D"),"."),(0,n.kt)("h3",r({},{id:"exemplo"}),"Exemplo"),(0,n.kt)("p",null,"O c\xf3digo abaixo de exemplo firma e verifica uma mensagem utilizando um novo par de chaves ECDSA, por exemplo para criar um token web JSON ES256."),(0,n.kt)("pre",null,(0,n.kt)("code",r({parentName:"pre"},{className:"language-4d"}),' // Generate a new ECDSA key pair\n$key:=4D. CryptoKey.new(New object("type";"ECDSA";"curve";"prime256v1"))\n\n  // Get signature as base64\n$message:="hello world"\n$signature:=$key.sign($message;New object("hash";"SHA256"))\n\n  // Verify signature\n$status:=$key.verify($message;$signature;New object("hash";"SHA256"))\nASSERT($status.success)\n')),(0,n.kt)("h3",r({},{id:"resumo"}),"Resumo"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null})))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),(0,n.kt)("a",r({parentName:"td"},{href:"#4dcryptokeynew"})," ",(0,n.kt)("strong",{parentName:"a"},"4D. CryptoKey.new"),"( ",(0,n.kt)("em",{parentName:"a"},"settings")," : Object ) : 4D. CryptoKey"),"\xa0","\xa0","\xa0","\xa0","cria um novo objecto ",(0,n.kt)("inlineCode",{parentName:"td"},"4D.CryptoKey")," que encapsula um par de chaves de encripta\xe7\xe3o")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),(0,n.kt)("a",r({parentName:"td"},{href:"#curve"}),(0,n.kt)("strong",{parentName:"a"},".curve")," : Text"),"\xa0","\xa0","\xa0","\xa0","nome da curva normalizada da chave")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),(0,n.kt)("a",r({parentName:"td"},{href:"#decrypt"})," ",(0,n.kt)("strong",{parentName:"a"},".decrypt"),"( ",(0,n.kt)("em",{parentName:"a"},"message")," : Text ; ",(0,n.kt)("em",{parentName:"a"},"options")," : Object ) : Object"),"\xa0","\xa0","\xa0","\xa0","decifra o par\xe2metro ",(0,n.kt)("em",{parentName:"td"},"mensagem")," usando a chave ",(0,n.kt)("strong",{parentName:"td"},"privada"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),(0,n.kt)("a",r({parentName:"td"},{href:"#encrypt"})," ",(0,n.kt)("strong",{parentName:"a"},".encrypt"),"( ",(0,n.kt)("em",{parentName:"a"},"message")," : Text ; ",(0,n.kt)("em",{parentName:"a"},"options")," : Object ) : Text"),"\xa0","\xa0","\xa0","\xa0","encripta o par\xe2metro ",(0,n.kt)("em",{parentName:"td"},"mensagem")," utilizando a chave ",(0,n.kt)("strong",{parentName:"td"},"public"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),(0,n.kt)("a",r({parentName:"td"},{href:"#getprivatekey"})," ",(0,n.kt)("strong",{parentName:"a"},".getPrivateKey()")," : Text"),"\xa0","\xa0","\xa0","\xa0","devolve a chave privada do objecto ",(0,n.kt)("inlineCode",{parentName:"td"},"CryptoKey"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),(0,n.kt)("a",r({parentName:"td"},{href:"#getpublickey"})," ",(0,n.kt)("strong",{parentName:"a"},".getPublicKey( )")," : Text"),"\xa0","\xa0","\xa0","\xa0","devolve a chave p\xfablica do objecto ",(0,n.kt)("inlineCode",{parentName:"td"},"CryptoKey"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),(0,n.kt)("a",r({parentName:"td"},{href:"#sign"}),".",(0,n.kt)("strong",{parentName:"a"},"sign")," (",(0,n.kt)("em",{parentName:"a"},"message")," : Text ; ",(0,n.kt)("em",{parentName:"a"},"options")," : Text) : Text"),"\xa0","\xa0","\xa0","\xa0","assina a representa\xe7\xe3o utf8 de uma mensagem ** string")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),(0,n.kt)("a",r({parentName:"td"},{href:"#size"}),(0,n.kt)("strong",{parentName:"a"},".size")," : Integer"),"\xa0","\xa0","\xa0","\xa0","o tamanho da chave em bits")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),(0,n.kt)("a",r({parentName:"td"},{href:"#type"}),(0,n.kt)("strong",{parentName:"a"},".type")," : Text"),"\xa0","\xa0","\xa0","\xa0",'name of the key type - "RSA", "ECDSA", "PEM"')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),(0,n.kt)("a",r({parentName:"td"},{href:"#verify"})," ",(0,n.kt)("strong",{parentName:"a"},".verify"),"( ",(0,n.kt)("em",{parentName:"a"},"message")," : Text ; ",(0,n.kt)("em",{parentName:"a"},"signature")," : Text ; ",(0,n.kt)("em",{parentName:"a"},"options")," : Object) : object"),"\xa0","\xa0","\xa0","\xa0","verifica a assinatura base64 contra a representa\xe7\xe3o utf8 de ",(0,n.kt)("em",{parentName:"td"},"mensagem"))))),(0,n.kt)("h2",r({},{id:"4d-cryptokeynew"}),"4D. CryptoKey.new()"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Hist\xf3rico"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Vers\xe3o"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Mudan\xe7as"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"v18 R4"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Adicionado"))))),(0,n.kt)("p",null," ",(0,n.kt)("strong",{parentName:"p"},"4D. CryptoKey.new"),"( ",(0,n.kt)("em",{parentName:"p"},"settings")," : Object ) : 4D. CryptoKey"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Par\xe2metros"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",r({parentName:"tr"},{align:null})),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Descri\xe7\xe3o"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"settings"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Objeto"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"->"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Par\xe2metros para gerar ou carregar um par de chaves")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"result"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"4D. CryptoKey"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"<-"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Objeto que cont\xe9m um par de chaves de criptografia")))),(0,n.kt)("p",null,"A fun\xe7\xe3o ",(0,n.kt)("inlineCode",{parentName:"p"},"4D.CryptoKey.new()")," cria um novo objecto ",(0,n.kt)("inlineCode",{parentName:"p"},"4D.CryptoKey")," que encapsula um par de chaves de encripta\xe7\xe3o, com base no par\xe2metro objecto ",(0,n.kt)("em",{parentName:"p"},"settings"),". Permite gerar uma nova chave RSA o ECDSA, ou carregar um par de chaves existente desde uma defini\xe7\xe3o PEM."),(0,n.kt)("h4",r({},{id:"settings"}),(0,n.kt)("em",{parentName:"h4"},"settings")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Propriedade"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Descri\xe7\xe3o"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),(0,n.kt)("a",r({parentName:"td"},{href:"#type"}),"type")),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Define o tipo da chave a criar: ",(0,n.kt)("li",null,'"RSA": gera um par de chaves RSA usando ',(0,n.kt)("a",r({parentName:"td"},{href:"#size"}),".size")," como size."),(0,n.kt)("li",null,'"ECDSA": gera um par de chaves Elliptic Curve Digital Signature Algorithm, usando ',(0,n.kt)("a",r({parentName:"td"},{href:"#curve"}),".curve")," como curve. Lembre que chaves ECDSA n\xe3o podem ser usadas para a criptografia mas s\xf3 pela assinatura."),(0,n.kt)("li",null,'"PEM": carrega uma defini\xe7\xe3o de par de chaves em formato PEM, usando ',(0,n.kt)("a",r({parentName:"td"},{href:"#pem"}),".pem"),"."))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),(0,n.kt)("a",r({parentName:"td"},{href:"#curve"}),"curve")),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Nome da curva ECDSA")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),(0,n.kt)("a",r({parentName:"td"},{href:"#pem"}),"pem")),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Defini\xe7\xe3o PEM de uma chave de cifrado a carregar")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),(0,n.kt)("a",r({parentName:"td"},{href:"#size"}),"size")),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"integer"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Tamanho da chave RSA em bits")))),(0,n.kt)("h4",r({},{id:"cryptokey"}),(0,n.kt)("em",{parentName:"h4"},"CryptoKey")),(0,n.kt)("p",null,"O objeto ",(0,n.kt)("inlineCode",{parentName:"p"},"CryptoKey")," devolvido encapsula um par de chaves de cifrado. \xc9 um objeto compartido e, portanto, pode ser utilizado por v\xe1rios processos 4D simultaneamente."),(0,n.kt)("h2",r({},{id:"curve"}),".curve"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Hist\xf3rico"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Vers\xe3o"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Mudan\xe7as"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"v18 R4"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Adicionado"))))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},".curve")," : Text"),(0,n.kt)("p",null,'Definido apenas para as chaves ECDSA: o nome da curva normalizada da chave. Normalmente "prime256v1" para ES256 (por defeito), "secp384r1" para ES384, "secp521r1" para ES512.'),(0,n.kt)("h2",r({},{id:"decrypt"}),".decrypt()"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Hist\xf3rico"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Vers\xe3o"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Mudan\xe7as"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"v18 R4"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Adicionado"))))),(0,n.kt)("p",null," ",(0,n.kt)("strong",{parentName:"p"},".decrypt"),"( ",(0,n.kt)("em",{parentName:"p"},"message")," : Text ; ",(0,n.kt)("em",{parentName:"p"},"options")," : Object ) : Object"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Par\xe2metros"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",r({parentName:"tr"},{align:null})),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Descri\xe7\xe3o"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"message"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Text"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"->"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"String de mensagens a decodificar utilizando ",(0,n.kt)("inlineCode",{parentName:"td"},"options.encodingEncrypted")," e descifrar.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"options"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Objeto"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"->"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Op\xe7\xf5es de codifica\xe7\xe3o")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Resultados"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Objeto"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"<-"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Estado")))),(0,n.kt)("p",null,"A fun\xe7\xe3o ",(0,n.kt)("inlineCode",{parentName:"p"},".decrypt()")," decifra o par\xe2metro ",(0,n.kt)("em",{parentName:"p"},"mensagem")," usando a chave ",(0,n.kt)("strong",{parentName:"p"},"privada"),". O algoritmo utilizado depende do tipo da chave."),(0,n.kt)("p",null,'"RSA": um par de chaves RSA, utilizando ',(0,n.kt)("inlineCode",{parentName:"p"},"settings.size")," como ","[",".size","]","(#size)."),(0,n.kt)("h4",r({},{id:"options"}),(0,n.kt)("em",{parentName:"h4"},"options")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Propriedade"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Descri\xe7\xe3o"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"hash"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),'Algoritmo Digest a utilizar. Por exemplo: "SHA256", "SHA384", ou "SHA512".')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"encodingEncrypted"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Codifica\xe7\xe3o utilizada para converter o par\xe2metro ",(0,n.kt)("inlineCode",{parentName:"td"},"mensagem"),' na representa\xe7\xe3o binaria a decifrar. Pode ser "Base64", ou "Base64URL". Por padr\xe3o \xe9 "Base64".')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"encodingDecrypted"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),'Codifica\xe7\xe3o utilizada para converter a mensagem bin\xe1rio decifrado na string de resultados. Pode ser "UTF-8", "Base64" ou "Base64URL". Por padr\xe3o \xe9 "UTF-8".')))),(0,n.kt)("h4",r({},{id:"resultados"}),(0,n.kt)("em",{parentName:"h4"},"Resultados")),(0,n.kt)("p",null,"A chave deveser do estilo RSA, o algoritmo \xe9 RSA-OAEP (ver ",(0,n.kt)("a",r({parentName:"p"},{href:"https://tools.ietf.org/html/rfc3447"}),"RFC 3447"),")."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Propriedade"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Descri\xe7\xe3o"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"success"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"boolean"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"True se a mensagem tiver sido decifrada com \xeaxito")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"result"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Mensagem decifrado e decodificado utilizando ",(0,n.kt)("inlineCode",{parentName:"td"},"options.encodingDecrypted"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"errors"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"collection"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Se ",(0,n.kt)("inlineCode",{parentName:"td"},"success")," for ",(0,n.kt)("inlineCode",{parentName:"td"},"false"),", pode conter uma cole\xe7\xe3o de erros")))),(0,n.kt)("p",null,'A fun\xe7\xe3o devolve um objeto "status" com a propriedade ',(0,n.kt)("inlineCode",{parentName:"p"},"success")," definida como ",(0,n.kt)("inlineCode",{parentName:"p"},"true")," se ",(0,n.kt)("em",{parentName:"p"},"message")," puder ser descifrada com \xeaxito."),(0,n.kt)("h2",r({},{id:"encrypt"}),".encrypt()"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Hist\xf3rico"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Vers\xe3o"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Mudan\xe7as"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"v18 R4"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Adicionado"))))),(0,n.kt)("p",null," ",(0,n.kt)("strong",{parentName:"p"},".encrypt"),"( ",(0,n.kt)("em",{parentName:"p"},"message")," : Text ; ",(0,n.kt)("em",{parentName:"p"},"options")," : Object ) : Text"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Par\xe2metros"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",r({parentName:"tr"},{align:null})),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Descri\xe7\xe3o"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"message"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Text"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"->"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"String de mensagens a codificar utilizando ",(0,n.kt)("inlineCode",{parentName:"td"},"options.encodingDecrypted")," e encriptar")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"options"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Objeto"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"->"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Op\xe7\xf5es de decodifica\xe7\xe3o")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Resultados"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Text"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"<-"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Mensagem criptografada e codificada utilizando ",(0,n.kt)("inlineCode",{parentName:"td"},"options.encodingEncrypted"))))),(0,n.kt)("p",null,"A fun\xe7\xe3o ",(0,n.kt)("inlineCode",{parentName:"p"},".encrypt()")," encripta o par\xe2metro ",(0,n.kt)("em",{parentName:"p"},"mensagem")," utilizando a chave ",(0,n.kt)("strong",{parentName:"p"},"public"),". O algoritmo utilizado depende do tipo da chave."),(0,n.kt)("p",null,'"RSA": um par de chaves RSA, utilizando ',(0,n.kt)("inlineCode",{parentName:"p"},"settings.size")," como ","[",".size","]","(#size)."),(0,n.kt)("h5",r({},{id:"options-1"}),(0,n.kt)("em",{parentName:"h5"},"options")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Propriedade"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Descri\xe7\xe3o"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"hash"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),'Algoritmo Digest a utilizar. Por exemplo: "SHA256", "SHA384", ou "SHA512".')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"encodingEncrypted"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),'Codifica\xe7\xe3o utilizada para converter a mensagem bin\xe1ria criptografada na string  resultante. Pode ser "Base64", ou "Base64URL". Por padr\xe3o \xe9 "Base64".')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"encodingDecrypted"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Codifica\xe7\xe3o utilizada para converter o par\xe2metro ",(0,n.kt)("inlineCode",{parentName:"td"},"mensagem"),' na representa\xe7\xe3o binaria a encriptar Pode ser "UTF-8", "Base64" ou "Base64URL". Por padr\xe3o \xe9 "UTF-8".')))),(0,n.kt)("h4",r({},{id:"resultados-1"}),(0,n.kt)("em",{parentName:"h4"},"Resultados")),(0,n.kt)("p",null,"O valor devolvido \xe9 uma mensagem encriptada."),(0,n.kt)("h2",r({},{id:"getprivatekey"}),".getPrivateKey()"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Hist\xf3rico"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Vers\xe3o"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Mudan\xe7as"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"v18 R4"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Adicionado"))))),(0,n.kt)("p",null," ",(0,n.kt)("strong",{parentName:"p"},".getPrivateKey()")," : Text"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Par\xe2metros"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",r({parentName:"tr"},{align:null})),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Descri\xe7\xe3o"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Resultados"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Text"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"<-"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Chave privada em formato PEM")))),(0,n.kt)("p",null,"A fun\xe7\xe3o ",(0,n.kt)("inlineCode",{parentName:"p"},".getPrivateKey()"),"  devolve a chave privada do objecto ",(0,n.kt)("inlineCode",{parentName:"p"},"CryptoKey")," em formato PEM, ou uma string vazia se nenhum estiver dispon\xedvel."),(0,n.kt)("h4",r({},{id:"resultados-2"}),(0,n.kt)("em",{parentName:"h4"},"Resultados")),(0,n.kt)("p",null,"O valor devolvido \xe9 a chave privada."),(0,n.kt)("h2",r({},{id:"getpublickey"}),".getPublicKey()"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Hist\xf3rico"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Vers\xe3o"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Mudan\xe7as"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"v18 R4"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Adicionado"))))),(0,n.kt)("p",null," ",(0,n.kt)("strong",{parentName:"p"},".getPublicKey( )")," : Text"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Par\xe2metros"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",r({parentName:"tr"},{align:null})),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Descri\xe7\xe3o"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Resultados"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Text"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"<-"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Chave p\xfablica em formato PEM")))),(0,n.kt)("p",null,"A fun\xe7\xe3o ",(0,n.kt)("inlineCode",{parentName:"p"},".getPublicKey()")," devolve a chave p\xfablica do objecto ",(0,n.kt)("inlineCode",{parentName:"p"},"CryptoKey")," em formato PEM, ou uma string vazia se nenhum estiver dispon\xedvel."),(0,n.kt)("h4",r({},{id:"resultados-3"}),(0,n.kt)("em",{parentName:"h4"},"Resultados")),(0,n.kt)("p",null,"O valor devolvido \xe9 a chave p\xfablica."),(0,n.kt)("hr",null),(0,n.kt)("h2",r({},{id:"pem"}),".pem"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Hist\xf3rico"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Vers\xe3o"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Mudan\xe7as"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"v18 R4"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Adicionado"))))),(0,n.kt)("p",null," ",(0,n.kt)("strong",{parentName:"p"},".pem")," : Text"),(0,n.kt)("p",null," Defini\xe7\xe3o PEM de uma chave de cifrado a carregar. Se a chave for uma chave privada, ser\xe1 deduzido dela a chave p\xfablica RSA ou ECDSA. "),(0,n.kt)("h2",r({},{id:"sign"}),".sign()"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Hist\xf3rico"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Vers\xe3o"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Mudan\xe7as"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"v18 R4"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Adicionado"))))),(0,n.kt)("p",null,".",(0,n.kt)("strong",{parentName:"p"},"sign")," (",(0,n.kt)("em",{parentName:"p"},"message")," : Text ; ",(0,n.kt)("em",{parentName:"p"},"options")," : Text) : Text"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Par\xe2metros"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",r({parentName:"tr"},{align:null})),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Descri\xe7\xe3o"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"message"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Text"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"->"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"String mensagem a assinar")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"options"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Objeto"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"->"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Op\xe7\xf5es de assinatura")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Resultados"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Text"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"<-"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),'Assinatura na representa\xe7\xe3o Base64 ou Base64URL, dependendo da op\xe7\xe3o "codifica\xe7\xe3o".')))),(0,n.kt)("p",null,"A fun\xe7\xe3o ",(0,n.kt)("inlineCode",{parentName:"p"},".sign()")," assina a representa\xe7\xe3o utf8 de uma mensagem *",(0,n.kt)("em",{parentName:"p"}," string utilizando o ",(0,n.kt)("inlineCode",{parentName:"em"},"CryptoKey")," chaves-objecto e forneceu "),"op\xe7\xf5es",(0,n.kt)("em",{parentName:"p"},". Summary --\x3everifica a assinatura base64 contra a representa\xe7\xe3o utf8 de "),"message",(0,n.kt)("em",{parentName:"p"}," utilizando as chaves do objeto ",(0,n.kt)("inlineCode",{parentName:"em"},"CryptoKey")," e as "),"options* proporcionadas."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"CryptoKey")," deve conter uma chave v\xe1lida ",(0,n.kt)("strong",{parentName:"p"},"privada"),"."),(0,n.kt)("h4",r({},{id:"options-2"}),(0,n.kt)("em",{parentName:"h4"},"options")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Propriedade"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Descri\xe7\xe3o"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"hash"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),'Algoritmo Digest a utilizar. Por exemplo: "SHA256", "SHA384", ou "SHA512". Quando utilizar para produzir um JWT, o tamanho de hash deve coincidir com o tamanho do algoritmo PS@, ES@, RS@ ou PS@')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"encodingEncrypted"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),'Codifica\xe7\xe3o utilizada para converter a mensagem bin\xe1ria criptografada na string  resultante. Pode ser "Base64", ou "Base64URL". Por padr\xe3o \xe9 "Base64".')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"pss"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"boolean"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Utiliza Probabilistic Signature Scheme (PSS). Ignorado se a chave n\xe3o for uma chave RSA. Passa ",(0,n.kt)("inlineCode",{parentName:"td"},"true")," ao produzir um JWT para o algoritmo PS@")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"encoding"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),'Representation of provided signature. Possible values are "Base64" or "Base64URL". Por padr\xe3o \xe9 "Base64".')))),(0,n.kt)("h4",r({},{id:"resultados-4"}),(0,n.kt)("em",{parentName:"h4"},"Resultados")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"CryptoKey")," deve conter uma chave v\xe1lida ",(0,n.kt)("strong",{parentName:"p"},"privada"),"."),(0,n.kt)("h2",r({},{id:"size"}),".size"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Hist\xf3rico"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Vers\xe3o"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Mudan\xe7as"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"v18 R4"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Adicionado"))))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},".size")," : Integer"),(0,n.kt)("p",null,"Definido apenas para chaves RSA: o tamanho da chave em bits. Tipicamente 2048 (por defeito)."),(0,n.kt)("h2",r({},{id:"type"}),".type"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Hist\xf3rico"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Vers\xe3o"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Mudan\xe7as"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"v18 R4"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Adicionado"))))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},".type")," : Text"),(0,n.kt)("p",null,'Cont\xe9m name of the key type - "RSA", "ECDSA", "PEM" .'),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'"RSA": um par de chaves RSA, usando ',(0,n.kt)("inlineCode",{parentName:"li"},"settings.size")," como ",(0,n.kt)("a",r({parentName:"li"},{href:"#size"}),".size"),"."),(0,n.kt)("li",{parentName:"ul"},'"ECDSA": um par de chaves de Algoritmos de Assinatura Digital de Curva El\xedptica, usando ',(0,n.kt)("inlineCode",{parentName:"li"},"settings.curve")," como ",(0,n.kt)("a",r({parentName:"li"},{href:"#curve"}),".curve"),". Lembre que chaves ECDSA n\xe3o podem ser usadas para a criptografia mas s\xf3 pela assinatura."),(0,n.kt)("li",{parentName:"ul"},'"PEM": uma defini\xe7\xe3o de par chave em formato PEM, usando ',(0,n.kt)("inlineCode",{parentName:"li"},"settings.pem")," como ",(0,n.kt)("a",r({parentName:"li"},{href:"#pem"}),".pem"),".")),(0,n.kt)("h2",r({},{id:"verify"}),".verify()"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Hist\xf3rico"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Vers\xe3o"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Mudan\xe7as"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"v18 R4"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Adicionado"))))),(0,n.kt)("p",null," ",(0,n.kt)("strong",{parentName:"p"},".verify"),"( ",(0,n.kt)("em",{parentName:"p"},"message")," : Text ; ",(0,n.kt)("em",{parentName:"p"},"signature")," : Text ; ",(0,n.kt)("em",{parentName:"p"},"options")," : Object) : object"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Par\xe2metros"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",r({parentName:"tr"},{align:null})),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Descri\xe7\xe3o"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"message"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Text"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"->"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"String de mensagem utilizada para gerar a assinatura")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"signature"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Text"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"->"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Assinatura que vai ser verificada, em representa\xe7\xe3o Base64 ou Base64URL, dependendo do valor de ",(0,n.kt)("inlineCode",{parentName:"td"},"options.encoding"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"options"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Objeto"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"->"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Op\xe7\xf5es de assinatura")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Resultados"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Objeto"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"<-"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Estado da verifica\xe7\xe3o")))),(0,n.kt)("p",null,"A fun\xe7\xe3o ",(0,n.kt)("inlineCode",{parentName:"p"},".verify()")," verifica a assinatura base64 contra a representa\xe7\xe3o utf8 de ",(0,n.kt)("em",{parentName:"p"},"mensagem")," utilizando o ",(0,n.kt)("inlineCode",{parentName:"p"},"CryptoKey")," chaves-objecto e forneceu ",(0,n.kt)("em",{parentName:"p"},"op\xe7\xf5es"),"."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"CryptoKey")," deve conter uma chave v\xe1lida ",(0,n.kt)("strong",{parentName:"p"},"publica"),"."),(0,n.kt)("h4",r({},{id:"options-3"}),(0,n.kt)("em",{parentName:"h4"},"options")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Propriedade"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Descri\xe7\xe3o"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"hash"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),'Algoritmo Digest a utilizar. Por exemplo: "SHA256", "SHA384", ou "SHA512". Quando utilizar para produzir um JWT, o tamanho de hash deve coincidir com o tamanho do algoritmo PS@, ES@, RS@ ou PS@')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"pss"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"boolean"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Utiliza Probabilistic Signature Scheme (PSS). Ignorado se a chave n\xe3o for uma chave RSA. Passa ",(0,n.kt)("inlineCode",{parentName:"td"},"true")," ao verficar um JWT para o algoritmo PS@")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"encoding"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),'Encoding used to convert the binary encrypted message into the result string. Can be "Base64", or "Base64URL". Por padr\xe3o \xe9 "Base64".')))),(0,n.kt)("h4",r({},{id:"resultados-5"}),(0,n.kt)("em",{parentName:"h4"},"Resultados")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"CryptoKey")," deve conter uma chave v\xe1lida ",(0,n.kt)("strong",{parentName:"p"},"publica"),"."),(0,n.kt)("p",null,'A fun\xe7\xe3o devolve um objeto "status" com a propriedade ',(0,n.kt)("inlineCode",{parentName:"p"},"success"),"estabelecida para ",(0,n.kt)("inlineCode",{parentName:"p"},"true")," se ",(0,n.kt)("inlineCode",{parentName:"p"},"message")," puder ser verificada com \xeaxito (ou seja, se a assinatura coincidir)."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Propriedade"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",r({parentName:"tr"},{align:null}),"Descri\xe7\xe3o"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"success"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"boolean"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"True se a assinatura corresponder com a mensagem")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",r({parentName:"tr"},{align:null}),"errors"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"collection"),(0,n.kt)("td",r({parentName:"tr"},{align:null}),"Se ",(0,n.kt)("inlineCode",{parentName:"td"},"success")," for ",(0,n.kt)("inlineCode",{parentName:"td"},"false"),", pode conter uma cole\xe7\xe3o de erros")))))}s.isMDXComponent=!0}}]);