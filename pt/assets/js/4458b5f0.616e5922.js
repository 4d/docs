"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[43613],{248651:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>i,contentTitle:()=>r,default:()=>l,frontMatter:()=>n,metadata:()=>d,toc:()=>c});var a=o(474848),t=o(28453);const n={id:"get-pasteboard-data-type",title:"GET PASTEBOARD DATA TYPE",slug:"/commands/get-pasteboard-data-type",displayed_sidebar:"docs"},r=void 0,d={id:"commands-legacy/get-pasteboard-data-type",title:"GET PASTEBOARD DATA TYPE",description:"GET PASTEBOARD DATA TYPE ( assinaturas4D ; tiposNativos {; nomesFormatos} )",source:"@site/i18n/pt/docusaurus-plugin-content-docs/version-20-R7/commands-legacy/get-pasteboard-data-type.md",sourceDirName:"commands-legacy",slug:"/commands/get-pasteboard-data-type",permalink:"/docs/pt/commands/get-pasteboard-data-type",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fget-pasteboard-data-type.md%20(20-R7)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R7",frontMatter:{id:"get-pasteboard-data-type",title:"GET PASTEBOARD DATA TYPE",slug:"/commands/get-pasteboard-data-type",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"GET PASTEBOARD DATA",permalink:"/docs/pt/commands/get-pasteboard-data"},next:{title:"GET PICTURE FROM PASTEBOARD",permalink:"/docs/pt/commands/get-picture-from-pasteboard"}},i={},c=[{value:"Descri\xe7\xe3o",id:"descri\xe7\xe3o",level:4},{value:"Ver tamb\xe9m",id:"ver-tamb\xe9m",level:4}];function m(e){const s={em:"em",h4:"h4",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"GET PASTEBOARD DATA TYPE"})," ( ",(0,a.jsx)(s.em,{children:"assinaturas4D"})," ; ",(0,a.jsx)(s.em,{children:"tiposNativos"})," {; ",(0,a.jsx)(s.em,{children:"nomesFormatos"}),"} )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(s.table,{children:[(0,a.jsx)(s.thead,{children:(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.th,{children:"Par\xe2metro"}),(0,a.jsx)(s.th,{children:"Tipo"}),(0,a.jsx)(s.th,{}),(0,a.jsx)(s.th,{children:"Descri\xe7\xe3o"})]})}),(0,a.jsxs)(s.tbody,{children:[(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"assinaturas4D"}),(0,a.jsx)(s.td,{children:"Text array"}),(0,a.jsx)(s.td,{children:"\u2190"}),(0,a.jsx)(s.td,{children:"Assinaturas 4D de tipos de dados"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"tiposNativos"}),(0,a.jsx)(s.td,{children:"Text array"}),(0,a.jsx)(s.td,{children:"\u2190"}),(0,a.jsx)(s.td,{children:"Tipos de dados nativos"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"nomesFormatos"}),(0,a.jsx)(s.td,{children:"Text array"}),(0,a.jsx)(s.td,{children:"\u2190"}),(0,a.jsx)(s.td,{children:"Nomes de formato (apenas Windows), strings vazias em MacOS"})]})]})]}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.em,{children:"Esse comando n\xe3o \xe9 seguro para thread e n\xe3o pode ser usado em c\xf3digo adequado."})}),"\n",(0,a.jsx)(s.h4,{id:"descri\xe7\xe3o",children:"Descri\xe7\xe3o"}),"\n",(0,a.jsx)(s.p,{children:"O comando GET PASTEBOARD DATA TYPE permite obter a lista dos tipos de dados presentes na \xe1rea de transfer\xeancia. Este comando geralmente deve ser utilizado no contexto de uma opera\xe7\xe3o arrastar e soltar, nos eventos de formul\xe1rio On Drop ou On Drag Over do objeto de destino. Mais particularmente, permite verificar a presen\xe7a de um tipo de dados espec\xedfico na \xe1rea de transfer\xeancia."}),"\n",(0,a.jsx)(s.p,{children:"Este comando devolve os tipos de dados em diferentes formas atrav\xe9s de dois (ou tr\xeas) arrays:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["O array ",(0,a.jsx)(s.em,{children:"assinaturas4D"})," cont\xe9m os tipos de dados expressos utilizando a assinatura 4D interna (por exemplo, \u201ccom.4d.picture.gif\u201d). Se 4D n\xe3o reconhece um tipo de dados encontrado, uma cadeia vazia (\u201c\u201d) se devolve no array."]}),"\n",(0,a.jsxs)(s.li,{children:["O array ",(0,a.jsx)(s.em,{children:"tiposNativos"})," cont\xe9m os tipos de dados expressos utilizando seu tipo nativo. O formato dos tipos nativos difere entre Mac OS e Windows:"]}),"\n"]}),"\n",(0,a.jsx)(s.p,{children:"- Em Mac OS, os tipos nativos s\xe3o expressos como UTIs (Uniform Tipo Identifier)."}),"\n",(0,a.jsxs)(s.p,{children:["- Em Windows, os tipos nativos s\xe3o expressos como n\xfameros, cada n\xfamero est\xe1 associado a um nome de formato. O array ",(0,a.jsx)(s.em,{children:"tiposNativos"})," cont\xe9m estes n\xfameros em forma de cadeia (\u201c3\u201d, \u201c12\u201d, etc.). Se quer utilizar mais etiquetas expl\xedcitas, se recomenda utilizar o array opcional ",(0,a.jsx)(s.em,{children:"nomesFormatos"}),", que cont\xe9m o nome do formato dos tipos nativos em Windows."]}),"\n",(0,a.jsxs)(s.p,{children:["O array ",(0,a.jsx)(s.em,{children:"tiposNativos"})," permite suportar todo tipo de dados presentes na \xe1rea de transfer\xeancia, incluindo os dados cujo tipo n\xe3o est\xe1 referenciado por 4D."]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["Em Windows, tamb\xe9m pode passar o array ",(0,a.jsx)(s.em,{children:"nomesFormatos"}),", que recebe os nomes dos tipos de dados encontrados na \xe1rea de transfer\xeancia. Os valores devolvidos neste array podem ser utilizados por exemplo para construir um menu suspenso de sele\xe7\xe3o de formato. Em Mac OS, o array ",(0,a.jsx)(s.em,{children:"nomesFormatos"})," devolve as cadeias vazias."]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["Para maior informa\xe7\xe3o sobre os tipos de dados suportados, consulte a se\xe7\xe3o ",(0,a.jsx)(s.em,{children:"Gerenciar \xe1rea de transfer\xeancia"}),"."]}),"\n",(0,a.jsx)(s.h4,{id:"ver-tamb\xe9m",children:"Ver tamb\xe9m"}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.em,{children:"Gerenciar \xe1rea de transfer\xeancia"})})]})}function l(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},28453:(e,s,o)=>{o.d(s,{R:()=>r,x:()=>d});var a=o(296540);const t={},n=a.createContext(t);function r(e){const s=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(n.Provider,{value:s},e.children)}}}]);