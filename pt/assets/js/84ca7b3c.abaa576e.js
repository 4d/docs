"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[84487],{3905:(e,o,a)=>{a.d(o,{Zo:()=>p,kt:()=>u});var t=a(67294);function r(e,o,a){return o in e?Object.defineProperty(e,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[o]=a,e}function n(e,o){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);o&&(t=t.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),a.push.apply(a,t)}return a}function s(e){for(var o=1;o<arguments.length;o++){var a=null!=arguments[o]?arguments[o]:{};o%2?n(Object(a),!0).forEach((function(o){r(e,o,a[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(a,o))}))}return e}function i(e,o){if(null==e)return{};var a,t,r=function(e,o){if(null==e)return{};var a,t,r={},n=Object.keys(e);for(t=0;t<n.length;t++)a=n[t],o.indexOf(a)>=0||(r[a]=e[a]);return r}(e,o);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(t=0;t<n.length;t++)a=n[t],o.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=t.createContext({}),d=function(e){var o=t.useContext(l),a=o;return e&&(a="function"==typeof e?e(o):s(s({},o),e)),a},p=function(e){var o=d(e.components);return t.createElement(l.Provider,{value:o},e.children)},m={inlineCode:"code",wrapper:function(e){var o=e.children;return t.createElement(t.Fragment,{},o)}},c=t.forwardRef((function(e,o){var a=e.components,r=e.mdxType,n=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=d(a),u=r,b=c["".concat(l,".").concat(u)]||c[u]||m[u]||n;return a?t.createElement(b,s(s({ref:o},p),{},{components:a})):t.createElement(b,s({ref:o},p))}));function u(e,o){var a=arguments,r=o&&o.mdxType;if("string"==typeof e||r){var n=a.length,s=new Array(n);s[0]=c;var i={};for(var l in o)hasOwnProperty.call(o,l)&&(i[l]=o[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var d=2;d<n;d++)s[d]=a[d];return t.createElement.apply(null,s)}return t.createElement.apply(null,a)}c.displayName="MDXCreateElement"},92810:(e,o,a)=>{a.r(o),a.d(o,{assets:()=>d,contentTitle:()=>i,default:()=>c,frontMatter:()=>s,metadata:()=>l,toc:()=>p});a(67294);var t=a(3905);function r(){return r=Object.assign||function(e){for(var o=1;o<arguments.length;o++){var a=arguments[o];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e},r.apply(this,arguments)}function n(e,o){if(null==e)return{};var a,t,r=function(e,o){if(null==e)return{};var a,t,r={},n=Object.keys(e);for(t=0;t<n.length;t++)a=n[t],o.indexOf(a)>=0||(r[a]=e[a]);return r}(e,o);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(t=0;t<n.length;t++)a=n[t],o.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}const s={id:"object",title:"Object"},i=void 0,l={unversionedId:"Concepts/object",id:"version-20/Concepts/object",title:"Object",description:'Vari\xe1veis, campos ou express\xf5es do tipo Objecto podem conter v\xe1rios tipos de dados. A estrutura dos objectos 4D "nativos" baseia-se no princ\xedpio cl\xe1ssico dos pares "propriedade/valor". A sintaxe desses objetos \xe9 baseada na nota\xe7\xe3o JSON:',source:"@site/i18n/pt/docusaurus-plugin-content-docs/version-20/Concepts/dt_object.md",sourceDirName:"Concepts",slug:"/Concepts/object",permalink:"/docs/pt/Concepts/object",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20Concepts%2Fdt_object.md%20(20)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20",frontMatter:{id:"object",title:"Object"},sidebar:"docs",previous:{title:"N\xfamero (Real, Longint, Integer)",permalink:"/docs/pt/Concepts/number"},next:{title:"Imagem",permalink:"/docs/pt/Concepts/picture"}},d={},p=[{value:"Instancia\xe7\xe3o",id:"instancia\xe7\xe3o",level:2},{value:"comando <code>New object</code>",id:"comando-new-object",level:3},{value:"operador <code>{}</code>",id:"operador-",level:3},{value:"Objeto regular ou compartilhado",id:"objeto-regular-ou-compartilhado",level:3},{value:"No\xe7\xf5es b\xe1sicas de sintaxe",id:"no\xe7\xf5es-b\xe1sicas-de-sintaxe",level:2},{value:"Propriedades dos objectos",id:"propriedades-dos-objectos",level:3},{value:"Ponteiro",id:"ponteiro",level:3},{value:"Valor Null",id:"valor-null",level:3},{value:"Valor n\xe3o definido",id:"valor-n\xe3o-definido",level:3},{value:"Exemplos",id:"exemplos",level:2}],m={toc:p};function c(e){var{components:o}=e,a=n(e,["components"]);return(0,t.kt)("wrapper",r({},m,a,{components:o,mdxType:"MDXLayout"}),(0,t.kt)("p",null,'Vari\xe1veis, campos ou express\xf5es do tipo Objecto podem conter v\xe1rios tipos de dados. A estrutura dos objectos 4D "nativos" baseia-se no princ\xedpio cl\xe1ssico dos pares "propriedade/valor". A sintaxe desses objetos \xe9 baseada na nota\xe7\xe3o JSON:'),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},'Um nome de uma propriedade \xe9 sempre um texto, por exemplo "nome". Deve seguir ',(0,t.kt)("a",r({parentName:"p"},{href:"/docs/pt/Concepts/identifiers#object-properties"}),"regras espec\xedficas"),".")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"Um valor de propriedade pode ser do seguinte tipo:"),(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},"number (Real, Integer, etc.)"),(0,t.kt)("li",{parentName:"ul"},"text"),(0,t.kt)("li",{parentName:"ul"},"null"),(0,t.kt)("li",{parentName:"ul"},"boolean"),(0,t.kt)("li",{parentName:"ul"},"ponteiro (armazenado como tal, avaliado usando o comando ",(0,t.kt)("inlineCode",{parentName:"li"},"JSON Stringify")," ou quando copiando),"),(0,t.kt)("li",{parentName:"ul"},"data (tipo de data ou cadeia de formato de data ISO)"),(0,t.kt)("li",{parentName:"ul"},"objeto (os objetos podem estar aninhados em v\xe1rios n\xedveis)"),(0,t.kt)("li",{parentName:"ul"},"imagem(2)"),(0,t.kt)("li",{parentName:"ul"},"collection")))),(0,t.kt)("p",null,"(1)Os objectos ORDA, tais como ",(0,t.kt)("a",r({parentName:"p"},{href:"/docs/pt/ORDA/dsmapping#entity"}),"entidades")," ou ",(0,t.kt)("a",r({parentName:"p"},{href:"/docs/pt/ORDA/dsmapping#entity-selection"}),"sele\xe7\xf5es de entidades")," n\xe3o podem ser armazenados em ",(0,t.kt)("strong",{parentName:"p"},"campos de objectos"),"; no entanto, s\xe3o totalmente suportados em ",(0,t.kt)("strong",{parentName:"p"},"vari\xe1veis de objectos")," em mem\xf3ria."),(0,t.kt)("p",null,'(*)Quando se exp\xf5e como texto no depurador ou se exporta a JSON, as propriedades dos objetos imagem imprimem "',"[objeto Imagem]",'".'),(0,t.kt)("admonition",r({},{type:"caution"}),(0,t.kt)("p",{parentName:"admonition"},"Tenha em aten\xe7\xe3o que os nomes das propriedades diferenciam entre mai\xfasculas e min\xfasculas.")),(0,t.kt)("p",null,"As vari\xe1veis, campos ou express\xf5ees de tipo objeto s\xe3o gerenciadas mediante os comandos dispon\xedveis no tema ",(0,t.kt)("strong",{parentName:"p"},"Objetos (Linguagem)")," ou atrav\xe9s da nota\xe7\xe3o de objetos (ver ",(0,t.kt)("a",r({parentName:"p"},{href:"/docs/pt/Concepts/object#syntax-basics"}),"B\xe1sicos de sintaxe"),"). Gerencia vari\xe1veis do tipo Objecto, campos ou express\xf5es usando a nota\xe7\xe3o de objecto ",(0,t.kt)("a",r({parentName:"p"},{href:"/docs/pt/Concepts/object#syntax-basics"}))," ou os comandos cl\xe1ssicos dispon\xedveis no tema ",(0,t.kt)("strong",{parentName:"p"},"Objects (Language)")," ."),(0,t.kt)("p",null,"Cada valor de propriedade acessado atrav\xe9s da nota\xe7\xe3o de objeto \xe9 considerado uma express\xe3o. Quando a nota\xe7\xe3o de objeto for ativada em seu banco de dados (ver abaixo), pode usar esses valores sempre que express\xf5es 4D forem esperadas:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"em c\xf3digo 4D, quer escritos nos m\xe9todos (Editor de C\xf3digo) ou externalizados (f\xf3rmulas, ficheiros de etiquetas 4D processados por ",(0,t.kt)("inlineCode",{parentName:"li"},"PROCESS 4D TAGS")," ou no Servidor Web, arquivos de exporta\xe7\xe3o, documentos 4D Write Pro...),"),(0,t.kt)("li",{parentName:"ul"},"nas \xe1reas de express\xe3o do depurador e do explorador de Runtime,"),(0,t.kt)("li",{parentName:"ul"},"na lista de propriedades do editor de formul\xe1rios para objectos de formul\xe1rios: Vari\xe1vel ou Campo de express\xe3o, bem como v\xe1rias caixas de selec\xe7\xe3o e express\xf5es de colunas (Fonte de dados, cor de fundo, estilo, ou cor da fonte).")),(0,t.kt)("h2",r({},{id:"instancia\xe7\xe3o"}),"Instancia\xe7\xe3o"),(0,t.kt)("p",null,"Os objetos devem ter sido inicializados, por exemplo utilizando o comando ",(0,t.kt)("inlineCode",{parentName:"p"},"New object"),", do contr\xe1rio ao tentar ler ou modificar suas propriedades se gerar\xe1 um error de sintaxe."),(0,t.kt)("p",null,"Com a nota\xe7\xe3o de objetos, pode acessar \xe0s propriedades dos objetos de duas maneiras:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"utilizando o comando ",(0,t.kt)("a",r({parentName:"li"},{href:"https://doc.4d.com/4dv19R/help/command/en/page1471.html"}),(0,t.kt)("inlineCode",{parentName:"a"},"New object")),","),(0,t.kt)("li",{parentName:"ul"},"utilizando o operador ",(0,t.kt)("inlineCode",{parentName:"li"},"{}"),".")),(0,t.kt)("admonition",r({},{type:"info"}),(0,t.kt)("p",{parentName:"admonition"},"V\xe1rios comandos e fun\xe7\xf5es 4D devolvem objectos, por exemplo ",(0,t.kt)("a",r({parentName:"p"},{href:"https://doc.4d.com/4Dv19R7/4D/19-R7/Get-database-measures.301-5945423.en.html"}),(0,t.kt)("inlineCode",{parentName:"a"},"Obter medidas da base de dados"))," ou ",(0,t.kt)("a",r({parentName:"p"},{href:"/docs/pt/API/FileClass#file"}),(0,t.kt)("inlineCode",{parentName:"a"},"Arquivo")),". Neste caso, n\xe3o \xe9 necess\xe1rio instanciar explicitamente o objecto, a linguagem 4D faz isso por voc\xea.")),(0,t.kt)("h3",r({},{id:"comando-new-object"}),"comando ",(0,t.kt)("inlineCode",{parentName:"h3"},"New object")),(0,t.kt)("p",null,"O comando ",(0,t.kt)("a",r({parentName:"p"},{href:"https://doc.4d.com/4dv19R/help/command/en/page1471.html"}),(0,t.kt)("inlineCode",{parentName:"a"},"New collection"))," cria uma nova colec\xe7\xe3o vazia ou pr\xe9-preenchida e devolve a sua refer\xeancia."),(0,t.kt)("p",null,"Exemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"})," C_OBJECT($obVar) //cria\xe7\xe3o de um objeto de tipo 4D vari\xe1vel\n $obVar:=Novo objeto //initialization do objeto e atribui\xe7\xe3o \xe0 vari\xe1vel 4D\n")),(0,t.kt)("h3",r({},{id:"operador-"}),"operador ",(0,t.kt)("inlineCode",{parentName:"h3"},"{}")),(0,t.kt)("p",null,"O operador ",(0,t.kt)("inlineCode",{parentName:"p"},"{}")," permite-lhe criar um objecto ",(0,t.kt)("strong",{parentName:"p"},"literal"),". Um literal de objecto \xe9 uma lista separada por semicolunas de zero ou mais pares de nomes de propriedades e valores associados de um objecto, entre chaves (",(0,t.kt)("inlineCode",{parentName:"p"},"{}"),"). A sintaxe literal do objecto cria objectos vazios ou preenchidos."),(0,t.kt)("p",null,"Uma vez que qualquer valor de propriedade \xe9 considerado uma express\xe3o, pode criar sub-objectos utilizando ",(0,t.kt)("inlineCode",{parentName:"p"},"{}")," nos valores de propriedade.  Tamb\xe9m \xe9 poss\xedvel criar e referenciar os literais da cole\xe7\xe3o ****."),(0,t.kt)("p",null,"Exemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),' var $o ; $o2 ; $o3 : Object //declara\xe7\xe3o de vari\xe1veis de objecto\n $o := {} // instancia\xe7\xe3o de um objecto vazio \n $o2 := {a: "foo"; b: 42; c: {}; d: ($toto) ? true : false } // instancia\xe7\xe3o de um objecto\n        // com propriedades {"a": "foo", "b":42, "c":{}, "d":false})\n\n    // mesmas propriedades utilizando vari\xe1veis\n var $a : Text\n var $b : Number\n var $c : Object\n $a:="foo"\n $b:=42\n $c:={}\n $o3:={ a: $a; b: $b; c: $c } // {"a": "foo";b":42; "c":{}}\n\n')),(0,t.kt)("p",null,"\xc9 poss\xedvel misturar as sintaxes ",(0,t.kt)("inlineCode",{parentName:"p"},"New object")," e literal:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'$o:={\\\n    ob1: {age: 42}; \\\n    ob2: New object("message"; "Hello"); \\\n    form1: Formula(return This.ob1.age+10); \\\n    form2 : Formula(ALERT($1)); \\\n    col: [1; 2; 3; 4; 5; 6]\\\n    }\n\n$o.form1() //52\n$o.form2($o.ob2.message) // apresenta Hello\n$col:=$o.col[5] //6\n')),(0,t.kt)("h3",r({},{id:"objeto-regular-ou-compartilhado"}),"Objeto regular ou compartilhado"),(0,t.kt)("p",null,"Pode criar dois tipos de objetos:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"objetos regulares (n\xe3o compartilhados), usando o comando ",(0,t.kt)("inlineCode",{parentName:"li"},"Novo objeto"),". Estes objetos podem ser editados sem qualquer controle de acesso espec\xedfico, mas n\xe3o podem ser compartilhados entre processos."),(0,t.kt)("li",{parentName:"ul"},"objectos partilhados, utilizando o comando ",(0,t.kt)("inlineCode",{parentName:"li"},"New shared object")," . Estes objetos podem ser compartidos entre processos, incluidos os threads preemptivos. Access to these objects is controlled by ",(0,t.kt)("inlineCode",{parentName:"li"},"Use... End use")," structures. Para saber mais, consulte a se\xe7\xe3o ",(0,t.kt)("a",r({parentName:"li"},{href:"/docs/pt/Concepts/shared"}),"Objetos e cole\xe7\xf5es compartidos"),".")),(0,t.kt)("h2",r({},{id:"no\xe7\xf5es-b\xe1sicas-de-sintaxe"}),"No\xe7\xf5es b\xe1sicas de sintaxe"),(0,t.kt)("p",null,"A nota\xe7\xe3o de objetos pode ser utilizada para acessar aos valores das propriedades de objetos atrav\xe9s de uma string de tokens."),(0,t.kt)("h3",r({},{id:"propriedades-dos-objectos"}),"Propriedades dos objectos"),(0,t.kt)("p",null,"Identificadores de propriedades de objetos"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"usar uma string dentro de colchetes: > object",'["propertyName"]')),(0,t.kt)("p",null,"Exemplo:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'     employee.name:="Smith"\n')),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},'usar um simbolo "ponto": > object.propertyName')),(0,t.kt)("p",null,"Exemplos:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'     $vName:=employee["name"]\n     /ou tamb\xe9m:\n     $property:="name"\n     $vName:=employee[$property]\n\n')),(0,t.kt)("p",null,"Uma vez que um valor de propriedade de objeto pode ser um objeto ou uma cole\xe7\xe3o, a nota\xe7\xe3o de objeto aceita uma sequ\xeancia de s\xedmbolos para acessar subpropriedades, por exemplo:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"})," $vAge:=employee.children[2].age\n")),(0,t.kt)("p",null,"A nota\xe7\xe3o de objetos est\xe1 dispon\xedvel em qualquer elemento da lenguagem que possa conter ou devolver um objeto, ou seja:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"com os ",(0,t.kt)("strong",{parentName:"li"},"Objetos")," mesmos (armazenados em vari\xe1veis, campos, propriedades de objetos, arrays de objetos ou elementos de cole\xe7\xf5es). Exemplos:")),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"     $age:=$myObjVar.employee.age //vari\xe1vel\n     $addr:=[Emp]data_obj.address //campo\n     $city:=$addr.city //propriedade de um objeto\n     $pop:=$aObjCountries{2}.population //array objeto\n     $val:=$myCollection[3].subvalue //elemento cole\xe7\xe3o\n")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"Comandos 4D")," que devolvem objectos. Exemplo:")),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"     $measures:=Get database measures.DB.tables\n")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"M\xe9todos de Projeto")," que retornam objetos. Exemplo:")),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'      // MyMethod1\n     C_OBJECT($0)\n     $0:=New object("a";10;"b";20)\n\n      //myMethod2\n     $result:=MyMethod1.a //10\n')),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"Collections")," Example:")),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"     myColl.length //tamanho da cole\xe7\xe3o\n")),(0,t.kt)("h3",r({},{id:"ponteiro"}),"Ponteiro"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Nota preliminar:")," dado que os objetos s\xe3o passados sempre por refer\xeancia, geralmente n\xe3o \xe9 preciso usar ponteiros. Ao passar o objeto, internamente 4D utiliza automaticamente um mecanismo similar a um ponteiro, minimizando a necessidade de mem\xf3ria e permitindo modificar o par\xe2metro e devolver as modifica\xe7\xf5es. Como resultado, n\xe3o \xe9 necess\xe1rio usar ponteiros. Mas se quiser usar ponteiros, valores de propriedade podem ser acessados com ponteiros."),(0,t.kt)("p",null,'Usar nota\xe7\xe3o de objeto com ponteiros \xe9 parecido com usar nota\xe7\xe3o de objeto diretamente com os objetos, exceto que o s\xedmbolo "ponto" deve ser omitido.'),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"Acesso direto"),(0,t.kt)("blockquote",{parentName:"li"},(0,t.kt)("p",{parentName:"blockquote"},"pointerOnObject->propertyName"))),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"Acesso pelo nome:"),(0,t.kt)("blockquote",{parentName:"li"},(0,t.kt)("p",{parentName:"blockquote"},"pointerOnObject->",'["propertyName"]')))),(0,t.kt)("p",null,"Exemplo:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"})," C_OBJECT(vObj)\n C_POINTER(vPtr)\n vObj:=New object\n vObj.a:=10\n vPtr:=->vObj\n x:=vPtr->a //x=10\n")),(0,t.kt)("h3",r({},{id:"valor-null"}),"Valor Null"),(0,t.kt)("p",null,"Quando se usar a nota\xe7\xe3o de objeto, o valore ",(0,t.kt)("strong",{parentName:"p"},"null")," se torna compat\xedvel com o comando ",(0,t.kt)("strong",{parentName:"p"},"Null")," . Este comando pode ser usado para atribuir ou comparar o valor nulo com as propriedades de objeto ou elementos de cole\xe7\xe3o, por exemplo"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"})," myObject.address.zip:=Null\n If(myColl[2]=Null)\n")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Aten\xe7\xe3o:")," lembre que os nomes de atributos diferenciam entre mai\xfasculas e min\xfasculas."),(0,t.kt)("h3",r({},{id:"valor-n\xe3o-definido"}),"Valor n\xe3o definido"),(0,t.kt)("p",null,"A avalia\xe7\xe3o de uma propriedade de um objeto pode produzir \xe0s vezes um valor indefinido. Normalmente ao tentar ler ou atribuir express\xf5es indefinidas, 4D gera erros. Isso n\xe3o acontece nos casos abaixo:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Ler uma propriedade de um objeto ou valor indefinido retorna indefinido; atribuir um valor indefinido a vari\xe1veis (exceto arrays) tem o mesmo efeito que chamar ",(0,t.kt)("inlineCode",{parentName:"li"},"CLEAR VARIABLE")," com eles:")),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"     C_OBJECT($o)\n     C_LONGINT($val)\n     $val:=10 //$val=10\n     $val:=$o. //$o.a \xe9 indefinido (sem erro), e atribuir este valor limpa a vari\xe1vel\n      //$val=0\n")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Lendo a propriedade de ",(0,t.kt)("strong",{parentName:"li"},"comprimento")," de uma cole\xe7\xe3o indefinida produz 0:")),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"     C_COLLECTION($c) //variable criada, mas nenhuma cole\xe7\xe3o \xe9 definida\n     $size:=$c.length //$size = 0\n")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},'Um valor indefinido passado como par\xe2metro para um m\xe9todo de projecto \xe9 automaticamente convertido em 0 ou "" de acordo com o tipo de par\xe2metro declarado.')),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'     C_OBJECT($o)\n     meum\xe9todo($o. ) //passa um par\xe2metro indefinido\n\n      //In mymethod\n     C_TEXT($1) //parameter type \xe9 texto\n      // $1 cont\xe9m ""\n')),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Uma express\xe3o de condi\xe7\xe3o \xe9 automaticamente convertida em falsa quando se avalia para indefinida com as palavras-chave If e Case:")),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"     C_OBJECT($o)\n     If($o.a) // false\n     End if\n     Case of\n        :($o.a) // false\n     End case\n")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"A atribui\xe7\xe3o de um valor indefinido a um objecto existente reinicia ou limpa o seu valor, dependendo do seu tipo:"),(0,t.kt)("li",{parentName:"ul"},"Objecto, colec\xe7\xe3o, ponteiro: Null"),(0,t.kt)("li",{parentName:"ul"},"Imagem: Imagem vazia"),(0,t.kt)("li",{parentName:"ul"},"Booleano: Falso"),(0,t.kt)("li",{parentName:"ul"},'String: ""'),(0,t.kt)("li",{parentName:"ul"},"N\xfamero: 0"),(0,t.kt)("li",{parentName:"ul"},'Data: !00-00-00-00! se a configura\xe7\xe3o "Usar tipo de data em vez de formato de data ISO nos objetos" estiver habilitada, caso contr\xe1rio ""'),(0,t.kt)("li",{parentName:"ul"},"Hora: 0 (n\xfamero de ms)"),(0,t.kt)("li",{parentName:"ul"},"Indefinido, Null: sem mudan\xe7a")),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'     C_OBJECT($o)\n     $o:=New object("a";2)\n     $o.a:=$o.b //$o.a=0\n')),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Atribuir um valor indefinido a uma propriedade objecto n\xe3o existente n\xe3o faz nada.")),(0,t.kt)("p",null,"Quando express\xf5es de um certo tipo s\xe3o esperadas em seu c\xf3digo 4D, pode garantir que tenha o tipo correto mesmo quando s\xe3o avaliadas como indefinidas, cercando-as com o comando de transforma\xe7\xe3o 4D apropriado: ",(0,t.kt)("inlineCode",{parentName:"p"},"String"),", ",(0,t.kt)("inlineCode",{parentName:"p"},"Num"),", ",(0,t.kt)("inlineCode",{parentName:"p"},"Date"),", ",(0,t.kt)("inlineCode",{parentName:"p"},"Time"),", ",(0,t.kt)("inlineCode",{parentName:"p"},"Bool"),". Estes comandos devolvem um valor vazio de tipo especificado quando a express\xe3o \xe9 avaliada como indefinida. Por exemplo:"),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"})," $myString:=Caixa min\xfascula(String($o.a.b))) // certifique-se de obter um valor de string mesmo que n\xe3o esteja definido\n  // para evitar erros no c\xf3digo\n")),(0,t.kt)("p",null,"Para saber mais, veja a descri\xe7\xe3o do comando ",(0,t.kt)("inlineCode",{parentName:"p"},"Null")),(0,t.kt)("h2",r({},{id:"exemplos"}),"Exemplos"),(0,t.kt)("p",null,"Usar nota\xe7\xe3o de objeto simplifica o c\xf3digo 4D no manejo dos mesmos. Entretanto note que a nota\xe7\xe3o baseada em comandos continua sendo totalmente compat\xedvel."),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Escrita e leitura das propriedades de objetos (este exemplo compara a nota\xe7\xe3o de objetos e anota\xe7\xe3o de comandos):")),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'  // Usando a nota\xe7\xe3o de objecto\n C_OBJECT($myObj) //declara um objecto vari\xe1vel 4D\n $myObj:=Novo objecto //cria um objecto e atribui \xe0 vari\xe1vel\n $myObj.age:=56\n $age:=$myObj.age //56\n\n  // Usando a nota\xe7\xe3o de comando\n C_OBJECT($myObj2) //declara um objecto vari\xe1vel 4D\n OB SET($myObj2; "age";42) //cria um objecto e acrescenta a propriedade age\n $age:=OB Get($myObj2; "age") //42\n\n  // Claro, ambas as nota\xe7\xf5es podem ser misturadas\n C_OBJECT($myObj3)\n OB SET($myObj3; "age";10)\n $age:=$myObj3.idade //10\n')),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Criar uma propriedade e atribuir valores, incluindo objetos:")),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),' C_OBJECT($Emp)\n $Emp:=Novo objecto\n $Emp.city:="London" //cria a propriedade da cidade e define o seu valor para "London"\n $Emp.city:="Paris" //modifica a propriedade da cidade\n $Emp.phone:=Novo objecto("office"; "123456789"; "home"; "0011223344")\n  //cria a propriedade do telefone e define o seu valor para um objecto\n')),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Obter um valor em um subobjeto \xe9 bem simples usando a nota\xe7\xe3o de objeto:")),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),' $vCity:=$Emp.city //"Paris"\n $vPhone:=$Emp.phone.home //"0011223344"\n')),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"\xc9 poss\xedvel acessar as propriedades como strings usando o operador []")),(0,t.kt)("pre",null,(0,t.kt)("code",r({parentName:"pre"},{className:"language-4d"}),' $Emp["city"]:="Berlim" //modifica a propriedade da cidade\n  //isto pode ser \xfatil para criar propriedades atrav\xe9s de vari\xe1veis\n C_TEXT($addr)\n $addr:="endere\xe7o"\n For($i;1;4)\n    $Emp[$addr+String($i)]:=""". Fim para\n  // cria 4 propriedades vazias "address1...address4" no objecto $Emp\n')))}c.isMDXComponent=!0}}]);