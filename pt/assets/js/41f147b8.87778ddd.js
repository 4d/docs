"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[30228],{603905:(e,t,o)=>{o.d(t,{Zo:()=>d,kt:()=>m});var a=o(667294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,a)}return o}function s(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,a,n=function(e,t){if(null==e)return{};var o,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)o=r[a],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)o=r[a],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var l=a.createContext({}),c=function(e){var t=a.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):s(s({},t),e)),o},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var o=e.components,n=e.mdxType,r=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=c(o),m=n,h=u["".concat(l,".").concat(m)]||u[m]||p[m]||r;return o?a.createElement(h,s(s({ref:t},d),{},{components:o})):a.createElement(h,s({ref:t},d))}));function m(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=o.length,s=new Array(r);s[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var c=2;c<r;c++)s[c]=o[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,o)}u.displayName="MDXCreateElement"},974404:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>d});o(667294);var a=o(603905);function n(){return n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var a in o)Object.prototype.hasOwnProperty.call(o,a)&&(e[a]=o[a])}return e},n.apply(this,arguments)}function r(e,t){if(null==e)return{};var o,a,n=function(e,t){if(null==e)return{};var o,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)o=r[a],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)o=r[a],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}const s={id:"shared",title:"Objetos e cole\xe7\xf5es compartilhados"},i=void 0,l={unversionedId:"Concepts/shared",id:"version-20-R5/Concepts/shared",title:"Objetos e cole\xe7\xf5es compartilhados",description:"Shared objects and shared collections are specific objects and collections whose contents are shared between processes. In contrast to interprocess variables, shared objects and shared collections have the advantage of being compatible with preemptive 4D processes: they can be passed by reference as parameters to commands such as New process or CALL WORKER.",source:"@site/i18n/pt/docusaurus-plugin-content-docs/version-20-R5/Concepts/shared.md",sourceDirName:"Concepts",slug:"/Concepts/shared",permalink:"/docs/pt/Concepts/shared",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20Concepts%2Fshared.md%20(20-R5)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R5",frontMatter:{id:"shared",title:"Objetos e cole\xe7\xf5es compartilhados"},sidebar:"docs",previous:{title:"Par\xe2metros",permalink:"/docs/pt/Concepts/parameters"},next:{title:"Classes",permalink:"/docs/pt/Concepts/classes"}},c={},d=[{value:"Utiliza\xe7\xe3o de objetos ou cole\xe7\xf5es compartidos",id:"utiliza\xe7\xe3o-de-objetos-ou-cole\xe7\xf5es-compartidos",level:2},{value:"Modifica\xe7\xe3o",id:"modifica\xe7\xe3o",level:3},{value:"Leitura",id:"leitura",level:3},{value:"Duplica\xe7\xe3o",id:"duplica\xe7\xe3o",level:3},{value:"Armazenamento",id:"armazenamento",level:3},{value:"Use... End use",id:"use-end-use",level:2},{value:"Exemplo 1",id:"exemplo-1",level:2},{value:"Exemplo 2",id:"exemplo-2",level:2}],p={toc:d};function u(e){var{components:t}=e,o=r(e,["components"]);return(0,a.kt)("wrapper",n({},p,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Shared objects")," and ",(0,a.kt)("strong",{parentName:"p"},"shared collections")," are specific ",(0,a.kt)("a",n({parentName:"p"},{href:"/docs/pt/Concepts/object"}),"objects")," and ",(0,a.kt)("a",n({parentName:"p"},{href:"/docs/pt/Concepts/collection"}),"collections")," whose contents are shared between processes. In contrast to ",(0,a.kt)("a",n({parentName:"p"},{href:"/docs/pt/Concepts/variables#interprocess-variables"}),"interprocess variables"),", shared objects and shared collections have the advantage of being compatible with ",(0,a.kt)("strong",{parentName:"p"},"preemptive 4D processes"),": they can be passed by reference as parameters to commands such as ",(0,a.kt)("a",n({parentName:"p"},{href:"https://doc.4d.com/4dv20/help/command/en/page317.html"}),(0,a.kt)("inlineCode",{parentName:"a"},"New process"))," or ",(0,a.kt)("a",n({parentName:"p"},{href:"https://doc.4d.com/4dv20/help/command/en/page1389.html"}),(0,a.kt)("inlineCode",{parentName:"a"},"CALL WORKER")),"."),(0,a.kt)("p",null,"Shared objects and shared collections are stored in standard ",(0,a.kt)("a",n({parentName:"p"},{href:"/docs/pt/Concepts/object"}),(0,a.kt)("inlineCode",{parentName:"a"},"Object"))," and ",(0,a.kt)("a",n({parentName:"p"},{href:"/docs/pt/Concepts/collection"}),(0,a.kt)("inlineCode",{parentName:"a"},"Collection"))," type variables, but must be instantiated using specific commands:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"to create a shared object, use the ",(0,a.kt)("a",n({parentName:"li"},{href:"https://doc.4d.com/4dv20/help/command/en/page1471.html"}),(0,a.kt)("inlineCode",{parentName:"a"},"New shared object"))," command or call the ",(0,a.kt)("a",n({parentName:"li"},{href:"/docs/pt/API/ClassClass#new"}),(0,a.kt)("inlineCode",{parentName:"a"},"new()"))," function of a ",(0,a.kt)("a",n({parentName:"li"},{href:"/docs/pt/Concepts/classes#shared-classes"}),"shared class"),","),(0,a.kt)("li",{parentName:"ul"},"to create a shared collection, use the ",(0,a.kt)("a",n({parentName:"li"},{href:"/docs/pt/API/CollectionClass#new-shared-collection"}),(0,a.kt)("inlineCode",{parentName:"a"},"New shared collection"))," command.")),(0,a.kt)("admonition",n({},{type:"note"}),(0,a.kt)("p",{parentName:"admonition"},"Os objectos e cole\xe7\xf5es partilhados podem ser definidos como propriedades de objetos ou cole\xe7\xf5es padr\xe3o (n\xe3o partilhados).")),(0,a.kt)("p",null,"In order to modify a shared object/collection, the ",(0,a.kt)("strong",{parentName:"p"},"Use...End use")," structure must be called. Reading a shared object/collection value does not require ",(0,a.kt)("strong",{parentName:"p"},"Use...End use"),"."),(0,a.kt)("p",null,"A unique, global catalog returned by the ",(0,a.kt)("a",n({parentName:"p"},{href:"https://doc.4d.com/4dv20/help/command/en/page1525.html"}),(0,a.kt)("inlineCode",{parentName:"a"},"Storage"))," command is always available throughout the application and its components, and can be used to store all shared objects and collections."),(0,a.kt)("h2",n({},{id:"utiliza\xe7\xe3o-de-objetos-ou-cole\xe7\xf5es-compartidos"}),"Utiliza\xe7\xe3o de objetos ou cole\xe7\xf5es compartidos"),(0,a.kt)("p",null,"Once instantiated with the ",(0,a.kt)("inlineCode",{parentName:"p"},"New shared object")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"New shared collection")," commands, shared object/collection properties and elements can be modified or read from any process of the application, under certain conditions."),(0,a.kt)("h3",n({},{id:"modifica\xe7\xe3o"}),"Modifica\xe7\xe3o"),(0,a.kt)("p",null,"As modifica\xe7\xf5es podem ser aplicadas a objetos partilhados e cole\xe7\xf5es partilhadas:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"adicionar ou remover propriedades de objectos,"),(0,a.kt)("li",{parentName:"ul"},"adicionar ou editar valores (desde que sejam suportados em objetos partilhados), incluindo outros objetos partilhados ou cole\xe7\xf5es (que criam um grupo partilhado, ver abaixo).")),(0,a.kt)("p",null,"All modification instructions in a shared object or collection require to be protected inside a ",(0,a.kt)("a",n({parentName:"p"},{href:"#use-end-use"}),(0,a.kt)("inlineCode",{parentName:"a"},"Use...End use"))," block, otherwise an error is generated."),(0,a.kt)("pre",null,(0,a.kt)("code",n({parentName:"pre"},{className:"language-4d"}),' $s_obj:=New shared object("prop1";"alpha")\n Use($s_obj)\n    $s_obj.prop1:="omega"\n End Use\n')),(0,a.kt)("p",null,"For conveniency, all ",(0,a.kt)("a",n({parentName:"p"},{href:"/docs/pt/API/CollectionClass"}),"collection functions")," that modify the shared object or collection insert an internal ",(0,a.kt)("inlineCode",{parentName:"p"},"Use...End use")," block so you do not have to code it yourself. Por exemplo:"),(0,a.kt)("pre",null,(0,a.kt)("code",n({parentName:"pre"},{className:"language-4d"}),'$col:=New shared collection()\n$col.push("alpha") //.push() desencadeia internamente a utiliza\xe7\xe3o Use/End, pelo que n\xe3o \xe9 necess\xe1rio faz\xea-lo voc\xea mesmo\n')),(0,a.kt)("p",null,"If you need to execute several modifications on the same collection, you can protect all modifications with a single ",(0,a.kt)("inlineCode",{parentName:"p"},"Use...End use")," so that modifications are performed atomically."),(0,a.kt)("pre",null,(0,a.kt)("code",n({parentName:"pre"},{className:"language-4d"}),'$col:=Storage.mySharedCollection\nUse($col)\n    $col[0]:="omega" //modifying an element requires to be performed inside Use/End use\n    $col.push("alpha") //.push() internally triggers Use/End use, but we want to do both modifications atomically\nEnd Use\n')),(0,a.kt)("p",null,"Um objeto/cole\xe7\xe3o partilhado s\xf3 pode ser modificado por um processo de cada vez. ",(0,a.kt)("inlineCode",{parentName:"p"},"Use")," locks the shared object/collection from other threads, while ",(0,a.kt)("inlineCode",{parentName:"p"},"End use")," unlocks the shared object/collection (if the locking counter is at 0, see below). . Trying to modify a shared object/collection without at least one ",(0,a.kt)("inlineCode",{parentName:"p"},"Use...End use")," generates an error. When a process calls ",(0,a.kt)("inlineCode",{parentName:"p"},"Use...End use")," on a shared object/collection that is already in use by another process, it is simply put on hold until the ",(0,a.kt)("inlineCode",{parentName:"p"},"End use")," unlocks it (no error is generated). Consequently, instructions within ",(0,a.kt)("inlineCode",{parentName:"p"},"Use...End use")," structures should execute quickly and unlock the elements as soon as possible. Assim, recomenda-se vivamente que se evite modificar um objeto partilhado ou uma cole\xe7\xe3o diretamente a partir da interface, por exemplo, atrav\xe9s de uma caixa de di\xe1logo."),(0,a.kt)("p",null,"Assigning shared objects/collections to properties or elements of other shared objects/collections is allowed and creates ",(0,a.kt)("strong",{parentName:"p"},"shared groups"),". Um grupo partilhado \xe9 criado automaticamente quando um objeto/cole\xe7\xe3o partilhado \xe9 definido como valor de propriedade ou elemento de outro objeto/cole\xe7\xe3o partilhado. Os grupos partilhados permitem o aninhamento de objectos e colec\xe7\xf5es partilhados, mas imp\xf5em regras adicionais:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Calling ",(0,a.kt)("inlineCode",{parentName:"li"},"Use")," on a shared object/collection belonging to a group locks properties/elements of all shared objects/collections of the group and increments its locking counter. Calling ",(0,a.kt)("inlineCode",{parentName:"li"},"End use")," decrements the locking counter of the group and when the counter is at 0, all the linked shared objects/collections are unlocked."),(0,a.kt)("li",{parentName:"ul"},"Um objeto/cole\xe7\xe3o partilhado s\xf3 pode pertencer a um grupo partilhado. \xc9 devolvido um erro se tentar definir um objeto/cole\xe7\xe3o partilhado j\xe1 agrupado para um grupo diferente."),(0,a.kt)("li",{parentName:"ul"},"Os objetos/cole\xe7\xf5es partilhados agrupados n\xe3o podem ser desagrupados. Uma vez inclu\xeddo num grupo partilhado, um objeto/cole\xe7\xe3o partilhado est\xe1 permanentemente ligado a esse grupo durante toda a sess\xe3o. Mesmo que todas as refer\xeancias de um objeto/cole\xe7\xe3o sejam removidas do objeto/cole\xe7\xe3o pai, permanecer\xe3o linkadas.")),(0,a.kt)("p",null,"Consulte o exemplo 2 para ver uma ilustra\xe7\xe3o das regras de grupos partilhados."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note:")," Shared groups are managed through an internal property named ",(0,a.kt)("em",{parentName:"p"},"locking identifier"),". Para obter informa\xe7\xf5es detalhadas sobre este valor, consulte a Refer\xeancia da Linguagem 4D."),(0,a.kt)("h3",n({},{id:"leitura"}),"Leitura"),(0,a.kt)("p",null,"Reading properties or elements of a shared object/collection is allowed without having to call the ",(0,a.kt)("inlineCode",{parentName:"p"},"Use...End use")," structure, even if the shared object/collection is in use by another process."),(0,a.kt)("p",null,"However, it is necessary to read a shared object/collection within ",(0,a.kt)("inlineCode",{parentName:"p"},"Use...End use")," when several values are linked together and must be read at once, for consistency reasons."),(0,a.kt)("h3",n({},{id:"duplica\xe7\xe3o"}),"Duplica\xe7\xe3o"),(0,a.kt)("p",null,"Calling ",(0,a.kt)("inlineCode",{parentName:"p"},"OB Copy")," with a shared object (or with an object containing shared object(s) as properties) is possible, but will return a standard (not shared) object including its contained objects (if any)."),(0,a.kt)("h3",n({},{id:"armazenamento"}),"Armazenamento"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Storage")," is a unique shared object, automatically available on each application and machine. This shared object is returned by the ",(0,a.kt)("a",n({parentName:"p"},{href:"https://doc.4d.com/4dv20/help/command/en/page1525.html"}),(0,a.kt)("inlineCode",{parentName:"a"},"Storage"))," command. \xc9 poss\xedvel utilizar este objeto para fazer refer\xeancia a todos os objetos/cole\xe7\xf5es partilhados definidos durante a sess\xe3o que se pretende que estejam dispon\xedveis a partir de quaisquer processos preemptivos ou padr\xe3o."),(0,a.kt)("p",null,"Note that, unlike standard shared objects, the ",(0,a.kt)("inlineCode",{parentName:"p"},"storage")," object does not create a shared group when shared objects/collections are added as its properties. This exception allows the ",(0,a.kt)("strong",{parentName:"p"},"Storage")," object to be used without locking all connected shared objects or collections."),(0,a.kt)("p",null,"For more information, refer to the ",(0,a.kt)("a",n({parentName:"p"},{href:"https://doc.4d.com/4dv20/help/command/en/page1525.html"}),(0,a.kt)("inlineCode",{parentName:"a"},"Storage"))," command description."),(0,a.kt)("h2",n({},{id:"use-end-use"}),"Use... End use"),(0,a.kt)("p",null,"The formal syntax of the ",(0,a.kt)("inlineCode",{parentName:"p"},"Use...End use")," structure is:"),(0,a.kt)("pre",null,(0,a.kt)("code",n({parentName:"pre"},{className:"language-4d"})," Use(Shared_object_or_Shared_collection)\n    statement(s)\n End use\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Use...End use")," structure defines a sequence of statements that will execute tasks on the ",(0,a.kt)("em",{parentName:"p"},"Shared_object_or_Shared_collection")," parameter under the protection of an internal semaphore. ",(0,a.kt)("em",{parentName:"p"},"Shared_object_or_Shared_collection")," can be any valid shared object or shared collection."),(0,a.kt)("p",null,"Shared objects and shared collections are designed to allow communication between processes, in particular, ",(0,a.kt)("strong",{parentName:"p"},"preemptive 4D processes"),". Podem ser passados por refer\xeancia como par\xe2metros de um processo para outro. Surrounding modifications on shared objects or shared collections by the ",(0,a.kt)("inlineCode",{parentName:"p"},"Use...End use")," keywords is mandatory to prevent concurrent access between processes."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Once the ",(0,a.kt)("strong",{parentName:"li"},"Use")," line is successfully executed, all ",(0,a.kt)("em",{parentName:"li"},"Shared_object_or_Shared_collection")," properties/elements are locked for all other process in write access until the corresponding ",(0,a.kt)("inlineCode",{parentName:"li"},"End use")," line is executed."),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("em",{parentName:"li"},"statement(s)")," sequence can execute any modification on the Shared_object_or_Shared_collection properties/elements without risk of concurrent access."),(0,a.kt)("li",{parentName:"ul"},"If another shared object or collection is added as a property of the ",(0,a.kt)("em",{parentName:"li"},"Shared_object_or_Shared_collection")," parameter, they become connected within the same shared group."),(0,a.kt)("li",{parentName:"ul"},"If another process tries to access one of the ",(0,a.kt)("em",{parentName:"li"},"Shared_object_or_Shared_collection")," properties or connected properties while a ",(0,a.kt)("strong",{parentName:"li"},"Use...End use")," sequence is being executed, it is automatically put on hold and waits until the current sequence is terminated."),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("strong",{parentName:"li"},"End use")," line unlocks the ",(0,a.kt)("em",{parentName:"li"},"Shared_object_or_Shared_collection")," properties and all objects of the same group."),(0,a.kt)("li",{parentName:"ul"},"Several ",(0,a.kt)("strong",{parentName:"li"},"Use...End use")," structures can be nested in the 4D code. In the case of a group, each ",(0,a.kt)("strong",{parentName:"li"},"Use")," increments the locking counter of the group and each ",(0,a.kt)("strong",{parentName:"li"},"End use")," decrements it; all properties/elements will be released only when the last ",(0,a.kt)("strong",{parentName:"li"},"End use")," call sets the locking counter to 0.")),(0,a.kt)("admonition",n({},{type:"note"}),(0,a.kt)("p",{parentName:"admonition"},"The following functions automatically trigger an internal ",(0,a.kt)("strong",{parentName:"p"},"Use/End use"),", making an explicit call to the structure unnecessary when the function is executed:"),(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",n({parentName:"li"},{href:"/docs/pt/API/CollectionClass"}),"collection functions")," that modify shared collections"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",n({parentName:"li"},{href:"/docs/pt/Concepts/classes#shared-functions"}),"shared functions")," (defined in ",(0,a.kt)("a",n({parentName:"li"},{href:"/docs/pt/Concepts/classes#shared-classes"}),"shared classes"),")."))),(0,a.kt)("h2",n({},{id:"exemplo-1"}),"Exemplo 1"),(0,a.kt)("p",null,"Se quiser lan\xe7ar v\xe1rios processos que executem uma tarefa de invent\xe1rio em diferentes produtos e atualizem o mesmo objeto partilhado. O processo principal instancia um objeto partilhado vazio e, em seguida, lan\xe7a os outros processos, passando o objeto partilhado e os produtos a contar como par\xe2metros:"),(0,a.kt)("pre",null,(0,a.kt)("code",n({parentName:"pre"},{className:"language-4d"}),' ARRAY TEXT($_items;0)\n ... //preencher o array com itens para contar\n $nbItems:=Tamanho do array($_items)\n var $inventory : Object\n $inventory:=Novo objeto partilhado\n Use($inventory)\n    $inventory.nbItems:=$nbItems\n End use\n\n  //Criar processos\n For($i;1;$nbItems)\n    $ps:=New process("HowMany";0; "HowMany_"+$_items{$i};$_items{$i};$inventory)\n  //$inventory objeto enviado por refer\xeancia\n End for\n')),(0,a.kt)("p",null,'No m\xe9todo "HowMany", o invent\xe1rio \xe9 efetuado e o objeto partilhado $inventory \xe9 atualizado o mais rapidamente poss\xedvel:'),(0,a.kt)("pre",null,(0,a.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"    //HowMany\n #DECLARE ($what : Text ; $inventory : Object)\n\n $count:=CountMethod($what) //method to count products\n Use($inventory) //use shared object\n    $inventory[$what]:=$count  //save the results for this item\n End use\n")),(0,a.kt)("h2",n({},{id:"exemplo-2"}),"Exemplo 2"),(0,a.kt)("p",null,"Os exemplos seguintes destacam regras espec\xedficas para o tratamento de grupos partilhados:"),(0,a.kt)("pre",null,(0,a.kt)("code",n({parentName:"pre"},{className:"language-4d"})," $ob1:=New shared object\n $ob2:=New shared object\n Use($ob1)\n    $ob1.a:=$ob2  //group 1 is created\n End use\n\n $ob3:=New shared object\n $ob4:=New shared object\n Use($ob3)\n    $ob3.a:=$ob4  //group 2 is created\n End use\n\n Use($ob1) //use an object from group 1\n    $ob1.b:=$ob4  //ERROR\n  //$ob4 already belongs to another group\n  //assignment is not allowed\n End use\n\n Use($ob3)\n    $ob3.a:=Null //remove any reference to $ob4 from group 2\n End use\n\n Use($ob1) //use an object from group 1\n    $ob1.b:=$ob4  //ERROR\n  //$ob4 still belongs to group 2\n  //assignment is not allowed\n End use\n")))}u.isMDXComponent=!0}}]);