/*! For license information please see a566236a.c09777d0.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[14379],{386657:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>l,frontMatter:()=>r,metadata:()=>s,toc:()=>a});var n=o(474848),i=o(28453);const r={id:"timeout",title:"$timeout"},d=void 0,s={id:"REST/timeout",title:"$timeout",description:"Define o n\xfamero de segundos para guardar um conjunto de entidades na cache do 4D Server (e.g., $timeout=1800)",source:"@site/i18n/pt/docusaurus-plugin-content-docs/version-18/REST/$timeout.md",sourceDirName:"REST",slug:"/REST/timeout",permalink:"/docs/pt/18/REST/timeout",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20REST%2F%24timeout.md%20(18)&body=Please%20enter%20your%20comment%3A",tags:[],version:"18",frontMatter:{id:"timeout",title:"$timeout"},sidebar:"docs",previous:{title:"$skip",permalink:"/docs/pt/18/REST/skip"},next:{title:"$top/$limit",permalink:"/docs/pt/18/REST/top_$limit"}},c={},a=[{value:"Descri\xe7\xe3o",id:"descri\xe7\xe3o",level:2},{value:"Exemplo",id:"exemplo",level:2}];function m(e){const t={a:"a",code:"code",em:"em",h2:"h2",p:"p",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["Define o n\xfamero de segundos para guardar um conjunto de entidades na cache do 4D Server (",(0,n.jsx)(t.em,{children:"e.g."}),", ",(0,n.jsx)(t.code,{children:"$timeout=1800"}),")"]}),"\n",(0,n.jsx)(t.h2,{id:"descri\xe7\xe3o",children:"Descri\xe7\xe3o"}),"\n",(0,n.jsxs)(t.p,{children:["Para definir um timeout para um conjunto de entidades criado com ",(0,n.jsx)(t.a,{href:"/docs/pt/18/REST/method#methodentityset",children:(0,n.jsx)(t.code,{children:"$method=entityset"})}),", passar o n\xfamero de segundos para ",(0,n.jsx)(t.code,{children:"$timeout"}),". Por exemplo, se pretender definir o tempo limite para 20 minutos, introduza 1200. Por defeito, o tempo limite \xe9 de duas (2) horas."]}),"\n",(0,n.jsxs)(t.p,{children:["Uma vez definido o tempo limite, sempre que um conjunto de entidades \xe9 chamado (utilizando ",(0,n.jsx)(t.code,{children:"$method=entityset"}),"), o tempo limite \xe9 recalculado com base na hora atual e no tempo limite."]}),"\n",(0,n.jsxs)(t.p,{children:["Se um conjunto de entidades for removido e depois recriado utilizando ",(0,n.jsx)(t.code,{children:"$method=entityset"})," com ",(0,n.jsx)(t.a,{href:"/docs/pt/18/REST/savedfilter",children:(0,n.jsx)(t.code,{children:"$savedfilter"})}),", o novo tempo limite predefinido \xe9 de 10 minutos, independentemente do tempo limite definido ao chamar ",(0,n.jsx)(t.code,{children:"$timeout"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"exemplo",children:"Exemplo"}),"\n",(0,n.jsx)(t.p,{children:"No nosso conjunto de entidades que criamos, definimos o tempo limite para 20 minutos:"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:'GET  /rest/Employee/?$filter="salary!=0"&$method=entityset&$timeout=1200'})})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},221020:(e,t,o)=>{var n=o(296540),i=Symbol.for("react.element"),r=Symbol.for("react.fragment"),d=Object.prototype.hasOwnProperty,s=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function a(e,t,o){var n,r={},a=null,m=null;for(n in void 0!==o&&(a=""+o),void 0!==t.key&&(a=""+t.key),void 0!==t.ref&&(m=t.ref),t)d.call(t,n)&&!c.hasOwnProperty(n)&&(r[n]=t[n]);if(e&&e.defaultProps)for(n in t=e.defaultProps)void 0===r[n]&&(r[n]=t[n]);return{$$typeof:i,type:e,key:a,ref:m,props:r,_owner:s.current}}t.Fragment=r,t.jsx=a,t.jsxs=a},474848:(e,t,o)=>{e.exports=o(221020)},28453:(e,t,o)=>{o.d(t,{R:()=>d,x:()=>s});var n=o(296540);const i={},r=n.createContext(i);function d(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);