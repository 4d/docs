var {PreprocessorInstruction, TYPE} = require("./preprocessorInstruction")

class PreprocessorInclude extends PreprocessorInstruction {

    constructor(inPath) {
        super()
        this._path = inPath
    }

    getType() {
        return TYPE.INCLUDE
    }

    get path() {
        return this._path
    }
}

class IncludeManager {
    constructor() {
        this._includes = []
    }
    push(inInclude) {
        this._includes.push(inInclude)
    }

    getListIncludePerFile(inPath) {
        let list = []
        for(let include in this._includes) {
            if(include.path === inPath) {
                list.push(include)
            }
        }
        return list
    }
}

exports.PreprocessorInclude = PreprocessorInclude
exports.IncludeManager = IncludeManager