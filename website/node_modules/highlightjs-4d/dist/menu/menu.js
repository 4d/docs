function createMenu(list)
{
  ul = document.getElementsByClassName("menu-options")[0];
  ul.innerHTML="";
  list.forEach(addItemMenu);

  function addItemMenu(element, index, arr) {
      var li = document.createElement('li');
      if(index == 0)
      {
        if(arr.length > 1)
          li.setAttribute('class','menu-option-up');
        else
          li.setAttribute('class','menu-option');
      }
      else if(index < arr.length -1)
      {
        li.setAttribute('class','menu-option-middle');
      }
      else
      {
        li.setAttribute('class','menu-option-bottom');
      }
      ul.appendChild(li);
      li.innerHTML=element;
  }

  initEvent();
}
var selection ="";
function initEvent()
{
  const menu = document.querySelector(".contextualMenu");
  const options = document.getElementsByClassName("menu-options")[0].childNodes;

  let menuVisible = false;
  
  const toggleMenu = command => {
    menu.style.display = command === "show" ? "block" : "none";
    menuVisible = !menuVisible;
  };
  
  const setPosition = ({ top, left }) => {
    menu.style.left = `${left}px`;
    menu.style.top = `${top}px`;
    toggleMenu("show");
  };
  
  window.addEventListener("click", e => {
    if (menuVisible) toggleMenu("hide");
  });
  
  let i = 0;
  for(const element of options)
  {

    if(i == 0)
    {
      document.addEventListener("mouseup", e => {
        selection = window.getSelection().toString();
        if(selection !== "")
          document.getElementById("clipboard").innerHTML=selection;
      });
      element.addEventListener("click", e => {
        document.getElementById("clipboard").select()
        document.execCommand('copy');
      });
    }
    else
    {
      element.addEventListener("click", e => {
        $4d.EXP_wa_callback(i);
      });
    }

    i++;
  }
  
  
  menu.addEventListener("mouseleave", function( event ) {   
    if (menuVisible) toggleMenu("hide");
  });
  
  window.addEventListener("contextmenu", e => {
    $4d.EXP_wa_callback(-1, function(shouldDisplay){

      //Set all elements visible
      for(let j = 0; j < options.length; ++j)
      {
        options[j].style.display = "block";
      }

      //Hide an element
      if(shouldDisplay < 0)//Hide
      {
        shouldDisplay = -shouldDisplay;
        options[shouldDisplay - 1].style.display = "none";
      }

      //Set the right styles
      let i = 0;
      let visibleList = [];
      for(element of options)
      {
        if(element.style.display != "none")
        {
          visibleList.push(i);
        }
        i++;
      }

      i = 0;
      for(const e of visibleList)
      {
        let element=options[visibleList[e]];
        if(i == 0)
        {
          if(options.length > 1)
            element.className = 'menu-option-up';
          else
            element.className ='menu-option';
        }
        else if(i < options.length -1)
        {
          element.className ='menu-option-middle';
        }
        else
        {
          element.className = 'menu-option-bottom';
        }
        i++;
        
      }

      //If the element is alone, set a special style
      if(visibleList.length == 1)
        options[visibleList[0]].className = 'menu-option-single';



      if(shouldDisplay > 0)
      {
        e.preventDefault();
        const origin = {
          left: e.pageX-5,
          top: e.pageY-5
        };
        setPosition(origin);
      }

    });

    
    return false;
  });
}