"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["18500"],{540289:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>i,default:()=>u,toc:()=>a,metadata:()=>l,assets:()=>d,contentTitle:()=>o});var l=JSON.parse('{"id":"commands-legacy/listbox-insert-column","title":"LISTBOX INSERT COLUMN","description":"LISTBOX INSERT COLUMN ( { ;} objet ; positionCol ; nomCol ; variableCol ; nomEnT\xeate ; variableEnt\xeate {; nomPied ; variablePied*} )","source":"@site/i18n/fr/docusaurus-plugin-content-docs/version-20-R9/commands-legacy/listbox-insert-column.md","sourceDirName":"commands-legacy","slug":"/commands/listbox-insert-column","permalink":"/docs/fr/20-R9/commands/listbox-insert-column","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Flistbox-insert-column.md%20(20-R9)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"20-R9","frontMatter":{"id":"listbox-insert-column","title":"LISTBOX INSERT COLUMN","slug":"/commands/listbox-insert-column","displayed_sidebar":"docs"},"sidebar":"docs","previous":{"title":"LISTBOX GET TABLE SOURCE","permalink":"/docs/fr/20-R9/commands/listbox-get-table-source"},"next":{"title":"LISTBOX INSERT COLUMN FORMULA","permalink":"/docs/fr/20-R9/commands/listbox-insert-column-formula"}}'),r=s(785893),t=s(250065);let i={id:"listbox-insert-column",title:"LISTBOX INSERT COLUMN",slug:"/commands/listbox-insert-column",displayed_sidebar:"docs"},o=void 0,d={},a=[{value:"Description",id:"description",level:4},{value:"Insertion dynamique",id:"insertion-dynamique",level:3},{value:"Exemple 1",id:"exemple-1",level:4},{value:"Exemple 2",id:"exemple-2",level:4},{value:"Exemple 3",id:"exemple-3",level:4},{value:"Voir aussi",id:"voir-aussi",level:4},{value:"Propri\xe9t\xe9s",id:"propri\xe9t\xe9s",level:4}];function c(e){let n={a:"a",br:"br",code:"code",em:"em",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"LISTBOX INSERT COLUMN"})," ( {* ;} ",(0,r.jsx)(n.em,{children:"objet"})," ; ",(0,r.jsx)(n.em,{children:"positionCol"})," ; ",(0,r.jsx)(n.em,{children:"nomCol"})," ; ",(0,r.jsx)(n.em,{children:"variableCol"})," ; ",(0,r.jsx)(n.em,{children:"nomEnT\xeate"})," ; ",(0,r.jsx)(n.em,{children:"variableEnt\xeate"})," {; ",(0,r.jsx)(n.em,{children:"nomPied"})," ; ",(0,r.jsx)(n.em,{children:"variablePied"}),"} )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Param\xe8tre"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"*"}),(0,r.jsx)(n.td,{children:"Op\xe9rateur"}),(0,r.jsx)(n.td,{children:"\u2192"}),(0,r.jsx)(n.td,{children:"Si sp\xe9cifi\xe9, objet est un nom d\u2019objet (cha\xeene) Si omis, objet est une variable"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"objet"}),(0,r.jsx)(n.td,{children:"any"}),(0,r.jsx)(n.td,{children:"\u2192"}),(0,r.jsx)(n.td,{children:"Nom d\u2019objet (si * est sp\xe9cifi\xe9) ou Variable (si * est omis)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"positionCol"}),(0,r.jsx)(n.td,{children:"Integer"}),(0,r.jsx)(n.td,{children:"\u2192"}),(0,r.jsx)(n.td,{children:"Emplacement de la colonne \xe0 ins\xe9rer"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"nomCol"}),(0,r.jsx)(n.td,{children:"Text"}),(0,r.jsx)(n.td,{children:"\u2192"}),(0,r.jsx)(n.td,{children:"Nom d\u2019objet de la colonne"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"variableCol"}),(0,r.jsx)(n.td,{children:"Array, Field, Variable, Pointer"}),(0,r.jsx)(n.td,{children:"\u2192"}),(0,r.jsx)(n.td,{children:"Nom de la variable tableau de la colonne ou champ ou variable"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"nomEnT\xeate"}),(0,r.jsx)(n.td,{children:"Text"}),(0,r.jsx)(n.td,{children:"\u2192"}),(0,r.jsx)(n.td,{children:"Nom d\u2019objet de l\u2019en-t\xeate de la colonne"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"variableEnt\xeate"}),(0,r.jsx)(n.td,{children:"Integer, Pointer"}),(0,r.jsx)(n.td,{children:"\u2192"}),(0,r.jsx)(n.td,{children:"Variable d\u2019en-t\xeate de la colonne"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"nomPied"}),(0,r.jsx)(n.td,{children:"Text"}),(0,r.jsx)(n.td,{children:"\u2192"}),(0,r.jsx)(n.td,{children:"Nom d\u2019objet du pied de la colonne"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"variablePied"}),(0,r.jsx)(n.td,{children:"Variable, Pointer"}),(0,r.jsx)(n.td,{children:"\u2192"}),(0,r.jsx)(n.td,{children:"Variable du pied de la colonne"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(n.p,{children:["La commande ",(0,r.jsx)(n.strong,{children:"LISTBOX INSERT COLUMN"})," ins\xe8re une colonne dans la list box d\xe9sign\xe9e par les param\xe8tres ",(0,r.jsx)(n.em,{children:"objet"})," et ",(0,r.jsx)(n.em,{children:"*"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note :"})," Cette commande ne fait rien si elle est appliqu\xe9e \xe0 la premi\xe8re colonne d\u2019une list box affich\xe9e en mode hi\xe9rarchique."]}),"\n",(0,r.jsxs)(n.p,{children:["Si vous passez le param\xe8tre optionnel ",(0,r.jsx)(n.em,{children:"*"}),", vous indiquez que le param\xe8tre ",(0,r.jsx)(n.em,{children:"objet"})," est un nom d\u2019objet (une cha\xeene). Si vous ne passez pas ce param\xe8tre, vous indiquez que le param\xe8tre ",(0,r.jsx)(n.em,{children:"objet"})," est une variable. Dans ce cas, vous ne passez pas une cha\xeene mais une r\xe9f\xe9rence de variable. Pour plus d'informations sur les noms d\u2019objets, reportez-vous \xe0 la section ",(0,r.jsx)(n.em,{children:"Objets de formulaires"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["La nouvelle colonne est ins\xe9r\xe9e juste avant la colonne d\xe9sign\xe9e par le param\xe8tre ",(0,r.jsx)(n.em,{children:"positionCol"}),". Si le param\xe8tre ",(0,r.jsx)(n.em,{children:"positionCol"})," est sup\xe9rieur au nombre total de colonnes, la colonne est ajout\xe9e apr\xe8s la derni\xe8re colonne."]}),"\n",(0,r.jsxs)(n.p,{children:["Passez dans les param\xe8tres ",(0,r.jsx)(n.em,{children:"nomCol"})," et ",(0,r.jsx)(n.em,{children:"variableCol"})," le nom d\u2019objet et la variable de la colonne ins\xe9r\xe9e."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Dans le cadre d'une list box de type tableau, le nom de la variable correspond au nom du tableau dont le contenu sera affich\xe9 dans la colonne. Vous pouvez passer un pointeur Nil (->[]) si vous utilisez la commande dans un contexte dynamique \xe0 l'ex\xe9cution du formulaire (cf. ci-dessous)."}),"\n",(0,r.jsxs)(n.li,{children:["Dans le cadre d'une list box de type s\xe9lection, vous pouvez passer un champ ou une variable dans le param\xe8tre ",(0,r.jsx)(n.em,{children:"variableCol"}),". Le contenu de la colonne sera alors la valeur du champ ou de la variable, \xe9valu\xe9e pour chaque enregistrement de la s\xe9lection associ\xe9e \xe0 la list box. Ce type de contenu ne peut \xeatre utilis\xe9 que lorsque la propri\xe9t\xe9 \u201CSource de donn\xe9es\u201D de la list box est S\xe9lection courante ou S\xe9lection temporaire (cf. section ",(0,r.jsx)(n.em,{children:"Gestion programm\xe9e des objets de type List box"}),"). Vous pouvez utiliser des champs ou des variables de type cha\xeene, num\xe9rique, Date, Heure, Image et Bool\xe9en."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Dans le contexte de list box bas\xe9es sur des s\xe9lections d'enregsitrements, ",(0,r.jsx)(n.strong,{children:"LISTBOX INSERT COLUMN"})," permet d\u2019ins\xe9rer des \xe9l\xe9ments simples (champs ou variables). Si vous souhaitez manipuler des expressions plus complexes (telles que des formules ou des m\xe9thodes), vous devez utiliser la commande ",(0,r.jsx)(n.a,{href:"/docs/fr/20-R9/commands/listbox-insert-column-formula",children:"LISTBOX INSERT COLUMN FORMULA"}),".",(0,r.jsx)(n.br,{}),"\nLes list box de type collection ou entity selection sont \xe9galement prises en charge, mais comme le param\xe8tre ",(0,r.jsx)(n.em,{children:"variableCol"})," n'accepte pas les expressions, vous devrez utiliser la commande ",(0,r.jsx)(n.a,{href:"/docs/fr/20-R9/commands/listbox-set-column-formula",children:"LISTBOX SET COLUMN FORMULA"})," pour assigner la source de donn\xe9es. Il est plus judicieux dans ce cas d'utiliser directement la commande ",(0,r.jsx)(n.a,{href:"/docs/fr/20-R9/commands/listbox-insert-column-formula",children:"LISTBOX INSERT COLUMN FORMULA"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note :"})," Il n\u2019est pas possible de combiner dans une m\xeame list box des colonnes de type tableau (source de donn\xe9es tableaux) et des colonnes de type champ ou variable (source de donn\xe9es s\xe9lection)."]}),"\n",(0,r.jsxs)(n.p,{children:["Passez dans les param\xe8tres ",(0,r.jsx)(n.em,{children:"nomEnt\xeate"})," et ",(0,r.jsx)(n.em,{children:"variableEnt\xeate"})," le nom d\u2019objet et la variable de l\u2019en-t\xeate de la colonne ins\xe9r\xe9e."]}),"\n",(0,r.jsxs)(n.p,{children:["Vous pouvez \xe9galement passer dans les param\xe8tres ",(0,r.jsx)(n.em,{children:"nomPied"})," et ",(0,r.jsx)(n.em,{children:"variablePied"})," le nom d\u2019objet et la variable du pied de la colonne ins\xe9r\xe9e."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note :"})," Les noms d\u2019objets doivent \xeatre uniques dans un formulaire. Vous devez veiller \xe0 ce que les noms pass\xe9s dans les param\xe8tres ",(0,r.jsx)(n.em,{children:"nomCol"}),", ",(0,r.jsx)(n.em,{children:"nomEnt\xeate"})," et ",(0,r.jsx)(n.em,{children:"nomPied"})," ne soient pas d\xe9j\xe0 utilis\xe9s. Sinon, la colonne n\u2019est pas cr\xe9\xe9e et une erreur est g\xe9n\xe9r\xe9e."]}),"\n",(0,r.jsx)(n.h3,{id:"insertion-dynamique",children:"Insertion dynamique"}),"\n",(0,r.jsx)(n.p,{children:"Vous pouvez utiliser cette commande pour ins\xe9rer dynamiquement des colonnes dans les list box \xe0 l'ex\xe9cution du formulaire, 4D prenant automatiquement en charge les d\xe9finitions de variables n\xe9cessaires (colonne, pied et en-t\xeate)."}),"\n",(0,r.jsxs)(n.p,{children:["Pour cela, ",(0,r.jsx)(n.strong,{children:"LISTBOX INSERT COLUMN"})," accepte un pointeur ",(0,r.jsx)(n.strong,{children:"Nil"})," (",(0,r.jsx)(n.strong,{children:"->[]"}),") comme valeur pour les param\xe8tres ",(0,r.jsx)(n.em,{children:"variableCol"})," (list box de type tableau uniquement), ",(0,r.jsx)(n.em,{children:"variableEnt\xeate"})," et ",(0,r.jsx)(n.em,{children:"variablePied"}),". Dans ce cas, 4D va cr\xe9er dynamiquement les variables requises lors de l'ex\xe9cution de la commande (pour plus d'informations, reportez-vous \xe0 la section )."]}),"\n",(0,r.jsxs)(n.p,{children:["A noter que les variables d'en-t\xeate et de pied sont toujours cr\xe9\xe9es avec un type sp\xe9cifique (respectivement entier long et texte). A l'inverse, les variables de colonne ne peuvent pas \xeatre typ\xe9es \xe0 la cr\xe9ation car les list box acceptent diff\xe9rents types de tableaux pour ces variables (tableau texte, tableau entier, etc.). Vous devez donc d\xe9finir manuellement le type du tableau (cf. exemple 3). Il est important d'effectuer ce typage avant d'appeler des commandes telles que ",(0,r.jsx)(n.a,{href:"/docs/fr/20-R9/commands/listbox-insert-rows",children:"LISTBOX INSERT ROWS"})," pour ins\xe9rer des nouveaux \xe9l\xe9ments dans le tableau. Ou bien, il est possible d'utiliser ",(0,r.jsx)(n.a,{href:"/docs/fr/20-R9/commands/append-to-array",children:"APPEND TO ARRAY"})," pour \xe0 la fois typer le tableau et ins\xe9rer des \xe9l\xe9ments."]}),"\n",(0,r.jsx)(n.h4,{id:"exemple-1",children:"Exemple 1"}),"\n",(0,r.jsx)(n.p,{children:"Nous souhaitons ajouter une colonne \xe0 la fin de la list box :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:'\xa0var NomVarHeader;$Der;$NbEnr : Integer\n\xa0ALL RECORDS([Table 1])\n\xa0$NbEnr:=Records in table([Table 1])\n\xa0ARRAY PICTURE(tabImage;$NbEnr)\n\xa0\n\xa0$Der:=LISTBOX Get number of columns(*;"ListBox1")+1\n\xa0LISTBOX INSERT COLUMN(*;"ListBox1";$Der;"ColumnPicture";tabImage;"HeaderPicture";NomVarHeader)\n'})}),"\n",(0,r.jsx)(n.h4,{id:"exemple-2",children:"Exemple 2"}),"\n",(0,r.jsx)(n.p,{children:"Nous souhaitons ajouter une colonne \xe0 la droite de la list box et lui associer les valeurs du champ [Envois]Frais :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:'\xa0$der:=LISTBOX Get number of columns(*;"ListBox1")+1\n\xa0LISTBOX INSERT COLUMN(*;"ListBox1";$der;"ColChamp";[Envois]Frais;"NomEntete";VarEntete)\n'})}),"\n",(0,r.jsx)(n.h4,{id:"exemple-3",children:"Exemple 3"}),"\n",(0,r.jsx)(n.p,{children:"Vous souhaitez ins\xe9rer dynamiquement une colonne dans une list box de type tableau et d\xe9finir son en-t\xeate :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:'\xa0var $NilPtr : Pointer\n\xa0LISTBOX INSERT COLUMN(*;"MyListBox";1;"MyNewColumn";$NilPtr;"MyNewHeader";$NilPtr)\n\xa0ColPtr:=OBJECT Get pointer(Object named;"MyNewColumn")\n\xa0ARRAY TEXT(ColPtr->;10)\n\xa0\xa0\xa0\xa0\xa0//D\xe9finition de l\'en-t\xeate\n\xa0headprt:=OBJECT Get pointer(Object named;"MyNewHeader")\n\xa0OBJECT SET TITLE(headprt->;"Ent\xeate ins\xe9r\xe9")\n'})}),"\n",(0,r.jsx)(n.h4,{id:"voir-aussi",children:"Voir aussi"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/docs/fr/20-R9/commands/listbox-delete-column",children:"LISTBOX DELETE COLUMN"}),(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.a,{href:"/docs/fr/20-R9/commands/listbox-insert-column-formula",children:"LISTBOX INSERT COLUMN FORMULA"})]}),"\n",(0,r.jsx)(n.h4,{id:"propri\xe9t\xe9s",children:"Propri\xe9t\xe9s"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{}),(0,r.jsx)(n.th,{})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Num\xe9ro de commande"}),(0,r.jsx)(n.td,{children:"829"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Thread safe"}),(0,r.jsx)(n.td,{children:"\u2717"})]})]})]})]})}function u(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},250065:function(e,n,s){s.d(n,{Z:()=>o,a:()=>i});var l=s(667294);let r={},t=l.createContext(r);function i(e){let n=l.useContext(t);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),l.createElement(t.Provider,{value:n},e.children)}}}]);