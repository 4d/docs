"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9438],{603905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var o=n(667294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=o.createContext({}),c=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,h=u["".concat(i,".").concat(m)]||u[m]||d[m]||r;return n?o.createElement(h,s(s({ref:t},p),{},{components:n})):o.createElement(h,s({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=u;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<r;c++)s[c]=n[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},589312:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>p});n(667294);var o=n(603905);function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},a.apply(this,arguments)}function r(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const s={id:"shared",title:"Objets et collections partag\xe9s"},l=void 0,i={unversionedId:"Concepts/shared",id:"version-20-R5/Concepts/shared",title:"Objets et collections partag\xe9s",description:"Shared objects and shared collections are specific objects and collections whose contents are shared between processes. In contrast to interprocess variables, shared objects and shared collections have the advantage of being compatible with preemptive 4D processes: they can be passed by reference as parameters to commands such as New process or CALL WORKER.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/version-20-R5/Concepts/shared.md",sourceDirName:"Concepts",slug:"/Concepts/shared",permalink:"/docs/fr/Concepts/shared",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20Concepts%2Fshared.md%20(20-R5)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R5",frontMatter:{id:"shared",title:"Objets et collections partag\xe9s"},sidebar:"docs",previous:{title:"Param\xe8tres",permalink:"/docs/fr/Concepts/parameters"},next:{title:"Classes",permalink:"/docs/fr/Concepts/classes"}},c={},p=[{value:"Utilisation des objets et collections partag\xe9s",id:"utilisation-des-objets-et-collections-partag\xe9s",level:2},{value:"Modification",id:"modification",level:3},{value:"Lecture",id:"lecture",level:3},{value:"Duplication",id:"duplication",level:3},{value:"Storage",id:"storage",level:3},{value:"Use...End use",id:"useend-use",level:2},{value:"Exemple 1",id:"exemple-1",level:2},{value:"Exemple 2",id:"exemple-2",level:2}],d={toc:p};function u(e){var{components:t}=e,n=r(e,["components"]);return(0,o.kt)("wrapper",a({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Shared objects")," and ",(0,o.kt)("strong",{parentName:"p"},"shared collections")," are specific ",(0,o.kt)("a",a({parentName:"p"},{href:"/docs/fr/Concepts/object"}),"objects")," and ",(0,o.kt)("a",a({parentName:"p"},{href:"/docs/fr/Concepts/collection"}),"collections")," whose contents are shared between processes. In contrast to ",(0,o.kt)("a",a({parentName:"p"},{href:"/docs/fr/Concepts/variables#interprocess-variables"}),"interprocess variables"),", shared objects and shared collections have the advantage of being compatible with ",(0,o.kt)("strong",{parentName:"p"},"preemptive 4D processes"),": they can be passed by reference as parameters to commands such as ",(0,o.kt)("a",a({parentName:"p"},{href:"https://doc.4d.com/4dv20/help/command/en/page317.html"}),(0,o.kt)("inlineCode",{parentName:"a"},"New process"))," or ",(0,o.kt)("a",a({parentName:"p"},{href:"https://doc.4d.com/4dv20/help/command/en/page1389.html"}),(0,o.kt)("inlineCode",{parentName:"a"},"CALL WORKER")),"."),(0,o.kt)("p",null,"Shared objects and shared collections are stored in standard ",(0,o.kt)("a",a({parentName:"p"},{href:"/docs/fr/Concepts/object"}),(0,o.kt)("inlineCode",{parentName:"a"},"Object"))," and ",(0,o.kt)("a",a({parentName:"p"},{href:"/docs/fr/Concepts/collection"}),(0,o.kt)("inlineCode",{parentName:"a"},"Collection"))," type variables, but must be instantiated using specific commands:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"to create a shared object, use the ",(0,o.kt)("a",a({parentName:"li"},{href:"https://doc.4d.com/4dv20/help/command/en/page1471.html"}),(0,o.kt)("inlineCode",{parentName:"a"},"New shared object"))," command or call the ",(0,o.kt)("a",a({parentName:"li"},{href:"/docs/fr/API/ClassClass#new"}),(0,o.kt)("inlineCode",{parentName:"a"},"new()"))," function of a ",(0,o.kt)("a",a({parentName:"li"},{href:"/docs/fr/Concepts/classes#shared-classes"}),"shared class"),","),(0,o.kt)("li",{parentName:"ul"},"to create a shared collection, use the ",(0,o.kt)("a",a({parentName:"li"},{href:"/docs/fr/API/CollectionClass#new-shared-collection"}),(0,o.kt)("inlineCode",{parentName:"a"},"New shared collection"))," command.")),(0,o.kt)("admonition",a({},{type:"note"}),(0,o.kt)("p",{parentName:"admonition"},"Les objets et collections partag\xe9s peuvent \xeatre d\xe9finis comme des propri\xe9t\xe9s d'objets ou de collections standard (non partag\xe9s).")),(0,o.kt)("p",null,"In order to modify a shared object/collection, the ",(0,o.kt)("strong",{parentName:"p"},"Use...End use")," structure must be called. Reading a shared object/collection value does not require ",(0,o.kt)("strong",{parentName:"p"},"Use...End use"),"."),(0,o.kt)("p",null,"A unique, global catalog returned by the ",(0,o.kt)("a",a({parentName:"p"},{href:"https://doc.4d.com/4dv20/help/command/en/page1525.html"}),(0,o.kt)("inlineCode",{parentName:"a"},"Storage"))," command is always available throughout the application and its components, and can be used to store all shared objects and collections."),(0,o.kt)("h2",a({},{id:"utilisation-des-objets-et-collections-partag\xe9s"}),"Utilisation des objets et collections partag\xe9s"),(0,o.kt)("p",null,"Once instantiated with the ",(0,o.kt)("inlineCode",{parentName:"p"},"New shared object")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"New shared collection")," commands, shared object/collection properties and elements can be modified or read from any process of the application, under certain conditions."),(0,o.kt)("h3",a({},{id:"modification"}),"Modification"),(0,o.kt)("p",null,"Les modifications suivantes peuvent \xeatre effectu\xe9es sur les objets partag\xe9s et les collections partag\xe9es :"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"ajout ou suppression de propri\xe9t\xe9s d'objets,"),(0,o.kt)("li",{parentName:"ul"},"ajout ou modification de valeurs (prises en charge par les objets/collections partag\xe9(e) s), y compris d'autres objets et collections partag\xe9(s) (ce qui cr\xe9e un groupe partag\xe9, cf. ci-dessous).")),(0,o.kt)("p",null,"All modification instructions in a shared object or collection require to be protected inside a ",(0,o.kt)("a",a({parentName:"p"},{href:"#use-end-use"}),(0,o.kt)("inlineCode",{parentName:"a"},"Use...End use"))," block, otherwise an error is generated."),(0,o.kt)("pre",null,(0,o.kt)("code",a({parentName:"pre"},{className:"language-4d"}),' $s_obj:=New shared object("prop1";"alpha")\n Use($s_obj)\n    $s_obj.prop1:="omega"\nEnd Use\n')),(0,o.kt)("p",null,"For conveniency, all ",(0,o.kt)("a",a({parentName:"p"},{href:"/docs/fr/API/CollectionClass"}),"collection functions")," that modify the shared object or collection insert an internal ",(0,o.kt)("inlineCode",{parentName:"p"},"Use...End use")," block so you do not have to code it yourself. Par exemple :"),(0,o.kt)("pre",null,(0,o.kt)("code",a({parentName:"pre"},{className:"language-4d"}),'$col:=New shared collection()\n$col.push("alpha") //.push() internally triggers Use/End use, so no need to do it yourselves\n')),(0,o.kt)("p",null,"If you need to execute several modifications on the same collection, you can protect all modifications with a single ",(0,o.kt)("inlineCode",{parentName:"p"},"Use...End use")," so that modifications are performed atomically."),(0,o.kt)("pre",null,(0,o.kt)("code",a({parentName:"pre"},{className:"language-4d"}),'$col:=Storage.mySharedCollection\nUse($col)\n    $col[0]:="omega" //modifying an element requires to be performed inside Use/End use\n    $col.push("alpha") //.push() internally triggers Use/End use, but we want to do both modifications atomically\nEnd Use\n')),(0,o.kt)("p",null,"Un objet/une collection partag\xe9(e) ne peut \xeatre modifi\xe9(e) que par un seul process \xe0 la fois. ",(0,o.kt)("inlineCode",{parentName:"p"},"Use")," locks the shared object/collection from other threads, while ",(0,o.kt)("inlineCode",{parentName:"p"},"End use")," unlocks the shared object/collection (if the locking counter is at 0, see below). . Trying to modify a shared object/collection without at least one ",(0,o.kt)("inlineCode",{parentName:"p"},"Use...End use")," generates an error. When a process calls ",(0,o.kt)("inlineCode",{parentName:"p"},"Use...End use")," on a shared object/collection that is already in use by another process, it is simply put on hold until the ",(0,o.kt)("inlineCode",{parentName:"p"},"End use")," unlocks it (no error is generated). Consequently, instructions within ",(0,o.kt)("inlineCode",{parentName:"p"},"Use...End use")," structures should execute quickly and unlock the elements as soon as possible. Il est donc fortement d\xe9conseill\xe9 de modifier un objet ou une collection partag\xe9(e) directement depuis l'interface, par exemple depuis une bo\xeete de dialogue."),(0,o.kt)("p",null,"Assigning shared objects/collections to properties or elements of other shared objects/collections is allowed and creates ",(0,o.kt)("strong",{parentName:"p"},"shared groups"),". Un groupe partag\xe9 est automatiquement cr\xe9\xe9 lorsqu'un objet ou une collection partag\xe9(e) est assign\xe9(e) en tant que valeur de propri\xe9t\xe9 ou \xe9l\xe9ment \xe0 un autre objet ou collection partag\xe9(e). Les groupes partag\xe9s permettent d'imbriquer des objets et collections partag\xe9(e)s mais n\xe9cessitent d'observer des r\xe8gles suppl\xe9mentaires :"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Calling ",(0,o.kt)("inlineCode",{parentName:"li"},"Use")," on a shared object/collection belonging to a group locks properties/elements of all shared objects/collections of the group and increments its locking counter. Calling ",(0,o.kt)("inlineCode",{parentName:"li"},"End use")," decrements the locking counter of the group and when the counter is at 0, all the linked shared objects/collections are unlocked."),(0,o.kt)("li",{parentName:"ul"},"Un objet ou une collection partag\xe9(e) peut appartenir \xe0 un seul groupe partag\xe9. Une erreur est g\xe9n\xe9r\xe9e si vous tentez d'assigner un objet ou une collection appartenant d\xe9j\xe0 \xe0 un groupe \xe0 un groupe diff\xe9rent."),(0,o.kt)("li",{parentName:"ul"},"Les objets/collections group\xe9(e)s ne peuvent plus \xeatre d\xe9group\xe9(e)s. Une fois inclus dans un groupe partag\xe9, un objet ou une collection partag\xe9(e) est li\xe9(e) d\xe9finitivement au groupe pendant toute la dur\xe9e de la session. M\xeame si toutes les r\xe9f\xe9rences de l'objet/la collection sont supprim\xe9(e)s des objets/collections parent(e)s, ils resteront li\xe9s.")),(0,o.kt)("p",null,"Reportez-vous \xe0 l'exemple 2 pour l'illustration des r\xe8gles des groupes partag\xe9s."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note:")," Shared groups are managed through an internal property named ",(0,o.kt)("em",{parentName:"p"},"locking identifier"),". For detailed information on this value, please refer to the 4D Language Reference."),(0,o.kt)("h3",a({},{id:"lecture"}),"Lecture"),(0,o.kt)("p",null,"Reading properties or elements of a shared object/collection is allowed without having to call the ",(0,o.kt)("inlineCode",{parentName:"p"},"Use...End use")," structure, even if the shared object/collection is in use by another process."),(0,o.kt)("p",null,"However, it is necessary to read a shared object/collection within ",(0,o.kt)("inlineCode",{parentName:"p"},"Use...End use")," when several values are linked together and must be read at once, for consistency reasons."),(0,o.kt)("h3",a({},{id:"duplication"}),"Duplication"),(0,o.kt)("p",null,"Calling ",(0,o.kt)("inlineCode",{parentName:"p"},"OB Copy")," with a shared object (or with an object containing shared object(s) as properties) is possible, but will return a standard (not shared) object including its contained objects (if any)."),(0,o.kt)("h3",a({},{id:"storage"}),"Storage"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Storage")," is a unique shared object, automatically available on each application and machine. This shared object is returned by the ",(0,o.kt)("a",a({parentName:"p"},{href:"https://doc.4d.com/4dv20/help/command/en/page1525.html"}),(0,o.kt)("inlineCode",{parentName:"a"},"Storage"))," command. Il est destin\xe9 \xe0 r\xe9f\xe9rencer les objets ou collections partag\xe9(e)s d\xe9fini(e)s durant la session que vous souhaitez rendre accessibles \xe0 tous les process, pr\xe9emptifs ou standard."),(0,o.kt)("p",null,"Note that, unlike standard shared objects, the ",(0,o.kt)("inlineCode",{parentName:"p"},"storage")," object does not create a shared group when shared objects/collections are added as its properties. This exception allows the ",(0,o.kt)("strong",{parentName:"p"},"Storage")," object to be used without locking all connected shared objects or collections."),(0,o.kt)("p",null,"For more information, refer to the ",(0,o.kt)("a",a({parentName:"p"},{href:"https://doc.4d.com/4dv20/help/command/en/page1525.html"}),(0,o.kt)("inlineCode",{parentName:"a"},"Storage"))," command description."),(0,o.kt)("h2",a({},{id:"useend-use"}),"Use...End use"),(0,o.kt)("p",null,"The formal syntax of the ",(0,o.kt)("inlineCode",{parentName:"p"},"Use...End use")," structure is:"),(0,o.kt)("pre",null,(0,o.kt)("code",a({parentName:"pre"},{className:"language-4d"})," Use(Shared_object_or_Shared_collection)\n    instruction(s)\n End use\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Use...End use")," structure defines a sequence of statements that will execute tasks on the ",(0,o.kt)("em",{parentName:"p"},"Shared_object_or_Shared_collection")," parameter under the protection of an internal semaphore. ",(0,o.kt)("em",{parentName:"p"},"Shared_object_or_Shared_collection")," can be any valid shared object or shared collection."),(0,o.kt)("p",null,"Shared objects and shared collections are designed to allow communication between processes, in particular, ",(0,o.kt)("strong",{parentName:"p"},"preemptive 4D processes"),". Ils peuvent \xeatre pass\xe9s par r\xe9f\xe9rence en param\xe8tre d'un process \xe0 un autre. Surrounding modifications on shared objects or shared collections by the ",(0,o.kt)("inlineCode",{parentName:"p"},"Use...End use")," keywords is mandatory to prevent concurrent access between processes."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Once the ",(0,o.kt)("strong",{parentName:"li"},"Use")," line is successfully executed, all ",(0,o.kt)("em",{parentName:"li"},"Shared_object_or_Shared_collection")," properties/elements are locked for all other process in write access until the corresponding ",(0,o.kt)("inlineCode",{parentName:"li"},"End use")," line is executed."),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("em",{parentName:"li"},"statement(s)")," sequence can execute any modification on the Shared_object_or_Shared_collection properties/elements without risk of concurrent access."),(0,o.kt)("li",{parentName:"ul"},"If another shared object or collection is added as a property of the ",(0,o.kt)("em",{parentName:"li"},"Shared_object_or_Shared_collection")," parameter, they become connected within the same shared group."),(0,o.kt)("li",{parentName:"ul"},"If another process tries to access one of the ",(0,o.kt)("em",{parentName:"li"},"Shared_object_or_Shared_collection")," properties or connected properties while a ",(0,o.kt)("strong",{parentName:"li"},"Use...End use")," sequence is being executed, it is automatically put on hold and waits until the current sequence is terminated."),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("strong",{parentName:"li"},"End use")," line unlocks the ",(0,o.kt)("em",{parentName:"li"},"Shared_object_or_Shared_collection")," properties and all objects of the same group."),(0,o.kt)("li",{parentName:"ul"},"Several ",(0,o.kt)("strong",{parentName:"li"},"Use...End use")," structures can be nested in the 4D code. In the case of a group, each ",(0,o.kt)("strong",{parentName:"li"},"Use")," increments the locking counter of the group and each ",(0,o.kt)("strong",{parentName:"li"},"End use")," decrements it; all properties/elements will be released only when the last ",(0,o.kt)("strong",{parentName:"li"},"End use")," call sets the locking counter to 0.")),(0,o.kt)("admonition",a({},{type:"note"}),(0,o.kt)("p",{parentName:"admonition"},"The following functions automatically trigger an internal ",(0,o.kt)("strong",{parentName:"p"},"Use/End use"),", making an explicit call to the structure unnecessary when the function is executed:"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",a({parentName:"li"},{href:"/docs/fr/API/CollectionClass"}),"collection functions")," that modify shared collections"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",a({parentName:"li"},{href:"/docs/fr/Concepts/classes#shared-functions"}),"shared functions")," (defined in ",(0,o.kt)("a",a({parentName:"li"},{href:"/docs/fr/Concepts/classes#shared-classes"}),"shared classes"),")."))),(0,o.kt)("h2",a({},{id:"exemple-1"}),"Exemple 1"),(0,o.kt)("p",null,"Vous souhaitez lancer plusieurs process qui vont effectuer des t\xe2ches d'inventaire parmi diff\xe9rents produits et mettre \xe0 jour le m\xeame objet partag\xe9. Le process principal instancie un objet partag\xe9 vide et ensuite lance les autres process, passant en param\xe8tre l'objet partag\xe9 et les produits \xe0 comptabiliser :"),(0,o.kt)("pre",null,(0,o.kt)("code",a({parentName:"pre"},{className:"language-4d"}),' ARRAY TEXT($_items;0)\n ... //fill the array with items to count\n $nbItems:=Size of array($_items)\n var $inventory : Object\n $inventory:=New shared object\n Use($inventory)\n    $inventory.nbItems:=$nbItems\n End use\n\n  //Create processes\n For($i;1;$nbItems)\n    $ps:=New process("HowMany";0;"HowMany_"+$_items{$i};$_items{$i};$inventory)\n  //$inventory object sent by reference\n End for\n')),(0,o.kt)("p",null,"Dans la m\xe9thode \"HowMany\", l'inventaire est effectu\xe9 et l'objet partag\xe9 $inventory est mis \xe0 jour d\xe8s que possible :"),(0,o.kt)("pre",null,(0,o.kt)("code",a({parentName:"pre"},{className:"language-4d"}),"    //HowMany\n #DECLARE ($what : Text ; $inventory : Object)\n\n $count:=CountMethod($what) //method to count products\n Use($inventory) //use shared object\n    $inventory[$what]:=$count  //save the results for this item\n End use\n")),(0,o.kt)("h2",a({},{id:"exemple-2"}),"Exemple 2"),(0,o.kt)("p",null,"Les exemples suivants illustrent les r\xe8gles sp\xe9cifiques \xe0 observer lorsque vous utilisez des groupes partag\xe9s :"),(0,o.kt)("pre",null,(0,o.kt)("code",a({parentName:"pre"},{className:"language-4d"})," $ob1:=New shared object\n $ob2:=New shared object\n Use($ob1)\n    $ob1.a:=$ob2  //group 1 is created\n End use\n\n $ob3:=New shared object\n $ob4:=New shared object\n Use($ob3)\n    $ob3.a:=$ob4  //group 2 is created\n End use\n\n Use($ob1) //use an object from group 1\n    $ob1.b:=$ob4  //ERROR\n  //$ob4 already belongs to another group\n  //assignment is not allowed\n End use\n\n Use($ob3)\n    $ob3.a:=Null //remove any reference to $ob4 from group 2\n End use\n\n Use($ob1) //use an object from group 1\n    $ob1.b:=$ob4  //ERROR\n  //$ob4 still belongs to group 2\n  //assignment is not allowed\n End use\n")))}u.isMDXComponent=!0}}]);