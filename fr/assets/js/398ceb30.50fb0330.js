/*! For license information please see 398ceb30.50fb0330.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[36308],{92435:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var r=s(474848),t=s(28453);const l={id:"quick-tour",title:"Tour d'horizon",sidebar_label:"Tour d'horizon"},i=void 0,o={id:"Concepts/quick-tour",title:"Tour d'horizon",description:"En utilisant le langage 4D, le traditionnel \"Hello, world!\" peut s'afficher \xe0 l'\xe9cran de plusieurs mani\xe8res. Le plus simple est probablement d'\xe9crire la ligne suivante dans une m\xe9thode de projet :",source:"@site/i18n/fr/docusaurus-plugin-content-docs/version-18/Concepts/quick-tour.md",sourceDirName:"Concepts",slug:"/Concepts/quick-tour",permalink:"/docs/fr/18/Concepts/quick-tour",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20Concepts%2Fquick-tour.md%20(18)&body=Please%20enter%20your%20comment%3A",tags:[],version:"18",frontMatter:{id:"quick-tour",title:"Tour d'horizon",sidebar_label:"Tour d'horizon"},sidebar:"docs",previous:{title:"\xc0 propos du Langage 4D",permalink:"/docs/fr/18/Concepts/about"},next:{title:"Types de donn\xe9es",permalink:"/docs/fr/18/Concepts/data-types"}},a={},d=[{value:"Assigner des valeurs",id:"Assigner-des-valeurs",level:2},{value:"Variables",id:"Variables",level:2},{value:"Commandes",id:"Commandes",level:2},{value:"Constantes",id:"Constantes",level:2},{value:"Methods",id:"Methods",level:2},{value:"Types de donn\xe9es",id:"Types-de-donn\xe9es",level:2},{value:"Objets et collections",id:"Objets-et-collections",level:2},{value:"Op\xe9rateurs",id:"Op\xe9rateurs",level:2},{value:"Expressions",id:"Expressions",level:2},{value:"Types d\u2019expressions",id:"Types-dexpressions",level:3},{value:"Expressions assignables et non-assignables",id:"Expressions-assignables-et-non-assignables",level:3},{value:"Pointeurs",id:"Pointeurs",level:2},{value:"Commentaires",id:"Commentaires",level:2},{value:"Ligne de commentaire (//)",id:"Ligne-de-commentaire-",level:4},{value:"Commentaires en ligne ou multi-lignes (/**/)",id:"Commentaires-en-ligne-ou-multi-lignes-",level:4}];function u(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"En utilisant le langage 4D, le traditionnel \"Hello, world!\" peut s'afficher \xe0 l'\xe9cran de plusieurs mani\xe8res. Le plus simple est probablement d'\xe9crire la ligne suivante dans une m\xe9thode de projet :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:'ALERT("Hello, World!")\n'})}),"\n",(0,r.jsx)(n.p,{children:"Ce code affichera une bo\xeete de dialogue d'alerte standard contenant le message \"Hello, World!\" et un bouton OK. Pour ex\xe9cuter le code, il vous suffit de cliquer sur le bouton d'ex\xe9cution dans l'\xe9diteur de m\xe9thode :"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"alt-text",src:s(816148).A+"",width:"613",height:"322"})}),"\n",(0,r.jsx)(n.p,{children:"Vous pouvez \xe9galement associer ce code \xe0 un bouton de formulaire et ex\xe9cuter le formulaire. Dans ce cas, en cliquant sur le bouton, vous afficherez la bo\xeete de dialogue d'alerte. Dans tous les cas, vous venez d'ex\xe9cuter votre premi\xe8re ligne de code 4D !"}),"\n",(0,r.jsx)(n.h2,{id:"Assigner-des-valeurs",children:"Assigner des valeurs"}),"\n",(0,r.jsx)(n.p,{children:"Vous pouvez donner des valeurs aux variables, aux champs, aux \xe9l\xe9ments de tableaux et/ou r\xe9cup\xe9rer leur valeur. Donner une valeur \xe0 une variable s\u2019appelle assigner une valeur (ou affecter une valeur) et s\u2019effectue \xe0 l\u2019aide de l\u2019op\xe9rateur d\u2019assignation (:=). L\u2019op\xe9rateur d\u2019assignation est \xe9galement utilis\xe9 pour assigner des valeurs aux champs ou aux \xe9l\xe9ments de tableaux."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:'$MyNumber:=3 //assigne 3 \xe0 la variable MyNumber\n[Products]Size:=$MyNumber //assigne la variable MyNumber au champ [Products]Size\narrDays{2}:="Mardi" //assigne la cha\xeene "Mardi" au 2\xe8me \xe9l\xe9ment arrDays\nMyVar:=Length("Acme") //assigne le r\xe9sultat de la fonction (4) \xe0 MyVar\n$myDate:=!2018/01/21! //assigne une date litt\xe9rale\n$myHour:=?08:12:55? //assigne une heure litt\xe9rale\n'})}),"\n",(0,r.jsx)(n.p,{children:"Vous devez imp\xe9rativement distinguer l'op\xe9rateur d'affectation := des autres op\xe9rateurs. Plut\xf4t que de combiner des expressions dans une nouvelle expression, l'op\xe9rateur d'affectation copie la valeur de l'expression \xe0 droite de l'op\xe9rateur d'affectation dans la variable ou le champ situ\xe9 \xe0 gauche de l'op\xe9rateur."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Important :"})," Ne confondez pas l\u2019op\xe9rateur d\u2019assignation (:=) avec le signe \xe9gal (=). Un op\xe9rateur d'affectation diff\xe9rent (et non pas =) a \xe9t\xe9 choisi d\xe9lib\xe9r\xe9ment pour \xe9viter les probl\xe8mes et la confusion qui surviennent souvent avec == ou === dans d'autres langages de programmation. De telles erreurs sont souvent difficiles \xe0 reconna\xeetre pour le compilateur et conduisent \xe0 un d\xe9pannage fastidieux."]}),"\n",(0,r.jsx)(n.h2,{id:"Variables",children:"Variables"}),"\n",(0,r.jsxs)(n.p,{children:["Le langage 4D est fortement typ\xe9, bien qu'une certaine flexibilit\xe9 soit autoris\xe9e dans de nombreux cas. Vous cr\xe9ez une variable typ\xe9e \xe0 l'aide d'une commande ",(0,r.jsx)(n.code,{children:"C_XXX"}),". Par exemple, pour cr\xe9er une variable du type date, vous pouvez \xe9crire : Par exemple, pour cr\xe9er une variable du type date, vous pouvez \xe9crire :"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:"C_DATE(MyDate) //Type date pour la variable MyDate\n"})}),"\n",(0,r.jsx)(n.p,{children:"M\xeame si cela est g\xe9n\xe9ralement d\xe9conseill\xe9, vous pouvez cr\xe9er des variables simplement en les utilisant; il n\u2019est pas obligatoire de les d\xe9clarer formellement comme vous le faites avec les champs. Par exemple, si vous voulez cr\xe9er une variable qui contient la date du jour plus 30 jours, il vous suffit d\u2019\xe9crire dans 4D :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:"MyOtherDate:=Current date+30\n"})}),"\n",(0,r.jsxs)(n.p,{children:["La ligne de code se lit \"MyOtherDate obtient la date actuelle plus 30 jours.\" Cette ligne cr\xe9e la variable, lui attribue \xe0 la fois le type de date (temporaire) et un contenu. Une variable cr\xe9\xe9e par affectation est interpr\xe9t\xe9e comme \xe9tant non typ\xe9e, c'est-\xe0-dire qu'elle peut \xeatre affect\xe9e \xe0 d'autres types dans d'autres lignes, puis modifie le type de mani\xe8re dynamique. Une variable typ\xe9e avec ",(0,r.jsx)(n.code,{children:"C_XXX"})," ne peut pas changer le type. En mode compil\xe9, le type ne peut jamais \xeatre modifi\xe9, quelle que soit la mani\xe8re dont la variable a \xe9t\xe9 cr\xe9\xe9e."]}),"\n",(0,r.jsx)(n.h2,{id:"Commandes",children:"Commandes"}),"\n",(0,r.jsx)(n.p,{children:"Les commandes 4D sont des m\xe9thodes int\xe9gr\xe9es qui permettent d'effectuer une action. Les commandes 4D sont des m\xe9thodes int\xe9gr\xe9es qui permettent d'effectuer une action. Les commandes sont souvent utilis\xe9es avec des param\xe8tres qui sont pass\xe9s entre parenth\xe8ses () et s\xe9par\xe9s par des points-virgules (;). Voici un exemple :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:'COPY DOCUMENT("dossier1\\\\nom1";"dossier2\\\\" ; "nouveau")\n'})}),"\n",(0,r.jsx)(n.p,{children:"Certaines commandes sont reli\xe9es \xe0 des collections ou \xe0 des objets, auquel cas ce sont des m\xe9thodes nomm\xe9es qui sont utilis\xe9es \xe0 l'aide de la notation en point. Par exemple :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:"$c:=New collection(1;2;3;4;5)\n$nc:=$c.slice(0;3) //$nc=[1,2,3]  \n\n$lastEmployee:=$employee.last()\n"})}),"\n",(0,r.jsx)(n.p,{children:"Vous pouvez utiliser des plug-ins ou des composants 4D qui ajoutent de nouvelles commandes \xe0 votre environnement de d\xe9veloppement 4D."}),"\n",(0,r.jsxs)(n.p,{children:["Il existe de nombreux plug-ins propos\xe9s par la communaut\xe9 des utilisateurs de 4D ou des d\xe9veloppeurs tiers. Par exemple, en utilisant les pages ",(0,r.jsx)(n.a,{href:"https://github.com/miyako/4d-plugin-pdf-pages",children:"4d-plugin-pdf-pages"})," sur macOS :"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:"PDF REMOVE PAGE(path;page)\n"})}),"\n",(0,r.jsx)(n.p,{children:"4D SVG est un exemple de composant utilitaire qui augmente les capacit\xe9s de votre application :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:"//faire un dessin\nsvgRef:=SVG_New\nobjectRef:=SVG_New_arc(svgRef;100;100;90;90;180)\n"})}),"\n",(0,r.jsx)(n.p,{children:"4D SVG est inclus dans 4D."}),"\n",(0,r.jsx)(n.h2,{id:"Constantes",children:"Constantes"}),"\n",(0,r.jsxs)(n.p,{children:["4D propose un large ensemble de constantes pr\xe9d\xe9finies, dont les valeurs sont accessibles par un nom. Par exemple, ",(0,r.jsx)(n.code,{children:"XML DATA"})," est une constante (valeur 6). Par d\xe9faut, les constantes pr\xe9d\xe9finies sont soulign\xe9es dans l'\xe9diteur de m\xe9thodes 4D. Elles permettent d'\xe9crire un code plus lisible."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:'vRef:=Open document("PassFile";"TEXTE";Read Mode) // ouvrir le doc en mode lecture seule\n'})}),"\n",(0,r.jsx)(n.h2,{id:"Methods",children:"Methods"}),"\n",(0,r.jsxs)(n.p,{children:["4D propose un grand nombre de m\xe9thodes (ou de commandes) int\xe9gr\xe9es, mais vous permet \xe9galement de cr\xe9er vos propres ",(0,r.jsx)(n.strong,{children:"m\xe9thodes de projet"}),". Les m\xe9thodes de projet sont des m\xe9thodes d\xe9finies par l'utilisateur qui contiennent des commandes, des op\xe9rateurs et d'autres parties du langage. Les m\xe9thodes projet sont des m\xe9thodes g\xe9n\xe9riques, mais il existe d'autres types de m\xe9thodes : les m\xe9thodes objet, les m\xe9thodes formulaire, les m\xe9thodes table (Triggers) et les m\xe9thodes base."]}),"\n",(0,r.jsx)(n.p,{children:"Une m\xe9thode est compos\xe9e de plusieurs lignes d\u2019instructions. Une instruction ex\xe9cute une action, et peut \xeatre simple ou complexe."}),"\n",(0,r.jsx)(n.p,{children:"Par exemple, la ligne de code suivante est une instruction qui affichera une bo\xeete de dialogue de confirmation :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:'CONFIRM("Souhaitez-vous vraiment clore ce compte ?";"Oui";"Non")\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Une m\xe9thode contient \xe9galement des testes et des boucles qui g\xe8rent le flux d'ex\xe9cution. Les m\xe9thodes 4D prennent en charge les structures ",(0,r.jsx)(n.code,{children:"If...Else...End if"})," et ",(0,r.jsx)(n.code,{children:"Case of...Else...End case"})," ainsi que les boucles : ",(0,r.jsx)(n.code,{children:"While...End while"}),", ",(0,r.jsx)(n.code,{children:"Repeat...Until"}),", ",(0,r.jsx)(n.code,{children:"For...End for"}),", et ",(0,r.jsx)(n.code,{children:"For each...End for each"}),":"]}),"\n",(0,r.jsx)(n.p,{children:"L'exemple suivant permet d'examiner chaque caract\xe8re du texte vtSomeText :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:"For($vlChar;1;Length(vtSomeText))\n //Do something with the character if it is a TAB\n If(Character code(vtSomeText[[$vlChar]])=Tab)\n  //...\n End if\nEnd for\n"})}),"\n",(0,r.jsx)(n.p,{children:"Une m\xe9thode projet peut en appeler une autre avec ou sans les param\xe8tres (arguments). Les param\xe8tres sont pass\xe9s \xe0 la m\xe9thode entre parenth\xe8ses, \xe0 la suite du nom de la m\xe9thode. Chaque param\xe8tre est s\xe9par\xe9 par des points virgule (;). Les param\xe8tres sont pass\xe9s \xe0 la m\xe9thode appel\xe9e en tant que variables locales num\xe9rot\xe9es s\xe9quentiellement : $1, $2,\u2026, $n. Une m\xe9thode peut retourner une seule valeur dans le param\xe8tre $0. Lorsque vous appelez une m\xe9thode, vous saisissez simplement son nom :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:'$myText:="hello"\n$myText:=Do_Something($myText) //Appelle la m\xe9thode Do_Something\nALERT($myText) //"HELLO"\n\n  //Voici le code de la m\xe9thode Do_Something\n$0:=Uppercase($1)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"Types-de-donn\xe9es",children:"Types de donn\xe9es"}),"\n",(0,r.jsx)(n.p,{children:"De nombreux types de donn\xe9es peuvent \xeatre manipul\xe9s via le langage 4D. Il existe des types de donn\xe9es \xe9l\xe9mentaires (cha\xeene, num\xe9rique, date, heure, bool\xe9en, image, pointeur, tableau), ainsi que des types de donn\xe9es composites (BLOBs, objets, collections)."}),"\n",(0,r.jsx)(n.p,{children:"A noter que les donn\xe9es de type cha\xeene et num\xe9rique peuvent \xeatre associ\xe9es \xe0 plusieurs types de champ. Lorsque des donn\xe9es sont plac\xe9es dans un champ, le langage les convertit automatiquement dans le type du champ. Par exemple, si un champ de type entier est utilis\xe9, les valeurs qu\u2019il contient sont automatiquement trait\xe9es en tant que num\xe9riques. En d\u2019autres termes, vous n\u2019avez pas \xe0 vous pr\xe9occuper du m\xe9lange de champs de types semblables lorsque vous programmez avec 4D ; le langage le g\xe8re pour vous."}),"\n",(0,r.jsx)(n.p,{children:"Cependant, il est important, lorsque vous utilisez le langage, de ne pas m\xe9langer les diff\xe9rents types de donn\xe9es. Tout comme il est absurde de stocker la valeur \u201cABC\u201d dans un champ de type Date, il est absurde de donner la valeur \u201cABC\u201d \xe0 une variable utilis\xe9e pour des dates. Dans la plupart des cas, 4D est tr\xe8s tol\xe9rant et tentera d\u2019utiliser de mani\xe8re logique ce que vous faites. Par exemple, si vous additionnez un nombre x et une date, 4D d\xe9duira que vous voulez ajouter x jours \xe0 la date, mais si vous tentez d\u2019ajouter une cha\xeene \xe0 une date, 4D vous pr\xe9viendra que cette op\xe9ration est impossible."}),"\n",(0,r.jsx)(n.p,{children:'Certains cas n\xe9cessitent que vous stockiez des donn\xe9es dans un type et que vous les utilisiez dans un autre. Le langage contient un ensemble complet de commandes vous permettant de convertir des types de donn\xe9es en d\u2019autres types. Par exemple, vous pouvez avoir besoin de cr\xe9er un num\xe9ro de pi\xe8ce qui commence par un chiffre et se termine par des caract\xe8res tels que "abc". Dans ce cas, vous pouvez \xe9crire :'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:'[Produits]Matricule:=String(Num\xe9ro)+"abc"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Si ",(0,r.jsx)(n.em,{children:"Num\xe9ro"})," vaut 17, ",(0,r.jsx)(n.em,{children:"[Produits]Matricule"})," prendra la valeur \u201c17abc\u201d."]}),"\n",(0,r.jsxs)(n.p,{children:["Les types de donn\xe9es sont d\xe9taill\xe9s dans la section ",(0,r.jsx)(n.a,{href:"/docs/fr/18/Concepts/data-types",children:"Types de donn\xe9es"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"Objets-et-collections",children:"Objets et collections"}),"\n",(0,r.jsx)(n.p,{children:"Vous pouvez g\xe9rer les objets et collections du langage 4D \xe0 l'aide de la notation objet pour lire ou d\xe9finir leurs valeurs. Par exemple :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:'employee.name:="Smith"\n'})}),"\n",(0,r.jsx)(n.p,{children:"Vous pouvez \xe9galement utiliser de crochets, comme dans l'exemple ci-dessous :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:'$vName:=employee["nom"]\n'})}),"\n",(0,r.jsx)(n.p,{children:"Comme la valeur d'une propri\xe9t\xe9 d'objet peut elle-m\xeame \xeatre un objet ou une collection, la notation objet requiert une s\xe9quence de symboles pour acc\xe9der aux sous-propri\xe9t\xe9s, par exemple :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:"$vAge:=employee.children[2].age\n"})}),"\n",(0,r.jsx)(n.p,{children:"A noter que si la valeur de la propri\xe9t\xe9 de l'objet est un objet qui encapsule une m\xe9thode (une formule), vous devez ajouter des parenth\xe8ses () au nom de la propri\xe9t\xe9 pour ex\xe9cuter la m\xe9thode :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'$f:=New object\n$f.message:=New formula(ALERT("Hello world!"))\n$f.message() //displays "Hello world!"\n$f.message() //affiche "Hello world!"\n'})}),"\n",(0,r.jsx)(n.p,{children:"Pour acc\xe9der \xe0 un \xe9l\xe9ment de collection, vous devez passer le num\xe9ro de l'\xe9l\xe9ment situ\xe9 entre crochets :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:'C_COLLECTION(myColl)\nmyColl:=New collection("A";"B";1;2;Current time)\nmyColl[3]  //acc\xe8de au 4\xe8me \xe9l\xe9ment de la collection\n'})}),"\n",(0,r.jsx)(n.h2,{id:"Op\xe9rateurs",children:"Op\xe9rateurs"}),"\n",(0,r.jsx)(n.p,{children:"Lorsque vous programmez avec 4D, il est rare que vous ayez simplement besoin de donn\xe9es \u201cbrutes\u201d. Le plus souvent, il sera n\xe9cessaire de traiter ces donn\xe9es d'une mani\xe8re ou d'une autre. Vous effectuez ces calculs avec des op\xe9rateurs. Les op\xe9rateurs, en g\xe9n\xe9ral, prennent deux valeurs et effectuent avec elles une op\xe9ration dont le r\xe9sultat est une troisi\xe8me valeur. Vous connaissez d\xe9j\xe0 la plupart des op\xe9rateurs. You are already familiar with many operators. For example, 1 + 2 uses the addition (or plus sign) operator to add two numbers together, and the result is 3."}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Op\xe9rateur"}),(0,r.jsx)(n.th,{children:"Op\xe9ration"}),(0,r.jsx)(n.th,{children:"Exemple"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"+"}),(0,r.jsx)(n.td,{children:"Addition"}),(0,r.jsx)(n.td,{children:"1 +2 = 3"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"\u2013"}),(0,r.jsx)(n.td,{children:"Soustraction"}),(0,r.jsx)(n.td,{children:"3 - 2 = 1"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"*"}),(0,r.jsx)(n.td,{children:"Multiplication"}),(0,r.jsx)(n.td,{children:"2 * 3 = 6"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"/"}),(0,r.jsx)(n.td,{children:"Division"}),(0,r.jsx)(n.td,{children:"6 / 2 = 3"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Les op\xe9rateurs num\xe9riques ne repr\xe9sentent qu\u2019un seul des diff\xe9rents types d\u2019op\xe9rateurs disponibles. Comme 4D traite de multiples types de donn\xe9es, tels que des nombres, des dates ou des images, vous disposez d\u2019op\xe9rateurs particuliers effectuant des op\xe9rations sur ces donn\xe9es."}),"\n",(0,r.jsx)(n.p,{children:"Souvent, les m\xeames symboles sont utilis\xe9s pour des op\xe9rations diff\xe9rentes, en fonction du type de donn\xe9es trait\xe9es. Par exemple, le signe (+) peut effectuer diverses op\xe9rations, comme le montre le tableau suivant :"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Type de donn\xe9es"}),(0,r.jsx)(n.th,{children:"Op\xe9ration"}),(0,r.jsx)(n.th,{children:"Exemple"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Number"}),(0,r.jsx)(n.td,{children:"Addition"}),(0,r.jsx)(n.td,{children:"1 + 2 ajoute les nombres, le r\xe9sultat est 3"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:"Concat\xe9nation"}),(0,r.jsx)(n.td,{children:"\u201cBonjour\u201d + \u201c\xe0 tous\u201d concat\xe8ne (met bout \xe0 bout) les cha\xeenes, le r\xe9sultat est \u201cBonjour \xe0 tous\u201d"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Date et Num\xe9rique"}),(0,r.jsx)(n.td,{children:"Addition de date"}),(0,r.jsx)(n.td,{children:"!1989-01-01! + 20 ajoute 20 jours \xe0 la date 1 janvier 1989, le r\xe9sultat est la date 21 janvier 1989"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"Expressions",children:"Expressions"}),"\n",(0,r.jsx)(n.p,{children:"Pour parler simplement, les expressions retournent une valeur. En fait, lorsque vous programmez avec 4D, vous utilisez syst\xe9matiquement des expressions et avez tendance \xe0 les manipuler uniquement \xe0 travers la valeur qu\u2019elles repr\xe9sentent. Les expressions sont aussi appel\xe9es formules."}),"\n",(0,r.jsx)(n.p,{children:"Les expressions peuvent \xeatre constitu\xe9es de presque tous les \xe9l\xe9ments du langage : commandes, op\xe9rateurs, variables, champs, propri\xe9t\xe9s d'objets et \xe9l\xe9ments de collection. Vous utilisez des expressions pour \xe9crire des lignes de code, qui sont \xe0 leur tour utilis\xe9es pour construire des m\xe9thodes. Des expressions sont employ\xe9es \xe0 chaque fois que le langage 4D a besoin de conna\xeetre la valeur d\u2019une donn\xe9e."}),"\n",(0,r.jsx)(n.p,{children:"Les expressions sont rarement \xabautonomes\xbb. Expressions rarely \u201cstand alone.\u201d There are several places in 4D where an expression can be used by itself. Cela inclut :"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Editeur de formule (apply formula, query with formula, order by formula)"}),"\n",(0,r.jsxs)(n.li,{children:["La commande ",(0,r.jsx)(n.code,{children:"EXECUTE FORMULA"})]}),"\n",(0,r.jsx)(n.li,{children:"La liste de propri\xe9t\xe9s, o\xf9 une expression peut \xeatre utilis\xe9e en tant que source de donn\xe9es pour la plupart des widgets"}),"\n",(0,r.jsx)(n.li,{children:"Dans la fen\xeatre du D\xe9bogueur o\xf9 la valeur des expressions peut \xeatre \xe9valu\xe9e"}),"\n",(0,r.jsx)(n.li,{children:"Dans l\u2019\xe9diteur d\u2019\xe9tats semi-automatiques en tant que formule dans une colonne"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"Types-dexpressions",children:"Types d\u2019expressions"}),"\n",(0,r.jsx)(n.p,{children:"Vous vous r\xe9f\xe9rez \xe0 une expression via le type de donn\xe9es qu\u2019elle retourne. Il existe plusieurs types d\u2019expressions : Le tableau suivant donne des exemples de chaque type d'expression."}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Expression"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"\u201cBonjour\u201d"}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:"Le mot Bonjour est une constante cha\xeene, signal\xe9e par les guillemets."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"\u201cBonjour \u201d + \u201c\xe0 tous\u201d"}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:"Deux cha\xeenes, \u201cBonjour \u201d et \u201c\xe0 tous\u201d, sont mises bout \xe0 bout (concat\xe9n\xe9es) \xe0 l'aide de l'op\xe9rateur de concat\xe9nation de cha\xeenes (+). La cha\xeene \u201cBonjour \xe0 tous\u201d est retourn\xe9e."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"\u201cMr. \u201d + [Personnes]Nom"}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:'Deux cha\xeenes sont concat\xe9n\xe9es : la cha\xeene "Mr." et la valeur courante du champ Nom dans la table Personnes. Si le champ contient \u201cDupont\u201d, l\'expression retourne \u201cM. Dupont\u201d.'})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:'Uppercase("smith")'}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsxs)(n.td,{children:["Cette expression utilise ",(0,r.jsx)(n.code,{children:"Uppercase"}),', une commande du langage, pour convertir la cha\xeene "dupont" en majuscules. Elle retourne \u201cDUPONT\u201d.']})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"4"}),(0,r.jsx)(n.td,{children:"Number"}),(0,r.jsx)(n.td,{children:"C'est une constante num\xe9rique, 4."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"4 * 2"}),(0,r.jsx)(n.td,{children:"Number"}),(0,r.jsx)(n.td,{children:"Deux nombres, 4 et 2, sont multipli\xe9s \xe0 l'aide de l'op\xe9rateur de multiplication (*). Le r\xe9sultat est le nombre 8."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"MonBouton"}),(0,r.jsx)(n.td,{children:"Number"}),(0,r.jsx)(n.td,{children:"C'est le nom d'un bouton. Il retourne la valeur courante du bouton : 1 s'il y a eu un clic sur le bouton, 0 sinon."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"!1997-01-25!"}),(0,r.jsx)(n.td,{children:"Date"}),(0,r.jsx)(n.td,{children:"C'est une constante date pour la date 25/01/97 (25 janvier 1997)."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Current date+ 30"}),(0,r.jsx)(n.td,{children:"Date"}),(0,r.jsxs)(n.td,{children:["C'est une expression de type Date qui utilise la commande ",(0,r.jsx)(n.code,{children:"Current date"})," pour r\xe9cup\xe9rer la date courante. Elle ajoute 30 jours \xe0 la date d'aujourd'hui et retourne la nouvelle date."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"?8:05:30?"}),(0,r.jsx)(n.td,{children:"Time"}),(0,r.jsx)(n.td,{children:"C'est une constante heure qui repr\xe9sente 8 heures, 5 minutes, et 30 secondes."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"?2:03:04? + ?1:02:03?"}),(0,r.jsx)(n.td,{children:"Time"}),(0,r.jsx)(n.td,{children:"Cette expression ajoute une heure \xe0 une autre et retourne l'heure 3:05:07."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"True"}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:"Cette commande retourne la valeur bool\xe9enne TRUE."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"10 # 20"}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:"C'est une comparaison logique entre deux nombres. Le symbole (#) signifie \u201cest diff\xe9rent de\u201d. Comme 10 \u201cest diff\xe9rent de\u201d 20, l'expression retourne TRUE."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"\u201cABC\u201d = \u201cXYZ\u201d"}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:"C'est une comparaison logique entre deux cha\xeenes. Elles sont diff\xe9rentes, donc l'expression retourne FALSE."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"MonImage + 50"}),(0,r.jsx)(n.td,{children:"Picture"}),(0,r.jsx)(n.td,{children:"Cette expression consid\xe8re l'image plac\xe9e dans MonImage, la d\xe9place de 50 pixels vers la droite, et retourne l'image r\xe9sultante."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"->[Personnes]Nom"}),(0,r.jsx)(n.td,{children:"Pointer"}),(0,r.jsx)(n.td,{children:"Cette expression retourne un pointeur vers le champ [Amis]Nom."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Table(1)"}),(0,r.jsx)(n.td,{children:"Pointer"}),(0,r.jsx)(n.td,{children:"C'est une commande qui retourne un pointeur vers la premi\xe8re table."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"JSON Parse (MaChaine)"}),(0,r.jsx)(n.td,{children:"Object"}),(0,r.jsx)(n.td,{children:"C'est une commande qui retourne MaChaine sous forme d'objet (si format ad\xe9quat)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"JSON Parse (MonTabJSON)"}),(0,r.jsx)(n.td,{children:"Collection"}),(0,r.jsx)(n.td,{children:"C'est une commande qui retourne MonTabJSON sous forme de collection (si format ad\xe9quat)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Form.pageNumber"}),(0,r.jsx)(n.td,{children:"Propri\xe9t\xe9 objet"}),(0,r.jsx)(n.td,{children:"Une propri\xe9t\xe9 objet est une expression qui peut \xeatre de tout type"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Col[5]"}),(0,r.jsx)(n.td,{children:"\xc9l\xe9ment de collection"}),(0,r.jsx)(n.td,{children:"Un \xe9l\xe9ment de collection est une expression qui peut \xeatre de tout type"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"$entitySel[0]"}),(0,r.jsx)(n.td,{children:"Entity"}),(0,r.jsxs)(n.td,{children:["Un \xe9l\xe9ment d'une s\xe9lection d'entit\xe9 ORDA est une expression de type entit\xe9. Ce type d'expression n'est ",(0,r.jsx)(n.strong,{children:"pas affectable"})]})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"Expressions-assignables-et-non-assignables",children:"Expressions assignables et non-assignables"}),"\n",(0,r.jsxs)(n.p,{children:['Une expression peut simplement \xeatre une constante litt\xe9rale, telle que le chiffre 4 ou la cha\xeene "Hello", ou une variable telle que ',(0,r.jsx)(n.code,{children:"$myButton"}),". Elle peut \xe9galement utiliser des op\xe9rateurs. Par exemple, 4 + 2 est une expression qui utilise l'op\xe9rateur d'addition pour additionner deux nombres et renvoyer le r\xe9sultat 6. Dans tous les cas, ces expressions sont ",(0,r.jsx)(n.strong,{children:"non-assignables"}),", ce qui signifie que vous ne pouvez pas leur affecter de valeur. Dans 4D, les expressions peuvent \xeatre ",(0,r.jsx)(n.strong,{children:"assignables"}),". Une expression est assignable quand elle peut \xeatre utilis\xe9e \xe0 gauche de l'op\xe9rateur d'assignation. Par exemple :"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:'//La variable $myVar est assignable, vous pouvez \xe9crire :  \n$myVar:="Hello" //assigner "Hello" \xe0 myVar\n//Form.pageNumber est assignable, vous pouvez \xe9crire :  \nForm.pageNumber:=10 //assigne 10 \xe0 Form.pageNumber\n//Form.pageTotal-Form.pageNumber n\'est pas assignable :\nForm.pageTotal- Form.pageNumber:=10 //erreur, non assignable\n'})}),"\n",(0,r.jsxs)(n.p,{children:["En g\xe9n\xe9ral, les expressions qui utilisent un op\xe9rateur ne sont pas assignables. Par exemple, ",(0,r.jsx)(n.code,{children:'[Personne] Pr\xe9nom " " +[Personne]Nom'})," n'est pas assignable."]}),"\n",(0,r.jsx)(n.h2,{id:"Pointeurs",children:"Pointeurs"}),"\n",(0,r.jsx)(n.p,{children:"Le langage 4D fournit une mise en oeuvre avanc\xe9e des pointeurs, pour vous permettre d'\xe9crire un code puissant et modulaire. Vous pouvez utiliser des pointeurs pour r\xe9f\xe9rencer des tables, des champs, des variables, des tableaux et des \xe9l\xe9ments de tableaux."}),"\n",(0,r.jsx)(n.p,{children:'Un pointeur sur un \xe9l\xe9ment est cr\xe9\xe9 en ajoutant un symbole "->" avant le nom de l\'\xe9l\xe9ment, et peut \xeatre d\xe9r\xe9f\xe9renc\xe9 en ajoutant le symbole "->" apr\xe8s le nom du pointeur.'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:'MaVar:="Bonjour"\nMonPointeur->->MaVar\nALERT(MonPointeur->)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"Commentaires",children:"Commentaires"}),"\n",(0,r.jsx)(n.p,{children:"Les commentaires sont des lignes d\u2019instructions inactives. Ces lignes ne sont pas interpr\xe9t\xe9es par le programme (4D n\u2019applique aucun style sp\xe9cifique \xe0 l\u2019int\xe9rieur de la ligne de commentaire) et ne sont pas ex\xe9cut\xe9es lorsque la m\xe9thode est appel\xe9e."}),"\n",(0,r.jsx)(n.p,{children:"Voici deux mani\xe8res de cr\xe9er des commentaires :"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"//"})," pour cr\xe9er une ligne de commentaire"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/*...*/"})," pour les blocs de commentaire en ligne et multi-lignes."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Les deux styles de commentaires peuvent \xeatre utilis\xe9s simultan\xe9ment."}),"\n",(0,r.jsx)(n.h4,{id:"Ligne-de-commentaire-",children:"Ligne de commentaire (//)"}),"\n",(0,r.jsxs)(n.p,{children:["Ins\xe9rez les caract\xe8res ",(0,r.jsx)(n.code,{children:"//"})," au d\xe9but de la ligne ou apr\xe8s une instruction pour ajouter une ligne de commentaire. Voici un exemple :"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:"//Ceci est un commentaire \nFor($vCounter;1;100) //D\xe9but de la boucle\n  //commentaire\n  //commentaire\n  //commentaire\n  End for\n"})}),"\n",(0,r.jsx)(n.h4,{id:"Commentaires-en-ligne-ou-multi-lignes-",children:"Commentaires en ligne ou multi-lignes (/**/)"}),"\n",(0,r.jsxs)(n.p,{children:["Entourez le contenu avec des caract\xe8res ",(0,r.jsx)(n.code,{children:"/*"})," ... ",(0,r.jsx)(n.code,{children:"*/"})," pour cr\xe9er des commentaires en ligne ou des blocs de commentaires multilignes. Les blocs de commentaire en ligne et multi-lignes commencent par ",(0,r.jsx)(n.code,{children:"/*"})," et se terminent par ",(0,r.jsx)(n.code,{children:"*/"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Les ",(0,r.jsx)(n.strong,{children:"lignes de commentaires en ligne"})," - peuvent \xeatre ins\xe9r\xe9es n'importe o\xf9 dans le code. Voici un exemple :"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:"For /* ligne de commentaire */ ($vCounter;1;100)\n ...\nEnd for\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Les ",(0,r.jsx)(n.strong,{children:"blocs de commentaires multi-lignes"})," permettent de commenter un nombre illimit\xe9 de lignes. Les blocs de commentaires peuvent \xeatre imbriqu\xe9s (ce qui est utile, \xe9tant donn\xe9 que l'\xe9diteur de code 4D prend en charge les blocs condens\xe9s). Voici un exemple :"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:"For ($vCounter;1;100)\n/*\ncomments  \n /*\n other comments\n */\n*/\n...\nEnd for\n"})})]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},221020:(e,n,s)=>{var r=s(296540),t=Symbol.for("react.element"),l=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,o=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a={key:!0,ref:!0,__self:!0,__source:!0};function d(e,n,s){var r,l={},d=null,u=null;for(r in void 0!==s&&(d=""+s),void 0!==n.key&&(d=""+n.key),void 0!==n.ref&&(u=n.ref),n)i.call(n,r)&&!a.hasOwnProperty(r)&&(l[r]=n[r]);if(e&&e.defaultProps)for(r in n=e.defaultProps)void 0===l[r]&&(l[r]=n[r]);return{$$typeof:t,type:e,key:d,ref:u,props:l,_owner:o.current}}n.Fragment=l,n.jsx=d,n.jsxs=d},474848:(e,n,s)=>{e.exports=s(221020)},816148:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/helloworld-3e6e70b5b735baa9c97019730d06bfdd.png"},28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var r=s(296540);const t={},l=r.createContext(t);function i(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);