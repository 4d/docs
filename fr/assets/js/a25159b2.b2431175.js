"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["4972"],{253711:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>l,toc:()=>c,default:()=>h,metadata:()=>s,assets:()=>a,contentTitle:()=>d});var s=JSON.parse('{"id":"ORDA/orda-events","title":"ORDA Events","description":"Historique","source":"@site/i18n/fr/docusaurus-plugin-content-docs/version-20-R10/ORDA/orda-events.md","sourceDirName":"ORDA","slug":"/ORDA/orda-events","permalink":"/docs/fr/ORDA/orda-events","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20ORDA%2Forda-events.md%20(20-R10)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"20-R10","frontMatter":{"id":"orda-events","title":"ORDA Events"},"sidebar":"docs","previous":{"title":"Classes du mod\xe8le de donn\xe9es","permalink":"/docs/fr/ORDA/ordaClasses"},"next":{"title":"Travailler avec les donn\xe9es","permalink":"/docs/fr/ORDA/entities"}}'),i=n(785893),r=n(250065);let l={id:"orda-events",title:"ORDA Events"},d=void 0,a={},c=[{value:"Vue d\u2019ensemble",id:"vue-densemble",level:2},{value:"Event level",id:"event-level",level:3},{value:"Execution in remote configurations",id:"execution-in-remote-configurations",level:3},{value:"Summary table",id:"summary-table",level:3},{value:"<em>event</em> parameter",id:"event-parameter",level:2},{value:"Event function description",id:"event-function-description",level:2},{value:"<code>Function event touched</code>",id:"function-event-touched",level:3},{value:"Syntaxe",id:"syntaxe",level:4},{value:"Exemple 1",id:"exemple-1",level:4},{value:"Exemple 2",id:"exemple-2",level:4}];function o(e){let t={a:"a",admonition:"admonition",code:"code",details:"details",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",summary:"summary",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.details,{children:[(0,i.jsx)(t.summary,{children:"Historique"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Release"}),(0,i.jsx)(t.th,{children:"Modifications"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"20 R10"}),(0,i.jsx)(t.td,{children:"Ajout"})]})})]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"ORDA events are functions that are automatically invoked by ORDA each time entities and entity attributes are manipulated (added, deleted, or modified). You can write very simple events, and then make them more sophisticated."}),"\n",(0,i.jsx)(t.p,{children:"You cannot directly trigger event function execution. Events are called automatically by ORDA based on user actions or operations performed through code on entities and their attributes."}),"\n",(0,i.jsx)(t.admonition,{title:"Compatibility note",type:"info",children:(0,i.jsx)(t.p,{children:"ORDA events in the datastore are equivalent to triggers in the 4D database. However, actions triggered at the 4D database level using the 4D classic language commands or standard actions do not trigger ORDA events."})}),"\n",(0,i.jsx)(t.h2,{id:"vue-densemble",children:"Vue d\u2019ensemble"}),"\n",(0,i.jsx)(t.h3,{id:"event-level",children:"Event level"}),"\n",(0,i.jsxs)(t.p,{children:["A event function is always defined in the ",(0,i.jsx)(t.a,{href:"/docs/fr/ORDA/ordaClasses#entity-class",children:"Entity class"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["It can be set at the ",(0,i.jsx)(t.strong,{children:"entity"})," level and/or the ",(0,i.jsx)(t.strong,{children:"attribute"})," level (it includes ",(0,i.jsx)(t.a,{href:"/docs/fr/ORDA/ordaClasses#computed-attributes",children:(0,i.jsx)(t.strong,{children:"computed attributes"})}),"). In the first case, it will be triggered for any attributes of the entity; on the other case, it will only be triggered for the targeted attribute."]}),"\n",(0,i.jsx)(t.p,{children:"For the same event, you can define different functions for different attributes."}),"\n",(0,i.jsx)(t.p,{children:"You can also define the same event at both attribute and entity levels. The attribute event is called first and then the entity event."}),"\n",(0,i.jsx)(t.h3,{id:"execution-in-remote-configurations",children:"Execution in remote configurations"}),"\n",(0,i.jsx)(t.p,{children:"Usually, ORDA events are executed on the server."}),"\n",(0,i.jsxs)(t.p,{children:["In client/server configuration however, the ",(0,i.jsx)(t.code,{children:"touched()"})," event function can be executed on the ",(0,i.jsx)(t.strong,{children:"server or the client"}),", depending on the use of ",(0,i.jsx)(t.a,{href:"/docs/fr/ORDA/ordaClasses#local-functions",children:(0,i.jsx)(t.code,{children:"local"})})," keyword. A specific implementation on the client side allows the triggering of the event on the client."]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["ORDA ",(0,i.jsx)(t.a,{href:"/docs/fr/ORDA/ordaClasses#class-constructor",children:(0,i.jsx)(t.code,{children:"constructor()"})})," functions are always executed on the client."]})}),"\n",(0,i.jsxs)(t.p,{children:["With other remote configurations (i.e. Qodly applications, ",(0,i.jsx)(t.a,{href:"/docs/fr/REST/REST_requests",children:"REST API requests"}),", or requests through ",(0,i.jsx)(t.a,{href:"/docs/fr/commands/open-datastore",children:(0,i.jsx)(t.code,{children:"Open datastore"})}),"), the ",(0,i.jsx)(t.code,{children:"touched()"})," event function is always executed ",(0,i.jsx)(t.strong,{children:"server-side"}),'. It means that you have to make sure the server can "see" that an attribute has been touched to trigger the event (see below).']}),"\n",(0,i.jsx)(t.h3,{id:"summary-table",children:"Summary table"}),"\n",(0,i.jsx)(t.p,{children:"The following table lists ORDA events along with their rules."}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Ev\xe9nement"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Niveau"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Function name"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"(C/S) Executed on"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Entity instantiation"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Entity"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.a,{href:"/docs/fr/ORDA/ordaClasses#class-constructor-1",children:(0,i.jsx)(t.code,{children:"constructor()"})})}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"client"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Attribute touched"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Attribut"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"event touched <attrName>()"})}),(0,i.jsxs)(t.td,{style:{textAlign:"center"},children:["Depends on ",(0,i.jsx)(t.a,{href:"/docs/fr/ORDA/ordaClasses#local-functions",children:(0,i.jsx)(t.code,{children:"local"})})," keyword"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"}}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Entity"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"event touched()"})}),(0,i.jsxs)(t.td,{style:{textAlign:"center"},children:["Depends on ",(0,i.jsx)(t.a,{href:"/docs/fr/ORDA/ordaClasses#local-functions",children:(0,i.jsx)(t.code,{children:"local"})})," keyword"]})]})]})]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.a,{href:"/docs/fr/ORDA/ordaClasses#class-constructor-1",children:(0,i.jsx)(t.code,{children:"constructor()"})})," function is not actually an event function but is always called when a new entity is instantiated."]})}),"\n",(0,i.jsxs)(t.h2,{id:"event-parameter",children:[(0,i.jsx)(t.em,{children:"event"})," parameter"]}),"\n",(0,i.jsxs)(t.p,{children:["Event functions accept a single ",(0,i.jsx)(t.em,{children:"event"})," object as parameter. When the function is called, the parameter is filled with several properties:"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Nom de propri\xe9t\xe9"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Disponibilit\xe9"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"kind"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Toujours"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"String"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:'Event name ("touched")'})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.em,{children:"attributeName"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Only for events involving an attribute"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"String"}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:["Attribute name (",(0,i.jsx)(t.em,{children:"e.g."}),' "firstname")']})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.em,{children:"dataClassName"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Toujours"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"String"}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:["Dataclass name (",(0,i.jsx)(t.em,{children:"e.g."}),' "Company")']})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"event-function-description",children:"Event function description"}),"\n",(0,i.jsx)(t.h3,{id:"function-event-touched",children:(0,i.jsx)(t.code,{children:"Function event touched"})}),"\n",(0,i.jsx)(t.h4,{id:"syntaxe",children:"Syntaxe"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-4d",children:"{local} Function event touched($event : Object)\n{local} Function event touched <attributeName>($event : Object)\n// code\n"})}),"\n",(0,i.jsx)(t.p,{children:"This event is triggered each time a value is modified in the entity."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"if you defined the function at the entity level (first syntax), it is triggered for modifications on any attribute of the entity."}),"\n",(0,i.jsx)(t.li,{children:"if you defined the function at the attribute level (second syntax), it is triggered only for modifications on this attribute."}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"This event is triggered as soon as the 4D Server / 4D engine can detect a modification of attribute value which can be due to the following actions:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["in ",(0,i.jsxs)(t.strong,{children:["client/server with the ",(0,i.jsxs)(t.a,{href:"/docs/fr/ORDA/ordaClasses#local-functions",children:[(0,i.jsx)(t.code,{children:"local"})," keyword"]})]})," or in ",(0,i.jsx)(t.strong,{children:"4D single-user"}),":\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"the user sets a value on a 4D form,"}),"\n",(0,i.jsxs)(t.li,{children:["the 4D code makes an assignment with the ",(0,i.jsx)(t.code,{children:":="})," operator. The event is also triggered in case of self-assignment (",(0,i.jsx)(t.code,{children:"$entity.attribute:=$entity.attribute"}),")."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["in ",(0,i.jsxs)(t.strong,{children:["client/server without the ",(0,i.jsx)(t.code,{children:"local"})," keyword"]}),": some 4D code that makes an assignment with the ",(0,i.jsx)(t.code,{children:":="})," operator is ",(0,i.jsx)(t.a,{href:"/docs/fr/commands/execute-on-server",children:"executed on the server"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["in ",(0,i.jsxs)(t.strong,{children:["client/server without the ",(0,i.jsx)(t.code,{children:"local"})," keyword"]}),", in ",(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.a,{href:"https://developer.qodly.com/docs",children:"Qodly application"})})," and ",(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.a,{href:"/docs/fr/commands/open-datastore",children:"remote datastore"})}),": the entity is received on 4D Server while calling an ORDA function (on the entity or with the entity as parameter). It means that you might have to implement a ",(0,i.jsx)(t.em,{children:"refresh"})," or ",(0,i.jsx)(t.em,{children:"preview"})," function on the remote application that sends an ORDA request to the server and triggers the event."]}),"\n",(0,i.jsxs)(t.li,{children:["with the REST server: the value is received on the REST server with a ",(0,i.jsx)(t.a,{href:"/docs/fr/REST/method#methodupdate",children:"REST request"})," (",(0,i.jsx)(t.code,{children:"$method=update"}),")"]}),"\n"]}),"\n",(0,i.jsx)(t.admonition,{type:"note"}),"\n",(0,i.jsxs)(t.p,{children:["The function receives an ",(0,i.jsxs)(t.a,{href:"#event-parameter",children:[(0,i.jsx)(t.em,{children:"event"})," object"]})," as parameter."]}),"\n",(0,i.jsxs)(t.p,{children:["If this event ",(0,i.jsx)(t.a,{href:"/docs/fr/commands/throw",children:"throws"})," an error, it will not stop the undergoing action."]}),"\n",(0,i.jsxs)(t.admonition,{type:"note",children:[(0,i.jsx)(t.p,{children:"This event is also triggered:"}),(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["when attributes are assigned by the ",(0,i.jsx)(t.a,{href:"/docs/fr/ORDA/ordaClasses#class-constructor-1",children:(0,i.jsx)(t.code,{children:"constructor()"})})," event,"]}),"\n",(0,i.jsxs)(t.li,{children:["when attributes are edited through the ",(0,i.jsx)(t.a,{href:"/docs/fr/Admin/dataExplorer",children:"Data Explorer"}),"."]}),"\n"]})]}),"\n",(0,i.jsx)(t.h4,{id:"exemple-1",children:"Exemple 1"}),"\n",(0,i.jsx)(t.p,{children:"You want to uppercase all text attributes of an entity when it is updated."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-4d",children:"    //ProductsEntity class\nFunction event touched($event : Object)\n	\n	If (Value type(This[$event.attributeName])=Is text)\n		This[$event.attributeName]:=Uppercase(This[$event.attributeName])\n	End if \n"})}),"\n",(0,i.jsx)(t.h4,{id:"exemple-2",children:"Exemple 2"}),"\n",(0,i.jsxs)(t.p,{children:['The "touched" event is useful with ',(0,i.jsx)(t.a,{href:"/docs/fr/ORDA/ordaClasses#computed-attributes",children:"computed attributes"}),", when you want to store a state depending on a comparison on the current value of underlying attributes. Par exemple :"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-4d",children:"exposed Function get sameDay(): Boolean\n    return (This.departureDate = This.arrivalDate)\n"})}),"\n",(0,i.jsxs)(t.p,{children:["This code can lead to time-consuming queries because the search is sequential due to the nature of the computed attribute. Using a non-computed ",(0,i.jsx)(t.em,{children:"sameDay"})," attribute updated when other attributes are touched will save time:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-4d",children:"    //BookingEntity class\n\nFunction event touched departureDate($event : Object) \n\n    This.sameDay:=(This.departureDate = This.arrivalDate) \n//\n//\nFunction event touched arrivalDate($event : Object) \n\n    This.sameDay:=(This.departureDate = This.arrivalDate)\n\n"})})]})}function h(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},250065:function(e,t,n){n.d(t,{Z:()=>d,a:()=>l});var s=n(667294);let i={},r=s.createContext(i);function l(e){let t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);