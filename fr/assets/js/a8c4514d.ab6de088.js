"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["12675"],{979923:function(e,s,n){n.r(s),n.d(s,{frontMatter:()=>d,default:()=>u,toc:()=>l,metadata:()=>r,assets:()=>o,contentTitle:()=>a});var r=JSON.parse('{"id":"commands-legacy/assert","title":"ASSERT","description":"ASSERT ( expressionBool {; texteMessage} )","source":"@site/i18n/fr/docusaurus-plugin-content-docs/version-20-R9/commands-legacy/assert.md","sourceDirName":"commands-legacy","slug":"/commands/assert","permalink":"/docs/fr/20-R9/commands/assert","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fassert.md%20(20-R9)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"20-R9","frontMatter":{"id":"assert","title":"ASSERT","slug":"/commands/assert","displayed_sidebar":"docs"},"sidebar":"docs","previous":{"title":"ABORT","permalink":"/docs/fr/20-R9/commands/abort"},"next":{"title":"Asserted","permalink":"/docs/fr/20-R9/commands/asserted"}}'),t=n(785893),i=n(250065);let d={id:"assert",title:"ASSERT",slug:"/commands/assert",displayed_sidebar:"docs"},a=void 0,o={},l=[{value:"Description",id:"description",level:2},{value:"Exemple 1",id:"exemple-1",level:2},{value:"Exemple 2",id:"exemple-2",level:2},{value:"Voir aussi",id:"voir-aussi",level:2},{value:"Propri\xe9t\xe9s",id:"propri\xe9t\xe9s",level:2}];function c(e){let s={a:"a",br:"br",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"ASSERT"})," ( ",(0,t.jsx)(s.em,{children:"expressionBool"})," {; ",(0,t.jsx)(s.em,{children:"texteMessage"}),"} )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Param\xe8tre"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"expressionBool"}),(0,t.jsx)(s.td,{children:"Boolean"}),(0,t.jsx)(s.td,{children:"\u2192"}),(0,t.jsx)(s.td,{children:"Expression bool\xe9enne"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"texteMessage"}),(0,t.jsx)(s.td,{children:"Text"}),(0,t.jsx)(s.td,{children:"\u2192"}),(0,t.jsx)(s.td,{children:"Texte du message d\u2019erreur"})]})]})]}),"\n",(0,t.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,t.jsxs)(s.p,{children:["La commande ",(0,t.jsx)(s.strong,{children:"ASSERT"})," \xe9value l'assertion ",(0,t.jsx)(s.em,{children:"expressionBool"})," pass\xe9e en param\xe8tre et, si elle retourne faux, interrompt l'ex\xe9cution du code en affichant une erreur. La commande fonctionne en mode interpr\xe9t\xe9 et en mode compil\xe9."]}),"\n",(0,t.jsxs)(s.p,{children:['Si l\u2019expression est vraie, il ne se passe rien. Si l\u2019expression est fausse, la commande d\xe9clenche l\u2019erreur -10518 et affiche par d\xe9faut le texte de l\u2019assertion pr\xe9c\xe9d\xe9 du message "Fausse assertion :". Vous pouvez intercepter cette erreur via une m\xe9thode install\xe9e par la commande ',(0,t.jsx)(s.a,{href:"/docs/fr/20-R9/commands/on-err-call",children:"ON ERR CALL"}),", afin par exemple d\u2019alimenter un fichier d\u2019historique."]}),"\n",(0,t.jsxs)(s.p,{children:["Optionnellement, vous pouvez passer un param\xe8tre ",(0,t.jsx)(s.em,{children:"texteMessage"})," afin d'afficher un message d'erreur personnalis\xe9 au lieu du texte de l'assertion."]}),"\n",(0,t.jsxs)(s.p,{children:["Une assertion est une instruction ins\xe9r\xe9e dans le code d'une m\xe9thode et charg\xe9e de d\xe9tecter des \xe9ventuelles anomalies au cours de son ex\xe9cution. Le principe consiste \xe0 v\xe9rifier qu\u2019une expression est vraie \xe0 un instant donn\xe9 et, dans le cas contraire, produire une exception. Les assertions sont surtout utilis\xe9es pour d\xe9tecter des cas qui ne devraient jamais arriver en temps normal. Elles servent donc essentiellement \xe0 d\xe9tecter des bogues de programmation. Il est possible d\u2019activer ou de d\xe9sactiver globalement toutes les assertions d\u2019une application (par exemple en fonction du type de version) via la commande ",(0,t.jsx)(s.a,{href:"/docs/fr/20-R9/commands/set-assert-enabled",children:"SET ASSERT ENABLED"}),". Pour plus d\u2019informations sur les assertions en programmation, reportez-vous \xe0 l\u2019article (en anglais) qui leur est consacr\xe9 sur Wikipedia : ",(0,t.jsx)(s.a,{href:"http://en.wikipedia.org/wiki/Assertion%5F%28computing%29",children:"http://en.wikipedia.org/wiki/Assertion_(computing)"})]}),"\n",(0,t.jsx)(s.h2,{id:"exemple-1",children:"Exemple 1"}),"\n",(0,t.jsx)(s.p,{children:"Avant d\u2019effectuer des op\xe9rations sur un enregistrement, le d\xe9veloppeur souhaite s\u2019assurer qu\u2019il est bien charg\xe9 en lecture \xe9criture :"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-4d",children:"\xa0READ WRITE([Table 1])\n\xa0LOAD RECORD([Table 1])\n\xa0ASSERT(Not(Locked([Table 1])))\xa0\xa0//d\xe9clenche l'erreur\xa0 -10518\xa0 si l'enregistrement est verrouill\xe9\n"})}),"\n",(0,t.jsx)(s.h2,{id:"exemple-2",children:"Exemple 2"}),"\n",(0,t.jsx)(s.p,{children:"Une assertion peut permettre de tester les param\xe8tres pass\xe9s \xe0 une m\xe9thode projet pour d\xe9tecter des valeurs aberrantes. Dans cet exemple, un message d\u2019alerte personnalis\xe9 est utilis\xe9."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-4d",children:'\xa0\xa0// M\xe9thode qui retourne le num\xe9ro d\'un client en fonction de son nom pass\xe9 dans\xa0 $name\n\xa0var $name : Text\xa0// Nom du client\n\xa0ASSERT($name#"";"Recherche d\u2019un nom de client vide")\n\xa0\xa0\xa0\xa0\xa0// Un nom vide dans ce cas est une valeur aberrante\n\xa0\xa0\xa0\xa0\xa0// Si assertion fausse, affichera dans la bo\xeete de dialogue d\'erreur :\n\xa0\xa0\xa0\xa0\xa0// "Fausse assertion : Recherche d\u2019un nom de client vide"\n'})}),"\n",(0,t.jsx)(s.h2,{id:"voir-aussi",children:"Voir aussi"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"/docs/fr/20-R9/commands/asserted",children:"Asserted"}),(0,t.jsx)(s.br,{}),"\n",(0,t.jsx)(s.a,{href:"/docs/fr/20-R9/commands/get-assert-enabled",children:"Get assert enabled"}),(0,t.jsx)(s.br,{}),"\n",(0,t.jsx)(s.a,{href:"/docs/fr/20-R9/commands/set-assert-enabled",children:"SET ASSERT ENABLED"})]}),"\n",(0,t.jsx)(s.h2,{id:"propri\xe9t\xe9s",children:"Propri\xe9t\xe9s"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{}),(0,t.jsx)(s.th,{})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Num\xe9ro de commande"}),(0,t.jsx)(s.td,{children:"1129"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Thread safe"}),(0,t.jsx)(s.td,{children:"\u2713"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Modifie les variables"}),(0,t.jsx)(s.td,{children:"error"})]})]})]})]})}function u(e={}){let{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},250065:function(e,s,n){n.d(s,{Z:()=>a,a:()=>d});var r=n(667294);let t={},i=r.createContext(t);function d(e){let s=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);