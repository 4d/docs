"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[89738],{288802:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>c});var r=s(474848),i=s(28453);const l={id:"get-field-properties",title:"GET FIELD PROPERTIES",slug:"/commands/get-field-properties",displayed_sidebar:"docs"},t=void 0,d={id:"commands-legacy/get-field-properties",title:"GET FIELD PROPERTIES",description:"GET FIELD PROPERTIES ( ptrChp\xa0|\xa0numTable {; numChamp}; champType {; champLong {; index\xe9 {; unique {; invisible}}}} )",source:"@site/i18n/fr/docusaurus-plugin-content-docs/version-20-R7/commands-legacy/get-field-properties.md",sourceDirName:"commands-legacy",slug:"/commands/get-field-properties",permalink:"/docs/fr/commands/get-field-properties",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fget-field-properties.md%20(20-R7)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R7",frontMatter:{id:"get-field-properties",title:"GET FIELD PROPERTIES",slug:"/commands/get-field-properties",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"GET FIELD ENTRY PROPERTIES",permalink:"/docs/fr/commands/get-field-entry-properties"},next:{title:"GET MISSING TABLE NAMES",permalink:"/docs/fr/commands/get-missing-table-names"}},a={},c=[{value:"Description",id:"description",level:4},{value:"Exemple 1",id:"exemple-1",level:4},{value:"Exemple 2",id:"exemple-2",level:4},{value:"Voir aussi",id:"voir-aussi",level:4}];function o(e){const n={a:"a",br:"br",code:"code",em:"em",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"GET FIELD PROPERTIES"})," ( ptrChp\xa0|\xa0numTable {; ",(0,r.jsx)(n.em,{children:"numChamp"}),"}; ",(0,r.jsx)(n.em,{children:"champType"})," {; ",(0,r.jsx)(n.em,{children:"champLong"})," {; ",(0,r.jsx)(n.em,{children:"index\xe9"})," {; ",(0,r.jsx)(n.em,{children:"unique"})," {; ",(0,r.jsx)(n.em,{children:"invisible"}),"}}}} )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Param\xe8tre"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"ptrChp\xa0|\xa0numTable"}),(0,r.jsx)(n.td,{children:"Pointeur, Entier long"}),(0,r.jsx)(n.td,{children:"\u2192"}),(0,r.jsx)(n.td,{children:"Pointeur de champ ou Num\xe9ro de table"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"numChamp"}),(0,r.jsx)(n.td,{children:"Integer"}),(0,r.jsx)(n.td,{children:"\u2192"}),(0,r.jsx)(n.td,{children:"Num\xe9ro de champ si un num\xe9ro de table est pass\xe9 en premier param\xe8tre"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"champType"}),(0,r.jsx)(n.td,{children:"Integer"}),(0,r.jsx)(n.td,{children:"\u2190"}),(0,r.jsx)(n.td,{children:"Type de champ"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"champLong"}),(0,r.jsx)(n.td,{children:"Integer"}),(0,r.jsx)(n.td,{children:"\u2190"}),(0,r.jsx)(n.td,{children:"Longueur du champ (si alphanum\xe9rique)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"index\xe9"}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:"\u2190"}),(0,r.jsx)(n.td,{children:"Vrai = Index\xe9, Faux = Non index\xe9"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"unique"}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:"\u2190"}),(0,r.jsx)(n.td,{children:"Vrai = Unique, Faux = Non unique"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"invisible"}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:"\u2190"}),(0,r.jsx)(n.td,{children:"Vrai = Invisible, Faux = Visible"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(n.p,{children:["La commande ",(0,r.jsx)(n.strong,{children:"GET FIELD PROPERTIES"})," retourne des informations sur le champ d\xe9sign\xe9 par ",(0,r.jsx)(n.em,{children:"numTable"})," et ",(0,r.jsx)(n.em,{children:"numChamp"})," ou par ",(0,r.jsx)(n.em,{children:"ptrChp"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Vous pouvez soit passer :"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["les num\xe9ros de table et de champ dans ",(0,r.jsx)(n.em,{children:"numTable"})," et ",(0,r.jsx)(n.em,{children:"numChamp"})]}),"\n",(0,r.jsxs)(n.li,{children:["ou un pointeur vers le champ dans ",(0,r.jsx)(n.em,{children:"ptrChp"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Apr\xe8s l'appel :"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Le param\xe8tre ",(0,r.jsx)(n.em,{children:"champType"})," retourne le type du champ. Le param\xe8tre variable ",(0,r.jsx)(n.em,{children:"champType"})," re\xe7oit l'une des valeurs pr\xe9d\xe9finies par les constantes de 4D (th\xe8me ",(0,r.jsx)(n.em,{children:"Types champs et variables"}),") :",(0,r.jsx)(n.br,{}),"\n| Constante          | Type        | Valeur |",(0,r.jsx)(n.br,{}),"\n| ------------------ | ----------- | ------ |",(0,r.jsx)(n.br,{}),"\n| Is alpha field     | Entier long | 0      |",(0,r.jsx)(n.br,{}),"\n| Is BLOB            | Entier long | 30     |",(0,r.jsx)(n.br,{}),"\n| Is Boolean         | Entier long | 6      |",(0,r.jsx)(n.br,{}),"\n| Is date            | Entier long | 4      |",(0,r.jsx)(n.br,{}),"\n| Is float           | Entier long | 35     |",(0,r.jsx)(n.br,{}),"\n| Is integer         | Entier long | 8      |",(0,r.jsx)(n.br,{}),"\n| Is integer 64 bits | Entier long | 25     |",(0,r.jsx)(n.br,{}),"\n| Is longint         | Entier long | 9      |",(0,r.jsx)(n.br,{}),"\n| Is object          | Entier long | 38     |",(0,r.jsx)(n.br,{}),"\n| Is picture         | Entier long | 3      |",(0,r.jsx)(n.br,{}),"\n| Is real            | Entier long | 1      |",(0,r.jsx)(n.br,{}),"\n| Is subtable        | Entier long | 7      |",(0,r.jsx)(n.br,{}),"\n| Is text            | Entier long | 2      |",(0,r.jsx)(n.br,{}),"\n| Is time            | Entier long | 11     |"]}),"\n",(0,r.jsxs)(n.li,{children:["Le param\xe8tre ",(0,r.jsx)(n.em,{children:"champLong"})," retourne la longueur du champ si celui-ci est de type Alpha (ce qui signifie que vous obtenez *champType=*Is alpha field). La valeur de ",(0,r.jsx)(n.em,{children:"champLong"})," n'est pas significative pour les autres types de champ."]}),"\n",(0,r.jsxs)(n.li,{children:["Le param\xe8tre ",(0,r.jsx)(n.em,{children:"index\xe9"})," retourne Vrai si le champ est index\xe9, Faux sinon. La valeur de ",(0,r.jsx)(n.em,{children:"index\xe9"})," est significative pour les champs de type Alphanum\xe9rique, Entier, Entier long, R\xe9el, Date, Heure et Bool\xe9en."]}),"\n",(0,r.jsxs)(n.li,{children:["Le param\xe8tre ",(0,r.jsx)(n.em,{children:"unique"})," retourne Vrai si le champ dispose de l\u2019attribut \u201cUnique\u201d, Faux sinon."]}),"\n",(0,r.jsxs)(n.li,{children:["Le param\xe8tre ",(0,r.jsx)(n.em,{children:"invisible"})," retourne Vrai si le champ dispose de l\u2019attribut \u201cInvisible\u201d, Faux sinon. L\u2019attribut Invisible permet de masquer le champ dans les \xe9diteurs standard de 4D (\xe9tiquettes, graphes...)."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"exemple-1",children:"Exemple 1"}),"\n",(0,r.jsxs)(n.p,{children:["Dans l'exemple suivant, les variables ",(0,r.jsx)(n.em,{children:"vType"}),", ",(0,r.jsx)(n.em,{children:"vLong"}),", ",(0,r.jsx)(n.em,{children:"vIndex"}),", ",(0,r.jsx)(n.em,{children:"vUnique"})," et ",(0,r.jsx)(n.em,{children:"vInvisible"})," prennent pour valeur les propri\xe9t\xe9s du troisi\xe8me champ de la premi\xe8re table :"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:"\xa0GET FIELD PROPERTIES(1;3;vType;vLong;vIndex;vUnique;vInvisible)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"exemple-2",children:"Exemple 2"}),"\n",(0,r.jsxs)(n.p,{children:["L'exemple suivant r\xe9cup\xe8re dans les variables ",(0,r.jsx)(n.em,{children:"vType"}),", ",(0,r.jsx)(n.em,{children:"vLong"}),", ",(0,r.jsx)(n.em,{children:"vIndex"}),", ",(0,r.jsx)(n.em,{children:"vUnique"})," et ",(0,r.jsx)(n.em,{children:"vInvisible"})," les propri\xe9t\xe9s du champ [Table3]Champ2 :"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:"\xa0GET FIELD PROPERTIES(->[Table3]Champ2;vType;vLong;vIndex;vUnique;vInvisible)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"voir-aussi",children:"Voir aussi"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/docs/fr/commands/field",children:"Field"}),(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.a,{href:"/docs/fr/commands/field-name",children:"Field name"}),(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.a,{href:"/docs/fr/commands/set-index",children:"SET INDEX"})]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>d});var r=s(296540);const i={},l=r.createContext(i);function t(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);