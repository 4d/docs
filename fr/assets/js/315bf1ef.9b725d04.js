"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[76848],{485521:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var s=t(474848),r=t(28453);const i={id:"idle",title:"IDLE",slug:"/commands/idle",displayed_sidebar:"docs"},o=void 0,d={id:"commands-legacy/idle",title:"IDLE",description:"IDLE",source:"@site/i18n/fr/docusaurus-plugin-content-docs/version-20-R7/commands-legacy/idle.md",sourceDirName:"commands-legacy",slug:"/commands/idle",permalink:"/docs/fr/commands/idle",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fidle.md%20(20-R7)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R7",frontMatter:{id:"idle",title:"IDLE",slug:"/commands/idle",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"Compile project",permalink:"/docs/fr/commands/compile-project"},next:{title:"ACCEPT",permalink:"/docs/fr/commands/accept"}},a={},c=[{value:"Description",id:"description",level:4},{value:"Exemple",id:"exemple",level:4},{value:"Voir aussi",id:"voir-aussi",level:4}];function l(e){const n={a:"a",br:"br",code:"code",em:"em",h4:"h4",p:"p",pre:"pre",strong:"strong",table:"table",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"IDLE"})}),"\n\n\n\n\n\n\n\n",(0,s.jsx)(n.table,{children:(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Ne requiert pas de param\xe8tre"}),(0,s.jsx)(n.th,{})]})})}),"\n",(0,s.jsx)(n.h4,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"IDLE"})," est destin\xe9e uniquement \xe0 une utilisation avec le compilateur. En effet, seul le moteur de 4D peut d\xe9tecter un \xe9v\xe9nement. Il \xe9tait donc n\xe9cessaire, dans le cadre d'une base compil\xe9e, qu'une routine puisse interroger le moteur de 4D afin de savoir si un \xe9v\xe9nement s'est produit. Cette commande doit donc \xeatre utilis\xe9e lorsque vous employez la commande ",(0,s.jsx)(n.a,{href:"/docs/fr/commands/on-event-call",children:"ON EVENT CALL"}),".",(0,s.jsx)(n.br,{}),"\nPar exemple, si une m\xe9thode ex\xe9cute une boucle dans laquelle aucune commande 4D n'est appel\xe9e, la boucle ne pourra pas \xeatre interrompue par un process install\xe9 \xe0 l'aide d' ",(0,s.jsx)(n.a,{href:"/docs/fr/commands/on-event-call",children:"ON EVENT CALL"}),", et l'utilisateur ne pourra pas ouvrir une autre application. Dans ce cas, ",(0,s.jsx)(n.strong,{children:"IDLE"})," doit \xeatre ins\xe9r\xe9e pour que 4D puisse intercepter les \xe9v\xe9nements. Bien entendu, n'utilisez pas ",(0,s.jsx)(n.strong,{children:"IDLE"})," si vous ne voulez aucune interruption."]}),"\n",(0,s.jsx)(n.h4,{id:"exemple",children:"Exemple"}),"\n",(0,s.jsxs)(n.p,{children:["Dans l'exemple suivant, la boucle ne se terminerait jamais dans une base compil\xe9e sans l'aide de ",(0,s.jsx)(n.strong,{children:"IDLE"})," :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-4d",children:'\xa0\xa0// M\xe9thode Traitement quelconque\n\xa0ON EVENT CALL("METHODE EVENEMENT")\n\xa0\u25cavbArr\xeat:=False\n\xa0MESSAGE("Traitement..."+Char(13)+"Tapez une touche pour interrompre l\'ex\xe9cution...")\n\xa0Repeat\n\xa0\xa0// Effectuer un traitement sans appel \xe0 une commande 4D\n\xa0\xa0\xa0\xa0IDLE\n\xa0Until(\u25cavbArr\xeat)\n\xa0ON EVENT CALL("")\n'})}),"\n",(0,s.jsx)(n.p,{children:"La m\xe9thode METHODE EVENEMENT :"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-4d",children:'\xa0\xa0// M\xe9thode METHODE EVENEMENT\n\xa0If(Undefined(Keycode))\n\xa0\xa0\xa0\xa0Keycode:=0\n\xa0End if\n\xa0If(Keycode#0)\n\xa0\xa0\xa0\xa0CONFIRM("Voulez-vous vraiment interrompre cette op\xe9ration ?")\n\xa0\xa0\xa0\xa0If(OK=1)\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\u25cavbArr\xeat:=True\n\xa0\xa0\xa0\xa0End if\n\xa0End if\n'})}),"\n",(0,s.jsx)(n.h4,{id:"voir-aussi",children:"Voir aussi"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Commandes du th\xe8me Compilateur"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.a,{href:"/docs/fr/commands/on-event-call",children:"ON EVENT CALL"})]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>d});var s=t(296540);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);