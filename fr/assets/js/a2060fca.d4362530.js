"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["74594"],{956780:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>i,toc:()=>l,default:()=>d,metadata:()=>a,assets:()=>c,contentTitle:()=>o});var a=JSON.parse('{"id":"Develop-legacy/transactions","title":"Transactions","description":"Description","source":"@site/i18n/fr/docusaurus-plugin-content-docs/version-21/Develop-legacy/transactions.md","sourceDirName":"Develop-legacy","slug":"/Develop-legacy/transactions","permalink":"/docs/fr/Develop-legacy/transactions","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20Develop-legacy%2Ftransactions.md%20(21)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"21","frontMatter":{"id":"transactions","title":"Transactions"},"sidebar":"docs","previous":{"title":"On Web Legacy Close Session database method","permalink":"/docs/fr/commands/on-web-legacy-close-session-database-method"},"next":{"title":"Balises de transformation","permalink":"/docs/fr/Tags/transformation-tags"}}'),t=s(785893),r=s(250065);let i={id:"transactions",title:"Transactions"},o=void 0,c={},l=[{value:"Description",id:"description",level:2},{value:"Exemple",id:"exemple",level:3},{value:"Suspendre des transactions",id:"suspendre-des-transactions",level:2},{value:"Principe",id:"principe",level:3},{value:"Exemple",id:"exemple-1",level:3},{value:"D\xe9tail du fonctionnement",id:"d\xe9tail-du-fonctionnement",level:3},{value:"Que se passe-t-il quand une transaction est suspendue ?",id:"que-se-passe-t-il-quand-une-transaction-est-suspendue-",level:4},{value:"Transactions suspendues et statut du process",id:"transactions-suspendues-et-statut-du-process",level:4}];function u(e){let n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,t.jsx)(n.p,{children:"Les transactions sont une s\xe9rie de modifications effectu\xe9es \xe0 l'int\xe9rieur d'un process sur des donn\xe9es reli\xe9es entre elles. Une transaction n'est sauvegard\xe9e de fa\xe7on d\xe9finitive dans la base que si la transaction est valid\xe9e. Si une transaction n'est pas compl\xe9t\xe9e, parce qu'elle est annul\xe9e ou en raison d'un quelconque \xe9v\xe9nement ext\xe9rieur, les modifications ne sont pas sauvegard\xe9es."}),"\n",(0,t.jsxs)(n.p,{children:["Pendant une transaction, toutes les modifications effectu\xe9es sur les donn\xe9es de la base dans le process sont stock\xe9es localement dans un buffer temporaire. Si la transaction est accept\xe9e avec ",(0,t.jsx)(n.a,{href:"/docs/fr/commands/validate-transaction",children:(0,t.jsx)(n.code,{children:"VALIDATE TRANSACTION"})})," ou ",(0,t.jsx)(n.a,{href:"/docs/fr/API/DataStoreClass#validatetransaction",children:(0,t.jsx)(n.code,{children:"validateTransaction()"})}),", les changements sont sauvegard\xe9s de fa\xe7on d\xe9finitive. Si la transaction est annul\xe9e avec ",(0,t.jsx)(n.a,{href:"/docs/fr/commands/cancel-transaction",children:(0,t.jsx)(n.code,{children:"CANCEL TRANSACTION"})})," ou ",(0,t.jsx)(n.a,{href:"/docs/fr/API/DataStoreClass#canceltransaction",children:(0,t.jsx)(n.code,{children:"cancelTransaction()"})}),", les changements ne sont pas sauvegard\xe9s. Dans tous les cas, ni la s\xe9lection courante ni l'enregistrement courant ne sont modifi\xe9s par les commandes de gestion des transactions."]}),"\n",(0,t.jsxs)(n.p,{children:["4D prend en charge les transactions imbriqu\xe9es, c'est-\xe0-dire les transactions sur plusieurs niveaux hi\xe9rarchiques. Le nombre de sous-transactions autoris\xe9es est illimit\xe9. La commande ",(0,t.jsx)(n.a,{href:"/docs/fr/commands/transaction-level",children:(0,t.jsx)(n.code,{children:"Transaction level"})})," permet de conna\xeetre le niveau courant de transaction dans lequel le code est ex\xe9cut\xe9. Lorsque vous utilisez des transactions imbriqu\xe9es, le r\xe9sultat de chaque sous-transaction d\xe9pend de la validation ou de l'annulation de la transaction du niveau sup\xe9rieur. Si la transaction sup\xe9rieure est valid\xe9e, les r\xe9sultats des sous-transactions sont ent\xe9rin\xe9s (validation ou annulation). En revanche, si la transaction sup\xe9rieure est annul\xe9e, toutes les sous-transactions sont annul\xe9es, quels que soient leurs sous-r\xe9sultats."]}),"\n",(0,t.jsxs)(n.p,{children:["4D inclut une fonctionnalit\xe9 vous permettant de ",(0,t.jsx)(n.a,{href:"#suspending-transactions",children:"suspendre temporairement et de r\xe9activer des transactions"})," dans votre code 4D. Lorsqu'une transaction est suspendue, vous pouvez ex\xe9cuter des op\xe9rations ind\xe9pendantes de la transaction elle-m\xeame puis la r\xe9activer afin de la valider ou de l'annuler, de fa\xe7on classique."]}),"\n",(0,t.jsx)(n.h3,{id:"exemple",children:"Exemple"}),"\n",(0,t.jsxs)(n.p,{children:["L'exemple de cette section s'appuie sur la structure pr\xe9sent\xe9e ci-dessous. C'est une base relativement simple de facturation. Les lignes de factures sont stock\xe9es dans une table appel\xe9e [Invoice Lines], qui est reli\xe9e \xe0 la table [Invoices] par une relation entre les champs [Invoices]Invoice ID et [Invoice Lines]Invoice ID. Lorsqu'une facture est ajout\xe9e, un num\xe9ro unique est calcul\xe9 avec la commande ",(0,t.jsx)(n.a,{href:"/docs/fr/commands/sequence-number",children:(0,t.jsx)(n.code,{children:"Sequence number"})}),'. Le lien entre [Invoices] et [Invoice Lines] est du type aller-retour automatique. L\'option "Mise \xe0 jour auto dans les sous-formulaires" est coch\xe9e. La lien entre [Invoice Lines] et [Parts] est manuel.']}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:s(655861).Z+"",width:"489",height:"259"})}),"\n",(0,t.jsx)(n.p,{children:"Quand un utilisateur saisit une facture, les actions suivantes doivent \xeatre ex\xe9cut\xe9es :"}),"\n",(0,t.jsx)(n.p,{children:"Ajouter un enregistrement dans la table [Invoices].\nAjouter plusieurs enregistrements dans la table [Invoice Lines].\nMettre \xe0 jour le champ [Parts]In Warehouse pour chaque pi\xe8ce figurant sur la facture."}),"\n",(0,t.jsx)(n.p,{children:"En d'autres termes, vous devez sauvegarder les donn\xe9es li\xe9es. C'est la situation type o\xf9 vous devez utiliser une transaction. Vous pourrez ainsi \xeatre certain de pouvoir soit sauvegarder tous ces enregistrements pendant l'op\xe9ration, soit annuler la transaction si un enregistrement ne peut \xeatre ajout\xe9 ou mis \xe0 jour."}),"\n",(0,t.jsx)(n.p,{children:"Si vous n'utilisez pas une transaction, vous ne pouvez pas garantir l'int\xe9grit\xe9 logique des donn\xe9es de votre base. Par exemple, si un enregistrement parmi ceux de la table [Parts] est verrouill\xe9, vous ne pourrez pas mettre \xe0 jour la quantit\xe9 stock\xe9e dans le champ [Parts]In Warehouse. Ce champ sera alors logiquement incorrect. La somme des pi\xe8ces vendues et restantes dans l'entrep\xf4t ne sera pas \xe9gale \xe0 la quantit\xe9 d'origine saisie dans l'enregistrement. Vous pouvez \xe9viter cette situation en utilisant les transactions."}),"\n",(0,t.jsx)(n.p,{children:"Il y a plusieurs fa\xe7ons d'effectuer une saisie sous transaction :"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Vous pouvez g\xe9rer les transactions en utilisant les commandes de transaction ",(0,t.jsx)(n.a,{href:"/docs/fr/commands/start-transaction",children:(0,t.jsx)(n.code,{children:"START TRANSACTION"})}),", ",(0,t.jsx)(n.a,{href:"/docs/fr/commands/validate-transaction",children:(0,t.jsx)(n.code,{children:"VALIDATE TRANSACTION"})})," et ",(0,t.jsx)(n.a,{href:"/docs/fr/commands/cancel-transaction",children:(0,t.jsx)(n.code,{children:"CANCEL TRANSACTION"})}),". Vous pouvez par exemple \xe9crire :"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-4d",children:' READ WRITE([Invoice Lines])\n READ WRITE([Parts])\n FORM SET INPUT([Invoices];"Input")\n Repeat\n    START TRANSACTION\n    ADD RECORD([Invoices])\n    If(OK=1)\n       VALIDATE TRANSACTION\n    Else\n       CANCEL TRANSACTION\n    End if\n Until(OK=0)\n READ ONLY(*)\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsxs)(n.li,{children:["Pour r\xe9duire les verrouillages des enregistrements pendant la saisie de donn\xe9es, vous pouvez aussi choisir de g\xe9rer les transactions \xe0 partir de la m\xe9thode du formulaire et d'acc\xe9der aux tables en LECTURE ECRITURE uniquement quand cela est n\xe9cessaire.\nVous effectuez la saisie de donn\xe9es en utilisant le formulaire de saisie pour [Invoices], qui contient la table li\xe9e [Invoice Lines] dans un sous-formulaire. Le formulaire comporte deux boutons : ",(0,t.jsx)(n.em,{children:"bAnnuler"})," et ",(0,t.jsx)(n.em,{children:"bOK"}),". Aucune action ne leur est attribu\xe9e."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"La boucle d'ajout devient alors :"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-4d",children:' READ WRITE([Invoice Lines])\n READ ONLY([Parts])\n FORM SET INPUT([Invoices];"Input")\n Repeat\n    ADD RECORD([Invoices])\n Until(bOK=0)\n READ ONLY([Invoice Lines])\n'})}),"\n",(0,t.jsx)(n.p,{children:"Notez que la table [Parts] est d\xe9sormais en \"lecture seulement\" pendant la saisie de donn\xe9es. L'acc\xe8s en lecture/\xe9criture ne s'active que si les donn\xe9es sont valid\xe9es."}),"\n",(0,t.jsx)(n.p,{children:"La transaction est ouverte dans la m\xe9thode du formulaire entr\xe9e de la table [Invoices] :"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-4d",children:" Case of\n    :(Form event code=On Load)\n       START TRANSACTION\n       [Invoices]Invoice ID:=Sequence number([Invoices]Invoice ID)\n    Else\n       [Invoices]Total Invoice:=Sum([Invoice Lines]Total line)\n End case\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Si vous cliquez sur le bouton ",(0,t.jsx)(n.em,{children:"bAnnuler"}),", la saisie et la transaction doivent \xeatre annul\xe9es. Voici la m\xe9thode objet du bouton ",(0,t.jsx)(n.em,{children:"bAnnuler"})," :"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-4d",children:" Case of\n    :(Form event code=On Clicked)\n       CANCEL TRANSACTION\n       CANCEL\n End case\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Si vous cliquez sur le bouton ",(0,t.jsx)(n.em,{children:"bOK"}),", la saisie et la transaction doivent \xeatre accept\xe9es. Voici la m\xe9thode objet du bouton ",(0,t.jsx)(n.em,{children:"bOK"})," :"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-4d",children:" Case of\n    :(Form event code=On Clicked)\n       var $NbLines:=Records in selection([Invoice Lines])\n       READ WRITE([Parts]) //Passer en lecture/\xe9criture pour acc\xe9der \xe0 la table [Parts]\n       FIRST RECORD([Invoice Lines]) //Commencer \xe0 la premi\xe8re ligne\n       var $ValidTrans:=True //Tout devrait marcher\n       var $Line : Integer\n       For($Line;1;$NbLines) //Pour chaque ligne\n          RELATE ONE([Invoice Lines]Part No)\n          OK:=1 //Vous voulez continuer\n          While(Locked([Parts]) & (OK=1)) \n          //Essayer d'obtenir l'enregistrement en lecture/\xe9criture\n             CONFIRM(\"The Part \"+[Invoice Lines]Part No+\" is in use. Wait?\")\n             If(OK=1)\n                DELAY PROCESS(Current process;60)\n                LOAD RECORD([Parts])\n             End if\n          End while\n          If(OK=1)\n               //Mettre \xe0 jour quantit\xe9 dans l'entrep\xf4t\n             [Parts]In Warehouse:=[Parts]In Warehouse-[Invoice Lines]Quantity\n             SAVE RECORD([Parts]) //Sauvegarder l'enregistrement\n          Else\n             $Line:=$NbLines+1 //Sortir de la boucle\n             $ValidTrans:=False\n          End if\n          NEXT RECORD([Invoice Lines]) //Aller \xe0 la ligne suivante\n       End for\n       READ ONLY([Parts]) //Mettre la table en mode lecture seulement\n       If($ValidTrans)\n          SAVE RECORD([Invoices]) //Sauvegarder les enregistrements\n          VALIDATE TRANSACTION //Valider toutes les modifications de la base\n       Else\n          CANCEL TRANSACTION //Tout annuler\n       End if\n       CANCEL //Quitter le formulaire\n End case\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Dans le code ci-dessus, quel que soit le bouton sur lequel l'utilisateur a cliqu\xe9, nous appelons la commande ",(0,t.jsx)(n.code,{children:"CANCEL"}),". Le nouvel enregistrement n'est pas valid\xe9 par un appel \xe0 ",(0,t.jsx)(n.a,{href:"/docs/fr/commands/accept",children:(0,t.jsx)(n.code,{children:"ACCEPT"})})," mais par ",(0,t.jsx)(n.a,{href:"/docs/fr/commands/save-record",children:(0,t.jsx)(n.code,{children:"SAVE RECORD"})}),". De plus, vous remarquez que ",(0,t.jsx)(n.a,{href:"/docs/fr/commands/save-record",children:(0,t.jsx)(n.code,{children:"SAVE RECORD"})})," est appel\xe9e juste avant la commande ",(0,t.jsx)(n.a,{href:"/docs/fr/commands/validate-transaction",children:(0,t.jsx)(n.code,{children:"VALIDATE TRANSACTION"})}),". Ainsi, la sauvegarde de l'enregistrement [Invoices] est partie int\xe9grante de la transaction. Appeler la commande ",(0,t.jsx)(n.a,{href:"/docs/fr/commands/accept",children:(0,t.jsx)(n.code,{children:"ACCEPT"})})," validerait aussi l'enregistrement mais dans ce cas, la transaction serait valid\xe9e avant le stockage de la facture. Autrement dit, l'enregistrement serait sauvegard\xe9 en-dehors de la transaction."]}),"\n",(0,t.jsx)(n.p,{children:"En fonction de vos besoins, personnalisez votre base \xe0 votre convenance, comme dans les exemples pr\xe9c\xe9dents. Dans le dernier exemple, la gestion du verrouillage des enregistrements de la table [Parts] pourrait \xeatre plus \xe9labor\xe9e."}),"\n",(0,t.jsx)(n.h2,{id:"suspendre-des-transactions",children:"Suspendre des transactions"}),"\n",(0,t.jsx)(n.h3,{id:"principe",children:"Principe"}),"\n",(0,t.jsx)(n.p,{children:"Suspendre une transaction est utile notamment lorsque vous devez, depuis une transaction, lancer certaines op\xe9rations qui n'ont pas besoin d'\xeatre effectu\xe9es sous le contr\xf4le de cette transaction. Par exemple, imaginez le cas d'un client qui passe une commande, donc via une transaction, et qui en profite pour mettre \xe0 jour son adresse postale. Finalement, le client se ravise et annule sa commande. La transaction est annul\xe9e, mais pour autant vous ne souhaitez pas que la mise \xe0 jour de l'adresse le soit \xe9galement. Ce cas peut typiquement \xeatre g\xe9r\xe9 via la suspension de la transaction. Trois commandes permettent de g\xe9rer la suspension et la r\xe9activation des transactions :"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/docs/fr/commands/suspend-transaction",children:(0,t.jsx)(n.code,{children:"SUSPEND TRANSACTION"})}),": suspend la transaction courante. Tous les enregistrements en cours de mise \xe0 jour ou de cr\xe9ation restent verrouill\xe9s."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/docs/fr/commands/resume-transaction",children:(0,t.jsx)(n.code,{children:"RESUME TRANSACTION"})}),": r\xe9active une transaction suspendue, le cas \xe9ch\xe9ant."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/docs/fr/commands/active-transaction",children:(0,t.jsx)(n.code,{children:"Active transaction"})}),": retourne Faux si la transaction courante est suspendue ou s'il n'y a pas de transaction courante, et Vrai si elle est d\xe9marr\xe9e ou r\xe9activ\xe9e."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"exemple-1",children:"Exemple"}),"\n",(0,t.jsx)(n.p,{children:"Cet exemple pr\xe9sente un cas typique o\xf9 la suspension d'une transaction est utile. Dans une base de facturation (Invoices), nous voulons obtenir un nouveau num\xe9ro de facture durant une transaction. Ce num\xe9ro est calcul\xe9 et stock\xe9 dans une table [Settings]. Dans un environnement multi-utilisateur, les acc\xe8s doivent \xeatre prot\xe9g\xe9s ; cependant, \xe0 cause de la transaction, la table [Settings] pourrait \xeatre verrouill\xe9e par un autre utilisateur alors m\xeame que ses donn\xe9es ne d\xe9pendent pas de la transaction principale. Dans ce cas, vous pouvez suspendre la transaction pour l'acc\xe8s \xe0 la table."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-4d",children:"  //M\xe9thode standard qui cr\xe9e une facture\n START TRANSACTION\n ...\n CREATE RECORD([Invoices])\n //appel de la m\xe9thode pour obtenir un num\xe9ro disponible\n [Invoices]InvoiceID:=GetInvoiceNum \n ...\n SAVE RECORD([Invoices])\n VALIDATE TRANSACTION\n\n"})}),"\n",(0,t.jsxs)(n.p,{children:["La m\xe9thode ",(0,t.jsx)(n.em,{children:"GetInvoiceNum"})," suspend la transaction avant de s'ex\xe9cuter. A noter que ce code fonctionnera m\xeame si la m\xe9thode est appel\xe9e en-dehors de toute transaction :"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-4d",children:'  //GetInvoiceNum project method\n  //GetInvoiceNum -> Next available invoice number\n #DECLARE -> $freeNum : Integer\n SUSPEND TRANSACTION\n ALL RECORDS([Settings])\n If(Locked([Settings])) //acc\xe8s multi-utilisateur\n    While(Locked([Settings]))\n       MESSAGE("Waiting for locked Settings record")\n       DELAY PROCESS(Current process;30)\n       LOAD RECORD([Settings])\n    End while\n End if\n [Settings]InvoiceNum:=[Settings]InvoiceNum+1\n $freeNum:=[Settings]InvoiceNum\n SAVE RECORD([Settings])\n UNLOAD RECORD([Settings])\n RESUME TRANSACTION\n\n'})}),"\n",(0,t.jsx)(n.h3,{id:"d\xe9tail-du-fonctionnement",children:"D\xe9tail du fonctionnement"}),"\n",(0,t.jsx)(n.h4,{id:"que-se-passe-t-il-quand-une-transaction-est-suspendue-",children:"Que se passe-t-il quand une transaction est suspendue ?"}),"\n",(0,t.jsx)(n.p,{children:"Lorsqu'une transaction est suspendue, les principes de fonctionnement suivants s'appliquent :"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Vous pouvez acc\xe9der aux enregistrements qui ont \xe9t\xe9 ajout\xe9s ou modifi\xe9s durant la transaction, et vous ne pouvez pas acc\xe9der aux enregistrements qui ont \xe9t\xe9 supprim\xe9s durant la transaction."}),"\n",(0,t.jsx)(n.li,{children:"Vous pouvez cr\xe9er, sauvegarder, supprimer ou modifier des enregistrements en-dehors de la transaction."}),"\n",(0,t.jsx)(n.li,{children:"Vous pouvez d\xe9marrer une nouvelle transaction, mais \xe0 l'int\xe9rieur de cette transaction incluse, vous ne pourrez pas voir les enregistrements ou les valeurs d'enregistrements qui auront \xe9t\xe9 modifi\xe9(s) ou ajout\xe9(e)s dans la transaction suspendue. En fait, cette nouvelle transaction est totalement ind\xe9pendante de celle qui a \xe9t\xe9 suspendue, comme s'il s'agissait d'une transaction dans un autre process, et puisque la transaction suspendue pourra \xeatre par la suite valid\xe9e ou annul\xe9e, tout enregistrement modifi\xe9 ou annul\xe9 est automatiquement masqu\xe9 pour la nouvelle transaction. D\xe8s que vous validerez ou annulerez cette nouvelle transaction, vous pourrez \xe0 nouveau acc\xe9der \xe0 ces enregistrements."}),"\n",(0,t.jsx)(n.li,{children:"Tous les enregistrements modifi\xe9s, supprim\xe9s ou ajout\xe9s \xe0 l'int\xe9rieur de la transaction suspendue restent verrouill\xe9s pour les autres process. If vous tentez de modifier ou de supprimer ces enregistrements hors de la transaction ou dans une autre transaction, une erreur est g\xe9n\xe9r\xe9e."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Ces principes sont r\xe9sum\xe9s dans le sch\xe9ma suivant :"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:s(202407).Z+"",width:"671",height:"302"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Les valeurs modifi\xe9es durant la transaction A (enregistrement ID1 prend la valeur Val11) ne sont pas disponibles dans une nouvelle transaction (B) cr\xe9\xe9e pendant la p\xe9riode de suspension. Les valeurs modifi\xe9es durant la p\xe9riode de suspension (enregistrement ID2 prend la valeur Val22 et enregistrement ID3 prend la valeur Val33) sont sauvegard\xe9es m\xeame apr\xe8s que la transaction A a \xe9t\xe9 annul\xe9e."})}),"\n",(0,t.jsx)(n.p,{children:"Des fonctionnalit\xe9s sp\xe9cifiques ont \xe9t\xe9 ajout\xe9es pour prendre en charge les erreurs :"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"L'enregistrement courant de chaque table devient temporairement verrouill\xe9 s'il est modifi\xe9 pendant la transaction et est automatiquement d\xe9verrouill\xe9 lorsque la transaction est r\xe9activ\xe9e. Ce m\xe9canisme est important pour emp\xeacher que des parties de la transaction soient sauvegard\xe9es de mani\xe8re impromptue."}),"\n",(0,t.jsxs)(n.li,{children:["Si vous ex\xe9cutez une s\xe9quence invalide telle que ",(0,t.jsx)(n.em,{children:"start transaction / suspend transaction / start transaction / resume transaction"}),", une erreur est g\xe9n\xe9r\xe9e. Ce m\xe9canisme pr\xe9vient tout \xe9ventuel oubli de valider ou d'annuler des sous-transactions incluses avant de r\xe9activer une transaction suspendue."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"transactions-suspendues-et-statut-du-process",children:"Transactions suspendues et statut du process"}),"\n",(0,t.jsxs)(n.p,{children:["La commande ",(0,t.jsx)(n.a,{href:"/docs/fr/commands/in-transaction",children:(0,t.jsx)(n.code,{children:"In transaction"})})," retourne Vrai d\xe8s qu'une transaction a \xe9t\xe9 d\xe9marr\xe9e, m\xeame si elle a \xe9t\xe9 suspendue. Pour savoir si la transaction courante a \xe9t\xe9 suspendue, vous devez utiliser la commande ",(0,t.jsx)(n.a,{href:"/docs/fr/commands/active-transaction",children:(0,t.jsx)(n.code,{children:"Active transaction"})})," qui retourne Faux dans ce cas."]}),"\n",(0,t.jsxs)(n.p,{children:["Ces deux commandes, cependant, retournent \xe9galement Faux si aucune transaction n'a \xe9t\xe9 d\xe9marr\xe9e. Vous pourrez alors avoir besoin d'utiliser la commande ",(0,t.jsx)(n.a,{href:"/docs/fr/commands/transaction-level",children:(0,t.jsx)(n.code,{children:"Transaction level"})}),", qui retourne 0 dans ce contexte (pas de transaction d\xe9marr\xe9e)."]}),"\n",(0,t.jsx)(n.p,{children:"Le sch\xe9ma suivant illustre les diff\xe9rents contextes de transaction et les valeurs correspondantes retourn\xe9es par les commandes de transaction :"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:s(226111).Z+"",width:"691",height:"304"})})]})}function d(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},202407:function(e,n,s){s.d(n,{Z:()=>a});let a=s.p+"assets/images/transactions-schema1-b8e1bad3d5f701207c70ba0375006274.png"},226111:function(e,n,s){s.d(n,{Z:()=>a});let a=s.p+"assets/images/transactions-schema2-aafb10d686c45336a126b62e3cb113bd.png"},655861:function(e,n,s){s.d(n,{Z:()=>a});let a=s.p+"assets/images/transactions-structure-c214a6d4a24718af8586b4af126d02bd.png"},250065:function(e,n,s){s.d(n,{Z:()=>o,a:()=>i});var a=s(667294);let t={},r=a.createContext(t);function i(e){let n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);