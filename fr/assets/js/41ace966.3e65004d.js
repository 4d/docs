"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[95724],{603905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var n=a(667294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,s=function(e,t){if(null==e)return{};var a,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var i=n.createContext({}),u=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,s=e.mdxType,r=e.originalType,i=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=u(a),m=s,b=c["".concat(i,".").concat(m)]||c[m]||p[m]||r;return a?n.createElement(b,l(l({ref:t},d),{},{components:a})):n.createElement(b,l({ref:t},d))}));function m(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=a.length,l=new Array(r);l[0]=c;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:s,l[1]=o;for(var u=2;u<r;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},521876:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>d});a(667294);var n=a(603905);function s(){return s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},s.apply(this,arguments)}function r(e,t){if(null==e)return{};var a,n,s=function(e,t){if(null==e)return{};var a,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}const l={id:"dsmapping",title:"Objets Data Model"},o=void 0,i={unversionedId:"ORDA/dsmapping",id:"version-20-R5/ORDA/dsmapping",title:"Objets Data Model",description:"La technologie ORDA est fond\xe9e sur une cartographie automatique d'une structure de base sous-jacente. Elle permet \xe9galement d'acc\xe9der aux donn\xe9es via des objets s\xe9lection d'entit\xe9s (entity selection) et entit\xe9 (entity). Par cons\xe9quent, ORDA expose la base de donn\xe9es enti\xe8re comme un ensemble d'objets de mod\xe8le de donn\xe9es.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/version-20-R5/ORDA/dsMapping.md",sourceDirName:"ORDA",slug:"/ORDA/dsmapping",permalink:"/docs/fr/ORDA/dsmapping",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20ORDA%2FdsMapping.md%20(20-R5)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R5",frontMatter:{id:"dsmapping",title:"Objets Data Model"},sidebar:"docs",previous:{title:"ORDA",permalink:"/docs/fr/ORDA/overview"},next:{title:"Classes du mod\xe8le de donn\xe9es",permalink:"/docs/fr/ORDA/ordaClasses"}},u={},d=[{value:"Correspondance de la structure",id:"correspondance-de-la-structure",level:2},{value:"R\xe8gles g\xe9n\xe9rales",id:"r\xe8gles-g\xe9n\xe9rales",level:3},{value:"R\xe8gles de contr\xf4le d&#39;acc\xe8s \xe0 distance",id:"r\xe8gles-de-contr\xf4le-dacc\xe8s-\xe0-distance",level:3},{value:"Mise \xe0 jour des donn\xe9es",id:"mise-\xe0-jour-des-donn\xe9es",level:3},{value:"D\xe9finitions des objets",id:"d\xe9finitions-des-objets",level:2},{value:"Datastore",id:"datastore",level:3},{value:"Dataclass",id:"dataclass",level:3},{value:"Attribut",id:"attribut",level:3},{value:"Attributs de stockage et relationnels",id:"attributs-de-stockage-et-relationnels",level:4},{value:"Attributs calcul\xe9s et Alias",id:"attributs-calcul\xe9s-et-alias",level:4},{value:"Entity",id:"entity",level:3},{value:"Entity selection",id:"entity-selection",level:3},{value:"Entity selections tri\xe9es vs Entity selections non-tri\xe9es",id:"entity-selections-tri\xe9es-vs-entity-selections-non-tri\xe9es",level:4}],p={toc:d};function c(e){var{components:t}=e,l=r(e,["components"]);return(0,n.kt)("wrapper",s({},p,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"La technologie ORDA est fond\xe9e sur une cartographie automatique d'une structure de base sous-jacente. Elle permet \xe9galement d'acc\xe9der aux donn\xe9es via des objets s\xe9lection d'entit\xe9s (entity selection) et entit\xe9 (entity). Par cons\xe9quent, ORDA expose la base de donn\xe9es enti\xe8re comme un ensemble d'objets de mod\xe8le de donn\xe9es."),(0,n.kt)("h2",s({},{id:"correspondance-de-la-structure"}),"Correspondance de la structure"),(0,n.kt)("p",null,"When you call a datastore using the ",(0,n.kt)("a",s({parentName:"p"},{href:"/docs/fr/API/DataStoreClass#ds"}),(0,n.kt)("inlineCode",{parentName:"a"},"ds"))," or the ",(0,n.kt)("a",s({parentName:"p"},{href:"/docs/fr/API/DataStoreClass#open-datastore"}),(0,n.kt)("inlineCode",{parentName:"a"},"Open datastore"))," command, 4D automatically references tables and fields of the corresponding 4D structure as properties of the returned ",(0,n.kt)("a",s({parentName:"p"},{href:"#datastore"}),"datastore")," object:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Les tables correspondent \xe0 des dataclasses."),(0,n.kt)("li",{parentName:"ul"},"Les champs correspondent \xe0 des attributs de stockage."),(0,n.kt)("li",{parentName:"ul"},"Les relations correspondent \xe0 des attributs de relation - les noms de relation, d\xe9finis dans l'\xe9diteur de structure, sont utilis\xe9s comme noms d'attribut de relation.")),(0,n.kt)("p",null,(0,n.kt)("img",{src:a(138042).Z,width:"961",height:"480"})),(0,n.kt)("h3",s({},{id:"r\xe8gles-g\xe9n\xe9rales"}),"R\xe8gles g\xe9n\xe9rales"),(0,n.kt)("p",null,"Les r\xe8gles suivantes s'appliquent \xe0 toutes les conversions :"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Les noms de table, de champ et de relation correspondent \xe0 des noms de propri\xe9t\xe9 d'objet. Make sure that such names comply with general object naming rules, as explained in the ",(0,n.kt)("a",s({parentName:"li"},{href:"/docs/fr/Concepts/identifiers"}),"object naming conventions")," section."),(0,n.kt)("li",{parentName:"ul"},"Un datastore ne r\xe9f\xe9rence que les tables avec une seule cl\xe9 primaire. Les tables suivantes ne sont pas r\xe9f\xe9renc\xe9es :",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Tables sans cl\xe9 primaire"),(0,n.kt)("li",{parentName:"ul"},"Tables avec cl\xe9s primaires composites."))),(0,n.kt)("li",{parentName:"ul"},"BLOB fields are automatically available as attributes of the ",(0,n.kt)("a",s({parentName:"li"},{href:"/docs/fr/Concepts/blob#blob-types"}),"Blob object")," type.")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"ORDA mapping does not take into account:"),(0,n.kt)("ul",{parentName:"blockquote"},(0,n.kt)("li",{parentName:"ul"},'the "Invisible" option for tables or fields,'),(0,n.kt)("li",{parentName:"ul"},"the virtual structure defined through ",(0,n.kt)("inlineCode",{parentName:"li"},"SET TABLE TITLES")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"SET FIELD TITLES"),","),(0,n.kt)("li",{parentName:"ul"},'the "Manual" or "Automatic" property of relations.'))),(0,n.kt)("h3",s({},{id:"r\xe8gles-de-contr\xf4le-dacc\xe8s-\xe0-distance"}),"R\xe8gles de contr\xf4le d'acc\xe8s \xe0 distance"),(0,n.kt)("p",null,"When accessing a remote datastore through the ",(0,n.kt)("inlineCode",{parentName:"p"},"Open datastore")," command or ",(0,n.kt)("a",s({parentName:"p"},{href:"/docs/fr/REST/gettingStarted"}),"REST requests"),", only tables and fields with the ",(0,n.kt)("strong",{parentName:"p"},"Expose as REST resource")," property are available remotely."),(0,n.kt)("p",null,"Cette option doit \xeatre choisie au niveau de la structure 4D pour chaque table et chaque champ que vous souhaitez voir appara\xeetre comme dataclass et attribut dans le datastore :"),(0,n.kt)("p",null,(0,n.kt)("img",{src:a(817890).Z,width:"279",height:"362"})),(0,n.kt)("h3",s({},{id:"mise-\xe0-jour-des-donn\xe9es"}),"Mise \xe0 jour des donn\xe9es"),(0,n.kt)("p",null,"Toute modification apport\xe9e \xe0 la structure de la base invalide la couche courante de donn\xe9es ORDA. Ces modifications incluent :"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"l'ajout ou la suppression d'une table, d'un champ ou d'une relation"),(0,n.kt)("li",{parentName:"ul"},"le renommage d'une table, d'un champ ou d'une relation"),(0,n.kt)("li",{parentName:"ul"},"la modification d'une propri\xe9t\xe9 principale d'un champ (type, unique, index, autoincrement, valeur null)")),(0,n.kt)("p",null,"When the current ORDA model layer has been invalidated, it is automatically reloaded and updated in subsequent calls of the local ",(0,n.kt)("inlineCode",{parentName:"p"},"ds")," datastore on 4D and 4D Server. A noter que les r\xe9f\xe9rences existantes vers des objets ORDA tels que des entit\xe9s ou des s\xe9lections d'entit\xe9s continueront d'utiliser les donn\xe9es \xe0 partir desquelles elles ont \xe9t\xe9 cr\xe9\xe9es, et ce jusqu'\xe0 ce qu'elles soient reg\xe9n\xe9r\xe9es."),(0,n.kt)("p",null,"Toutefois, la couche de donn\xe9es ORDA mise \xe0 jour n'est pas automatiquement disponible dans les contextes suivants :"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"une application 4D distante connect\xe9e \xe0 4D Server -- l'application distante doit \xeatre reconnect\xe9e au serveur."),(0,n.kt)("li",{parentName:"ul"},"a remote datastore opened using ",(0,n.kt)("inlineCode",{parentName:"li"},"Open datastore")," or through ",(0,n.kt)("a",s({parentName:"li"},{href:"/docs/fr/REST/gettingStarted"}),"REST calls")," -- a new session must be opened.")),(0,n.kt)("h2",s({},{id:"d\xe9finitions-des-objets"}),"D\xe9finitions des objets"),(0,n.kt)("h3",s({},{id:"datastore"}),"Datastore"),(0,n.kt)("p",null,"Un datastore est l'objet d'interface d'une base de donn\xe9es. Il cr\xe9e une repr\xe9sentation de toute la base sous forme d'objet. A datastore is made of a ",(0,n.kt)("strong",{parentName:"p"},"model")," and ",(0,n.kt)("strong",{parentName:"p"},"data"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Le mod\xe8le contient et d\xe9crit toutes les dataclasses qui composent le datastore. Il est ind\xe9pendant de la base de donn\xe9es sous-jacente."),(0,n.kt)("li",{parentName:"ul"},"Les donn\xe9es se r\xe9f\xe8rent \xe0 l'information qui va \xeatre utilis\xe9e et stock\xe9e dans ce mod\xe8le. Par exemple, les noms, adresses et dates de naissance des employ\xe9s sont des \xe9l\xe9ments de donn\xe9es que vous pouvez utiliser dans un datastore.")),(0,n.kt)("p",null,"When handled through the code, the datastore is an object whose properties are all of the ",(0,n.kt)("a",s({parentName:"p"},{href:"#dataclass"}),"dataclasses")," which have been specifically exposed."),(0,n.kt)("p",null,"4d vous permet de g\xe9rer les datastores suivants :"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"the local datastore, based on the current 4D database, returned by the ",(0,n.kt)("inlineCode",{parentName:"li"},"ds")," command (the main datastore)."),(0,n.kt)("li",{parentName:"ul"},"one or more remote datastore(s) exposed as REST resources in remote 4D databases, returned by the ",(0,n.kt)("inlineCode",{parentName:"li"},"Open datastore")," command.")),(0,n.kt)("p",null,"Un datastore ne r\xe9f\xe9rence qu'une seule base de donn\xe9es locale ou distante."),(0,n.kt)("p",null,"L'objet datastore lui-m\xeame ne peut pas \xeatre copi\xe9 en tant qu'objet :"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-4d"}),"$mydatastore:=OB Copy(ds) //retourne null\n")),(0,n.kt)("p",null,"Les propri\xe9t\xe9s du datastore sont toutefois \xe9num\xe9rables :"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-4d"})," ARRAY TEXT($prop;0)\n OB GET PROPERTY NAMES(ds;$prop)\n  //$prop contient les noms de toutes les dataclasses\n")),(0,n.kt)("p",null,"The main (default) datastore is always available through the ",(0,n.kt)("inlineCode",{parentName:"p"},"ds")," command, but the ",(0,n.kt)("inlineCode",{parentName:"p"},"Open datastore")," command allows referencing any remote datastore."),(0,n.kt)("h3",s({},{id:"dataclass"}),"Dataclass"),(0,n.kt)("p",null,"Une dataclasse est l'\xe9quivalent d'une table. Elle est utilis\xe9e comme mod\xe8le d'objet et r\xe9f\xe9rence tous les champs comme attributs, y compris les attributs relationnels (attributs construits \xe0 partir des relations entre les dataclasses). Les attributs relationnels peuvent \xeatre utilis\xe9s dans les requ\xeates comme tout autre attribut."),(0,n.kt)("p",null,"All dataclasses in a 4D project are available as a property of the ",(0,n.kt)("inlineCode",{parentName:"p"},"ds")," datastore. For remote datastores accessed through ",(0,n.kt)("inlineCode",{parentName:"p"},"Open datastore")," or ",(0,n.kt)("a",s({parentName:"p"},{href:"/docs/fr/REST/gettingStarted"}),"REST requests"),", the ",(0,n.kt)("strong",{parentName:"p"},"Expose as REST resource")," option must be selected at the 4D structure level for each exposed table that you want to be exposed as dataclass in the datastore."),(0,n.kt)("p",null,"Par exemple, consid\xe9rons cette table dans la structure suivante :"),(0,n.kt)("p",null,(0,n.kt)("img",{src:a(874038).Z,width:"137",height:"188"})),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"Company")," table is automatically available as a dataclass in the ",(0,n.kt)("inlineCode",{parentName:"p"},"ds")," datastore. Vous pouvez \xe9crire :"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-4d"}),"var $compClass : cs.Company //d\xe9clare une variable objet $compClass de la classe Company\n$compClass:=ds.Company //affecte la r\xe9f\xe9rence de dataclasse Company \xe0 $compClass\n")),(0,n.kt)("p",null,"Un objet dataclass peut contenir :"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"attributes"),(0,n.kt)("li",{parentName:"ul"},"des attributs relationnels")),(0,n.kt)("p",null,"La dataclass offre une abstraction de la base de donn\xe9es physique et permet de g\xe9rer un mod\xe8le de donn\xe9es conceptuel. La dataclass est le seul moyen d'interroger le datastore. Une requ\xeate est effectu\xe9e \xe0 partir d'une seule dataclass. Les requ\xeates sont construites autour des attributs et des noms d'attributs relationnels des dataclasses. Les attributs relationnels sont ainsi les moyens d'impliquer plusieurs tables li\xe9es dans une requ\xeate."),(0,n.kt)("p",null,"L'objet dataclass lui-m\xeame ne peut pas \xeatre copi\xe9 en tant qu'objet :"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-4d"}),"$mydataclass:=OB Copy(ds.Employee) //retourne null\n")),(0,n.kt)("p",null,"Les propri\xe9t\xe9s de la dataclass sont toutefois \xe9num\xe9rables :"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-code4d"}),"ARRAY TEXT($prop;0)\nOB GET PROPERTY NAMES(ds.Employee;$prop)\n//$prop contient les noms de tous les attributs de dataclass\n")),(0,n.kt)("h3",s({},{id:"attribut"}),"Attribut"),(0,n.kt)("p",null,"Les propri\xe9t\xe9s de dataclass sont des objets attribut d\xe9crivant les champs ou relations sous-jacents. Par exemple :"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-4d"}),' $nameAttribute:=ds.Company.name //r\xe9f\xe9rence \xe0 un attribut de classe\n $revenuesAttribute:=ds.Company["revenues"] //m\xe9thode alternative\n')),(0,n.kt)("p",null,"This code assigns to ",(0,n.kt)("inlineCode",{parentName:"p"},"$nameAttribute")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"$revenuesAttribute")," references to the name and revenues attributes of the ",(0,n.kt)("inlineCode",{parentName:"p"},"Company")," class. Cette syntaxe ne retourne PAS les valeurs contenues dans l'attribut, mais retourne plut\xf4t des r\xe9f\xe9rences aux attributs eux-m\xeames. To handle values, you need to go through ",(0,n.kt)("a",s({parentName:"p"},{href:"#entity"}),"Entities"),"."),(0,n.kt)("p",null,"All eligible fields in a table are available as attributes of their parent ",(0,n.kt)("a",s({parentName:"p"},{href:"#dataclass"}),"dataclass"),". For remote datastores accessed through ",(0,n.kt)("inlineCode",{parentName:"p"},"Open datastore")," or ",(0,n.kt)("a",s({parentName:"p"},{href:"/docs/fr/REST/gettingStarted"}),"REST requests"),", the ",(0,n.kt)("strong",{parentName:"p"},"Expose as REST resource")," option must be selected at the 4D structure level for each field that you want to be exposed as a dataclass attribute."),(0,n.kt)("h4",s({},{id:"attributs-de-stockage-et-relationnels"}),"Attributs de stockage et relationnels"),(0,n.kt)("p",null,"Les attributs de la Dataclass sont de plusieurs types : storage, relatedEntity et relatedEntities. Attributes that are scalar (",(0,n.kt)("em",{parentName:"p"},"i.e."),", provide only a single value) support all the standard 4D data types (integer, text, object, etc.)."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"A ",(0,n.kt)("strong",{parentName:"li"},"storage attribute")," is equivalent to a field in the 4D database and can be indexed. Les valeurs affect\xe9es \xe0 un attribut de stockage sont stock\xe9es en tant que partie de l'entit\xe9 lors de son enregistrement. Lorsqu'on acc\xe8de \xe0 un attribut de stockage, sa valeur provient directement du datastore. Les attributs de stockage sont le bloc de construction le plus \xe9l\xe9mentaire d'une entit\xe9 et sont d\xe9finis par un nom et un type de donn\xe9es."),(0,n.kt)("li",{parentName:"ul"},"A ",(0,n.kt)("strong",{parentName:"li"},"relation attribute")," provides access to other entities. Les attributs relationnels peuvent aboutir soit \xe0 une entit\xe9 unique (ou \xe0 aucune entit\xe9), soit \xe0 une s\xe9lection d'entit\xe9 (0 \xe0 N entit\xe9s). Les attributs relationnels s'appuient sur les relations \"classiques\" dans la structure relationnelle pour fournir un acc\xe8s direct \xe0 une entit\xe9 ou \xe0 des entit\xe9s reli\xe9es. Tous les attributs relationnels sont directement disponibles dans ORDA si vous utilisez leurs noms.")),(0,n.kt)("p",null,"Prenons l'exemple de la structure de base de donn\xe9es partielle suivante et les propri\xe9t\xe9s relationnelles :"),(0,n.kt)("p",null,(0,n.kt)("img",{src:a(921593).Z,width:"690",height:"533"})),(0,n.kt)("p",null,"Tous les attributs relationnels seront disponibles automatiquement :"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'dans la dataclass Project : "ID", "name", et "companyID"'),(0,n.kt)("li",{parentName:"ul"},'dans la dataclass Company : "ID", "name", et "discount"')),(0,n.kt)("p",null,"En outre, les attributs relationnels suivant seront \xe9galement disponibles automatiquement :"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"in the Project dataclass: ",(0,n.kt)("strong",{parentName:"li"},"theClient"),' attribute, of the "relatedEntity" kind; there is at most one Company for each Project (the client)'),(0,n.kt)("li",{parentName:"ul"},"in the Company dataclass: ",(0,n.kt)("strong",{parentName:"li"},"companyProjects"),' attribute, of the "relatedEntities" kind; for each Company there is any number of related Projects.')),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"La propri\xe9t\xe9 manuelle ou automatique d'une relation de base de donn\xe9es n'a aucun effet dans ORDA.")),(0,n.kt)("p",null,"Tous les attributs de la dataclass sont expos\xe9s en tant que propri\xe9t\xe9s de la dataclass :"),(0,n.kt)("p",null,(0,n.kt)("img",{src:a(540659).Z,width:"1049",height:"288"})),(0,n.kt)("p",null,"Gardez \xe0 l'esprit que ces objets d\xe9crivent des attributs, mais ne donnent pas acc\xe8s aux donn\xe9es. Reading or writing data is done through ",(0,n.kt)("a",s({parentName:"p"},{href:"/docs/fr/ORDA/entities#using-entity-attributes"}),"entity objects"),"."),(0,n.kt)("h4",s({},{id:"attributs-calcul\xe9s-et-alias"}),"Attributs calcul\xe9s et Alias"),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/docs/fr/ORDA/ordaClasses#computed-attributes"}),"Computed attributes")," and ",(0,n.kt)("a",s({parentName:"p"},{href:"/docs/fr/ORDA/ordaClasses#alias-attributes"}),"alias attributes")," are \"virtual\" attributes. Leur valeur n'est pas stock\xe9e mais \xe9valu\xe9e \xe0 chaque fois qu'on y acc\xe8de. Ils n'appartiennent pas \xe0 la structure sous-jacente de la base, mais ils se basent sur elle et peuvent \xeatre utilis\xe9s comme n'importe quel champ du mod\xe8le de donn\xe9es."),(0,n.kt)("h3",s({},{id:"entity"}),"Entity"),(0,n.kt)("p",null,"Une entit\xe9 est l'\xe9quivalent d'un enregistrement. Il s'agit d'un objet qui fait r\xe9f\xe9rence \xe0 un enregistrement de la base de donn\xe9es. It can be seen as an instance of a ",(0,n.kt)("a",s({parentName:"p"},{href:"#dataclass"}),"dataclass"),", like a record of the table matching the dataclass. Toutefois, une entit\xe9 contient \xe9galement des donn\xe9es corr\xe9l\xe9es \xe0 la base de donn\xe9es li\xe9e au datastore."),(0,n.kt)("p",null,"Le but de l'entit\xe9 est de g\xe9rer les donn\xe9es (cr\xe9er, mettre \xe0 jour, supprimer). Lorsqu'une r\xe9f\xe9rence d'entit\xe9 est obtenue au moyen d'une s\xe9lection d'entit\xe9, elle conserve \xe9galement des informations sur la s\xe9lection d'entit\xe9 qui permet une it\xe9ration \xe0 travers la s\xe9lection."),(0,n.kt)("p",null,"L'objet entit\xe9 lui-m\xeame ne peut pas \xeatre copi\xe9 en tant qu'objet :"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-4d"})," $myentity:=OB Copy(ds.Employee.get(1)) //retourne null\n")),(0,n.kt)("p",null,"Les propri\xe9t\xe9s de l'entit\xe9 sont toutefois \xe9num\xe9rables :"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-4d"})," ARRAY TEXT($prop;0)\n OB GET PROPERTY NAMES(ds.Employee.get(1);$prop)\n  //$prop contient les noms de tous les attributs de l'entit\xe9\n")),(0,n.kt)("h3",s({},{id:"entity-selection"}),"Entity selection"),(0,n.kt)("p",null,"Une s\xe9lection d'entit\xe9 est un objet contenant une ou plusieurs r\xe9f\xe9rence(s) \xe0 des entit\xe9s appartenant \xe0 la m\xeame dataclasse. Elle est g\xe9n\xe9ralement cr\xe9\xe9e \xe0 la suite d'une requ\xeate ou retourn\xe9e \xe0 partir d'un attribut relationnel. Une entity selection peut contenir 0, 1 ou X entit\xe9s de la dataclass - o\xf9 X peut repr\xe9senter le nombre total d'entit\xe9s contenues dans la dataclass."),(0,n.kt)("p",null,"Voici un exemple :"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-4d"}),"var $e : cs.EmployeeSelection //d\xe9clare une variable objet $e de type de classe EmployeeSelection\n$e:=ds.Employee.all() //assigne la r\xe9f\xe9rence de la s\xe9lection d'entit\xe9 r\xe9sultante \xe0 la variable $e\n")),(0,n.kt)("p",null,'Entity selections can be "sorted" or "unsorted" (',(0,n.kt)("a",s({parentName:"p"},{href:"#ordered-or-unordered-entity-selection"}),"see below"),")."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},'Entity selections can also be "shareable" or "non-shareable", depending on ',(0,n.kt)("a",s({parentName:"p"},{href:"/docs/fr/ORDA/entities#shareable-or-alterable-entity-selections"}),"how they have been created"),".")),(0,n.kt)("p",null,"L'objet s\xe9lection d'entit\xe9s lui-m\xeame ne peut pas \xeatre copi\xe9 en tant qu'objet :"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-4d"})," $myentitysel:=OB Copy(ds.Employee.all()) //retourne null\n")),(0,n.kt)("p",null,"Les propri\xe9t\xe9s des s\xe9lections d'entit\xe9s sont toutefois \xe9num\xe9rables :"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-4d"}),' ARRAY TEXT($prop;0)\n OB GET PROPERTY NAMES(ds.Employee.all();$prop)\n  //$prop contient les noms des propri\xe9t\xe9s des s\xe9lections d\'entit\xe9s\n  //("length", "00", "01"...)\n')),(0,n.kt)("h4",s({},{id:"entity-selections-tri\xe9es-vs-entity-selections-non-tri\xe9es"}),"Entity selections tri\xe9es vs Entity selections non-tri\xe9es"),(0,n.kt)("p",null,"For optimization reasons, by default 4D ORDA usually creates unordered entity selections, except when you use the ",(0,n.kt)("inlineCode",{parentName:"p"},"orderBy( )"),' method or use specific options. Dans cette documentation, sauf indication contraire, "s\xe9lection d\'entit\xe9s" fait g\xe9n\xe9ralement r\xe9f\xe9rence \xe0 une "s\xe9lection d\'entit\xe9s non-ordonn\xe9e".'),(0,n.kt)("p",null,"Les s\xe9lections d'entit\xe9s ordonn\xe9es sont cr\xe9\xe9es uniquement lorsque cela est n\xe9cessaire ou lorsqu'elles sont sp\xe9cifiquement demand\xe9es \xe0 l'aide d'options, c'est-\xe0-dire dans les cas suivants :"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"result of an ",(0,n.kt)("inlineCode",{parentName:"li"},"orderBy()")," on a selection (of any type) or an ",(0,n.kt)("inlineCode",{parentName:"li"},"orderBy()")," on a dataclass"),(0,n.kt)("li",{parentName:"ul"},"result of the ",(0,n.kt)("inlineCode",{parentName:"li"},"newSelection()")," method with the ",(0,n.kt)("inlineCode",{parentName:"li"},"dk keep ordered")," option")),(0,n.kt)("p",null,"Les s\xe9lections d'entit\xe9s non-tri\xe9es sont cr\xe9\xe9es dans les cas suivants :"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"result of a standard ",(0,n.kt)("inlineCode",{parentName:"li"},"query()")," on a selection (of any type) or a ",(0,n.kt)("inlineCode",{parentName:"li"},"query()")," on a dataclass,"),(0,n.kt)("li",{parentName:"ul"},"result of the ",(0,n.kt)("inlineCode",{parentName:"li"},"newSelection()")," method without option,"),(0,n.kt)("li",{parentName:"ul"},"result of any of the comparison methods, whatever the input selection types: ",(0,n.kt)("inlineCode",{parentName:"li"},"or()"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"and()"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"minus()"),".")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"The following entity selections are always ",(0,n.kt)("strong",{parentName:"p"},"ordered"),":"),(0,n.kt)("ul",{parentName:"blockquote"},(0,n.kt)("li",{parentName:"ul"},"entity selections retourn\xe9es par 4D Server vers un client distant"),(0,n.kt)("li",{parentName:"ul"},"entity selections bas\xe9es sur des datastores distants."))),(0,n.kt)("p",null,"Notez que lorsqu'une s\xe9lection d'entit\xe9s ordonn\xe9e devient une s\xe9lection non-ordonn\xe9e, toute r\xe9f\xe9rence d'entit\xe9 r\xe9p\xe9t\xe9e est supprim\xe9e."))}c.isMDXComponent=!0},817890:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/ExposeDataclass-493afc3bdbd30cb758f171009c9d11bb.png"},874038:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/companyTable-15e8c71e579a6392b89a8e3f45aa8536.png"},540659:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/dataclassProperties-b0e6524ae14723315b5d45435df82853.png"},138042:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/datastoreMapping-833be12255d9e7b9cde49426a0cc902f.png"},921593:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/relationProperties-f7d9bc6fc793e2bae76ea2164c37ffe3.png"}}]);