"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[59540],{603905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(667294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,f=d["".concat(u,".").concat(m)]||d[m]||c[m]||o;return n?r.createElement(f,l(l({ref:t},s),{},{components:n})):r.createElement(f,l({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},517154:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>u,toc:()=>s});n(667294);var r=n(603905);function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a.apply(this,arguments)}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const l={id:"upload",title:"$upload"},i=void 0,u={unversionedId:"REST/upload",id:"version-20-R5/REST/upload",title:"$upload",description:"Retourne un ID du fichier t\xe9l\xe9charg\xe9 sur le serveur",source:"@site/i18n/fr/docusaurus-plugin-content-docs/version-20-R5/REST/$upload.md",sourceDirName:"REST",slug:"/REST/upload",permalink:"/docs/fr/REST/upload",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20REST%2F%24upload.md%20(20-R5)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R5",frontMatter:{id:"upload",title:"$upload"},sidebar:"docs",previous:{title:"$info",permalink:"/docs/fr/REST/info"},next:{title:"API (dataClass)",permalink:"/docs/fr/category/api-dataclass"}},p={},s=[{value:"Description",id:"description",level:2},{value:"Sc\xe9nario de t\xe9l\xe9chargement",id:"sc\xe9nario-de-t\xe9l\xe9chargement",level:2},{value:"Exemple avec un client 4D HTTP",id:"exemple-avec-un-client-4d-http",level:2}],c={toc:s};function d(e){var{components:t}=e,n=o(e,["components"]);return(0,r.kt)("wrapper",a({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Retourne un ID du fichier t\xe9l\xe9charg\xe9 sur le serveur"),(0,r.kt)("h2",a({},{id:"description"}),"Description"),(0,r.kt)("p",null,"Publiez cette requ\xeate lorsque vous vous souhaitez t\xe9l\xe9charger un fichier sur le serveur. If you have an image, you pass ",(0,r.kt)("inlineCode",{parentName:"p"},"$rawPict=true"),". For all other files, you pass ",(0,r.kt)("inlineCode",{parentName:"p"},"$binary=true"),"."),(0,r.kt)("p",null,"You can modify the timeout, which by default is 120 seconds, by passing a value to the ",(0,r.kt)("inlineCode",{parentName:"p"},"$timeout")," parameter."),(0,r.kt)("h2",a({},{id:"sc\xe9nario-de-t\xe9l\xe9chargement"}),"Sc\xe9nario de t\xe9l\xe9chargement"),(0,r.kt)("p",null,"Supposons que vous souhaitiez t\xe9l\xe9charger une image pour mettre \xe0 jour l'attribut image d'une entit\xe9."),(0,r.kt)("p",null,"Pour t\xe9l\xe9charger une image (ou tout autre fichier binaire), s\xe9lectionnez d'abord le fichier dans l'application cliente. The file itlself must be passed in the ",(0,r.kt)("strong",{parentName:"p"},"body")," of the request."),(0,r.kt)("p",null,"T\xe9l\xe9chargez ensuite l'image s\xe9lectionn\xe9e vers le serveur 4D \xe0 l'aide d'une requ\xeate telle que :"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"POST  /rest/$upload?$rawPict=true")),(0,r.kt)("p",null,"Par cons\xe9quent, le serveur retourne un ID qui identifie le fichier :"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},'{ "ID": "D507BC03E613487E9B4C2F6A0512FE50" }')),(0,r.kt)("p",null,"Afterwards, you use this ID to add it to an attribute using ",(0,r.kt)("a",a({parentName:"p"},{href:"/docs/fr/REST/method#methodupdate"}),(0,r.kt)("inlineCode",{parentName:"a"},"$method=update"))," to add the image to an entity. La requ\xeate est la suivante :"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"POST  /rest/Employee/?$method=update")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"POST data"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{}),'{\n    __KEY: "12",\n    __STAMP: 4,\n    photo: { "ID": "D507BC03E613487E9B4C2F6A0512FE50" } \n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response"),":"),(0,r.kt)("p",null,"L'entit\xe9 modifi\xe9e est retourn\xe9e :"),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{}),'{\n    "__KEY": "12", \n    "__STAMP": 5, \n    "uri": "http://127.0.0.1:8081/rest/Employee(12)", \n    "ID": 12, \n    "firstName": "John", \n    "firstName": "Smith",\n    "photo":\n    {\n        "__deferred":\n        {\n            "uri": "/rest/Employee(12)/photo?$imageformat=best&$version=1&$expand=photo",\n            "image": true\n        }\n    },}\n')),(0,r.kt)("h2",a({},{id:"exemple-avec-un-client-4d-http"}),"Exemple avec un client 4D HTTP"),(0,r.kt)("p",null,"The following example shows how to upload a ",(0,r.kt)("em",{parentName:"p"},".pdf")," file to the server using the 4D HTTP client."),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{className:"language-4d"}),'var $params : Text\nvar $response : Object\nvar $result : Integer\nvar $blob : Blob\n\n\nARRAY TEXT($headerNames; 1)\nARRAY TEXT($headerValues; 1)\n\n$url:="localhost:80/rest/$upload?$binary=true" //prepare the REST request\n\n$headerNames{1}:="Content-Type"\n$headerValues{1}:="application/octet-stream"\n\nDOCUMENT TO BLOB("c:\\\\invoices\\\\inv003.pdf"; $blob) //Load the binary \n\n //Execute the first POST request to upload the file\n$result:=HTTP Request(HTTP POST method; $url; $blob; $response; $headerNames; $headerValues)\n\nIf ($result=200) \n    var $data : Object\n    $data:=New object\n    $data.__KEY:="3"\n    $data.__STAMP:="3"\n    $data.pdf:=New object("ID"; String($response.ID)) \n\n    $url:="localhost:80/rest/Invoices?$method=update" //second request to update the entity\n\n    $headerNames{1}:="Content-Type"\n    $headerValues{1}:="application/json"\n\n    $result:=HTTP Request(HTTP POST method; $url; $data; $response; $headerNames; $headerValues)\nElse\n    ALERT(String($result)+" Error")\nEnd if\n')))}d.isMDXComponent=!0}}]);