"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[32397],{417085:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>o});var r=n(474848),t=n(28453);const a={id:"form-get-names",title:"FORM GET NAMES",slug:"/commands/form-get-names",displayed_sidebar:"docs"},i=void 0,l={id:"commands-legacy/form-get-names",title:"FORM GET NAMES",description:"FORM GET NAMES ( {laTable ;} tabNoms {; filtre {; marqueur}}{; *} )",source:"@site/i18n/fr/docusaurus-plugin-content-docs/version-20-R7/commands-legacy/form-get-names.md",sourceDirName:"commands-legacy",slug:"/commands/form-get-names",permalink:"/docs/fr/commands/form-get-names",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fform-get-names.md%20(20-R7)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R7",frontMatter:{id:"form-get-names",title:"FORM GET NAMES",slug:"/commands/form-get-names",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"FORM EDIT",permalink:"/docs/fr/commands/form-edit"},next:{title:"METHOD Get attribute",permalink:"/docs/fr/commands/method-get-attribute"}},d={},o=[{value:"Description",id:"description",level:4},{value:"Exemple",id:"exemple",level:4},{value:"Voir aussi",id:"voir-aussi",level:4}];function m(e){const s={a:"a",br:"br",code:"code",em:"em",h4:"h4",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"FORM GET NAMES"})," ( {",(0,r.jsx)(s.em,{children:"laTable"})," ;} ",(0,r.jsx)(s.em,{children:"tabNoms"})," {; ",(0,r.jsx)(s.em,{children:"filtre"})," {; ",(0,r.jsx)(s.em,{children:"marqueur"}),"}}{; *} )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Param\xe8tre"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"laTable"}),(0,r.jsx)(s.td,{children:"Table"}),(0,r.jsx)(s.td,{children:"\u2192"}),(0,r.jsx)(s.td,{children:"R\xe9f\xe9rence de table"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"tabNoms"}),(0,r.jsx)(s.td,{children:"Text array"}),(0,r.jsx)(s.td,{children:"\u2190"}),(0,r.jsx)(s.td,{children:"Tableau des noms de formulaires"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"filtre"}),(0,r.jsx)(s.td,{children:"Text"}),(0,r.jsx)(s.td,{children:"\u2192"}),(0,r.jsx)(s.td,{children:"Filtrage des noms"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"marqueur"}),(0,r.jsx)(s.td,{children:"Real"}),(0,r.jsx)(s.td,{children:"\u2192"}),(0,r.jsx)(s.td,{children:"Marqueur de version minimale \xe0 retourner"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"\u2190"}),(0,r.jsx)(s.td,{children:"Nouvelle valeur"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"*"}),(0,r.jsx)(s.td,{children:"Op\xe9rateur"}),(0,r.jsx)(s.td,{children:"\u2192"}),(0,r.jsx)(s.td,{children:"Si pass\xe9 = la commande s\u2019applique \xe0 la base h\xf4te lorsqu\u2019elle est ex\xe9cut\xe9e depuis un composant (param\xe8tre ignor\xe9 hors de ce contexte)"})]})]})]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.em,{children:"Cette commande n'est pas thread-safe, elle ne peut pas \xeatre utilis\xe9e dans du code pr\xe9emptif."})}),"\n",(0,r.jsx)(s.h4,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(s.p,{children:["La commande ",(0,r.jsx)(s.strong,{children:"FORM GET NAMES"})," remplit le tableau ",(0,r.jsx)(s.em,{children:"tabNoms"})," avec les noms des formulaires de l\u2019application."]}),"\n",(0,r.jsxs)(s.p,{children:["Si vous passez le param\xe8tre ",(0,r.jsx)(s.em,{children:"laTable"}),", la commande retourne les noms des formulaires table associ\xe9s \xe0 cette table. Si vous omettez ce param\xe8tre, le commande retourne les noms des formulaires projet de la base."]}),"\n",(0,r.jsxs)(s.p,{children:["Vous pouvez restreindre la liste des formulaires en passant une cha\xeene de comparaison dans le param\xe8tre ",(0,r.jsx)(s.em,{children:"filtre"}),' : dans ce cas, seuls les formulaires dont le nom correspond au filtre seront retourn\xe9s. Vous pouvez utiliser le caract\xe8re @ afin de d\xe9finir des filtres de type "commence par", "se termine par" ou "contient". Si vous passez une cha\xeene vide, le param\xe8tre ',(0,r.jsx)(s.em,{children:"filtre"})," est ignor\xe9."]}),"\n",(0,r.jsxs)(s.p,{children:["Vous pouvez \xe9galement restreindre la liste des formulaires \xe0 l'aide du param\xe8tre optionnel ",(0,r.jsx)(s.em,{children:"marqueur"}),". Ce param\xe8tre permet de limiter les formulaires retourn\xe9s dans ",(0,r.jsx)(s.em,{children:"tabNoms"})," \xe0 ceux qui ont \xe9t\xe9 modifi\xe9s ult\xe9rieurement \xe0 un instant donn\xe9. Dans le cadre d\u2019un syst\xe8me de contr\xf4le de version, ce param\xe8tre vous permet de ne mettre \xe0 jour que les formulaires ayant \xe9t\xe9 modifi\xe9s depuis la derni\xe8re sauvegarde.",(0,r.jsx)(s.br,{}),"\nCe principe fonctionne de la mani\xe8re suivante : 4D maintient en interne un compteur de modification des ressources de la base. Les formulaires \xe9tant des ressources, chaque fois qu\u2019un formulaire est cr\xe9\xe9 ou r\xe9enregistr\xe9, ce compteur est incr\xe9ment\xe9. Si vous passez le param\xe8tre ",(0,r.jsx)(s.em,{children:"marqueur"}),", la commande retourne dans ",(0,r.jsx)(s.em,{children:"tabNoms"})," uniquement les formulaires correspondant \xe0 des valeurs de marqueurs sup\xe9rieures ou \xe9gales \xe0 celle de ",(0,r.jsx)(s.em,{children:"marqueur"}),". En outre, si vous passez une variable dans ",(0,r.jsx)(s.em,{children:"marqueur"}),", la commande retourne dans cette variable la nouvelle valeur du compteur de modification, c\u2019est-\xe0-dire la plus \xe9lev\xe9e. Vous pouvez alors sauvegarder cette valeur et l\u2019utiliser lors du prochain appel de la commande ",(0,r.jsx)(s.strong,{children:"FORM GET NAMES"})," afin de ne r\xe9cup\xe9rer que les formulaires nouveaux ou modifi\xe9s."]}),"\n",(0,r.jsxs)(s.p,{children:["Si la commande est ex\xe9cut\xe9e depuis un composant, elle retourne par d\xe9faut les noms des formulaires projet du composant. Si vous passez le param\xe8tre ",(0,r.jsx)(s.em,{children:"*"}),", le tableau contiendra les formulaires de la base h\xf4te."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Note :"})," Les formulaires plac\xe9s dans la corbeille ne sont pas list\xe9s."]}),"\n",(0,r.jsx)(s.h4,{id:"exemple",children:"Exemple"}),"\n",(0,r.jsx)(s.p,{children:"Exemples d\u2019utilisations type :"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-4d",children:'\xa0\xa0// Liste de tous les formulaires projet de la base\n\xa0FORM GET NAMES(t_Noms)\n\xa0\n\xa0\xa0\xa0\xa0\xa0// Liste des formulaires de la table [Emps]\n\xa0FORM GET NAMES([Emps];t_Noms)\n\xa0\n\xa0\xa0\xa0\xa0\xa0// Liste des formulaires "input" de la table [Emps]\n\xa0FORM GET NAMES([Emps];t_Noms;"input_@")\n\xa0\n\xa0\xa0\xa0\xa0\xa0// Liste de formulaires projet sp\xe9cifiques de la base\n\xa0FORM GET NAMES(t_Noms;"dialogue_@")\n\xa0\n\xa0\xa0// Liste de tous les formulaires projet de la base modifi\xe9s depuis la derni\xe8re synchronisation\n\xa0\xa0// vMarqueur contient une valeur num\xe9rique\n\xa0FORM GET NAMES(t_Noms;"";vMarqueur)\n\xa0\n\xa0\xa0\xa0\xa0\xa0// Liste de formulaires table depuis un composant\n\xa0\xa0\xa0\xa0\xa0// Un pointeur est requis car le nom de la table est inconnu\n\xa0FORM GET NAMES(tablePtr->;t_Noms;*)\n'})}),"\n",(0,r.jsx)(s.h4,{id:"voir-aussi",children:"Voir aussi"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.em,{children:"Formulaires"}),(0,r.jsx)(s.br,{}),"\n",(0,r.jsx)(s.a,{href:"/docs/fr/commands/method-get-paths-form",children:"METHOD GET PATHS FORM"})]})]})}function c(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>l});var r=n(296540);const t={},a=r.createContext(t);function i(e){const s=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(a.Provider,{value:s},e.children)}}}]);