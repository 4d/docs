"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[74756],{385602:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var t=s(474848),r=s(28453);const i={id:"set-real-comparison-level",title:"SET REAL COMPARISON LEVEL",slug:"/commands/set-real-comparison-level",displayed_sidebar:"docs"},o=void 0,l={id:"commands-legacy/set-real-comparison-level",title:"SET REAL COMPARISON LEVEL",description:"SET REAL COMPARISON LEVEL ( epsilon )",source:"@site/versioned_docs/version-20-R7/commands-legacy/set-real-comparison-level.md",sourceDirName:"commands-legacy",slug:"/commands/set-real-comparison-level",permalink:"/docs/commands/set-real-comparison-level",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fset-real-comparison-level.md%20(20-R7)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R7",frontMatter:{id:"set-real-comparison-level",title:"SET REAL COMPARISON LEVEL",slug:"/commands/set-real-comparison-level",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"Round",permalink:"/docs/commands/round"},next:{title:"Sin",permalink:"/docs/commands/sin"}},a={},c=[{value:"Description",id:"description",level:4}];function d(e){const n={a:"a",em:"em",h4:"h4",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"SET REAL COMPARISON LEVEL"})," ( ",(0,t.jsx)(n.em,{children:"epsilon"})," )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"epsilon"}),(0,t.jsx)(n.td,{children:"Real"}),(0,t.jsx)(n.td,{children:"\u2192"}),(0,t.jsx)(n.td,{children:"Epsilon value for real equality comparisons"})]})})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"This command is not thread-safe, it cannot be used in preemptive code."})}),"\n",(0,t.jsx)(n.h4,{id:"description",children:"Description"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"SET REAL COMPARISON LEVEL"})," command sets the epsilon value used by 4D to compare real values and expressions for equality."]}),"\n",(0,t.jsxs)(n.p,{children:["A computer always performs approximative real computations; therefore, testing real numbers for equality should take this approximation into account. 4D does this when comparing real numbers by testing whether or not the difference between the two numbers exceeds a certain value. This value is called the ",(0,t.jsx)(n.strong,{children:"epsilon"})," and works this way:"]}),"\n",(0,t.jsxs)(n.p,{children:["Given two real numbers ",(0,t.jsx)(n.em,{children:"a"})," and ",(0,t.jsx)(n.em,{children:"b"}),", if ",(0,t.jsx)(n.a,{href:"/docs/commands/abs",children:"Abs"}),"(a-b) is greater than the epsilon, the numbers are considered not equal; otherwise, the numbers are considered equal."]}),"\n",(0,t.jsxs)(n.p,{children:["By default, 4D, sets the epsilon value to 10 power minus 6 (10^-6). Please note that the ",(0,t.jsx)(n.em,{children:"epsilon"})," value should always be positive. Examples:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"0.00001=0.00002"})," returns False, because the difference ",(0,t.jsx)(n.em,{children:"0.00001"})," is greater than ",(0,t.jsx)(n.em,{children:"10^-6"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"0.000001=0.000002"})," returns True, because the difference ",(0,t.jsx)(n.em,{children:"0.000001"})," is not greater than ",(0,t.jsx)(n.em,{children:"10^-6"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"0.000001=0.000003"})," returns False, because the difference ",(0,t.jsx)(n.em,{children:"0.000002"})," is greater than ",(0,t.jsx)(n.em,{children:"10^-6"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Using ",(0,t.jsx)(n.strong,{children:"SET REAL COMPARISON LEVEL"}),", you can increase or decrease the epsilon value as you require."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"WARNING:"})," Typically, you will not need to use this command to change the default epsilon value."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"IMPORTANT:"})," Changing the epsilon only affects real comparison for equality. It has no effect on other real computations nor on the display of real values."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," The ",(0,t.jsx)(n.strong,{children:"SET REAL COMPARISON LEVEL"})," command has no effect on queries and sorts performed with fields of the Real type. It only applies the 4D language."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var t=s(296540);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);