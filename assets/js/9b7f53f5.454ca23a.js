"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[11554],{512290:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>a});var r=n(474848),i=n(28453);const s={id:"picture-to-blob",title:"PICTURE TO BLOB",slug:"/commands/picture-to-blob",displayed_sidebar:"docs"},c=void 0,o={id:"commands-legacy/picture-to-blob",title:"PICTURE TO BLOB",description:"PICTURE TO BLOB ( picture ; pictureBlob ; codec )",source:"@site/versioned_docs/version-20-R7/commands-legacy/picture-to-blob.md",sourceDirName:"commands-legacy",slug:"/commands/picture-to-blob",permalink:"/docs/commands/picture-to-blob",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fpicture-to-blob.md%20(20-R7)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R7",frontMatter:{id:"picture-to-blob",title:"PICTURE TO BLOB",slug:"/commands/picture-to-blob",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"Picture size",permalink:"/docs/commands/picture-size"},next:{title:"READ PICTURE FILE",permalink:"/docs/commands/read-picture-file"}},d={},a=[{value:"Description",id:"description",level:4},{value:"Example",id:"example",level:4},{value:"See also",id:"see-also",level:4}];function l(e){const t={a:"a",br:"br",code:"code",em:"em",h4:"h4",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"PICTURE TO BLOB"})," ( ",(0,r.jsx)(t.em,{children:"picture"})," ; ",(0,r.jsx)(t.em,{children:"pictureBlob"})," ; ",(0,r.jsx)(t.em,{children:"codec"})," )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Parameter"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"picture"}),(0,r.jsx)(t.td,{children:"Picture"}),(0,r.jsx)(t.td,{children:"\u2192"}),(0,r.jsx)(t.td,{children:"Picture field or variable"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"pictureBlob"}),(0,r.jsx)(t.td,{children:"Blob"}),(0,r.jsx)(t.td,{children:"\u2190"}),(0,r.jsx)(t.td,{children:"BLOB to receive the converted picture"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"codec"}),(0,r.jsx)(t.td,{children:"Text"}),(0,r.jsx)(t.td,{children:"\u2192"}),(0,r.jsx)(t.td,{children:"Picture Codec ID"})]})]})]}),"\n",(0,r.jsx)(t.h4,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.strong,{children:"PICTURE TO BLOB"})," command converts a picture stored in a 4D variable or field to another format and places the resulting picture in a BLOB."]}),"\n",(0,r.jsxs)(t.p,{children:["A picture 4D field or variable is passed in the ",(0,r.jsx)(t.em,{children:"picture"})," parameter. In the ",(0,r.jsx)(t.em,{children:"pictureBlob"})," parameter is passed a BLOB variable or field which should contain the converted picture."]}),"\n",(0,r.jsxs)(t.p,{children:["Pass in the ",(0,r.jsx)(t.em,{children:"codec"})," parameter a string setting the conversion format."]}),"\n",(0,r.jsxs)(t.p,{children:["A Codec can be an extension (for example, \u201c.gif\u201d) or a Mime type (for example \u201cimage/jpeg\u201d). You can get a list of available Codecs via the ",(0,r.jsx)(t.a,{href:"/docs/commands/picture-codec-list",children:"PICTURE CODEC LIST"})," command."]}),"\n",(0,r.jsxs)(t.p,{children:["Once the command has been executed, the ",(0,r.jsx)(t.em,{children:"pictureBlob"})," contains the picture in the specified format."]}),"\n",(0,r.jsx)(t.p,{children:"If the conversion was successful, the system variable OK is set to 1. If the conversion has failed (converter not available), OK is set to 0 and the generated BLOB is empty (0 byte)."}),"\n",(0,r.jsx)(t.h4,{id:"example",children:"Example"}),"\n",(0,r.jsx)(t.p,{children:"You want to convert an image from a proprietary format to GIF format and display it on a static web page. You can use a code such as:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-4d",children:'\xa0var $picture : Picture\n\xa0var $BLOB : Blob\n\xa0var $path : Text\n\xa0\n\xa0$path:=Get 4D folder(Current resources folder)+"Images"+Folder separator+"Sunrise.psd"\xa0//find the picture in the Images folder within the Resources folder\n\xa0READ PICTURE FILE($path;$picture)\xa0//put the picture in the picture variable\n\xa0\n\xa0PICTURE TO BLOB($picture;$BLOB;".gif")\xa0//convert the picture to ".gif" format\n\xa0WEB SEND BLOB($BLOB;"image/gif")\n'})}),"\n",(0,r.jsx)(t.h4,{id:"see-also",children:"See also"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.em,{children:"_o_PICTURE TO GIF"}),(0,r.jsx)(t.br,{}),"\n",(0,r.jsx)(t.a,{href:"/docs/commands/blob-to-picture",children:"BLOB TO PICTURE"}),(0,r.jsx)(t.br,{}),"\n",(0,r.jsx)(t.a,{href:"/docs/commands/picture-codec-list",children:"PICTURE CODEC LIST"}),(0,r.jsx)(t.br,{}),"\n",(0,r.jsx)(t.a,{href:"/docs/commands/write-picture-file",children:"WRITE PICTURE FILE"})]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>o});var r=n(296540);const i={},s=r.createContext(i);function c(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);