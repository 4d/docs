"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["29795"],{540324:function(e,n,s){s.r(n),s.d(n,{metadata:()=>t,contentTitle:()=>o,default:()=>h,assets:()=>a,toc:()=>c,frontMatter:()=>l});var t=JSON.parse('{"id":"commands-legacy/set-real-comparison-level","title":"SET REAL COMPARISON LEVEL","description":"SET REAL COMPARISON LEVEL ( epsilon )","source":"@site/versioned_docs/version-20-R7/commands-legacy/set-real-comparison-level.md","sourceDirName":"commands-legacy","slug":"/commands/set-real-comparison-level","permalink":"/docs/commands/set-real-comparison-level","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fset-real-comparison-level.md%20(20-R7)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"20-R7","frontMatter":{"id":"set-real-comparison-level","title":"SET REAL COMPARISON LEVEL","slug":"/commands/set-real-comparison-level","displayed_sidebar":"docs"},"sidebar":"docs","previous":{"title":"Round","permalink":"/docs/commands/round"},"next":{"title":"Sin","permalink":"/docs/commands/sin"}}'),r=s("785893"),i=s("250065");let l={id:"set-real-comparison-level",title:"SET REAL COMPARISON LEVEL",slug:"/commands/set-real-comparison-level",displayed_sidebar:"docs"},o=void 0,a={},c=[{value:"Description",id:"description",level:4}];function d(e){let n={a:"a",em:"em",h4:"h4",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"SET REAL COMPARISON LEVEL"})," ( ",(0,r.jsx)(n.em,{children:"epsilon"})," )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"epsilon"}),(0,r.jsx)(n.td,{children:"Real"}),(0,r.jsx)(n.td,{children:"\u2192"}),(0,r.jsx)(n.td,{children:"Epsilon value for real equality comparisons"})]})})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"This command is not thread-safe, it cannot be used in preemptive code."})}),"\n",(0,r.jsx)(n.h4,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"SET REAL COMPARISON LEVEL"})," command sets the epsilon value used by 4D to compare real values and expressions for equality."]}),"\n",(0,r.jsxs)(n.p,{children:["A computer always performs approximative real computations; therefore, testing real numbers for equality should take this approximation into account. 4D does this when comparing real numbers by testing whether or not the difference between the two numbers exceeds a certain value. This value is called the ",(0,r.jsx)(n.strong,{children:"epsilon"})," and works this way:"]}),"\n",(0,r.jsxs)(n.p,{children:["Given two real numbers ",(0,r.jsx)(n.em,{children:"a"})," and ",(0,r.jsx)(n.em,{children:"b"}),", if ",(0,r.jsx)(n.a,{href:"/docs/commands/abs",children:"Abs"}),"(a-b) is greater than the epsilon, the numbers are considered not equal; otherwise, the numbers are considered equal."]}),"\n",(0,r.jsxs)(n.p,{children:["By default, 4D, sets the epsilon value to 10 power minus 6 (10^-6). Please note that the ",(0,r.jsx)(n.em,{children:"epsilon"})," value should always be positive. Examples:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:"0.00001=0.00002"})," returns False, because the difference ",(0,r.jsx)(n.em,{children:"0.00001"})," is greater than ",(0,r.jsx)(n.em,{children:"10^-6"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:"0.000001=0.000002"})," returns True, because the difference ",(0,r.jsx)(n.em,{children:"0.000001"})," is not greater than ",(0,r.jsx)(n.em,{children:"10^-6"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:"0.000001=0.000003"})," returns False, because the difference ",(0,r.jsx)(n.em,{children:"0.000002"})," is greater than ",(0,r.jsx)(n.em,{children:"10^-6"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Using ",(0,r.jsx)(n.strong,{children:"SET REAL COMPARISON LEVEL"}),", you can increase or decrease the epsilon value as you require."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"WARNING:"})," Typically, you will not need to use this command to change the default epsilon value."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"IMPORTANT:"})," Changing the epsilon only affects real comparison for equality. It has no effect on other real computations nor on the display of real values."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," The ",(0,r.jsx)(n.strong,{children:"SET REAL COMPARISON LEVEL"})," command has no effect on queries and sorts performed with fields of the Real type. It only applies the 4D language."]})]})}function h(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return o},a:function(){return l}});var t=s(667294);let r={},i=t.createContext(r);function l(e){let n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);