"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[37422],{931067:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>a,toc:()=>d});var r=t(474848),s=t(28453);const c={id:"sequence-number",title:"Sequence number",slug:"/commands/sequence-number",displayed_sidebar:"docs"},i=void 0,a={id:"commands-legacy/sequence-number",title:"Sequence number",description:"Sequence number {( aTable )} -> Function result",source:"@site/versioned_docs/version-20-R7/commands-legacy/sequence-number.md",sourceDirName:"commands-legacy",slug:"/commands/sequence-number",permalink:"/docs/commands/sequence-number",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fsequence-number.md%20(20-R7)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R7",frontMatter:{id:"sequence-number",title:"Sequence number",slug:"/commands/sequence-number",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"SAVE RECORD",permalink:"/docs/commands/save-record"},next:{title:"Relations",permalink:"/docs/category/commands/Relations"}},o={},d=[{value:"Description",id:"description",level:4},{value:"Example",id:"example",level:4},{value:"See also",id:"see-also",level:4}];function l(e){const n={a:"a",br:"br",code:"code",em:"em",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Sequence number"})," {( ",(0,r.jsx)(n.em,{children:"aTable"})," )} -> Function result"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"aTable"}),(0,r.jsx)(n.td,{children:"Table"}),(0,r.jsx)(n.td,{children:"\u2192"}),(0,r.jsx)(n.td,{children:"Table for which to return the sequence number, or Default table, if omitted"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Function result"}),(0,r.jsx)(n.td,{children:"Longint"}),(0,r.jsx)(n.td,{children:"\u2190"}),(0,r.jsx)(n.td,{children:"Sequence number"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Sequence number"})," returns the next sequence number for ",(0,r.jsx)(n.em,{children:"aTable"}),". The sequence number is unique for each table. It is a non-repeating number that is incremented(*) for each new record created for the table."]}),"\n",(0,r.jsxs)(n.p,{children:["(*) For optimization reasons, the incrementation is started only at the first call of the ",(0,r.jsx)(n.strong,{children:"Sequence number"})," command or of a feature that gets access to the sequence number (see below). In addition, the numbering can be modified using the ",(0,r.jsx)(n.a,{href:"/docs/commands/set-database-parameter",children:"SET DATABASE PARAMETER"})," command. Consequently, the returned value should not be considered as the count of records created in the ",(0,r.jsx)(n.em,{children:"aTable"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["By default, the numbering starts at 1. You can change the numbering for a table using the ",(0,r.jsx)(n.a,{href:"/docs/commands/set-database-parameter",children:"SET DATABASE PARAMETER"})," command."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," If there is no current record and the numbering has been modified via the ",(0,r.jsx)(n.a,{href:"/docs/commands/set-database-parameter",children:"SET DATABASE PARAMETER"})," command, this number is in fact reserved for the next record creation but it will only be returned by the ",(0,r.jsx)(n.strong,{children:"Sequence number"})," function when the ",(0,r.jsx)(n.a,{href:"/docs/commands/save-record",children:"SAVE RECORD"})," command has actually been called."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"Sequence number"})," function is useful in the following cases:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The sequence number needs an increment greater than 1"}),"\n",(0,r.jsx)(n.li,{children:"The sequence number is part of a code, for example a part number code."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"To store the sequence number by means of a method, create a long integer field in the table and assign the sequence number to the field."}),"\n",(0,r.jsxs)(n.p,{children:["The sequence number returned by this function for the ",(0,r.jsx)(n.em,{children:"aTable"})," is the same number as the one generated when you check the ",(0,r.jsx)(n.strong,{children:"Autoincrement"})," option for a field of the table using the Structure inspector, or as the one assigned by using the ",(0,r.jsx)(n.em,{children:"#N"})," symbol as the default value for a field of the ",(0,r.jsx)(n.em,{children:"table"})," in a form (see the 4D Design Reference manual)."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," Automatic incrementation can also be set via the SQL AUTO_INCREMENT attribute."]}),"\n",(0,r.jsxs)(n.p,{children:["If the sequence number needs to start at a number other than 1, just add the difference to ",(0,r.jsx)(n.strong,{children:"Sequence number"}),". For example, if the sequence number must start at 1000, you would use the following statement to assign the number:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:"\xa0[Table1]Seq Field :=Sequence number([Table1])+999\n"})}),"\n",(0,r.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.p,{children:"The following example is part of a form method. It tests to see if this is a new record; i.e., if the invoice number is an empty string. If it is a new record, the method assigns an invoice number. The invoice number is formed from two pieces of information: the sequence number, and the operator\u2019s ID, which was entered when the database was opened. The sequence number is formatted as a 5-character string:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:'\xa0\xa0// If this is a new part number, create a new invoice number\n\xa0If([Invoices]Invoice No="")\n\xa0\xa0// The invoice number is a string that ends with the operator\u2019s ID.\n\xa0\xa0\xa0\xa0[Invoices]Invoice No:=String(Sequence number;"00000")+[Invoices]OpID\n\xa0End if\n'})}),"\n",(0,r.jsx)(n.h4,{id:"see-also",children:"See also"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"About Record Numbers"}),(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.a,{href:"/docs/commands/record-number",children:"Record number"}),(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.a,{href:"/docs/commands/selected-record-number",children:"Selected record number"})]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var r=t(296540);const s={},c=r.createContext(s);function i(e){const n=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);