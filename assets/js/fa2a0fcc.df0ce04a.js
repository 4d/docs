"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[96785],{603905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>s});var a=n(667294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=d(n),s=r,k=m["".concat(p,".").concat(s)]||m[s]||u[s]||l;return n?a.createElement(k,o(o({ref:t},c),{},{components:n})):a.createElement(k,o({ref:t},c))}));function s(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var d=2;d<l;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},861416:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>c});n(667294);var a=n(603905);function r(){return r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r.apply(this,arguments)}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const o={id:"vp-find",title:"VP Find"},i=void 0,p={unversionedId:"ViewPro/commands/vp-find",id:"version-20-R5/ViewPro/commands/vp-find",title:"VP Find",description:"VP Find (  rangeObj Text ) Object ; searchValue Object } ) Object ; searchValue Object ; replaceValue Object",source:"@site/versioned_docs/version-20-R5/ViewPro/commands/vp-find.md",sourceDirName:"ViewPro/commands",slug:"/ViewPro/commands/vp-find",permalink:"/docs/ViewPro/commands/vp-find",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20ViewPro%2Fcommands%2Fvp-find.md%20(20-R5)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R5",frontMatter:{id:"vp-find",title:"VP Find"},sidebar:"docs",previous:{title:"F",permalink:"/docs/commands/F"},next:{title:"VP Find table",permalink:"/docs/ViewPro/commands/vp-find-table"}},d={},c=[{value:"Description",id:"description",level:4},{value:"Returned Object",id:"returned-object",level:4},{value:"Example 1",id:"example-1",level:4},{value:"Example 2",id:"example-2",level:4}],u={toc:c};function m(e){var{components:t}=e,n=l(e,["components"]);return(0,a.kt)("wrapper",r({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"VP Find")," (  ",(0,a.kt)("em",{parentName:"p"},"rangeObj")," : Object ; ",(0,a.kt)("em",{parentName:"p"},"searchValue")," : Text ) : Object",(0,a.kt)("br",null),(0,a.kt)("strong",{parentName:"p"},"VP Find")," (  ",(0,a.kt)("em",{parentName:"p"},"rangeObj")," : Object ; ",(0,a.kt)("em",{parentName:"p"},"searchValue")," : Text ; ",(0,a.kt)("em",{parentName:"p"},"searchCondition")," : Object } ) : Object",(0,a.kt)("br",null),(0,a.kt)("strong",{parentName:"p"},"VP Find")," (  ",(0,a.kt)("em",{parentName:"p"},"rangeObj")," : Object ; ",(0,a.kt)("em",{parentName:"p"},"searchValue")," : Text ; ",(0,a.kt)("em",{parentName:"p"},"searchCondition")," : Object ; ",(0,a.kt)("em",{parentName:"p"},"replaceValue")," : Text ) : Object"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",r({parentName:"tr"},{align:null}),"Parameter"),(0,a.kt)("th",r({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",r({parentName:"tr"},{align:null})),(0,a.kt)("th",r({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",r({parentName:"tr"},{align:null}),"rangeObj"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),"Object"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),"->"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),"Range object")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",r({parentName:"tr"},{align:null}),"searchValue"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),"Text"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),"->"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),"Search value")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",r({parentName:"tr"},{align:null}),"searchCondition"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),"Object"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),"->"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),"Object containing search condition(s)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",r({parentName:"tr"},{align:null}),"replaceValue"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),"Text"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),"->"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),"Replacement value")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",r({parentName:"tr"},{align:null}),"Result"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),"Object"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),"<-"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),"Range object")))),(0,a.kt)("h4",r({},{id:"description"}),"Description"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"VP Find")," command searches the ",(0,a.kt)("em",{parentName:"p"},"rangeObj")," for the ",(0,a.kt)("em",{parentName:"p"},"searchValue"),". Optional parameters can be used to refine the search and/or replace any results found.  "),(0,a.kt)("p",null,"In the ",(0,a.kt)("em",{parentName:"p"},"rangeObj")," parameter, pass an object containing a range to search.  "),(0,a.kt)("p",null,"The ",(0,a.kt)("em",{parentName:"p"},"searchValue")," parameter lets you pass the text to search for within the ",(0,a.kt)("em",{parentName:"p"},"rangeObj"),".  "),(0,a.kt)("p",null,"You can pass the optional ",(0,a.kt)("em",{parentName:"p"},"searchCondition")," parameter to specify how the search is performed. The following properties are supported:  "),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",r({parentName:"tr"},{align:null}),"Property"),(0,a.kt)("th",r({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",r({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",r({parentName:"tr"},{align:null}),"afterColumn"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),"Integer"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),"The number of the column just before the starting column of the search. If the ",(0,a.kt)("em",{parentName:"td"},"rangeObj")," is a combined range, the column number given must be from the first range. Default value: -1 (beginning of the ",(0,a.kt)("em",{parentName:"td"},"rangeObj"),")")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",r({parentName:"tr"},{align:null}),"afterRow"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),"Integer"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),"The number of the row just before the starting row of the search. If the ",(0,a.kt)("em",{parentName:"td"},"rangeObj")," is a combined range, the row number given must be from the first range. Default value: -1 (beginning of the ",(0,a.kt)("em",{parentName:"td"},"rangeObj"),")")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",r({parentName:"tr"},{align:null}),"all"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),"Boolean"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),(0,a.kt)("li",null,"True - All cells in ",(0,a.kt)("em",{parentName:"td"},"rangeObj")," corresponding to ",(0,a.kt)("em",{parentName:"td"},"searchValue")," are returned"),(0,a.kt)("li",null,"False - (default value) Only the first cell in ",(0,a.kt)("em",{parentName:"td"},"rangeObj")," corresponding to ",(0,a.kt)("em",{parentName:"td"},"searchValue")," is returned"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",r({parentName:"tr"},{align:null}),"flags"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),"Integer"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("inlineCode",{parentName:"td"},"vk find flag exact match")),(0,a.kt)("td",null,"The entire content of the cell must completely match the search value")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("inlineCode",{parentName:"td"},"vk find flag ignore case")),(0,a.kt)("td",null,'Capital and lower-case letters are considered the same. Ex: "a" is the same as "A".')),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("inlineCode",{parentName:"td"},"vk find flag none")),(0,a.kt)("td",null,"no search flags are considered (default)")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("inlineCode",{parentName:"td"},"vk find flag use wild cards")),(0,a.kt)("td",null,"Wildcard characters (","*",",?) can be used in the search string. Wildcard characters can be used in any string comparison to match any number of characters:",(0,a.kt)("li",null,"*",' for zero or multiple characters (for example, searching for "bl*"  can find "bl", "black", or "blob")'),(0,a.kt)("li",null,'? for a single character (for example, searching for "h?t" can find "hot", or "hit"')))),"These flags can be combined. For example: ",(0,a.kt)("code",null,"$search.flags:=vk find flag use wild cards+vk find flag ignore case"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",r({parentName:"tr"},{align:null}),"order"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),"Integer"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("inlineCode",{parentName:"td"},"vk find order by columns")),(0,a.kt)("td",null,"The search is performed by columns. Each row of a column is searched before the search continues to the next column.")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("inlineCode",{parentName:"td"},"vk find order by rows")),(0,a.kt)("td",null,"The search is performed by rows. Each column of a row is searched before the search continues to the next row (default)"))))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",r({parentName:"tr"},{align:null}),"target"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),"Integer"),(0,a.kt)("td",r({parentName:"tr"},{align:null}),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("inlineCode",{parentName:"td"},"vk find target formula")),(0,a.kt)("td",null,"The search is performed in the cell formula")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("inlineCode",{parentName:"td"},"vk find target tag")),(0,a.kt)("td",null,"The search is performed in the cell tag")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("inlineCode",{parentName:"td"},"vk find target text")),(0,a.kt)("td",null,"The search is performed in the cell text (default)"))),(0,a.kt)("p",null,"These flags can be combined. For example:",(0,a.kt)("code",null,"$search.target:=vk find target formula+vk find target text")))))),(0,a.kt)("p",null,"In the optional ",(0,a.kt)("em",{parentName:"p"},"replaceValue")," parameter, you can pass text to take the place of any instance of the text in ",(0,a.kt)("em",{parentName:"p"},"searchValue")," found in the ",(0,a.kt)("em",{parentName:"p"},"rangeObj"),"."),(0,a.kt)("h4",r({},{id:"returned-object"}),"Returned Object"),(0,a.kt)("p",null,"The function returns a range object describing each search value that was found or replaced. An empty range object is returned if no results are found."),(0,a.kt)("h4",r({},{id:"example-1"}),"Example 1"),(0,a.kt)("p",null,'To find the first cell containing the word "Total":'),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'var $range;$result : Object\n \n$range:=VP All("ViewProArea")\n \n$result:=VP Find($range;"Total")\n')),(0,a.kt)("h4",r({},{id:"example-2"}),"Example 2"),(0,a.kt)("p",null,'To find "Total" and replace it with "Grand Total":  '),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'var $range;$condition;$result : Object\n \n$range:=VP All("ViewProArea")\n \n$condition:=New object\n$condition.target:=vk find target text\n$condition.all:=True //Search entire document\n$condition.flags:=vk find flag exact match\n \n  // Replace the cells containing only \'Total\' in the current sheet with "Grand Total"\n\n\n$result:=VP Find($range;"Total";$condition;"Grand Total")\n \n  // Check for empty range object \nIf($result.ranges.length=0)\n    ALERT("No result found")\nElse\n    ALERT($result.ranges.length+" results found")\nEnd if\n')))}m.isMDXComponent=!0}}]);