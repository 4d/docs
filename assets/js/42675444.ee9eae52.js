"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["7838"],{317107:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>l,toc:()=>h,default:()=>x,metadata:()=>d,assets:()=>i,contentTitle:()=>c});var d=JSON.parse('{"id":"commands-legacy/dom-get-xml-child-nodes","title":"DOM GET XML CHILD NODES","description":"DOM GET XML CHILD NODES ( elementRef ; childTypesArr ; nodeRefsArr )","source":"@site/versioned_docs/version-21/commands-legacy/dom-get-xml-child-nodes.md","sourceDirName":"commands-legacy","slug":"/commands/dom-get-xml-child-nodes","permalink":"/docs/commands/dom-get-xml-child-nodes","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fdom-get-xml-child-nodes.md%20(21)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"21","frontMatter":{"id":"dom-get-xml-child-nodes","title":"DOM GET XML CHILD NODES","slug":"/commands/dom-get-xml-child-nodes","displayed_sidebar":"docs"},"sidebar":"docs"}'),s=r(785893),t=r(250065);let l={id:"dom-get-xml-child-nodes",title:"DOM GET XML CHILD NODES",slug:"/commands/dom-get-xml-child-nodes",displayed_sidebar:"docs"},c=void 0,i={},h=[{value:"Description",id:"description",level:2},{value:"Example",id:"example",level:2},{value:"See also",id:"see-also",level:2},{value:"Properties",id:"properties",level:2}];function o(e){let n={a:"a",br:"br",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"DOM GET XML CHILD NODES"})," ( ",(0,s.jsx)(n.em,{children:"elementRef"})," ; ",(0,s.jsx)(n.em,{children:"childTypesArr"})," ; ",(0,s.jsx)(n.em,{children:"nodeRefsArr"})," )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"elementRef"}),(0,s.jsx)(n.td,{children:"Text"}),(0,s.jsx)(n.td,{children:"\u2192"}),(0,s.jsx)(n.td,{children:"XML element reference"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"childTypesArr"}),(0,s.jsx)(n.td,{children:"Array integer"}),(0,s.jsx)(n.td,{children:"\u2190"}),(0,s.jsx)(n.td,{children:"Types of child nodes"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"nodeRefsArr"}),(0,s.jsx)(n.td,{children:"Text array"}),(0,s.jsx)(n.td,{children:"\u2190"}),(0,s.jsx)(n.td,{children:"References or Values of child nodes"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"DOM GET XML CHILD NODES"})," command returns the types and references or values of all the child nodes of the XML element designated by ",(0,s.jsx)(n.em,{children:"elementRef"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["The types of child nodes are returned in the ",(0,s.jsx)(n.em,{children:"childTypesArr"}),' array. You can compare the values returned by the command with the following constants, found in the "',(0,s.jsx)(n.em,{children:"XML"}),'" theme:']}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Constant"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Value"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"XML comment"}),(0,s.jsx)(n.td,{children:"Integer"}),(0,s.jsx)(n.td,{children:"2"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"XML processing instruction"}),(0,s.jsx)(n.td,{children:"Integer"}),(0,s.jsx)(n.td,{children:"3"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"XML DATA"}),(0,s.jsx)(n.td,{children:"Integer"}),(0,s.jsx)(n.td,{children:"6"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"XML CDATA"}),(0,s.jsx)(n.td,{children:"Integer"}),(0,s.jsx)(n.td,{children:"7"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"XML DOCTYPE"}),(0,s.jsx)(n.td,{children:"Integer"}),(0,s.jsx)(n.td,{children:"10"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"XML ELEMENT"}),(0,s.jsx)(n.td,{children:"Integer"}),(0,s.jsx)(n.td,{children:"11"})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:["For more information, please refer to the description of the ",(0,s.jsx)(n.a,{href:"/docs/commands/dom-append-xml-child-node",children:"DOM Append XML child node"})," command."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.em,{children:"nodeRefsArr"})," array receives the values or references of the elements according to their nature (contents or instructions)."]}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.p,{children:"Given the following XML structure:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-XML",children:"<myElement>Hello<br/>New<br/>York</myElement>\n"})}),"\n",(0,s.jsx)(n.p,{children:"After executing these instructions:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-4d",children:'\xa0elementRef:=DOM Find XML element($root;"myElement")\n\xa0DOM GET XML CHILD NODES(elementRef;$typeArr;$textArr)\n'})}),"\n",(0,s.jsx)(n.p,{children:"... the $typeArr and $textArr arrays will contain the following values:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"$typeArr{1}=6"}),(0,s.jsx)(n.th,{children:'$textArr{1} = "Hello"'})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"$typeArr{2}=11"}),(0,s.jsxs)(n.td,{children:['$textArr{2} = "AEF1233456878977" (element reference ',(0,s.jsx)(n.br,{}),")"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"$typeArr{3}=6"}),(0,s.jsx)(n.td,{children:'$textArr{3} = "New"'})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"$typeArr{4}=11"}),(0,s.jsxs)(n.td,{children:['$textArr{4} = "AEF1237897734568" (element reference ',(0,s.jsx)(n.br,{}),")"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"$typeArr{5}=6"}),(0,s.jsx)(n.td,{children:'$textArr{5} = "York"'})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"see-also",children:"See also"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/docs/commands/dom-append-xml-child-node",children:"DOM Append XML child node"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.a,{href:"/docs/commands/dom-get-xml-document-ref",children:"DOM Get XML document ref"})]}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{}),(0,s.jsx)(n.th,{})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Command number"}),(0,s.jsx)(n.td,{children:"1081"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Thread safe"}),(0,s.jsx)(n.td,{children:"\u2713"})]})]})]})]})}function x(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},250065:function(e,n,r){r.d(n,{Z:()=>c,a:()=>l});var d=r(667294);let s={},t=d.createContext(s);function l(e){let n=d.useContext(t);return d.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),d.createElement(t.Provider,{value:n},e.children)}}}]);