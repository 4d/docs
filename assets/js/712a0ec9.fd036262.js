"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[82721],{918678:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var i=t(474848),s=t(28453);const r={id:"is-nil-pointer",title:"Is nil pointer",slug:"/commands/is-nil-pointer",displayed_sidebar:"docs"},o=void 0,l={id:"commands-legacy/is-nil-pointer",title:"Is nil pointer",description:"Is nil pointer ( aPointer ) -> Function result",source:"@site/versioned_docs/version-20-R7/commands-legacy/is-nil-pointer.md",sourceDirName:"commands-legacy",slug:"/commands/is-nil-pointer",permalink:"/docs/commands/is-nil-pointer",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fis-nil-pointer.md%20(20-R7)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R7",frontMatter:{id:"is-nil-pointer",title:"Is nil pointer",slug:"/commands/is-nil-pointer",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"Is a variable",permalink:"/docs/commands/is-a-variable"},next:{title:"Null",permalink:"/docs/commands/null"}},d={},c=[{value:"Description",id:"description",level:4},{value:"Example",id:"example",level:4},{value:"See also",id:"see-also",level:4}];function a(e){const n={a:"a",br:"br",code:"code",em:"em",h4:"h4",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Is nil pointer"})," ( ",(0,i.jsx)(n.em,{children:"aPointer"})," ) -> Function result"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"aPointer"}),(0,i.jsx)(n.td,{children:"Pointer"}),(0,i.jsx)(n.td,{children:"\u2192"}),(0,i.jsx)(n.td,{children:"Pointer to be tested"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Function result"}),(0,i.jsx)(n.td,{children:"Boolean"}),(0,i.jsx)(n.td,{children:"\u2190"}),(0,i.jsx)(n.td,{children:"TRUE = Nil pointer (->[]) FALSE = Valid pointer to an existing object"})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"Is nil pointer"})," command returns True if the pointer you pass in ",(0,i.jsx)(n.em,{children:"aPointer"})," is Nil (",(0,i.jsx)(n.em,{children:"->[]"}),"). It returns False in all other cases (pointer to field, table or variable)."]}),"\n",(0,i.jsxs)(n.p,{children:["If you want to find out the name of the variable or the number of the field that is being pointed to, you can use the ",(0,i.jsx)(n.a,{href:"/docs/commands/resolve-pointer",children:"RESOLVE POINTER"})," command."]}),"\n",(0,i.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:"\xa0var $ptr : Pointer\n\xa0...\n\xa0If(Is nil pointer($ptr))\n\xa0End if\n\xa0\xa0// is equivalent to\n\xa0If($ptr=Null)\n\xa0End if\n"})}),"\n",(0,i.jsx)(n.h4,{id:"see-also",children:"See also"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/commands/is-a-variable",children:"Is a variable"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.a,{href:"/docs/commands/resolve-pointer",children:"RESOLVE POINTER"})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var i=t(296540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);