"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[19522],{488550:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>m,frontMatter:()=>r,metadata:()=>d,toc:()=>l});var t=s(474848),o=s(28453);const r={id:"copy-named-selection",title:"COPY NAMED SELECTION",slug:"/commands/copy-named-selection",displayed_sidebar:"docs"},c=void 0,d={id:"commands-legacy/copy-named-selection",title:"COPY NAMED SELECTION",description:"COPY NAMED SELECTION ( {aTable ;} name )",source:"@site/versioned_docs/version-20-R7/commands-legacy/copy-named-selection.md",sourceDirName:"commands-legacy",slug:"/commands/copy-named-selection",permalink:"/docs/commands/copy-named-selection",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fcopy-named-selection.md%20(20-R7)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R7",frontMatter:{id:"copy-named-selection",title:"COPY NAMED SELECTION",slug:"/commands/copy-named-selection",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"CLEAR NAMED SELECTION",permalink:"/docs/commands/clear-named-selection"},next:{title:"CUT NAMED SELECTION",permalink:"/docs/commands/cut-named-selection"}},i={},l=[{value:"Description",id:"description",level:4},{value:"Example",id:"example",level:4},{value:"See also",id:"see-also",level:4}];function a(e){const n={a:"a",br:"br",code:"code",em:"em",h4:"h4",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"COPY NAMED SELECTION"})," ( {",(0,t.jsx)(n.em,{children:"aTable"})," ;} ",(0,t.jsx)(n.em,{children:"name"})," )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"aTable"}),(0,t.jsx)(n.td,{children:"Table"}),(0,t.jsx)(n.td,{children:"\u2192"}),(0,t.jsx)(n.td,{children:"Table from which to copy selection, or Default table, if omitted"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"name"}),(0,t.jsx)(n.td,{children:"Text"}),(0,t.jsx)(n.td,{children:"\u2192"}),(0,t.jsx)(n.td,{children:"Name of the named selection to create"})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"description",children:"Description"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"COPY NAMED SELECTION"})," copies the current selection of ",(0,t.jsx)(n.em,{children:"aTable"})," to the named selection ",(0,t.jsx)(n.em,{children:"name"}),". The default table for the process is used if the optional ",(0,t.jsx)(n.em,{children:"table"})," parameter is not specified. The parameter ",(0,t.jsx)(n.em,{children:"name"})," contains a copy of the selection. The current selection and the current record of ",(0,t.jsx)(n.em,{children:"aTable"})," for the process are not changed."]}),"\n",(0,t.jsxs)(n.p,{children:["A named selection does not actually contain the records, but only an ordered list of references to records. Each reference to a record takes 4 bytes in memory. This means that when a selection is copied using the ",(0,t.jsx)(n.strong,{children:"COPY NAMED SELECTION"})," command, the amount of memory required is 4 bytes multiplied by the number of records in the selection. Since named selections reside in memory, you should have enough memory for the named selection as well as the current selection of the table in the process."]}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.a,{href:"/docs/commands/clear-named-selection",children:"CLEAR NAMED SELECTION"})," command to free the memory used by ",(0,t.jsx)(n.em,{children:"name"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,t.jsxs)(n.p,{children:["The following example allows you to check if there are other overdue invoices in the ",(0,t.jsx)(n.em,{children:"[People"}),"] table. The selection is sorted and then saved. We search for all records where invoices are due. Then we reuse the selection and clear the named selection in memory. Clearing the named selection in memory is optional, in case the database designer wants to keep the sorted selection for future use:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-4d",children:'\xa0ALL RECORDS([People])\n\xa0\xa0//Allow the user to sort the selection\n\xa0ORDER BY([People])\n\xa0\xa0// Save the sorted selection as a named selection\n\xa0COPY NAMED SELECTION([People];"UserSort")\n\xa0\xa0// Search for records where invoices are due\n\xa0QUERY([People];[People]InvoiceDue=True)\n\xa0\xa0// If records are found\n\xa0If(Records in selection([People])>0)\n\xa0\xa0// Alert the user\n\xa0\xa0\xa0\xa0ALERT("Yes, there are overdue invoices on table.")\n\xa0End if\n\xa0\xa0// Reuse the sorted named selection\n\xa0USE NAMED SELECTION("UserSort")\n\xa0\xa0// Remove the selection from memory\n\xa0CLEAR NAMED SELECTION("UserSort")\n'})}),"\n",(0,t.jsx)(n.h4,{id:"see-also",children:"See also"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/docs/commands/clear-named-selection",children:"CLEAR NAMED SELECTION"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.a,{href:"/docs/commands/cut-named-selection",children:"CUT NAMED SELECTION"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.a,{href:"/docs/commands/use-named-selection",children:"USE NAMED SELECTION"})]})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>d});var t=s(296540);const o={},r=t.createContext(o);function c(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);