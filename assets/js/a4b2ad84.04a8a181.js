"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[48247],{227892:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var s=n(474848),r=n(28453);const o={id:"listbox-get-grid-colors",title:"LISTBOX GET GRID COLORS",slug:"/commands/listbox-get-grid-colors",displayed_sidebar:"docs"},i=void 0,d={id:"commands-legacy/listbox-get-grid-colors",title:"LISTBOX GET GRID COLORS",description:"LISTBOX GET GRID COLORS ( { ;} object ; hColor ; vColor* )",source:"@site/versioned_docs/version-20-R7/commands-legacy/listbox-get-grid-colors.md",sourceDirName:"commands-legacy",slug:"/commands/listbox-get-grid-colors",permalink:"/docs/commands/listbox-get-grid-colors",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Flistbox-get-grid-colors.md%20(20-R7)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R7",frontMatter:{id:"listbox-get-grid-colors",title:"LISTBOX GET GRID COLORS",slug:"/commands/listbox-get-grid-colors",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"LISTBOX GET GRID",permalink:"/docs/commands/listbox-get-grid"},next:{title:"LISTBOX Get headers height",permalink:"/docs/commands/listbox-get-headers-height"}},l={},c=[{value:"Description",id:"description",level:4},{value:"See also",id:"see-also",level:4}];function a(e){const t={a:"a",em:"em",h4:"h4",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"LISTBOX GET GRID COLORS"})," ( {* ;} ",(0,s.jsx)(t.em,{children:"object"})," ; ",(0,s.jsx)(t.em,{children:"hColor"})," ; ",(0,s.jsx)(t.em,{children:"vColor"})," )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Parameter"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"*"}),(0,s.jsx)(t.td,{children:"Operator"}),(0,s.jsx)(t.td,{children:"\u2192"}),(0,s.jsx)(t.td,{children:"If specified, object is an object name (string)If omitted, object is a variable"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"object"}),(0,s.jsx)(t.td,{children:"any"}),(0,s.jsx)(t.td,{children:"\u2192"}),(0,s.jsx)(t.td,{children:"Object name (if * is specified) or Variable (if * is omitted)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"hColor"}),(0,s.jsx)(t.td,{children:"Text, Integer"}),(0,s.jsx)(t.td,{children:"\u2190"}),(0,s.jsx)(t.td,{children:"Value of RGB color for horizontal lines"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"vColor"}),(0,s.jsx)(t.td,{children:"Text, Integer"}),(0,s.jsx)(t.td,{children:"\u2190"}),(0,s.jsx)(t.td,{children:"Value of RGB color for vertical lines"})]})]})]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"This command is not thread-safe, it cannot be used in preemptive code."})}),"\n",(0,s.jsx)(t.h4,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.strong,{children:"LISTBOX GET GRID COLORS"})," command returns the color of the horizontal and vertical lines making up the grid of the list box object designated by the ",(0,s.jsx)(t.em,{children:"object"})," and ",(0,s.jsx)(t.em,{children:"*"})," parameters."]}),"\n",(0,s.jsxs)(t.p,{children:["If you pass the optional ",(0,s.jsx)(t.em,{children:"*"})," parameter, this indicates that the ",(0,s.jsx)(t.em,{children:"object"})," parameter is an object name (a string). If you do not pass this parameter, this indicates that the ",(0,s.jsx)(t.em,{children:"object"})," is a variable. In this case, you pass a variable reference instead of a string."]}),"\n",(0,s.jsxs)(t.p,{children:["In ",(0,s.jsx)(t.em,{children:"hColor"})," and ",(0,s.jsx)(t.em,{children:"vColor"}),", the command returns the values of the RGB colors. The color format depends on the type of the parameter you passed in ",(0,s.jsx)(t.em,{children:"hColor"})," and ",(0,s.jsx)(t.em,{children:"vColor"}),":"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:'if you passed a text, the color will be expressed as a CSS text (format "#rrggbb")'}),"\n",(0,s.jsx)(t.li,{children:"if you passed a longint, the color will be expressed as a 4-byte Long Integer (format 0x00rrggbb)."}),"\n"]}),"\n",(0,s.jsx)(t.h4,{id:"see-also",children:"See also"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"/docs/commands/listbox-set-grid-color",children:"LISTBOX SET GRID COLOR"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>d});var s=n(296540);const r={},o=s.createContext(r);function i(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);