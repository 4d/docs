"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["11965"],{824171:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>a,default:()=>u,toc:()=>l,metadata:()=>s,assets:()=>r,contentTitle:()=>c});var s=JSON.parse('{"id":"API/overview","title":"About class functions","description":"This section describes the built-in 4D class functions as well as the associated constructor commands. 4D class functions and properties are available through class instance objects.","source":"@site/versioned_docs/version-20-R9/API/overview.md","sourceDirName":"API","slug":"/API/overview","permalink":"/docs/20-R9/API/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20API%2Foverview.md%20(20-R9)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"20-R9","frontMatter":{"id":"overview","title":"About class functions"},"sidebar":"docs","previous":{"title":"Classes","permalink":"/docs/20-R9/category/class-API-reference"},"next":{"title":"Blob","permalink":"/docs/20-R9/API/BlobClass"}}'),o=t(785893),i=t(250065);let a={id:"overview",title:"About class functions"},c=void 0,r={},l=[{value:"Writing conventions",id:"writing-conventions",level:2},{value:"See also",id:"see-also",level:2}];function d(e){let n={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",ul:"ul",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"This section describes the built-in 4D class functions as well as the associated constructor commands. 4D class functions and properties are available through class instance objects."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["functions must be called on instances with the ",(0,o.jsx)(n.code,{children:"()"})," operator. For example, ",(0,o.jsx)(n.code,{children:"collection.sort()"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["properties are accessed without parentheses, for example ",(0,o.jsx)(n.code,{children:"file.creationTime"}),". You can also use the [] syntax, for example ",(0,o.jsx)(n.code,{children:'file["creationTime"]'}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["commands can be called independantly, with or without parameters. For example ",(0,o.jsx)(n.code,{children:"Folder(fk database folder)"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"writing-conventions",children:"Writing conventions"}),"\n",(0,o.jsx)(n.p,{children:"The following conventions are used in the function syntax:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["the ",(0,o.jsx)(n.code,{children:"{ }"})," characters (braces) indicate optional parameters. For example, ",(0,o.jsx)(n.code,{children:".delete( { option : Integer } )"})," means that the ",(0,o.jsx)(n.em,{children:"option"})," parameter may be omitted when calling the function."]}),"\n",(0,o.jsxs)(n.li,{children:["the ",(0,o.jsx)(n.code,{children:"{ ; ...param }"})," notation indicates an unlimited number of parameters. For example, ",(0,o.jsx)(n.code,{children:".concat( value : any { ;...valueN } ) : Collection"})," means that an unlimited number of values of any type can be passed to the function."]}),"\n",(0,o.jsxs)(n.li,{children:["the ",(0,o.jsx)(n.code,{children:"any"})," keyword is used for parameters that can be of any type that can be stored within attributes (number, text, boolean, date, time, object, collection...)."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"see-also",children:"See also"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"/docs/20-R9/Concepts/classes",children:"Classes in the 4D Language"}),"."]})]})}function u(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},250065:function(e,n,t){t.d(n,{Z:()=>c,a:()=>a});var s=t(667294);let o={},i=s.createContext(o);function a(e){let n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);