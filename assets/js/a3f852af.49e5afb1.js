"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["83749"],{32041:function(e,s,n){n.r(s),n.d(s,{default:()=>u,frontMatter:()=>c,metadata:()=>r,assets:()=>i,toc:()=>a,contentTitle:()=>d});var r=JSON.parse('{"id":"commands-legacy/count-user-processes","title":"Count user processes","description":"Count user processes  : Integer","source":"@site/versioned_docs/version-20-R8/commands-legacy/count-user-processes.md","sourceDirName":"commands-legacy","slug":"/commands/count-user-processes","permalink":"/docs/commands/count-user-processes","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fcount-user-processes.md%20(20-R8)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"20-R8","frontMatter":{"id":"count-user-processes","title":"Count user processes","slug":"/commands/count-user-processes","displayed_sidebar":"docs"},"sidebar":"docs","previous":{"title":"Count tasks","permalink":"/docs/commands/count-tasks"},"next":{"title":"Count users","permalink":"/docs/commands/count-users"}}'),t=n("785893"),o=n("250065");let c={id:"count-user-processes",title:"Count user processes",slug:"/commands/count-user-processes",displayed_sidebar:"docs"},d=void 0,i={},a=[{value:"Description",id:"description",level:2},{value:"See also",id:"see-also",level:2},{value:"Properties",id:"properties",level:2}];function l(e){let s={a:"a",br:"br",em:"em",h2:"h2",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Count user processes"}),"  : Integer"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Parameter"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsx)(s.tbody,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Function result"}),(0,t.jsx)(s.td,{children:"Integer"}),(0,t.jsx)(s.td,{children:"\u2190"}),(0,t.jsx)(s.td,{children:"Number of live processes (excluding internal processes)"})]})})]}),"\n",(0,t.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,t.jsxs)(s.p,{children:['Count user processes returns the current number of "live" processes in the 4D application whose type is different from -25 (Internal Timer Process), -31 (Client Manager Process) and -15 (Server Interface Process). For more information about process types, please refer to the ',(0,t.jsx)(s.a,{href:"/docs/commands/process-info",children:"Process info"})," command and to the ",(0,t.jsx)(s.em,{children:"Process Type"})," constants theme."]}),"\n",(0,t.jsxs)(s.p,{children:["The Count user processes function returns the number of processes opened directly or indirectly by the user (processes for which the ",(0,t.jsx)(s.em,{children:"origin"})," parameter returned by the ",(0,t.jsx)(s.a,{href:"/docs/commands/process-info",children:"Process info"})," command is greater than or equal to 0)."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Note:"}),' The "live" processes are processes whose status is neither ',(0,t.jsx)(s.em,{children:"aborted"}),", nor ",(0,t.jsx)(s.em,{children:"does not exist"})," (see the ",(0,t.jsx)(s.a,{href:"/docs/commands/process-state",children:"Process state"})," command)."]}),"\n",(0,t.jsx)(s.h2,{id:"see-also",children:"See also"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"/docs/commands/count-tasks",children:"Count tasks"}),(0,t.jsx)(s.br,{}),"\n",(0,t.jsx)(s.a,{href:"/docs/commands/count-users",children:"Count users"})]}),"\n",(0,t.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{}),(0,t.jsx)(s.th,{})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Command number"}),(0,t.jsx)(s.td,{children:"343"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Thread safe"}),(0,t.jsx)(s.td,{children:"\u2713"})]})]})]})]})}function u(e={}){let{wrapper:s}={...(0,o.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},250065:function(e,s,n){n.d(s,{Z:function(){return d},a:function(){return c}});var r=n(667294);let t={},o=r.createContext(t);function c(e){let s=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),r.createElement(o.Provider,{value:s},e.children)}}}]);