"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["58136"],{434811:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>d,toc:()=>o,default:()=>h,metadata:()=>r,assets:()=>a,contentTitle:()=>l});var r=JSON.parse('{"id":"commands-legacy/get-field-entry-properties","title":"GET FIELD ENTRY PROPERTIES","description":"GET FIELD ENTRY PROPERTIES ( fieldPtr ; list ; mandatory ; nonEnterable ; nonModifiable )GET FIELD ENTRY PROPERTIES ( tableNum ; fieldNum ; list ; mandatory ; nonEnterable ; nonModifiable )","source":"@site/versioned_docs/version-20-R10/commands-legacy/get-field-entry-properties.md","sourceDirName":"commands-legacy","slug":"/commands/get-field-entry-properties","permalink":"/docs/commands/get-field-entry-properties","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fget-field-entry-properties.md%20(20-R10)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"20-R10","frontMatter":{"id":"get-field-entry-properties","title":"GET FIELD ENTRY PROPERTIES","slug":"/commands/get-field-entry-properties","displayed_sidebar":"docs"},"sidebar":"docs","previous":{"title":"Get external data path","permalink":"/docs/commands/get-external-data-path"},"next":{"title":"GET FIELD PROPERTIES","permalink":"/docs/commands/get-field-properties"}}'),i=t(785893),s=t(250065);let d={id:"get-field-entry-properties",title:"GET FIELD ENTRY PROPERTIES",slug:"/commands/get-field-entry-properties",displayed_sidebar:"docs"},l=void 0,a={},o=[{value:"Description",id:"description",level:2},{value:"See also",id:"see-also",level:2},{value:"Properties",id:"properties",level:2}];function c(e){let n={a:"a",br:"br",em:"em",h2:"h2",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"GET FIELD ENTRY PROPERTIES"})," ( ",(0,i.jsx)(n.em,{children:"fieldPtr"})," ; ",(0,i.jsx)(n.em,{children:"list"})," ; ",(0,i.jsx)(n.em,{children:"mandatory"})," ; ",(0,i.jsx)(n.em,{children:"nonEnterable"})," ; ",(0,i.jsx)(n.em,{children:"nonModifiable"})," )",(0,i.jsx)(n.br,{}),(0,i.jsx)(n.strong,{children:"GET FIELD ENTRY PROPERTIES"})," ( ",(0,i.jsx)(n.em,{children:"tableNum"})," ; ",(0,i.jsx)(n.em,{children:"fieldNum"})," ; ",(0,i.jsx)(n.em,{children:"list"})," ; ",(0,i.jsx)(n.em,{children:"mandatory"})," ; ",(0,i.jsx)(n.em,{children:"nonEnterable"})," ; ",(0,i.jsx)(n.em,{children:"nonModifiable"})," )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"fieldPtr|tableNum"}),(0,i.jsx)(n.td,{children:"Pointer, Integer"}),(0,i.jsx)(n.td,{children:"\u2192"}),(0,i.jsx)(n.td,{children:"Field pointer or table number"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"fieldNum"}),(0,i.jsx)(n.td,{children:"Integer"}),(0,i.jsx)(n.td,{children:"\u2192"}),(0,i.jsx)(n.td,{children:"Field number if the table number is passed as first parameter"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"list"}),(0,i.jsx)(n.td,{children:"Text"}),(0,i.jsx)(n.td,{children:"\u2190"}),(0,i.jsx)(n.td,{children:"Associated choice list name or empty string"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"mandatory"}),(0,i.jsx)(n.td,{children:"Boolean"}),(0,i.jsx)(n.td,{children:"\u2190"}),(0,i.jsx)(n.td,{children:"True = Mandatory, False = Optional"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"nonEnterable"}),(0,i.jsx)(n.td,{children:"Boolean"}),(0,i.jsx)(n.td,{children:"\u2190"}),(0,i.jsx)(n.td,{children:"True = Non-enterable, False = Enterable"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"nonModifiable"}),(0,i.jsx)(n.td,{children:"Boolean"}),(0,i.jsx)(n.td,{children:"\u2190"}),(0,i.jsx)(n.td,{children:"True = Non-modifiable, False = Modifiable"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["The GET FIELD ENTRY PROPERTIES command returns the data entry properties for the field specified by ",(0,i.jsx)(n.em,{children:"tableNum"})," and ",(0,i.jsx)(n.em,{children:"fieldNum"})," or by ",(0,i.jsx)(n.em,{children:"fieldPtr"}),".",(0,i.jsx)(n.br,{}),"\nYou can either pass:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["table and field numbers in ",(0,i.jsx)(n.em,{children:"tableNum"})," and ",(0,i.jsx)(n.em,{children:"fieldNum"}),", or"]}),"\n",(0,i.jsxs)(n.li,{children:["a pointer to the field in ",(0,i.jsx)(n.em,{children:"fieldPtr"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note:"})," This command returns the properties defined at the structure window level. Similar properties can be defined at the form level."]}),"\n",(0,i.jsx)(n.p,{children:"Once the command has been executed:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.em,{children:"list"})," parameter returns the choice list name associated to the field (if any). A list can be associated to the following field types: String, Text, Real, Integer, Long Integer, Date, Time and Boolean.",(0,i.jsx)(n.br,{}),'\nIf there is no choice list associated to the field or if the field type is not suitable for a choice list, an empty string is returned ("").']}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.em,{children:"mandatory"})," parameter returns True if the field is \u201CMandatory\u201D; else False. The Mandatory attribute can be set for all field types, except for BLOB."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.em,{children:"nonEnterable"})," parameter returns True if the field is \u201CNon-enterable\u201D, else False. A non-enterable field can only be read, no data can be entered. The non-enterable attribute can be set for all field types, except for BLOB."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.em,{children:"nonModifiable"})," parameter returns True if the field is \u201CNon-modifiable\u201D, else False. A non-modifiable field can be entered just once and cannot be modified anymore. The Non-modifiable attribute can be set for all field types, except for BLOB."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"see-also",children:"See also"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/commands/get-field-properties",children:"GET FIELD PROPERTIES"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.a,{href:"/docs/commands/get-relation-properties",children:"GET RELATION PROPERTIES"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.a,{href:"/docs/commands/get-table-properties",children:"GET TABLE PROPERTIES"})]}),"\n",(0,i.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{}),(0,i.jsx)(n.th,{})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Command number"}),(0,i.jsx)(n.td,{children:"685"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Thread safe"}),(0,i.jsx)(n.td,{children:"\u2717"})]})]})]})]})}function h(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},250065:function(e,n,t){t.d(n,{Z:()=>l,a:()=>d});var r=t(667294);let i={},s=r.createContext(i);function d(e){let n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);