"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["36951"],{364622:function(e,t,n){n.r(t),n.d(t,{default:()=>h,frontMatter:()=>o,metadata:()=>r,assets:()=>a,toc:()=>c,contentTitle:()=>d});var r=JSON.parse('{"id":"commands-legacy/import-dif","title":"IMPORT DIF","description":"IMPORT DIF ( {aTable ;} document )","source":"@site/versioned_docs/version-20-R9/commands-legacy/import-dif.md","sourceDirName":"commands-legacy","slug":"/commands/import-dif","permalink":"/docs/commands/import-dif","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fimport-dif.md%20(20-R9)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"20-R9","frontMatter":{"id":"import-dif","title":"IMPORT DIF","slug":"/commands/import-dif","displayed_sidebar":"docs"},"sidebar":"docs","previous":{"title":"IMPORT DATA","permalink":"/docs/commands/import-data"},"next":{"title":"IMPORT SYLK","permalink":"/docs/commands/import-sylk"}}'),s=n("785893"),i=n("250065");let o={id:"import-dif",title:"IMPORT DIF",slug:"/commands/import-dif",displayed_sidebar:"docs"},d=void 0,a={},c=[{value:"Description",id:"description",level:2},{value:"Example",id:"example",level:2},{value:"System variables and sets",id:"system-variables-and-sets",level:2},{value:"See also",id:"see-also",level:2},{value:"Properties",id:"properties",level:2}];function l(e){let t={a:"a",br:"br",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"IMPORT DIF"})," ( {",(0,s.jsx)(t.em,{children:"aTable"})," ;} ",(0,s.jsx)(t.em,{children:"document"})," )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Parameter"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"aTable"}),(0,s.jsx)(t.td,{children:"Table"}),(0,s.jsx)(t.td,{children:"\u2192"}),(0,s.jsx)(t.td,{children:"Table into which to import data, or Default table, if omitted"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"document"}),(0,s.jsx)(t.td,{children:"Text"}),(0,s.jsx)(t.td,{children:"\u2192"}),(0,s.jsx)(t.td,{children:"DIF document from which to import data"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.strong,{children:"IMPORT DIF"})," command reads data from ",(0,s.jsx)(t.em,{children:"document"}),", a Windows or Macintosh DIF document, into the table ",(0,s.jsx)(t.em,{children:"aTable"})," by creating new records for that table."]}),"\n",(0,s.jsx)(t.p,{children:"The import operation is performed through the current input form. The import operation reads fields and variables based on the layering of objects in the input form. For this reason, you should be very careful about the front-to-back order of text objects (fields and variables) in the form. The first object into which data will be imported should be in the back of the form, and so on. If the number of fields or variables in the form does not match the number of fields being imported, the extra ones are ignored. An input form used for importing cannot contain any buttons. Subform objects are ignored."}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Note:"})," One way to ensure that the data is imported into the correct objects is to select the object into which the first field should be imported and move it to the front. Continue to move the fields and variables to the front, in order, making sure that you have one field or variable for each field being imported."]}),"\n",(0,s.jsx)(t.p,{children:"An On Validate event is sent to the form method for each record that is imported. Use this event to copy data from variables to fields, if you use variables in the import form."}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.em,{children:"document"})," parameter can include a path that contains volume and folder names. If you pass an empty string, the standard Open File dialog box is displayed. If the user cancels this dialog, the import operation is canceled, and the OK system variable is set to 0."]}),"\n",(0,s.jsxs)(t.p,{children:["A progress thermometer is displayed during import. The user can cancel the operation by clicking a Stop button. Records that have already been imported will not be removed if the user presses the Stop button. If the import is successfully completed, the OK system variable is set to 1. If an error occurs or the operation was interrupted, the OK variable is set to 0. The thermometer can be hidden with the ",(0,s.jsx)(t.a,{href:"/docs/commands/messages-off",children:"MESSAGES OFF"})," command."]}),"\n",(0,s.jsxs)(t.p,{children:["By default, the command uses the UTF-8 character set. Since DIF format documents generally use the IBM437 character set, you may need to use the ",(0,s.jsx)(t.a,{href:"/docs/commands/use-character-set",children:"USE CHARACTER SET"})," command to specify the appropriate character set."]}),"\n",(0,s.jsxs)(t.p,{children:["When using ",(0,s.jsx)(t.strong,{children:"IMPORT DIF"}),", the default field delimiter is the tab character (code 9). The default record delimiter is the carriage return (code 13). You can modify these values by assigning new values to the two ",(0,s.jsx)(t.em,{children:"System Variables"})," ",(0,s.jsx)(t.em,{children:"FldDelimit"})," and ",(0,s.jsx)(t.em,{children:"RecDelimit"}),". The user can change these default values in the export dialog box of the Design mode. Since Text fields can contain carriage returns, be careful if you use the carriage return as the field delimiter for fields to be exported."]}),"\n",(0,s.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.p,{children:"The following example imports data from a DIF document. The method first sets the input form so that the data will be imported through the correct form, then performs the import:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-4d",children:'\xa0FORM SET INPUT([People];"Import")\n\xa0IMPORT DIF([People];"NewPeople.dif")\xa0// Import from \u201CNewPeople.dif\u201D document\n'})}),"\n",(0,s.jsx)(t.h2,{id:"system-variables-and-sets",children:"System variables and sets"}),"\n",(0,s.jsx)(t.p,{children:"OK is set to 1 if the import is successfully completed; otherwise, it is set to 0."}),"\n",(0,s.jsx)(t.h2,{id:"see-also",children:"See also"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"/docs/commands/export-dif",children:"EXPORT DIF"}),(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.a,{href:"/docs/commands/import-sylk",children:"IMPORT SYLK"}),(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.a,{href:"/docs/commands/import-text",children:"IMPORT TEXT"}),(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.a,{href:"/docs/commands/use-character-set",children:"USE CHARACTER SET"})]}),"\n",(0,s.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{}),(0,s.jsx)(t.th,{})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Command number"}),(0,s.jsx)(t.td,{children:"86"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Thread safe"}),(0,s.jsx)(t.td,{children:"\u2717"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Modifies variables"}),(0,s.jsx)(t.td,{children:"OK"})]})]})]})]})}function h(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},250065:function(e,t,n){n.d(t,{Z:function(){return d},a:function(){return o}});var r=n(667294);let s={},i=r.createContext(s);function o(e){let t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);