"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[18335],{780614:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>i});var s=n(474848),d=n(28453);const r={id:"add-to-set",title:"ADD TO SET",slug:"/commands/add-to-set",displayed_sidebar:"docs"},o=void 0,c={id:"commands-legacy/add-to-set",title:"ADD TO SET",description:"ADD TO SET ( {aTable ;} set )",source:"@site/versioned_docs/version-20-R7/commands-legacy/add-to-set.md",sourceDirName:"commands-legacy",slug:"/commands/add-to-set",permalink:"/docs/commands/add-to-set",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fadd-to-set.md%20(20-R7)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R7",frontMatter:{id:"add-to-set",title:"ADD TO SET",slug:"/commands/add-to-set",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"Sets",permalink:"/docs/category/commands/Sets"},next:{title:"CLEAR SET",permalink:"/docs/commands/clear-set"}},a={},i=[{value:"Description",id:"description",level:4},{value:"See also",id:"see-also",level:4}];function l(e){const t={a:"a",em:"em",h4:"h4",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"ADD TO SET"})," ( {",(0,s.jsx)(t.em,{children:"aTable"})," ;} ",(0,s.jsx)(t.em,{children:"set"})," )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Parameter"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"aTable"}),(0,s.jsx)(t.td,{children:"Table"}),(0,s.jsx)(t.td,{children:"\u2192"}),(0,s.jsx)(t.td,{children:"Current record's table, or Default table, if omitted"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"set"}),(0,s.jsx)(t.td,{children:"Text"}),(0,s.jsx)(t.td,{children:"\u2192"}),(0,s.jsx)(t.td,{children:"Name of the set to which to add the current record"})]})]})]}),"\n",(0,s.jsx)(t.h4,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(t.p,{children:["ADD TO SET adds the current record of ",(0,s.jsx)(t.em,{children:"aTable"})," to ",(0,s.jsx)(t.em,{children:"set"}),". The set must already exist; if it does not, an error occurs. If a current record does not exist for ",(0,s.jsx)(t.em,{children:"aTable"}),", ADD TO SET has no effect."]}),"\n",(0,s.jsx)(t.h4,{id:"see-also",children:"See also"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"/docs/commands/remove-from-set",children:"REMOVE FROM SET"})})]})}function h(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var s=n(296540);const d={},r=s.createContext(d);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);