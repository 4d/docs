"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["50978"],{639922:function(e,t,n){n.r(t),n.d(t,{metadata:()=>s,contentTitle:()=>d,default:()=>h,assets:()=>l,toc:()=>c,frontMatter:()=>r});var s=JSON.parse('{"id":"commands-legacy/listbox-delete-rows","title":"LISTBOX DELETE ROWS","description":"LISTBOX DELETE ROWS ( { ;} object ; rowPosition {; numRows*} )","source":"@site/versioned_docs/version-20-R7/commands-legacy/listbox-delete-rows.md","sourceDirName":"commands-legacy","slug":"/commands/listbox-delete-rows","permalink":"/docs/commands/listbox-delete-rows","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Flistbox-delete-rows.md%20(20-R7)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"20-R7","frontMatter":{"id":"listbox-delete-rows","title":"LISTBOX DELETE ROWS","slug":"/commands/listbox-delete-rows","displayed_sidebar":"docs"},"sidebar":"docs","previous":{"title":"LISTBOX DELETE COLUMN","permalink":"/docs/commands/listbox-delete-column"},"next":{"title":"LISTBOX DUPLICATE COLUMN","permalink":"/docs/commands/listbox-duplicate-column"}}'),o=n("785893"),i=n("250065");let r={id:"listbox-delete-rows",title:"LISTBOX DELETE ROWS",slug:"/commands/listbox-delete-rows",displayed_sidebar:"docs"},d=void 0,l={},c=[{value:"Description",id:"description",level:4},{value:"See also",id:"see-also",level:4}];function a(e){let t={a:"a",br:"br",em:"em",h4:"h4",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"LISTBOX DELETE ROWS"})," ( {* ;} ",(0,o.jsx)(t.em,{children:"object"})," ; ",(0,o.jsx)(t.em,{children:"rowPosition"})," {; ",(0,o.jsx)(t.em,{children:"numRows"}),"} )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Parameter"}),(0,o.jsx)(t.th,{children:"Type"}),(0,o.jsx)(t.th,{}),(0,o.jsx)(t.th,{children:"Description"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"*"}),(0,o.jsx)(t.td,{children:"Operator"}),(0,o.jsx)(t.td,{children:"\u2192"}),(0,o.jsx)(t.td,{children:"If specified, object is an object name (string) If omitted, object is a variable"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"object"}),(0,o.jsx)(t.td,{children:"any"}),(0,o.jsx)(t.td,{children:"\u2192"}),(0,o.jsx)(t.td,{children:"Object name (if * is specified) or Variable (if * is omitted)"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"rowPosition"}),(0,o.jsx)(t.td,{children:"Integer"}),(0,o.jsx)(t.td,{children:"\u2192"}),(0,o.jsx)(t.td,{children:"Position of the row to delete"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"numRows"}),(0,o.jsx)(t.td,{children:"Integer"}),(0,o.jsx)(t.td,{children:"\u2192"}),(0,o.jsx)(t.td,{children:"Number of rows to delete"})]})]})]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.em,{children:"This command is not thread-safe, it cannot be used in preemptive code."})}),"\n",(0,o.jsx)(t.h4,{id:"description",children:"Description"}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.strong,{children:"LISTBOX DELETE ROWS"})," command deletes one or several row(s) starting at ",(0,o.jsx)(t.em,{children:"rowPosition"})," row (visible or not) from the list box set in the ",(0,o.jsx)(t.em,{children:"object"})," and ",(0,o.jsx)(t.em,{children:"*"})," parameters."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Note:"})," This command only works with list boxes based on arrays. When this command is used with a list box based on a selection, it does nothing and the OK system variable is set to 0."]}),"\n",(0,o.jsxs)(t.p,{children:["If you pass the optional ",(0,o.jsx)(t.em,{children:"*"})," parameter, you indicate that the ",(0,o.jsx)(t.em,{children:"object"})," parameter is an object name (string). If you do not pass this parameter, you indicate that the ",(0,o.jsx)(t.em,{children:"object"})," parameter is a variable. In this case, you pass a variable reference instead of a string. For more information about object names, refer to the ",(0,o.jsx)(t.em,{children:"Object Properties"})," section."]}),"\n",(0,o.jsx)(t.p,{children:"Keep in mind that after command execution, there will no longer be any element selected in the list box."}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.em,{children:"rowPosition"})," row is automatically removed from all the arrays used by the list box columns."]}),"\n",(0,o.jsxs)(t.p,{children:["If the ",(0,o.jsx)(t.em,{children:"rowPosition"})," value is higher than the total number of rows in the list box, or if it is less than 1, the command does nothing."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Note:"})," This command does not take into account any hidden/displayed states of list box rows."]}),"\n",(0,o.jsx)(t.h4,{id:"see-also",children:"See also"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"/docs/commands/listbox-get-number-of-rows",children:"LISTBOX Get number of rows"}),(0,o.jsx)(t.br,{}),"\n",(0,o.jsx)(t.a,{href:"/docs/commands/listbox-insert-rows",children:"LISTBOX INSERT ROWS"})]})]})}function h(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},250065:function(e,t,n){n.d(t,{Z:function(){return d},a:function(){return r}});var s=n(667294);let o={},i=s.createContext(o);function r(e){let t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);