"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["63911"],{460876:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>d,default:()=>h,toc:()=>l,metadata:()=>o,assets:()=>i,contentTitle:()=>c});var o=JSON.parse('{"id":"commands-legacy/locked","title":"Locked","description":"Locked {( aTable )} : Boolean","source":"@site/versioned_docs/version-20-R10/commands-legacy/locked.md","sourceDirName":"commands-legacy","slug":"/commands/locked","permalink":"/docs/commands/locked","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Flocked.md%20(20-R10)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"20-R10","frontMatter":{"id":"locked","title":"Locked","slug":"/commands/locked","displayed_sidebar":"docs"},"sidebar":"docs","previous":{"title":"LOAD RECORD","permalink":"/docs/commands/load-record"},"next":{"title":"LOCKED BY","permalink":"/docs/commands/locked-by"}}'),s=r(785893),t=r(250065);let d={id:"locked",title:"Locked",slug:"/commands/locked",displayed_sidebar:"docs"},c=void 0,i={},l=[{value:"Description",id:"description",level:2},{value:"See also",id:"see-also",level:2},{value:"Properties",id:"properties",level:2}];function a(e){let n={a:"a",br:"br",em:"em",h2:"h2",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Locked"})," {( ",(0,s.jsx)(n.em,{children:"aTable"})," )} : Boolean"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"aTable"}),(0,s.jsx)(n.td,{children:"Table"}),(0,s.jsx)(n.td,{children:"\u2192"}),(0,s.jsx)(n.td,{children:"Table to check for locked current record, or Default table, if omitted"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Function result"}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:"\u2190"}),(0,s.jsx)(n.td,{children:"Record is locked (TRUE), or Record is unlocked (FALSE)"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Locked"})," tests whether or not the current record of ",(0,s.jsx)(n.em,{children:"aTable"})," is locked. Use this function to find out whether or not the record is locked; then take appropriate action, such as giving the user the choice of waiting for the record to be free or skipping the operation."]}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.strong,{children:"Locked"})," returns TRUE, then the record cannot be saved because it is locked by another user or another process, or it is stacked in the current process. In this case, use ",(0,s.jsx)(n.a,{href:"/docs/commands/load-record",children:"LOAD RECORD"})," to reload the record until ",(0,s.jsx)(n.strong,{children:"Locked"})," returns FALSE."]}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.strong,{children:"Locked"})," returns FALSE, then the record is unlocked, meaning that the record is locked for all other users. Only the local user or current process can modify and save the record. A table must be in read/write state in order for you to modify the record."]}),"\n",(0,s.jsxs)(n.p,{children:["If you try to load a record that has been deleted, ",(0,s.jsx)(n.strong,{children:"Locked"})," continues to return TRUE. To avoid waiting for a record that does not exist anymore, use the ",(0,s.jsx)(n.a,{href:"/docs/commands/locked-by",children:"LOCKED BY"})," command. If the record has been deleted, the ",(0,s.jsx)(n.a,{href:"/docs/commands/locked-by",children:"LOCKED BY"})," command returns -1 in the process parameter."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note:"})," ",(0,s.jsx)(n.strong,{children:"Locked"})," returns False when there is no current record in ",(0,s.jsx)(n.em,{children:"table"}),", in other words, when ",(0,s.jsx)(n.a,{href:"/docs/commands/record-number",children:"Record number"})," returns -1."]}),"\n",(0,s.jsxs)(n.p,{children:["During transaction processing, ",(0,s.jsx)(n.a,{href:"/docs/commands/load-record",children:"LOAD RECORD"})," and ",(0,s.jsx)(n.strong,{children:"Locked"})," are often used to test record availability. If a record is locked, it is common to cancel the transaction."]}),"\n",(0,s.jsx)(n.h2,{id:"see-also",children:"See also"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/docs/commands/locked-records-info",children:"Locked records info"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.a,{href:"/docs/commands/load-record",children:"LOAD RECORD"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.a,{href:"/docs/commands/locked-by",children:"LOCKED BY"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.em,{children:"Record Locking"})]}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{}),(0,s.jsx)(n.th,{})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Command number"}),(0,s.jsx)(n.td,{children:"147"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Thread safe"}),(0,s.jsx)(n.td,{children:"\u2713"})]})]})]})]})}function h(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},250065:function(e,n,r){r.d(n,{Z:()=>c,a:()=>d});var o=r(667294);let s={},t=o.createContext(s);function d(e){let n=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);