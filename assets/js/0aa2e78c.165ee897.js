"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["80924"],{479997:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>d,toc:()=>c,default:()=>u,metadata:()=>o,assets:()=>l,contentTitle:()=>r});var o=JSON.parse('{"id":"Events/onColumnMoved","title":"On Column Moved","description":"|Code|Can be called by|Definition|","source":"@site/versioned_docs/version-20/Events/onColumnMoved.md","sourceDirName":"Events","slug":"/Events/onColumnMoved","permalink":"/docs/20/Events/onColumnMoved","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20Events%2FonColumnMoved.md%20(20)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"20","frontMatter":{"id":"onColumnMoved","title":"On Column Moved"},"sidebar":"docs","previous":{"title":"On Collapse","permalink":"/docs/20/Events/onCollapse"},"next":{"title":"On Column Resize","permalink":"/docs/20/Events/onColumnResize"}}'),s=t(785893),i=t(250065);let d={id:"onColumnMoved",title:"On Column Moved"},r=void 0,l={},c=[{value:"Description",id:"description",level:2}];function a(e){let n={a:"a",code:"code",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Code"}),(0,s.jsx)(n.th,{children:"Can be called by"}),(0,s.jsx)(n.th,{children:"Definition"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"32"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.a,{href:"/docs/20/FormObjects/listboxOverview",children:"List Box"})," - ",(0,s.jsx)(n.a,{href:"/docs/20/FormObjects/listboxOverview#list-box-columns",children:"List Box Column"})]}),(0,s.jsx)(n.td,{children:"A list box column is moved by the user via drag and drop"})]})})]}),"\n",(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:["This event is generated when a column of the list box is moved by the user using drag and drop (",(0,s.jsx)(n.a,{href:"/docs/20/FormObjects/propertiesListBox#locked-columns-and-static-columns",children:"if allowed"}),"). It is not generated if the column is dragged and then dropped in its initial location."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"LISTBOX MOVED COLUMN NUMBER"})," command returns the new position of the column."]})]})}function u(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},250065:function(e,n,t){t.d(n,{Z:()=>r,a:()=>d});var o=t(667294);let s={},i=o.createContext(s);function d(e){let n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);