"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["90199"],{375646:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>o,toc:()=>c,default:()=>d,metadata:()=>r,assets:()=>a,contentTitle:()=>i});var r=JSON.parse('{"id":"aikit/Classes/openaichathelper","title":"OpenAIChatHelper","description":"The chat helper allow to keep a list of messages in memory and make consecutive prompt.","source":"@site/versioned_docs/version-21/aikit/Classes/OpenAIChatHelper.md","sourceDirName":"aikit/Classes","slug":"/aikit/Classes/openaichathelper","permalink":"/docs/aikit/Classes/openaichathelper","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20aikit%2FClasses%2FOpenAIChatHelper.md%20(21)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"21","frontMatter":{"id":"openaichathelper","title":"OpenAIChatHelper"},"sidebar":"docs","previous":{"title":"OpenAIChatCompletionsStreamResult","permalink":"/docs/aikit/Classes/openaichatcompletionsstreamresult"},"next":{"title":"OpenAIChoice","permalink":"/docs/aikit/Classes/openaichoice"}}'),l=t(785893),s=t(250065);let o={id:"openaichathelper",title:"OpenAIChatHelper"},i="OpenAIChatHelper",a={},c=[{value:"Properties",id:"properties",level:2},{value:"Constructor",id:"constructor",level:2},{value:"Functions",id:"functions",level:2},{value:"prompt()",id:"prompt",level:3},{value:"Example Usage",id:"example-usage",level:4},{value:"reset()",id:"reset",level:3},{value:"Reset Example",id:"reset-example",level:4},{value:"registerTool()",id:"registertool",level:3},{value:"Register Tool Example",id:"register-tool-example",level:4},{value:"registerTools()",id:"registertools",level:3},{value:"Register Multiple Tools Example",id:"register-multiple-tools-example",level:4},{value:"Example 1: Collection format with handlers in tools",id:"example-1-collection-format-with-handlers-in-tools",level:5},{value:"Example 2: Object format with separate tool and handler",id:"example-2-object-format-with-separate-tool-and-handler",level:5},{value:"Example 3: Object with tools collection attribute and formula properties",id:"example-3-object-with-tools-collection-attribute-and-formula-properties",level:5},{value:"Example 4: Simple object format with tools as properties",id:"example-4-simple-object-format-with-tools-as-properties",level:5},{value:"unregisterTool()",id:"unregistertool",level:3},{value:"Unregister Tool Example",id:"unregister-tool-example",level:4},{value:"unregisterTools()",id:"unregistertools",level:3},{value:"Unregister All Tools Example",id:"unregister-all-tools-example",level:4}];function h(e){let n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"openaichathelper",children:"OpenAIChatHelper"})}),"\n",(0,l.jsx)(n.p,{children:"The chat helper allow to keep a list of messages in memory and make consecutive prompt."}),"\n",(0,l.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Property Name"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Default Value"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"chat"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"/docs/aikit/Classes/openaichatapi",children:"OpenAIChatAPI"})}),(0,l.jsx)(n.td,{children:"-"}),(0,l.jsx)(n.td,{children:"The chat API instance used for communication with OpenAI."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"systemPrompt"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"/docs/aikit/Classes/openaimessage",children:"OpenAIMessage"})}),(0,l.jsx)(n.td,{children:"-"}),(0,l.jsx)(n.td,{children:"The system prompt message that guides the chat assistant's responses."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"numberOfMessages"})}),(0,l.jsx)(n.td,{children:"Integer"}),(0,l.jsx)(n.td,{children:"15"}),(0,l.jsx)(n.td,{children:"The maximum number of messages to retain in the chat history."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"parameters"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"/docs/aikit/Classes/openaichatcompletionsparameters",children:"OpenAIChatCompletionsParameters"})}),(0,l.jsx)(n.td,{children:"-"}),(0,l.jsx)(n.td,{children:"The parameters for the OpenAI chat completion request."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"messages"})}),(0,l.jsxs)(n.td,{children:["Collection of ",(0,l.jsx)(n.a,{href:"/docs/aikit/Classes/openaimessage",children:"OpenAIMessage"})]}),(0,l.jsx)(n.td,{children:"[]"}),(0,l.jsx)(n.td,{children:"The collection of messages exchanged in the chat session."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"tools"})}),(0,l.jsxs)(n.td,{children:["Collection of ",(0,l.jsx)(n.a,{href:"/docs/aikit/Classes/openaitool",children:"OpenAITool"})]}),(0,l.jsx)(n.td,{children:"[]"}),(0,l.jsx)(n.td,{children:"List of registered OpenAI tools for function calling."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"autoHandleToolCalls"})}),(0,l.jsx)(n.td,{children:"Boolean"}),(0,l.jsx)(n.td,{children:"True"}),(0,l.jsx)(n.td,{children:"Boolean indicating whether tool calls are handled automatically using registered tools."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"lastErrors"})}),(0,l.jsx)(n.td,{children:"Collection"}),(0,l.jsx)(n.td,{children:"-"}),(0,l.jsx)(n.td,{children:"Collection containing the last errors encountered during chat operations."})]})]})]}),"\n",(0,l.jsx)(n.h2,{id:"constructor",children:"Constructor"}),"\n",(0,l.jsxs)(n.p,{children:["To create a new ",(0,l.jsx)(n.code,{children:"OpenAIChatHelper"})," instance, it's best to use the ",(0,l.jsx)(n.code,{children:"create()"})," method from the ",(0,l.jsx)(n.a,{href:"/docs/aikit/Classes/openaichatapi",children:"OpenAI client's chat API"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-4D",children:'var $chatHelper:=$client.chat.create("You are a helpful assistant.")\n'})}),"\n",(0,l.jsx)(n.p,{children:"This method creates a new chat helper with the specified system prompt and initializes it with default parameters. The system prompt defines the assistant's role and behavior throughout the conversation."}),"\n",(0,l.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,l.jsx)(n.h3,{id:"prompt",children:"prompt()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"prompt"}),"(",(0,l.jsx)(n.em,{children:"prompt"})," : Text) : OpenAIChatCompletionsResult"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Parameter"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.em,{children:"prompt"})}),(0,l.jsx)(n.td,{children:"Text"}),(0,l.jsx)(n.td,{children:"The text prompt to send to OpenAI chat."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"Function result"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"/docs/aikit/Classes/openaichatcompletionsresult",children:"OpenAIChatCompletionsResult"})}),(0,l.jsx)(n.td,{children:"The completion result returned by the chat."})]})]})]}),"\n",(0,l.jsx)(n.p,{children:"Sends a user prompt to the chat and returns the corresponding completion result."}),"\n",(0,l.jsx)(n.h4,{id:"example-usage",children:"Example Usage"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-4D",children:'var $result:=$chatHelper.prompt("Hello, how can I help you today?")\n$result:=$chatHelper.prompt("Why 42?")\n'})}),"\n",(0,l.jsx)(n.h3,{id:"reset",children:"reset()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"reset"}),"()"]}),"\n",(0,l.jsx)(n.p,{children:"Resets the chat context by clearing all messages and unregistering all tools. This effectively starts a fresh conversation while keeping the system prompt and parameters intact."}),"\n",(0,l.jsx)(n.h4,{id:"reset-example",children:"Reset Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-4D",children:'$chatHelper.prompt("Hello!")\n$chatHelper.reset()  // Clear all previous messages and tools\n'})}),"\n",(0,l.jsx)(n.h3,{id:"registertool",children:"registerTool()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"registerTool"}),"(",(0,l.jsx)(n.em,{children:"tool"})," : Object; ",(0,l.jsx)(n.em,{children:"handler"})," : Object)"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Parameter"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.em,{children:"tool"})}),(0,l.jsx)(n.td,{children:"Object"}),(0,l.jsxs)(n.td,{children:["The tool definition object (or ",(0,l.jsx)(n.a,{href:"/docs/aikit/Classes/openaitool",children:"OpenAITool"})," instance)"]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.em,{children:"handler"})}),(0,l.jsx)(n.td,{children:"Object"}),(0,l.jsxs)(n.td,{children:["The function to handle tool calls (",(0,l.jsx)(n.a,{href:"/docs/API/FunctionClass",children:"4D.Function"})," or Object), optional if defined inside ",(0,l.jsx)(n.em,{children:"tool"})," as ",(0,l.jsx)(n.em,{children:"handler"})," property"]})]})]})]}),"\n",(0,l.jsx)(n.p,{children:"Registers a tool with its handler function for automatic tool call handling."}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.em,{children:"handler"})," parameter can be:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["A ",(0,l.jsx)(n.strong,{children:"4D.Function"}),": Direct handler function"]}),"\n",(0,l.jsxs)(n.li,{children:["An ",(0,l.jsx)(n.strong,{children:"Object"}),": An object containing a ",(0,l.jsx)(n.code,{children:"formula"})," property matching the tool function name"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"The handler function receives an object containing the parameters passed from the OpenAI tool call. This object contains key-value pairs where the keys match the parameter names defined in the tool's schema, and the values are the actual arguments provided by the AI model."}),"\n",(0,l.jsx)(n.h4,{id:"register-tool-example",children:"Register Tool Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-4D",children:'// Example 1: Simple registration with direct handler\nvar $tool:={type: "function"; function: {name: "get_weather"; description: "Get current weather"; parameters: {type: "object"; properties: {location: {type: "string"; description: "City name"}}}}}\nvar $handler:=Formula(return "Sunny, 25\xb0C in "+$1.location)\n\n$chatHelper.registerTool($tool; $handler)\n\n// Example 2: Tool with handler property (no second parameter needed)\nvar $tool:={name: "calculate"; description: "Perform calculations"; handler: Formula(return String(Num($1.expression)))}\n$chatHelper.registerTool($tool)\n\n// Example 3: Using object notation\n$chatHelper.registerTool({tool: $tool; handler: $handler})\n\n// Example 4: Handler as object with formula matching tool name\nvar $tool:={name: "getTime"; description: "Get current time"}\nvar $handlerObj:=cs.MyTimeTool.new() // class with a getTime function\n$chatHelper.registerTool($tool; $handlerObj)\n'})}),"\n",(0,l.jsx)(n.h3,{id:"registertools",children:"registerTools()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"registerTools"}),"(",(0,l.jsx)(n.em,{children:"toolsWithHandlers"})," : Variant)"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Parameter"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.em,{children:"toolsWithHandlers"})}),(0,l.jsx)(n.td,{children:"Variant"}),(0,l.jsx)(n.td,{children:"Object or Collection containing tools and their handlers"})]})})]}),"\n",(0,l.jsx)(n.p,{children:"Registers multiple tools at once. The parameter can be:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Collection"}),": Array of tool objects (with handlers embedded or separate)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Object"}),": Object with function names as keys mapping to tool definitions"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsxs)(n.strong,{children:["Object with ",(0,l.jsx)(n.code,{children:"tools"})," attribute"]}),": Object containing a ",(0,l.jsx)(n.code,{children:"tools"})," collection and formula properties matching tool names"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"register-multiple-tools-example",children:"Register Multiple Tools Example"}),"\n",(0,l.jsx)(n.h5,{id:"example-1-collection-format-with-handlers-in-tools",children:"Example 1: Collection format with handlers in tools"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-4D",children:'var $weatherTool:={name: "getWeather"; description: "Get current weather"; handler: Formula(return "Sunny, 25\xb0C in "+$1.location)}\nvar $calculatorTool:={name: "calculate"; description: "Perform calculations"; handler: Formula(return String(Num($1.expression)))}\n\n$chatHelper.registerTools([$weatherTool; $calculatorTool])\n'})}),"\n",(0,l.jsx)(n.h5,{id:"example-2-object-format-with-separate-tool-and-handler",children:"Example 2: Object format with separate tool and handler"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-4D",children:"var $toolsWithSeparateHandlers:={}\n$toolsWithSeparateHandlers.getWeather:={tool: $weatherToolDefinition; handler: $weatherHandler}\n$toolsWithSeparateHandlers.calculate:={tool: $calculatorToolDefinition; handler: $calculatorHandler}\n\n$chatHelper.registerTools($toolsWithSeparateHandlers)\n"})}),"\n",(0,l.jsx)(n.h5,{id:"example-3-object-with-tools-collection-attribute-and-formula-properties",children:"Example 3: Object with tools collection attribute and formula properties"}),"\n",(0,l.jsx)(n.p,{children:"MyTools class:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-4D",children:'\nClass constructor\n    this.tools:=[{name: "getWeather"; description: "Get current weather"}; \\\n                 {name: "getTime"; description: "Get current time"}]  // Collection of tool definitions\n\nFunction getWeather($parameters: Object)\n    return "Sunny, 25\xb0C"\n\nFunction getTime($parameters: Object)\n    return String(Current time)\n'})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-4D",children:"$chatHelper.registerTools(cs.MyTools.new())\n"})}),"\n",(0,l.jsx)(n.h5,{id:"example-4-simple-object-format-with-tools-as-properties",children:"Example 4: Simple object format with tools as properties"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-4D",children:"var $tools:={}\n$tools.getWeather:=$weatherTool  // Tool with handler property\n$tools.calculate:=$calculatorTool  // Tool with handler property\n\n$chatHelper.registerTools($tools)\n"})}),"\n",(0,l.jsx)(n.h3,{id:"unregistertool",children:"unregisterTool()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"unregisterTool"}),"(",(0,l.jsx)(n.em,{children:"functionName"})," : Text)"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Parameter"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.em,{children:"functionName"})}),(0,l.jsx)(n.td,{children:"Text"}),(0,l.jsx)(n.td,{children:"The name of the function tool to unregister"})]})})]}),"\n",(0,l.jsx)(n.p,{children:"Unregisters a specific tool by its function name. This removes the tool from the registered tools collection, clears its handler, and removes it from the parameters."}),"\n",(0,l.jsx)(n.h4,{id:"unregister-tool-example",children:"Unregister Tool Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-4D",children:'$chatHelper.registerTool($weatherTool; $weatherHandler)\n$chatHelper.unregisterTool("get_weather")  // Remove the weather tool\n'})}),"\n",(0,l.jsx)(n.h3,{id:"unregistertools",children:"unregisterTools()"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"unregisterTools"}),"()"]}),"\n",(0,l.jsx)(n.p,{children:"Unregisters all tools at once. This clears all tool handlers, empties the tools collection, and removes all tools from the parameters."}),"\n",(0,l.jsx)(n.h4,{id:"unregister-all-tools-example",children:"Unregister All Tools Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-4D",children:"$chatHelper.registerTools($multipleTools)\n$chatHelper.unregisterTools()  // Remove all tools\n"})})]})}function d(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},250065:function(e,n,t){t.d(n,{Z:()=>i,a:()=>o});var r=t(667294);let l={},s=r.createContext(l);function o(e){let n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);