"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["34798"],{337560:function(t,n,e){e.r(n),e.d(n,{metadata:()=>s,contentTitle:()=>c,default:()=>m,assets:()=>i,toc:()=>d,frontMatter:()=>o});var s=JSON.parse('{"id":"commands-legacy/start-transaction","title":"START TRANSACTION","description":"START TRANSACTION","source":"@site/versioned_docs/version-20-R7/commands-legacy/start-transaction.md","sourceDirName":"commands-legacy","slug":"/commands/start-transaction","permalink":"/docs/commands/start-transaction","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fstart-transaction.md%20(20-R7)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"20-R7","frontMatter":{"id":"start-transaction","title":"START TRANSACTION","slug":"/commands/start-transaction","displayed_sidebar":"docs"},"sidebar":"docs","previous":{"title":"RESUME TRANSACTION","permalink":"/docs/commands/resume-transaction"},"next":{"title":"SUSPEND TRANSACTION","permalink":"/docs/commands/suspend-transaction"}}'),a=e("785893"),r=e("250065");let o={id:"start-transaction",title:"START TRANSACTION",slug:"/commands/start-transaction",displayed_sidebar:"docs"},c=void 0,i={},d=[{value:"Description",id:"description",level:4},{value:"See also",id:"see-also",level:4}];function l(t){let n={a:"a",br:"br",em:"em",h4:"h4",p:"p",strong:"strong",table:"table",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"START TRANSACTION"})}),"\n\n\n\n\n\n\n\n",(0,a.jsx)(n.table,{children:(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Does not require any parameters"}),(0,a.jsx)(n.th,{})]})})}),"\n",(0,a.jsx)(n.h4,{id:"description",children:"Description"}),"\n",(0,a.jsx)(n.p,{children:"START TRANSACTION starts a transaction in the current process. All changes to the data (records) of the database within the transaction are stored temporarily until the transaction is accepted (validated) or canceled."}),"\n",(0,a.jsx)(n.p,{children:"Beginning with version 11 of 4D, you can nest several transactions (sub-transactions). Each transaction or sub-transaction must eventually be cancelled or validated. Note that if the main transaction is cancelled, all the sub-transactions are cancelled as well, regardless of their result."}),"\n",(0,a.jsx)(n.h4,{id:"see-also",children:"See also"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"/docs/commands/cancel-transaction",children:"CANCEL TRANSACTION"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.a,{href:"/docs/commands/in-transaction",children:"In transaction"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.a,{href:"/docs/commands/transaction-level",children:"Transaction level"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.em,{children:"Using Transactions"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.a,{href:"/docs/commands/validate-transaction",children:"VALIDATE TRANSACTION"})]})]})}function m(t={}){let{wrapper:n}={...(0,r.a)(),...t.components};return n?(0,a.jsx)(n,{...t,children:(0,a.jsx)(l,{...t})}):l(t)}},250065:function(t,n,e){e.d(n,{Z:function(){return c},a:function(){return o}});var s=e(667294);let a={},r=s.createContext(a);function o(t){let n=s.useContext(r);return s.useMemo(function(){return"function"==typeof t?t(n):{...n,...t}},[n,t])}function c(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:o(t.components),s.createElement(r.Provider,{value:n},t.children)}}}]);