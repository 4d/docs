"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[76052],{475098:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>x,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var t=s(474848),i=s(28453);const o={id:"web-legacy-get-session-expiration",title:"WEB LEGACY GET SESSION EXPIRATION",slug:"/commands/web-legacy-get-session-expiration",displayed_sidebar:"docs"},r=void 0,a={id:"commands-legacy/web-legacy-get-session-expiration",title:"WEB LEGACY GET SESSION EXPIRATION",description:"WEB LEGACY GET SESSION EXPIRATION ( sessionID ; expDate ; expTime )",source:"@site/versioned_docs/version-20-R7/commands-legacy/web-legacy-get-session-expiration.md",sourceDirName:"commands-legacy",slug:"/commands/web-legacy-get-session-expiration",permalink:"/docs/commands/web-legacy-get-session-expiration",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fweb-legacy-get-session-expiration.md%20(20-R7)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R7",frontMatter:{id:"web-legacy-get-session-expiration",title:"WEB LEGACY GET SESSION EXPIRATION",slug:"/commands/web-legacy-get-session-expiration",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"WEB LEGACY CLOSE SESSION",permalink:"/docs/commands/web-legacy-close-session"},next:{title:"WEB SEND BLOB",permalink:"/docs/commands/web-send-blob"}},d={},c=[{value:"Compatibility Note",id:"compatibility-note",level:4},{value:"Description",id:"description",level:4},{value:"See also",id:"see-also",level:4}];function l(e){const n={a:"a",br:"br",em:"em",h4:"h4",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"WEB LEGACY GET SESSION EXPIRATION"})," ( ",(0,t.jsx)(n.em,{children:"sessionID"})," ; ",(0,t.jsx)(n.em,{children:"expDate"})," ; ",(0,t.jsx)(n.em,{children:"expTime"})," )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"sessionID"}),(0,t.jsx)(n.td,{children:"Text"}),(0,t.jsx)(n.td,{children:"\u2192"}),(0,t.jsx)(n.td,{children:"Session UUID"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"expDate"}),(0,t.jsx)(n.td,{children:"Date"}),(0,t.jsx)(n.td,{children:"\u2190"}),(0,t.jsx)(n.td,{children:"Date of cookie expiration"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"expTime"}),(0,t.jsx)(n.td,{children:"Time"}),(0,t.jsx)(n.td,{children:"\u2190"}),(0,t.jsx)(n.td,{children:"Time of cookie expiration"})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"compatibility-note",children:"Compatibility Note"}),"\n",(0,t.jsxs)(n.p,{children:["This command can only be used with ",(0,t.jsx)(n.strong,{children:"legacy web sessions"}),", available in databases converted from versions prior to 4D v18 R6. It returns null date and time values when ",(0,t.jsx)(n.strong,{children:"scalable web sessions"})," mode is enabled (recommended in 4D v18 R6 and higher). For more information, please refer to the ",(0,t.jsx)(n.em,{children:"Web Sessions Management (Legacy)"})," section."]}),"\n",(0,t.jsx)(n.h4,{id:"description",children:"Description"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"WEB LEGACY GET SESSION EXPIRATION"})," command returns the expiration information for the cookie of the session whose UUID you passed in ",(0,t.jsx)(n.em,{children:"sessionID"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.em,{children:"expDate"})," parameter receives the expiration date and the ",(0,t.jsx)(n.em,{children:"expTime"})," parameter receives the expiration time of the cookie."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," Each time a web request is sent, the expiration date and time of the cookie are reset to a value corresponding to the time of the request+the value of the Web Inactive session timeout. For example:",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.em,{children:"First request, Monday at 1:00"}),(0,t.jsx)(n.br,{}),"\n-> Sends a cookie 4DSID xxxyyy expiration I+24h = Tuesday 01:00",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.em,{children:"Second request, Monday at 1:10"}),(0,t.jsx)(n.br,{}),"\n-> Sends a cookie 4DSID xxxyyy expiration I+24h = Tuesday 01:10",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.em,{children:"Third request, Tuesday at 4:00: cookie expired"}),(0,t.jsx)(n.br,{}),"\n-> Sends a cookie 4DSID aaabbb expiration I+24h = Wednesday 01:00"]}),"\n",(0,t.jsx)(n.h4,{id:"see-also",children:"See also"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/docs/commands/web-get-current-session-id",children:"WEB Get Current Session ID"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.em,{children:"Web Sessions Management (Legacy)"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.a,{href:"/docs/commands/web-set-option",children:"WEB SET OPTION"})]})]})}function x(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var t=s(296540);const i={},o=t.createContext(i);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);