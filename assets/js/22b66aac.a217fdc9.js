"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["27377"],{886516:function(e,s,n){n.r(s),n.d(s,{frontMatter:()=>o,default:()=>h,toc:()=>c,metadata:()=>t,assets:()=>l,contentTitle:()=>a});var t=JSON.parse('{"id":"commands-legacy/get-database-parameter","title":"Get database parameter","description":"Get database parameter ( {aTable ;} selector {; stringValue} ) : Real","source":"@site/versioned_docs/version-20-R9/commands-legacy/get-database-parameter.md","sourceDirName":"commands-legacy","slug":"/commands/get-database-parameter","permalink":"/docs/20-R9/commands/get-database-parameter","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fget-database-parameter.md%20(20-R9)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"20-R9","frontMatter":{"id":"get-database-parameter","title":"Get database parameter","slug":"/commands/get-database-parameter","displayed_sidebar":"docs"},"sidebar":"docs","previous":{"title":"Get database localization","permalink":"/docs/20-R9/commands/get-database-localization"},"next":{"title":"Last update log path","permalink":"/docs/20-R9/commands/last-update-log-path"}}'),i=n(785893),r=n(250065);let o={id:"get-database-parameter",title:"Get database parameter",slug:"/commands/get-database-parameter",displayed_sidebar:"docs"},a=void 0,l={},c=[{value:"Description",id:"description",level:2},{value:"4D Server timeout (13)",id:"4d-server-timeout-13",level:3},{value:"4D Remote mode timeout (14)",id:"4d-remote-mode-timeout-14",level:3},{value:"Port ID (15)",id:"port-id-15",level:3},{value:"Character set (17)",id:"character-set-17",level:3},{value:"Max concurrent Web processes (18)",id:"max-concurrent-web-processes-18",level:3},{value:"Client port ID (22)",id:"client-port-id-22",level:3},{value:"Client character set (24)",id:"client-character-set-24",level:3},{value:"Client max concurrent Web proc (25)",id:"client-max-concurrent-web-proc-25",level:3},{value:"Maximum Web requests size (27)",id:"maximum-web-requests-size-27",level:3},{value:"4D Server log recording (28)",id:"4d-server-log-recording-28",level:3},{value:"Client Web log recording (30)",id:"client-web-log-recording-30",level:3},{value:"Table sequence number (31)",id:"table-sequence-number-31",level:3},{value:"Debug log recording (34)",id:"debug-log-recording-34",level:3},{value:"Client Server port ID (35)",id:"client-server-port-id-35",level:3},{value:"HTTPS Port ID (39)",id:"https-port-id-39",level:3},{value:"Client HTTPS port ID (40)",id:"client-https-port-id-40",level:3},{value:"SQL Autocommit (43)",id:"sql-autocommit-43",level:3},{value:"SQL Engine case sensitivity (44)",id:"sql-engine-case-sensitivity-44",level:3},{value:"Client log recording (45)",id:"client-log-recording-45",level:3},{value:"Query by formula on server (46)",id:"query-by-formula-on-server-46",level:3},{value:"Order by formula on server (47)",id:"order-by-formula-on-server-47",level:3},{value:"Auto synchro resources folder (48)",id:"auto-synchro-resources-folder-48",level:3},{value:"Query by formula joins (49)",id:"query-by-formula-joins-49",level:3},{value:"HTTP compression level (50)",id:"http-compression-level-50",level:3},{value:"HTTP compression threshold (51)",id:"http-compression-threshold-51",level:3},{value:"Server base process stack size (53)",id:"server-base-process-stack-size-53",level:3},{value:"Idle connections timeout (54)",id:"idle-connections-timeout-54",level:3},{value:"PHP interpreter IP address (55)",id:"php-interpreter-ip-address-55",level:3},{value:"PHP interpreter port (56)",id:"php-interpreter-port-56",level:3},{value:"SSL cipher list (64)",id:"ssl-cipher-list-64",level:3},{value:"Cache unload minimum size (66)",id:"cache-unload-minimum-size-66",level:3},{value:"Direct2D status (69)",id:"direct2d-status-69",level:3},{value:"Direct2D get active status (74)",id:"direct2d-get-active-status-74",level:3},{value:"Diagnostic log recording (79)",id:"diagnostic-log-recording-79",level:3},{value:"Log command list (80)",id:"log-command-list-80",level:3},{value:"Spellchecker (81)",id:"spellchecker-81",level:3},{value:"Dates inside objects (85)",id:"dates-inside-objects-85",level:3},{value:"Diagnostic log level (86)",id:"diagnostic-log-level-86",level:3},{value:"Use legacy network layer (87)",id:"use-legacy-network-layer-87",level:3},{value:"SQL Server Port ID (88)",id:"sql-server-port-id-88",level:3},{value:"Circular log limitation (90)",id:"circular-log-limitation-90",level:3},{value:"Number of formulas in cache (92)",id:"number-of-formulas-in-cache-92",level:3},{value:"OpenSSL version (94)",id:"openssl-version-94",level:3},{value:"Cache flush periodicity (95)",id:"cache-flush-periodicity-95",level:3},{value:"Remote connection sleep timeout (98)",id:"remote-connection-sleep-timeout-98",level:3},{value:"Tips enabled (101)",id:"tips-enabled-101",level:3},{value:"Tips delay (102)",id:"tips-delay-102",level:3},{value:"Tips duration (103)",id:"tips-duration-103",level:3},{value:"Min TLS version (105)",id:"min-tls-version-105",level:3},{value:"User param value (108)",id:"user-param-value-108",level:3},{value:"Times inside objects (109)",id:"times-inside-objects-109",level:3},{value:"SMTP Log (110)",id:"smtp-log-110",level:3},{value:"Current process debug log recording (111)",id:"current-process-debug-log-recording-111",level:3},{value:"Is current database a project (112)",id:"is-current-database-a-project-112",level:3},{value:"Is host database a project (113)",id:"is-host-database-a-project-113",level:3},{value:"Libldap version (114)",id:"libldap-version-114",level:3},{value:"Libsasl version (115)",id:"libsasl-version-115",level:3},{value:"POP3 Log (116)",id:"pop3-log-116",level:3},{value:"Is host database writable (117)",id:"is-host-database-writable-117",level:3},{value:"IMAP Log (119)",id:"imap-log-119",level:3},{value:"Libzip version (120)",id:"libzip-version-120",level:3},{value:"Pause logging (121)",id:"pause-logging-121",level:3},{value:"TCP log (131)",id:"tcp-log-131",level:3},{value:"RDP optimization<strong>Scope:</strong> 4D application.",id:"rdp-optimizationscope-4d-application",level:3},{value:"Thread-safe selectors",id:"thread-safe-selectors",level:2},{value:"Example",id:"example",level:2},{value:"See also",id:"see-also",level:2},{value:"Properties",id:"properties",level:2}];function d(e){let s={a:"a",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Get database parameter"})," ( {",(0,i.jsx)(s.em,{children:"aTable"})," ;} ",(0,i.jsx)(s.em,{children:"selector"})," {; ",(0,i.jsx)(s.em,{children:"stringValue"}),"} ) : Real"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Parameter"}),(0,i.jsx)(s.th,{children:"Type"}),(0,i.jsx)(s.th,{}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"aTable"}),(0,i.jsx)(s.td,{children:"Table"}),(0,i.jsx)(s.td,{children:"\u2192"}),(0,i.jsx)(s.td,{children:"Table from which to get the parameter, or Default table if this parameter is omitted"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"selector"}),(0,i.jsx)(s.td,{children:"Integer"}),(0,i.jsx)(s.td,{children:"\u2192"}),(0,i.jsx)(s.td,{children:"Code of the database\u2019s parameter"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"stringValue"}),(0,i.jsx)(s.td,{children:"Text"}),(0,i.jsx)(s.td,{children:"\u2190"}),(0,i.jsx)(s.td,{children:"String value of the parameter"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Function result"}),(0,i.jsx)(s.td,{children:"Real"}),(0,i.jsx)(s.td,{children:"\u2190"}),(0,i.jsx)(s.td,{children:"Current value of the parameter"})]})]})]}),"\n",(0,i.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.strong,{children:"Get database parameter"})," command allows you to get the current value of a 4D database parameter. When the parameter value is a character string, it is returned in the ",(0,i.jsx)(s.em,{children:"stringValue"})," parameter."]}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.em,{children:"selector"})," parameter designates the parameter to get. 4D offers you the following predefined constants, which are in the \u201C",(0,i.jsx)(s.em,{children:"Database Parameters"}),"\u201D theme:"]}),"\n",(0,i.jsx)(s.h3,{id:"4d-server-timeout-13",children:"4D Server timeout (13)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D application if ",(0,i.jsx)(s.em,{children:"value"})," positive"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions"}),": Yes if ",(0,i.jsx)(s.em,{children:"value"})," positive"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": 0 -> 32 767"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),': Value of the 4D Server timeout. The default 4D Server timeout value is defined on the "Client-Server/Network options" page of the Database settings dialog box on the server side.']}),"\n",(0,i.jsxs)(s.p,{children:['The server timeout sets the maximum period "authorized" to wait for a client response, for example when it is executing a blocking operation. After this period, 4D Server disconnects the client. The 4D Server Timeout selector allows you to set, in the corresponding ',(0,i.jsx)(s.em,{children:"value"}),"parameter, a new timeout expressed in minutes. This feature is particularly useful to increase the timeout before executing a blocking and time-consuming operation on the client, such as printing a large number of pages, which can cause an unexpected timeout."]}),"\n",(0,i.jsx)(s.p,{children:"You also have two options:"}),"\n",(0,i.jsxs)(s.p,{children:["If you pass a ",(0,i.jsx)(s.strong,{children:"positive"})," value in the ",(0,i.jsx)(s.em,{children:"value"}),"parameter, you set a global and permanent timeout: the new value is applied to all process and is stored in the preferences of the 4D application (equivalent to change in the Preferences dialog box).If you pass a ",(0,i.jsx)(s.strong,{children:"negative"})," value in the ",(0,i.jsx)(s.em,{children:"value"}),'parameter, you set a local and temporary timeout: The new value is applied to the calling process only (the other processes keep the default values) and is reset to default as soon as the server receives any signal of activity from the client \u2014 for example, when the operation is finished. This option is useful for managing long operations initiated by 4D plug-ins. To set the "No timeout" option, pass 0 in ',(0,i.jsx)(s.em,{children:"value"}),". See example 1."]}),"\n",(0,i.jsx)(s.h3,{id:"4d-remote-mode-timeout-14",children:"4D Remote mode timeout (14)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"})," (legacy network layer only): 4D application if ",(0,i.jsx)(s.em,{children:"value"})," positive"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions"}),": Yes if ",(0,i.jsx)(s.em,{children:"value"})," positive"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),': To be used in very specific cases. Value of the timeout granted by the remote 4D machine to the 4D Server machine. The default timeout value used by 4D in remote mode is set on the "Client-Server/Network options" page of the Database settings dialog box on the remote machine.']}),"\n",(0,i.jsxs)(s.p,{children:["The 4D Remote mode timeout selector is only taken into account if you are using the legacy network. It is ignored when the ",(0,i.jsx)(s.em,{children:"ServerNet"})," layer is activated: this setting is entirely managed by the 4D Server timeout (13) selector."]}),"\n",(0,i.jsx)(s.h3,{id:"port-id-15",children:"Port ID (15)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D local, 4D Server"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),': Command SET DATABASE TCP port ID used by the 4D Web server with 4D in local mode and 4D Server. The default value, which can be set on the "Web/Configuration" page of the Preferences dialog box, is 80. You can use the constants of the ',(0,i.jsx)(s.em,{children:"TCP Port Numbers"})," theme for the ",(0,i.jsx)(s.em,{children:"value"})," parameter."]}),"\n",(0,i.jsxs)(s.p,{children:["The Port ID selector is useful for 4D Web Servers compiled and merged with 4D Desktop (in which there is no access to the Design mode). For more information about the TCP port ID, refer to the ",(0,i.jsx)(s.em,{children:"Web Server Settings"})," section."]}),"\n",(0,i.jsx)(s.h3,{id:"character-set-17",children:"Character set (17)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D local, 4D Server"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions"}),": Yes"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": ",(0,i.jsx)(s.em,{children:"Constant obsolete (kept for compatibility reasons only)."})," We now recommend using the ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/web-set-option",children:"WEB SET OPTION"})," and ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/web-get-option",children:"WEB GET OPTION"})," commands for configuring the HTTP server."]}),"\n",(0,i.jsx)(s.h3,{id:"max-concurrent-web-processes-18",children:"Max concurrent Web processes (18)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D local, 4D Server"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions"}),": Yes"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": ",(0,i.jsx)(s.em,{children:"Constant obsolete (kept for compatibility reasons only)."})," We now recommend using the ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/web-set-option",children:"WEB SET OPTION"})," and ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/web-get-option",children:"WEB GET OPTION"})," commands for configuring the HTTP server."]}),"\n",(0,i.jsx)(s.h3,{id:"client-port-id-22",children:"Client port ID (22)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": All 4D remote machines"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two"})," ",(0,i.jsx)(s.strong,{children:"sessions"}),": Yes"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": See selector 15"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Used to specify this parameter for all the remote 4D machines used as Web servers. The values defined using these selectors are applied to all the remote machines used as Web servers. If you want to define values only for certain remote machines, use the Preferences dialog box of 4D in remote mode."]}),"\n",(0,i.jsx)(s.h3,{id:"client-character-set-24",children:"Client character set (24)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": All 4D remote machines"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two"})," ",(0,i.jsx)(s.strong,{children:"sessions"}),": Yes"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": See selector 17"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Used to specify this parameter for all the remote 4D machines used as Web servers. The values defined using these selectors are applied to all the remote machines used as Web servers. If you want to define values only for certain remote machines, use the Preferences dialog box of 4D in remote mode."]}),"\n",(0,i.jsx)(s.h3,{id:"client-max-concurrent-web-proc-25",children:"Client max concurrent Web proc (25)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": All 4D remote machines"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two"})," ",(0,i.jsx)(s.strong,{children:"sessions"}),": Yes"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": See selector 18"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Used to specify this parameter for all the remote 4D machines used as Web servers. The values defined using these selectors are applied to all the remote machines used as Web servers. If you want to define values only for certain remote machines, use the Preferences dialog box of 4D in remote mode."]}),"\n",(0,i.jsx)(s.h3,{id:"maximum-web-requests-size-27",children:"Maximum Web requests size (27)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D local, 4D Server"]}),"\n",(0,i.jsxs)(s.p,{children:["Kept between two ",(0,i.jsx)(s.strong,{children:"sessions"}),": Yes"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": ",(0,i.jsx)(s.em,{children:"Constant obsolete (kept for compatibility reasons only)."})," We now recommend using the ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/web-set-option",children:"WEB SET OPTION"})," and ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/web-get-option",children:"WEB GET OPTION"})," commands for configuring the HTTP server."]}),"\n",(0,i.jsx)(s.h3,{id:"4d-server-log-recording-28",children:"4D Server log recording (28)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Thread-safe"})," : Yes"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D Server, 4D remote*"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions"}),": No"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": 0 or from 1 to X (0 = do not record, 1 to X = sequential number, added to the file name)."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Starts or stops the recording of standard requests received by 4D Server (excluding Web requests). By default, the value is 0 (requests not recorded)."]}),"\n",(0,i.jsxs)(s.p,{children:["4D Server lets you record each request received by the server machine in a log file. When this mechanism is enabled, two files are created in the Logs folder of the database. They are named ",(0,i.jsx)(s.em,{children:"4DRequestsLogServer_X"}),".txt and ",(0,i.jsx)(s.em,{children:"4DRequestsLog_ProcessInfoServer_X"}),".txt on the server, and ",(0,i.jsx)(s.em,{children:"4DRequestsLog_X"}),".txt and ",(0,i.jsx)(s.em,{children:"4DRequestsLog_ProcessInfo_X"}),".txt on the remote, where X is the sequential number of the log. Once a file has reached a size of 10 MB, it is closed and a new one is generated, with an incremented sequential number. If a file of the same name already exists, it is replaced directly. You can set the starting number of the sequence using the ",(0,i.jsx)(s.em,{children:"value"})," parameter. These text files store various information concerning each request in a simple tabbed format: time, process number, size of request, processing duration, etc. For more information on the 4DRequestsLog files, please refer to the ",(0,i.jsx)(s.em,{children:"Description of log files"})," section."]}),"\n",(0,i.jsx)(s.h3,{id:"client-web-log-recording-30",children:"Client Web log recording (30)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),":All 4D remote machines"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions"}),": Yes"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": 0 = Do not record (default), 1 = Record in CLF format, 2 = Record in DLF format, 3 = Record in ELF format, 4 = Record in WLF format."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Command SET DATABASE PARAMETEStarts or stops the recording of Web requests received by the Web servers of all the client machines. By default, the value is 0 (requests not recorded)."]}),"\n",(0,i.jsx)(s.p,{children:'The operation of this selector is identical to that of selector 29; however, it applies to all the 4D remote machines used as Web servers. The "logweb.txt" file is, in this case, automatically placed in the Logs subfolder of the remote 4D database folder (cache folder). If you only want to set values for certain client machines, use the Preferences dialog box of 4D in remote mode.'}),"\n",(0,i.jsx)(s.h3,{id:"table-sequence-number-31",children:"Table sequence number (31)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),":4D application"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions"}),": Yes"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": Any longint value."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),': Command SET DATABASE PARAMETERThis selector is used to modify or get the current unique number for records of the table passed as parameter. "Current number" means "last number used": if you modify this value using ',(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/set-database-parameter",children:"SET DATABASE PARAMETER"}),", the next record will be created with a number that consists of the value passed + 1. This new number is the one returned by the ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/sequence-number",children:"Sequence number"}),' command as well in any field of the table to which the "Autoincrement" property has been assigned in the Structure editor or via SQL.']}),"\n",(0,i.jsxs)(s.p,{children:["By default, this unique number is set by 4D and corresponds to the order of record creation. For additional information, refer to the documentation of the ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/sequence-number",children:"Sequence number"})," command."]}),"\n",(0,i.jsx)(s.h3,{id:"debug-log-recording-34",children:"Debug log recording (34)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Thread-safe"})," : Yes"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D application"]}),"\n",(0,i.jsxs)(s.p,{children:["Kept between two ",(0,i.jsx)(s.strong,{children:"sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Starts or stops the sequential recording of events occurring at the 4D programming level in the ",(0,i.jsx)(s.em,{children:"4DDebugLog[_n].txt"})," file or ",(0,i.jsx)(s.em,{children:"4DDebugLogServer[_n].txt"})," (where _n is the segment number of the file and ",(0,i.jsx)(s.em,{children:"Server"})," is added to the file name when generated on the server). Two modes are available:"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:'Standard mode provides a basic view of events and the file is automatically placed in the Logs subfolder of the database, next to the structure file. Execution times are expressed in milliseconds with the "< ms" value displayed when an operation lasts less than one millisecond.'}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Tabbed mode provides additional information and uses a more compact, tabbed format in the file. Execution times are expressed in microseconds."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": Longint containing a bit field: value = bit1(1)+bit2(2)+bit3(4)+bit4(8)+\u2026)."]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Bit 0 (value 1) requests to enable the file (note that any other non-null value also enables it as well)"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Bit 1 (value 2) requests call parameters to commands and (interpreted mode only) methods"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Bit 2 (value 4) enables tabbed format."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Bit 3 (value 8) disables immediate writing of each operation on disk (enabled by default). Immediate writing is slower but more effective, for example for investigating causes of a crash. If you disable this mode, the file contents are generated more quickly."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Bit 4 (value 16) disables recording of plug-in calls (enabled by default)."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Bit 5 (value 32) disables member function logging."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Examples:"}),"\n",(0,i.jsx)(s.p,{children:"SET DATABASE PARAMETER (34;1) // enables standard mode without parameters, with runtimes"}),"\n",(0,i.jsx)(s.p,{children:"SET DATABASE PARAMETER (34;2) // enables standard mode with parameters and runtimes"}),"\n",(0,i.jsx)(s.p,{children:"SET DATABASE PARAMETER (34;2+4) // enables tabbed mode with parameters and runtimes"}),"\n",(0,i.jsx)(s.p,{children:"SET DATABASE PARAMETER (34;0) // disables file"}),"\n",(0,i.jsx)(s.p,{children:"For any type of interpreted or compiled 4D application (4D all modes, 4D Server, 4D Volume Desktop), you can avoid having a file record too much information by:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"restricting the 4D commands that are examined by using Log command list (selector 80), or"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:['restricting it to the current process only with Current process debug log recording (selector 111). This will add the letter "p" and the process number to the file name: ',(0,i.jsx)(s.em,{children:"4DDebugLog[_pn_n].txt"}),"  or ",(0,i.jsx)(s.em,{children:"4DDebugLogServer[_pn_n].txt"})," *"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["*For more information about this format and on the use of the ",(0,i.jsx)(s.em,{children:"4DDebugLog"})," file, please refer to the ",(0,i.jsx)(s.em,{children:"Description of log files"})," section.."]}),"\n",(0,i.jsx)(s.p,{children:"This selector is provided solely for the purpose of debugging and should be used with care since it can impact the application performance."}),"\n",(0,i.jsx)(s.h3,{id:"client-server-port-id-35",children:"Client Server port ID (35)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),":Database"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two"})," ",(0,i.jsx)(s.strong,{children:"sessions"}),": Yes"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": 0 to 65535"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": TCP port number where the 4D Server publishes the database (bound for 4D remote machines). By default, the value is 19813."]}),"\n",(0,i.jsx)(s.p,{children:"Customizing this value means that several 4D client-server applications can be used on the same machine with the TCP protocol; in this case, you must indicate a different port number for each application."}),"\n",(0,i.jsx)(s.p,{children:"The value is stored in the database structure file. It can be set with 4D in local mode but is only taken into account in client-server configuration."}),"\n",(0,i.jsx)(s.p,{children:"When you modify this value, it is necessary to restart the server machine in order for the new value to be taken into account."}),"\n",(0,i.jsx)(s.h3,{id:"https-port-id-39",children:"HTTPS Port ID (39)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),":4D local, 4D Server"]}),"\n",(0,i.jsxs)(s.p,{children:["Kept between two ",(0,i.jsx)(s.strong,{children:"sessions"}),": Yes"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": ",(0,i.jsx)(s.em,{children:"Constant obsolete (kept for compatibility reasons only)."})," We now recommend using the ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/web-set-option",children:"WEB SET OPTION"})," and ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/web-get-option",children:"WEB GET OPTION"})," commands for configuring the HTTP server."]}),"\n",(0,i.jsx)(s.h3,{id:"client-https-port-id-40",children:"Client HTTPS port ID (40)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),":All 4D remote machines"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two"})," ",(0,i.jsx)(s.strong,{children:"sessions"}),": Yes"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": 0 to 65535"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": TCP port number used by the Web servers of the client machines for secure connections via SSL (HTTPS protocol). By default, the value is 443 (standard value)."]}),"\n",(0,i.jsx)(s.p,{children:"This selector can be used to modify by programming the TCP port used by the Web servers of the client machines for secure connections via SSL (HTTPS protocol). By default, the value is 443 (standard value)."}),"\n",(0,i.jsx)(s.p,{children:"This selector operates exactly the same way as selector 39; however, it applies to all the 4D remote machines used as Web servers. If you only want to modify the value of certain specific client machines, use the Preferences dialog box of the remote 4D."}),"\n",(0,i.jsx)(s.h3,{id:"sql-autocommit-43",children:"SQL Autocommit (43)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),":Database"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two"})," ",(0,i.jsx)(s.strong,{children:"sessions"}),": Yes"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": 0 (deactivation) or 1 (activation)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Activation or deactivation of the SQL auto-commit mode. By default, the value is 0 (deactivated mode)"]}),"\n",(0,i.jsxs)(s.p,{children:["The auto-commit mode is used to strengthen the referential integrity of the database. When this mode is active, all ",(0,i.jsx)(s.em,{children:"SELECT"}),", ",(0,i.jsx)(s.em,{children:"INSERT"}),", ",(0,i.jsx)(s.em,{children:"UPDATE"})," and ",(0,i.jsx)(s.em,{children:"DELETE"})," (SIUD) queries are automatically included in ad hoc transactions when they are not already executed within a transaction. This mode can also be set in the Preferences of the database."]}),"\n",(0,i.jsx)(s.h3,{id:"sql-engine-case-sensitivity-44",children:"SQL Engine case sensitivity (44)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": Database"]}),"\n",(0,i.jsxs)(s.p,{children:["Kept between two ",(0,i.jsx)(s.strong,{children:"sessions"}),": Yes"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": 0 (case not taken into account) or 1 (case-sensitive)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Activation or deactivation of case-sensitivity for string comparisons carried out by the SQL engine."]}),"\n",(0,i.jsx)(s.p,{children:'By default, the value is 1 (case-sensitive): the SQL engine differentiates between upper and lower case and between accented characters when comparing strings (sorts and queries). For example \u201CABC\u201D= \u201CABC\u201D but \u201CABC\u201D # \u201CAbc\u201D and "abc" # "\xe2bc." In certain cases, for example so as to align the functioning of the SQL engine with that of the 4D engine, you may wish for string comparisons to not be case-sensitive (\u201CABC\u201D=\u201CAbc"="\xe2bc").'}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsxs)(s.em,{children:[(0,i.jsx)(s.em,{children:"Warning:"})," Since this option modifies the database structure file and all processes, for performance reasons it is highly recommended to set it at database startup only."]})," This option can also be set in the Database settings."]}),"\n",(0,i.jsx)(s.h3,{id:"client-log-recording-45",children:"Client log recording (45)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": Remote 4D machine"]}),"\n",(0,i.jsxs)(s.p,{children:["Kept between two ",(0,i.jsx)(s.strong,{children:"sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": 0 or from 1 to X (0 = do not record, 1 to X = sequential number, attached to file name)."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Starts or stops recording of standard requests carried out by the 4D client machine that executed the command (excluding Web requests). By default, the value is 0 (no recording of requests)."]}),"\n",(0,i.jsx)(s.p,{children:"4D lets you record the log of requests carried out by the client machine. When this mechanism is activated, two files are created on the client machine, in the Logs subfolder of the local folder of the database. They are named 4DRequestsLog_X.txt and 4DRequestsLog_ProcessInfo_X.txt, where X is the sequential number of the log. Once the file 4DRequestsLog has reached a size of 10 MB, it is closed and a new one is generated, with an incremented sequential number. If a file with the same name already exists, it is directly replaced. You can set the starting number for the sequence using the value parameter."}),"\n",(0,i.jsxs)(s.p,{children:["These text files store various information concerning each request in a simple tabbed format: time, process number, size of request, processing duration, etc. For more information on the 4DRequestsLog files, please refer to the ",(0,i.jsx)(s.em,{children:"Description of log files"})," section."]}),"\n",(0,i.jsx)(s.h3,{id:"query-by-formula-on-server-46",children:"Query by formula on server (46)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": Current table and process"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": 0 (use database configuration), 1 (execute on client) or 2 (execute on server)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Execution location of ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/query-by-formula",children:"QUERY BY FORMULA"})," and ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/query-selection-by-formula",children:"QUERY SELECTION BY FORMULA"})," commands for the ",(0,i.jsx)(s.em,{children:"table"})," passed in the parameter."]}),"\n",(0,i.jsx)(s.p,{children:'When using a database in client-server mode, the query "by formula" commands can be executed either on the server or on the client machine:'}),"\n",(0,i.jsx)(s.p,{children:"In databases created with 4D v11 SQL, these commands are executed on the server. In converted databases, these commands are executed on the client machine, as in previous versions of 4D.In converted databases, a specific preference (Application/Compatibility page) can be used to globally modify the execution location of these commands.This difference in execution location influences not only application performance (execution on the server is usually faster) but also programming. In fact, the value of the components of the formula (in particular variables called via a method) differ according to the execution context. You can use this selector to punctually adapt the operation of your application."}),"\n",(0,i.jsxs)(s.p,{children:["If you pass 0 in the ",(0,i.jsx)(s.em,{children:"value"}),' l\u2019parameter, the execution location of query "by formula" commands will depend on the database configuration: in databases created with 4D v11 SQL, these commands will be executed on the server. In converted databases, they will be executed on the client machine or the server according to the database preferences. Pass 1 or 2 in ',(0,i.jsx)(s.em,{children:"value"}),' to "force" the execution of these commands, respectively, on the client or on the server machine.']}),"\n",(0,i.jsx)(s.p,{children:"Refer to example 2."}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Note:"}),' If you want to be able to enable "SQL type" joins (see the QUERY BY FORMULA Joins selector), you must always execute formulas on the server so that they have access to the records. Be careful, in this context, the formula must not contain any calls to a method, otherwise it will automatically be switched to the remote machine.']}),"\n",(0,i.jsx)(s.h3,{id:"order-by-formula-on-server-47",children:"Order by formula on server (47)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),":Current table and process"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two"})," ",(0,i.jsx)(s.strong,{children:"sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": 0 (use database configuration), 1 (execute on client) or 2 (execute on server)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"})," : Execution location of ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/order-by-formula",children:"ORDER BY FORMULA"})," command for the table passed in the parameter."]}),"\n",(0,i.jsx)(s.p,{children:"When using a database in client-server mode, this command can be executed either on the server or on the client machine. This selector can be used to specify the execution location of this command (server or client). This mode can also be set in the database preferences. For more information, please refer to the description of selector 46, Query By Formula On Server."}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Note:"}),' If you want to be able to enable "SQL type" joins (see the QUERY BY FORMULA Joins selector), you must always execute formulas on the server so that they have access to the records. Be careful, in this context, the formula must not contain any calls to a method, otherwise it will automatically be switched to the remote machine.']}),"\n",(0,i.jsx)(s.h3,{id:"auto-synchro-resources-folder-48",children:"Auto synchro resources folder (48)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),":4D remote machine"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two"})," ",(0,i.jsx)(s.strong,{children:"sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": 0 (no synchronization), 1 (auto synchronization) or 2 (ask)."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Dynamic synchronization mode for ",(0,i.jsx)(s.em,{children:"Resources"})," folder of 4D client machine that executed the command with that of the server."]}),"\n",(0,i.jsxs)(s.p,{children:["When the contents of the ",(0,i.jsx)(s.em,{children:"Resources"})," folder on the server has been modified or a user has requested synchronization (for example via the resources explorer or following the execution of the ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/set-database-localization",children:"SET DATABASE LOCALIZATION"})," command), the server notifies the connected client machines."]}),"\n",(0,i.jsx)(s.p,{children:"Three synchronization modes are then possible on the client side. The Auto Synchro Resources Folder selector is used to specify the mode to be used by the client machine for the current session:"}),"\n",(0,i.jsx)(s.p,{children:"0 (default value): no dynamic synchronization (synchronization request is ignored) 1: automatic dynamic synchronization2: display of a dialog box on the client machines, with the possibility of allowing or refusing synchronization.The synchronization mode can also be set globally in the application Preferences."}),"\n",(0,i.jsx)(s.h3,{id:"query-by-formula-joins-49",children:"Query by formula joins (49)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),":Current process"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two"})," ",(0,i.jsx)(s.strong,{children:"sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": 0 (use database configuration), 1 (always use automatic relations) or 2 (use SQL joins if possible)."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Operating mode of the ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/query-by-formula",children:"QUERY BY FORMULA"})," and ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/query-selection-by-formula",children:"QUERY SELECTION BY FORMULA"}),' commands relating to the use of "SQL joins."']}),"\n",(0,i.jsx)(s.p,{children:"In databases created starting with version 11.2 of 4D v11 SQL, these commands carry out joins based on the SQL joins model. This mechanism can be used to modify the selection of a table according to a query carried out on another table without these tables being connected by an automatic relation (necessary condition in previous versions of 4D)."}),"\n",(0,i.jsx)(s.p,{children:"The QUERY BY FORMULA Joins selector lets you specify the operating mode of the query by formula commands for the current process:"}),"\n",(0,i.jsxs)(s.p,{children:['0: Uses the current settings of the database (default value). In databases created starting with version 11.2 of 4D v11 SQL, "SQL joins" are always activated for queries by formula. In converted databases, this mechanism is not activated by default for compatibility reasons but can be implemented via a preference.1: Always use automatic relations (= functioning of previous versions of 4D). In this mode, a relation is necessary in order to set the selection of a table according to queries carried out on another table. 4D does not do "SQL joins."2: Use SQL joins if possible (= default operation of databases created in version 11.2 and higher of 4D v11 SQL ). In this mode, 4D establishes "SQL joins" for queries by formula when the formula is suited for it (with two notable exceptions, see the description of the ',(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/query-by-formula",children:"QUERY BY FORMULA"})," or ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/query-selection-by-formula",children:"QUERY SELECTION BY FORMULA"})," command).",(0,i.jsx)(s.strong,{children:"Note:"}),' With 4D in remote mode, "SQL joins" can only be used if the formulas are executed on the server (they must have access to the records). To configure where formulas are to be executed, please refer to selectors 46 and 47.']}),"\n",(0,i.jsx)(s.h3,{id:"http-compression-level-50",children:"HTTP compression level (50)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),":4D application"]}),"\n",(0,i.jsxs)(s.p,{children:["Kept between two ",(0,i.jsx)(s.strong,{children:"sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": ",(0,i.jsx)(s.em,{children:"Constant obsolete (kept for compatibility reasons only)."})," We now recommend using the ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/web-set-option",children:"WEB SET OPTION"})," and ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/web-get-option",children:"WEB GET OPTION"})," commands for configuring the HTTP server."]}),"\n",(0,i.jsx)(s.h3,{id:"http-compression-threshold-51",children:"HTTP compression threshold (51)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),":4D application"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two"})," ",(0,i.jsx)(s.strong,{children:"sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": ",(0,i.jsx)(s.em,{children:"Constant obsolete (kept for compatibility reasons only)."})," We now recommend using the ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/web-set-option",children:"WEB SET OPTION"})," and ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/web-get-option",children:"WEB GET OPTION"})," commands for configuring the HTTP server."]}),"\n",(0,i.jsx)(s.h3,{id:"server-base-process-stack-size-53",children:"Server base process stack size (53)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D Server"]}),"\n",(0,i.jsxs)(s.p,{children:["Kept between two ",(0,i.jsx)(s.strong,{children:"sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": Positive longint."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Size of the stack allocated to each preemptive system process on the server, expressed in bytes. The default size is determined by the system."]}),"\n",(0,i.jsx)(s.p,{children:"Preemptive system processes (processes of the 4D client base process type) are loaded to control the main 4D client processes. The size allocated by default to the stack of each preemptive process allows a good ease of execution but may prove to be consequential when very large numbers of processes (several hundred) are created."}),"\n",(0,i.jsx)(s.p,{children:"For optimization purposes, this size can be reduced considerably if the operations carried out by the database allow for it (for example if the database does not carry out sorts of large quantities of records). Values of 512 or even 256 KB are possible. Be careful, under-sizing the stack is critical and can be harmful to the operation of 4D Server. Setting this parameter should be done with caution and must take the database conditions of use into account (number of records, type of operations, etc.)."}),"\n",(0,i.jsxs)(s.p,{children:["In order to be taken into account, this parameter must be executed on the server machine (for example in the ",(0,i.jsx)(s.em,{children:"On Server Startup Database Method"}),")."]}),"\n",(0,i.jsx)(s.h3,{id:"idle-connections-timeout-54",children:"Idle connections timeout (54)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),":4D application unless value is negative"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two"})," ",(0,i.jsx)(s.strong,{children:"sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": Whole value expressing a duration in seconds. The value can be positive (new connections) or negative (existing connections). By default, the value is 20."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Maximum period of inactivity (timeout) for connections to both the 4D database engine and the SQL engine, as well as, in ",(0,i.jsx)(s.em,{children:"ServerNet"}),' mode (new network layer), to the 4D application server. When an idle connection reaches this limit, it is automatically put on standby, which freezes the client/server session and closes the network socket. In the server administration window, the state of the user process is indicated as "Postponed". This functioning is completely transparent for the user: as soon as there is new activity on the connection which is on standby, the socket is automatically reopened and the client/server session is restored.']}),"\n",(0,i.jsx)(s.p,{children:"On the one hand, this setting lets you save resources on the server: connections on standby close the socket and free up a process on the server. On the other hand, it lets you avoid losing connections due to the closing of idle sockets by the firewall. For this, the timeout value for idle connections must be lower than that of the firewall in this case."}),"\n",(0,i.jsxs)(s.p,{children:["If you pass a positive value in ",(0,i.jsx)(s.em,{children:"value"}),", it applies to all new connections in all the processes. If you pass a negative value, it applies to connections that are open in the current process. If you pass 0, idle connections are not subjected to a timeout."]}),"\n",(0,i.jsx)(s.p,{children:"This parameter must be set on the client side. Usually, you do not need to change this value."}),"\n",(0,i.jsx)(s.h3,{id:"php-interpreter-ip-address-55",children:"PHP interpreter IP address (55)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),":4D application"]}),"\n",(0,i.jsxs)(s.p,{children:["Kept between two   ",(0,i.jsx)(s.strong,{children:"sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Values"}),': Formatted string of the IPv4 type (for example "127.0.0.1") or IPv6 type (for example "2001:0db8:0000:0000:0000:ff00:0042:8329")']}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),': IP address used locally by 4D to communicate with the PHP interpreter via FastCGI. By default, the value is "127.0.0.1" (addresses in IPv6 format are supported starting with 4D v16R4). This address must correspond to the machine where 4D is located. This parameter can also be set globally for all the machines via the Database Settings.']}),"\n",(0,i.jsxs)(s.p,{children:["For more information about the PHP interpreter, please refer to the ",(0,i.jsx)(s.em,{children:"Design Reference"})," manual."]}),"\n",(0,i.jsx)(s.h3,{id:"php-interpreter-port-56",children:"PHP interpreter port (56)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),":4D application"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two"})," ",(0,i.jsx)(s.strong,{children:"sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Values"}),": Positive long integer type value. By default, the value is 8002."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Number of the TCP port used by the PHP interpreter of 4D. This parameter can also be modified globally for all the machines via the Database Settings. For more information about the PHP interpreter, please refer to the ",(0,i.jsx)(s.em,{children:"Design Reference"})," manual."]}),"\n",(0,i.jsx)(s.h3,{id:"ssl-cipher-list-64",children:"SSL cipher list (64)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D application"]}),"\n",(0,i.jsxs)(s.p,{children:["Kept between two ",(0,i.jsx)(s.strong,{children:"sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": Sequence of strings separated by colons."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Cipher list used by 4D for the secure protocol. This list modifies the priority of ciphering algorithms implemented by 4D. For example, you can pass the following string in the ",(0,i.jsx)(s.em,{children:"value"}),' parameter: "HIGH:!aNULL:!MD5:!3DES:!CAMELLIA:!AES128:!RSA:!DH:!RC4". For a complete description of the syntax for the ciphers list, refer to the ',(0,i.jsx)(s.em,{children:"ciphers page of the OpenSSL"}),"   ",(0,i.jsx)(s.em,{children:"site"}),"."]}),"\n",(0,i.jsx)(s.p,{children:"This setting applies to the main Web server (excluding Web server objects), the SQL server, client/server connections, as well as the HTTP client and all the 4D commands that make use of the secure protocol. It is temporary (it is not maintained between sessions)."}),"\n",(0,i.jsx)(s.p,{children:"When the cipher list has been modified, you will need to restart the server concerned in order for the new settings to be taken into account."}),"\n",(0,i.jsxs)(s.p,{children:["To reset the cipher list to its default value (stored permanently in the SLI file), call the ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/set-database-parameter",children:"SET DATABASE PARAMETER"}),' command and pass an empty string ("") in the ',(0,i.jsx)(s.em,{children:"value"})," parameter."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Note:"})," With the ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/get-database-parameter",children:"Get database parameter"})," command, the cipher list is returned in the optional ",(0,i.jsx)(s.em,{children:"stringValue"})," parameter and the return parameter is always 0."]}),"\n",(0,i.jsx)(s.h3,{id:"cache-unload-minimum-size-66",children:"Cache unload minimum size (66)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D application"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": Positive longint > 1."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Minimum size of memory to release from the database cache when the engine needs to make space in order to allocate an object to it (value in bytes)."]}),"\n",(0,i.jsx)(s.p,{children:"The purpose of this selector is to reduce the number of times that data is released from the cache in order to obtain better performance. You can vary this setting according to the size of the cache and that of the blocks of data being handled in your database."}),"\n",(0,i.jsx)(s.p,{children:"By default, if this selector is not used, 4D unloads at least 10% of the cache when space is needed."}),"\n",(0,i.jsx)(s.h3,{id:"direct2d-status-69",children:"Direct2D status (69)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D application"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Activation mode of Direct2D under Windows."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": One of the following constants (mode 3 by default):"]}),"\n",(0,i.jsx)(s.p,{children:"Direct2D Disabled (0): Direct2D mode is not enabled and the database functions in the previous mode (GDI/GDIPlus)."}),"\n",(0,i.jsx)(s.p,{children:"Direct2D Hardware (1): Use Direct2D as graphics hardware context for entire 4D application. If this context is not available, use Direct2D graphics software context."}),"\n",(0,i.jsx)(s.p,{children:"Direct2D Software (3) (Default mode): Beginning with Windows 7, use Direct2D graphics software context for entire 4D application."}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsxs)(s.em,{children:[(0,i.jsx)(s.em,{children:"Warning:"})," This selector is provided for debugging purposes only. Since several 4D features rely on Direct2D, it must not be disabled in deployed applications. Only the default mode (Direct2D Software) is approved for deployed applications."]})}),"\n",(0,i.jsx)(s.h3,{id:"direct2d-get-active-status-74",children:"Direct2D get active status (74)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Note"}),": You can only use this selector with the ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/get-database-parameter",children:"Get database parameter"})," command and its value cannot be set."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Returns active implementation of Direct2D under Windows."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": 0, 1, 2, 3, 4 or 5 (see values of selector 69). The value returned depends on the availability of Direct2D, the hardware and the quality of Direct2D support by the operating system."]}),"\n",(0,i.jsx)(s.p,{children:"For example, if you execute:"}),"\n",(0,i.jsx)(s.p,{children:"SET DATABASE PARAMETER(Direct2D status;Direct2D Hardware)  $mode:=Get database parameter(Direct2D get active status)"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["On Windows 7 and higher, ",(0,i.jsx)(s.em,{children:"$mode"})," is set to 1 when the system detects hardware compatible with Direct2D; otherwise, ",(0,i.jsx)(s.em,{children:"$mode"})," is set to 3 (software context)."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["On Windows Vista, ",(0,i.jsx)(s.em,{children:"$mode"})," is set to 1 when the system detects hardware compatible with Direct2D; otherwise, ",(0,i.jsx)(s.em,{children:"$mode"})," is set to 0 (disabling of Direct2D)."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["On Windows XP, ",(0,i.jsx)(s.em,{children:"$mode"})," is always set to 0 (not compatible with Direct2D)."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"diagnostic-log-recording-79",children:"Diagnostic log recording (79)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Thread-safe"})," : Yes"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D application"]}),"\n",(0,i.jsxs)(s.p,{children:["Kept between two ",(0,i.jsx)(s.strong,{children:"sessions"}),": No"]}),"\n",(0,i.jsx)(s.p,{children:"Possible values: 0 or 1 (0 = do not record, 1 = record)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Starts or stops recording of the 4D diagnostic file. By default, the value is 0 (do not record)."]}),"\n",(0,i.jsxs)(s.p,{children:["4D can continuously record a set of events related to the internal application operation into a diagnostic file. Information contained in this file is intended for the development of 4D applications and can be analyzed with the help of the 4D tech support (for more information, please refer to the ",(0,i.jsx)(s.em,{children:"Description of log files"})," section on ",(0,i.jsx)(s.em,{children:"developer.4d.com"}),"). When you pass 1 in this selector, a diagnostic file is automatically created (or opened) in the database ",(0,i.jsx)(s.strong,{children:"Logs"})," folder. The file is named ",(0,i.jsx)(s.em,{children:"4DDiagnosticLog_X"}),".txt (or ",(0,i.jsx)(s.em,{children:"4DDiagnosticLogServer_X"}),".txt if generated on the server). Once this file reaches a size of 10 MB, it is closed and a new file is generated, with an incremented sequence number X."]}),"\n",(0,i.jsxs)(s.p,{children:["Note that you can include custom information in this file using the ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/log-event",children:"LOG EVENT"})," command."]}),"\n",(0,i.jsx)(s.h3,{id:"log-command-list-80",children:"Log command list (80)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D application"]}),"\n",(0,i.jsxs)(s.p,{children:["Kept between two ",(0,i.jsx)(s.strong,{children:"sessions"}),": No"]}),"\n",(0,i.jsx)(s.p,{children:'Possible values: String containing a list of 4D command numbers to record (separated by semi-colons) or "all" to record all the commands or "" (empty string) to record none of them or prefixed by "-" to exclude specific commands.'}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": List of 4D commands to record in or exclude from the debugging file (see selector 34, Debug Log Recording). By default, all 4D commands are recorded."]}),"\n",(0,i.jsx)(s.p,{children:"This selector restricts the quantity of information saved in the debugging file by limiting the 4D commands whose execution you want to record or exclude from recording. For example, you can write:"}),"\n",(0,i.jsx)(s.p,{children:'SET DATABASE PARAMETER(Log command list;"277;341") //Record only the QUERY and QUERY SELECTION commands    OR    SET DATABASE PARAMETER(Log command list;"-1666;-323") //Exclude the SET USER ALIAS and DELAY PROCESS commands from being recorded'}),"\n",(0,i.jsx)(s.h3,{id:"spellchecker-81",children:"Spellchecker (81)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D application"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": 0 (default) = native macOS spellchecker (Hunspell disabled), 1 = Hunspell spellcheck enabled."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Enables the Hunspell spellcheck under macOS. By default, the native spellchecker is enabled on this platform. You may prefer to use the Hunspell spellcheck, for example, in order to unify the interface for your cross-platform applications (under Windows, only the Hunspell spellcheck is available). For more information, refer to ",(0,i.jsx)(s.em,{children:"Spell checking"}),"."]}),"\n",(0,i.jsx)(s.h3,{id:"dates-inside-objects-85",children:"Dates inside objects (85)"}),"\n",(0,i.jsx)(s.p,{children:"Scope: Current process"}),"\n",(0,i.jsxs)(s.p,{children:["Kept between two ",(0,i.jsx)(s.strong,{children:"sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": String type without time zone (0), String type with time zone (1), Date type (2) (default)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Defines the way dates are stored within objects, as well as how they will be imported/exported in JSON."]}),"\n",(0,i.jsxs)(s.p,{children:["When the selector value is Date type (default value for databases created with 4D v17 and higher), 4D dates are stored with the date type within objects, with respect to the local date settings. When converted to JSON format, date attributes will be converted to strings which do not include a time. (",(0,i.jsx)(s.strong,{children:"Note:"}),' this setting can be set by means of the "Use date type instead of ISO date format in objects" option found on the ',(0,i.jsx)(s.em,{children:"Compatibility page"})," of the Database Settings)."]}),"\n",(0,i.jsxs)(s.p,{children:['Passing String type with time zone in this selector will convert 4D dates into ISO strings and take the local time zone into account. For example, converting the date 23/08/2013 gives you "2013-08-22T22:00:000Z" in JSON format when the operation is performed in France during Daylight Savings Time (GMT+2). This principle conforms to the standard operation of JavaScript. This can be a source of errors when you want to send JSON date values to someone in a different time zone. For example, when you export a table using ',(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/selection-to-json",children:"Selection to JSON"})," in France that is meant to be reimported in the US using ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/json-to-selection",children:"JSON TO SELECTION"}),'. Since dates are re-interpreted in each time zone, the values stored in the database will be different. In this case, you can modify the conversion mode for dates so that they do not take the time zone into account by passing String type without time zone in this selector. Converting the date 23/08/2013 will then give you "2013-08-23T00:00:00Z" in all cases.']}),"\n",(0,i.jsx)(s.h3,{id:"diagnostic-log-level-86",children:"Diagnostic log level (86)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Thread-safe"})," : Yes"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope:"})," 4D application"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions:"})," No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Level(s) of messages to be included in the diagnostic log when enabled (see selector Diagnostic log recording). Each level designates a category of diagnostic messages and automatically includes more important categorie(s). For a description of categories, see ",(0,i.jsx)(s.em,{children:"Diagnostic log levels"})," section on ",(0,i.jsx)(s.em,{children:"developer.4d.com"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values:"})," One of the following constants (Log info by default): Log trace: activates ERROR, WARN, INFO, DEBUG, TRACE (most detailed level) Log debug: activates ERROR, WARN, INFO, DEBUG Log info: activates ERROR, WARN, INFO (default) Log warn: activates ERROR, WARN Log error: activates ERROR (least detailed level)"]}),"\n",(0,i.jsx)(s.h3,{id:"use-legacy-network-layer-87",children:"Use legacy network layer (87)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D in local mode, 4D Server"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions"}),": Yes"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Sets or gets the current status of the legacy network layer for client/server connections. The legacy network layer is obsolete beginning with 4D v14 R5 and should be replaced progressively in your applications with the ",(0,i.jsx)(s.em,{children:"ServerNet"})," network layer. ",(0,i.jsx)(s.em,{children:"ServerNet"})," will be required in upcoming 4D releases in order to benefit from future network evolutions. For compatibility reasons, the legacy network layer is still supported to allow a smooth transition for existing applications; (it is used by default in applications converted from a release prior to v14 R5). Pass 1 in this parameter to use the legacy network layer (and disable ",(0,i.jsx)(s.em,{children:"ServerNet"}),") for your client/server connections, and pass 0 to disable the legacy network (and use the ",(0,i.jsx)(s.em,{children:"ServerNet"}),")."]}),"\n",(0,i.jsxs)(s.p,{children:['This property can also be set by means of the "Use legacy network layer" option found on the ',(0,i.jsx)(s.em,{children:"Compatibility page"})," of the Database Settings (see ",(0,i.jsx)(s.em,{children:"Network and Client-Server options"}),"). In this section, you will also find a discussion about migration strategy. We recommend that you activate the ",(0,i.jsx)(s.em,{children:"ServerNet"})," as soon as possible. You will need to restart the application in order for this parameter to be taken into account."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values:"})," 0 or 1 (0 = do not use legacy layer, 1 = use legacy layer)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Default value:"})," 0 in databases created with 4D v14 R5 or higher, 1 in databases converted from 4D v14 R4 or earlier."]}),"\n",(0,i.jsx)(s.h3,{id:"sql-server-port-id-88",children:"SQL Server Port ID (88)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D local, 4D Server."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions"}),": Yes"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),': Gets or sets the TCP port number used by the integrated SQL server of 4D in local mode or 4D Server. By default, the value is 19812. When this selector is set, the database setting is updated. You can also set the TCP port number on the "SQL" page of the Database Settings dialog box.']}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": 0 to 65535."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Default value"}),": 19812"]}),"\n",(0,i.jsx)(s.h3,{id:"circular-log-limitation-90",children:"Circular log limitation (90)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Thread-safe"})," : Yes"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D local, 4D Server."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": Any integer value, 0 = keep all logs"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Maximum number of files to keep in rotation for each type of log. By default, the 50 most recent files are kept. If you pass a value ",(0,i.jsx)(s.em,{children:"X"}),", only the ",(0,i.jsx)(s.em,{children:"X"})," most recent files are kept, with the oldest being erased automatically when a new one is created. This setting applies to all log files, i.e. request logs (selectors 28 and 45), debug log (selector 34), events log (selector 79), Web logs (selectors 29 and 84 of the ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/web-set-option",children:"WEB SET OPTION"})," command), etc."]}),"\n",(0,i.jsx)(s.h3,{id:"number-of-formulas-in-cache-92",children:"Number of formulas in cache (92)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D application"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": Positive longints"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Default value"}),": 0 (no cache)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Sets or gets the maximum number of formulas to be kept in the cache of formulas, which is used by the ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/execute-formula",children:"EXECUTE FORMULA"})," command. This limit is applied to all processes, but each process has its own formula cache. Caching formulas accelerates the ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/execute-formula",children:"EXECUTE FORMULA"})," command execution in compiled mode since each cached formula is tokenized only once in this case. When you change the cache value, existing contents are reset even if the new size is larger than the previous one. Once the maximum number of formulas in the cache is reached, a new executed formula will erase the oldest one in the cache (FIFO mode). This parameter is only taken into account in compiled databases or compiled components."]}),"\n",(0,i.jsx)(s.h3,{id:"openssl-version-94",children:"OpenSSL version (94)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": all 4D machines*"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions"}),": No"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Returns the version number of the OpenSSL library in use on the machine. (Read only)"]}),"\n",(0,i.jsx)(s.h3,{id:"cache-flush-periodicity-95",children:"Cache flush periodicity (95)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Thread-safe"})," : Yes"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D local, 4D Server"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": longint > 1 (seconds)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Gets or sets the current cache flush periodicity, expressed in seconds. Modifying this value overrides the ",(0,i.jsx)(s.strong,{children:"Flush Cache every X Seconds"})," option in the ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/xml-decode",children:"XML DECODE"})," of the Database settings for the session (it is not stored in the Database settings)."]}),"\n",(0,i.jsx)(s.h3,{id:"remote-connection-sleep-timeout-98",children:"Remote connection sleep timeout (98)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D Server application"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": Positive longint"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Current remote connection sleep timeout in seconds. By default, the value is 172800 (48 hours)."]}),"\n",(0,i.jsxs)(s.p,{children:["The sleep timeout is applied after a machine running a 4D remote application has switched to sleep mode. In this case, its session is maintained by 4D Server (see feature description). 4D Server checks every 5 minutes if any sleeping remote 4D has exceeded the sleep timeout, in which case it is dropped. Thus, the maximum allowed sleeping time is ",(0,i.jsx)(s.em,{children:"current sleep timeout + 300"}),". In some cases, you might want to modify the sleep timeout, for example to release locked records/licenses more rapidely."]}),"\n",(0,i.jsx)(s.h3,{id:"tips-enabled-101",children:"Tips enabled (101)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope:"})," 4D application"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions:"})," No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values:"})," 0 = tips disabled, 1 = tips enabled (default)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Sets or gets the current display status of the tips for the 4D application. By default, tips are enabled."]}),"\n",(0,i.jsx)(s.p,{children:"Note that this parameter sets all 4D tips, i.e. form help messages and Design mode editor's tips."}),"\n",(0,i.jsx)(s.h3,{id:"tips-delay-102",children:"Tips delay (102)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope:"})," 4D application"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions:"})," No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values:"})," longint >= 0 (ticks)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Delay before tips are displayed once the mouse cursor has stopped in objects with attached help messages. Value is expressed in ticks (1/60th of a second). Default value is 45 ticks (0.75 seconds)."]}),"\n",(0,i.jsx)(s.h3,{id:"tips-duration-103",children:"Tips duration (103)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope:"})," 4D application"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions:"})," No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values:"})," longint >= 60 (ticks)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Maximum display duration for a tip. Value is expressed in ticks (1/60th of a second). Default value is 720 ticks (12 seconds)."]}),"\n",(0,i.jsx)(s.h3,{id:"min-tls-version-105",children:"Min TLS version (105)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D Server, 4D Web Server and 4D SQL Server"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Used to specify the minimum Transport Layer Security (TLS) version, which provides data encryption and authentication between applications and servers. Connection attempts from clients supporting only versions below the minimum will be rejected. The setting is applied globally to the network layer. Once modified, the server must be restarted to use the new value."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Default value"}),": TLSv1_3"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": TLSv1_2 (TLS 1.2, introduced in 2008) TLSv1_3 (TLS 1.3, introduced in 2018) ",(0,i.jsx)(s.strong,{children:"NOTES"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"The 4D Internet Commands plugin uses a different network layer, therefore this selector will have no impact on its TLS version."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"This setting is ignored for your client server connections if your 4D Server uses the legacy network layer."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"user-param-value-108",children:"User param value (108)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope:"})," 4D local, 4D Server"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions:"})," No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": Any custom string"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Custom string passed from one session to the next one when the 4D application is restarted. This selector is useful in the context of automated unit tests that require applications to restart with different parameters."]}),"\n",(0,i.jsxs)(s.p,{children:["When used with ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/set-database-parameter",children:"SET DATABASE PARAMETER"}),", defines a new value that will be available within the next opened database after 4D is restarted manually or using the ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/open-database",children:"OPEN DATABASE"}),"(*), ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/open-data-file",children:"OPEN DATA FILE"}),", or ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/restart-4d",children:"RESTART 4D"})," commands. When used with ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/get-database-parameter",children:"Get database parameter"}),", gets the currently available user parameter value, defined using a command line (see ",(0,i.jsx)(s.em,{children:"Command Line Interface"}),"), the .4DLink file (see ",(0,i.jsx)(s.em,{children:"Using a 4DLink file"}),"), or a call to ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/set-database-parameter",children:"SET DATABASE PARAMETER"})," during the previous session. (*) If ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/set-database-parameter",children:"SET DATABASE PARAMETER"})," sets a User param value before a call to ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/open-database",children:"OPEN DATABASE"})," with a .4DLink file that also contains a user-param xml attribute, 4D takes into account only the parameter provided by ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/set-database-parameter",children:"SET DATABASE PARAMETER"}),"."]}),"\n",(0,i.jsx)(s.h3,{id:"times-inside-objects-109",children:"Times inside objects (109)"}),"\n",(0,i.jsx)(s.p,{children:"Scope: 4D local, 4D Server (all processes)"}),"\n",(0,i.jsxs)(s.p,{children:["Kept between two ",(0,i.jsx)(s.strong,{children:"sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": Times in seconds (0) (default), Times in milliseconds (1)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Defines the way time values are converted and stored within object properties and collection elements, as well as how they will be imported/exported in JSON and in Web areas. By default, starting with 4D v17, times are converted and stored as number of seconds in objects."]}),"\n",(0,i.jsx)(s.p,{children:"In previous releases, time values were converted and stored as number of milliseconds in those contexts. Using this selector can help you migrating your applications by reverting to previous settings if necessary."}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Note"}),": ORDA methods and SQL engine ignore this setting, they always assume time values to be numbers of seconds."]}),"\n",(0,i.jsx)(s.h3,{id:"smtp-log-110",children:"SMTP Log (110)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Thread-safe"})," : Yes"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D local, 4D Server*"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions"}),": No"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": 0 or from 1 to X (0 = do not record, 1 to X = sequential number, added to the file name). By default, the value is 0 (SMTP exchanges not recorded)."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Starts or stops the recording of exchanges between 4D and the SMTP server, when a ",(0,i.jsx)(s.em,{children:"transporter"})," object is processed through ",(0,i.jsx)(s.em,{children:"transporter.send( )"})," or ",(0,i.jsx)(s.em,{children:"SMTP_transporter.checkConnection( )"}),". By default, the value is 0 (exchanges not recorded). When this mechanism is enabled, a log file is created in the Logs folder of the database. It is named 4DSMTPLog_X.txt, where ",(0,i.jsx)(s.em,{children:"X"})," is the sequential number of the log. Once the file 4DSMTPLog has reached a size of 10 MB, it is closed and a new one is generated, with an incremented sequential number. If a file of the same name already exists, it is replaced directly. You can set the starting number of the sequence using the ",(0,i.jsx)(s.em,{children:"value"})," parameter. By default, all files are kept, but you can control the number of files to keep using the Circular log limitation parameter."]}),"\n",(0,i.jsxs)(s.p,{children:["For more information on the 4DSMTPLog_X.txt files, please refer to the ",(0,i.jsx)(s.em,{children:"Description of log files"})," section."]}),"\n",(0,i.jsx)(s.h3,{id:"current-process-debug-log-recording-111",children:"Current process debug log recording (111)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope:"})," 4D application"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions:"})," No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Starts or stops the sequential recording of programming events ",(0,i.jsx)(s.strong,{children:"for the current process"}),' in a separated log file. This log is similar to the Debug log recording (selector 34) but focuses on the current process only. The log file name includes the letter "p" and the process number: 4DDebugLog[_p',(0,i.jsx)(s.em,{children:"N"}),"_",(0,i.jsx)(s.em,{children:"n"}),"].txt, where N is the process unique ID."]}),"\n",(0,i.jsxs)(s.p,{children:["For more information about this format and on the use of the ",(0,i.jsx)(s.em,{children:"4DDebugLog"})," file, please refer to ",(0,i.jsx)(s.em,{children:"Description of log files"})," in the Design Reference."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Notes:"})," This selector is provided solely for the purpose of debugging and should be used with care. In particular, it must not put into production since it can have an impact on the application performance. You can use both Debug log recording and Current process debug log recording selectors simultaneously, in which case the current process actions will not be logged in the main log file."]}),"\n",(0,i.jsx)(s.h3,{id:"is-current-database-a-project-112",children:"Is current database a project (112)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Note:"})," You can only use this selector with the ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/get-database-parameter",children:"Get database parameter"})," command and its value cannot be set."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D application"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Returns 1 if the current database architecture is a project, and 0 otherwise. For more information, please refer to ",(0,i.jsx)(s.em,{children:"Project vs binary database"})," section."]}),"\n",(0,i.jsx)(s.h3,{id:"is-host-database-a-project-113",children:"Is host database a project (113)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Note:"})," You can only use this selector with the ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/get-database-parameter",children:"Get database parameter"})," command and its value cannot be set."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D application"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Returns 1 if the host database architecture is a project, and 0 otherwise. For more information, please refer to ",(0,i.jsx)(s.em,{children:"Project vs binary database"})," section."]}),"\n",(0,i.jsx)(s.h3,{id:"libldap-version-114",children:"Libldap version (114)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": Current 4D machine"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions"}),": n/a"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Returns the version number of the LDAP library in the 4D application on the current machine. (Read only)"]}),"\n",(0,i.jsx)(s.h3,{id:"libsasl-version-115",children:"Libsasl version (115)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": Current 4D machine"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions"}),": n/a"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Returns the version number of the SASL library in the 4D application on the current machine. (Read only)"]}),"\n",(0,i.jsx)(s.h3,{id:"pop3-log-116",children:"POP3 Log (116)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Thread-safe"})," : Yes"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope:"})," 4D local, 4D Server"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions:"})," No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values:"})," 0 or from 1 to X (0 = do not record, 1 to X = sequential number, added to the file name). By default, the value is 0 (POP3 exchanges not recorded)."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Starts or stops the recording of exchanges between 4D and the POP3 server, when a transporter object is processed through ",(0,i.jsx)(s.em,{children:"POP3_transporter.getMail( )"})," or ",(0,i.jsx)(s.em,{children:"POP3_transporter.checkConnection( )"}),". By default, the value is 0 (exchanges not recorded). When this mechanism is enabled, a log file is created in the Logs folder of the database. It is named 4DPOP3Log_X.txt, where X is the sequential number of the log. Once the file 4DPOP3Log has reached a size of 10 MB, it is closed and a new one is generated, with an incremented sequential number. If a file of the same name already exists, it is replaced directly. You can set the starting number of the sequence using the value parameter. By default, all files are kept, but you can control the number of files to keep using the Circular log limitation parameter."]}),"\n",(0,i.jsxs)(s.p,{children:["For more information on the 4DPOP3Log_X.txt files, please refer to the ",(0,i.jsx)(s.em,{children:"Description of log files"})," section."]}),"\n",(0,i.jsx)(s.h3,{id:"is-host-database-writable-117",children:"Is host database writable (117)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Note:"})," You can only use this selector with the ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/get-database-parameter",children:"Get database parameter"})," command and its value cannot be set."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D application"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Returns 1 if the host project file/structure file is writable, and 0 if it is read-only."]}),"\n",(0,i.jsx)(s.h3,{id:"imap-log-119",children:"IMAP Log (119)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Thread-safe"})," : Yes"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D local, 4D Server"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": 0 or from 1 to X (0 = do not record, 1 to X = sequential number, added to the file name). By default, the value is 0 (IMAP exchanges not recorded)."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Starts or stops the recording of exchanges between 4D and the IMAP server, when a transporter object is processed through ",(0,i.jsx)(s.em,{children:"IMAP_transporter.getMail( )"})," or ",(0,i.jsx)(s.em,{children:"IMAP_transporter.checkConnection( )"}),". By default, the value is 0 (exchanges not recorded). When this mechanism is enabled, a log file is created in the Logs folder of the database. It is named 4DIMAPLog_X.txt, where X is the sequential number of the log. Once the file 4DIMAPLog has reached a size of 10 MB, it is closed and a new one is generated, with an incremented sequential number. If a file of the same name already exists, it is replaced directly. You can set the starting number of the sequence using the value parameter. By default, all files are kept, but you can control the number of files to keep using the Circular log limitation parameter."]}),"\n",(0,i.jsxs)(s.p,{children:["For more information on the 4DIMAPLog_X.txt files, please refer to the ",(0,i.jsx)(s.em,{children:"Description of log files"})," section."]}),"\n",(0,i.jsx)(s.h3,{id:"libzip-version-120",children:"Libzip version (120)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope:"})," Current 4D machine"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions:"})," n/a"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Returns the version number of the libzip library in the 4D application on the current machine. (Read only)"]}),"\n",(0,i.jsx)(s.h3,{id:"pause-logging-121",children:"Pause logging (121)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Thread-safe"})," : Yes"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Scope"}),": 4D application"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two"})," ",(0,i.jsx)(s.strong,{children:"sessions"}),": No"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values"}),": 0 (resume logs), 1 (pause logs)"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," This selector allows to suspend/resume all logging operations started on the application (except ORDA logs). This feature can be useful to temporarily lighten the 4D application tasks or schedule logging operations."]}),"\n",(0,i.jsx)(s.h3,{id:"tcp-log-131",children:"TCP log (131)"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Possible values:"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"0"}),": Logging is disabled."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"1"}),": Logging is enabled."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Retrieves the status of the ",(0,i.jsx)(s.code,{children:"4DTCPLog.txt"})," file for logging TCP events and returns whether the ",(0,i.jsx)(s.code,{children:"4DTCPLog.txt"})," log file is currently active or not."]}),"\n",(0,i.jsxs)(s.h3,{id:"rdp-optimizationscope-4d-application",children:["RDP optimization",(0,i.jsx)(s.strong,{children:"Scope:"})," 4D application."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Kept between two sessions:"})," No."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Possible values:"})," ",(0,i.jsx)(s.code,{children:"0"}),": Disabled (default), ",(0,i.jsx)(s.code,{children:"1"}),": Enabled."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Description:"})," Enables or disables optimizations for RDP (Remote Desktop Protocol). When enabled, optimizes in particular the use of shared clipboard in RDP connections, which can otherwise lead to freezing issues. Note that this selector disables the support in clipboard for images encoded as data uri in raw text (only concerns images dropped or explicitly copied as text from a browser)."]}),"\n",(0,i.jsx)(s.h2,{id:"thread-safe-selectors",children:"Thread-safe selectors"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.strong,{children:"Get database parameter"})," command can be used in preemptive processes when calling the following selectors:"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#4d-server-log-recording-28",children:"4D Server log recording"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#debug-log-recording-34",children:"Debug log recording"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#diagnostic-log-recording-79",children:"Diagnostic log recording"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#diagnostic-log-level-86",children:"Diagnostic log level"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#circular-log-limitation-90",children:"Circular log limitation"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#cache-flush-periodicity-95",children:"Cache flush periodicity"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#smtp-log-110",children:"SMTP Log"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#pop3-log-116",children:"POP3 Log"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#imap-log-119",children:"IMAP Log"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#pause-logging-121",children:"Pause logging"})}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(s.p,{children:"You want your application to restart after a first launch. The application is launched with, for example, a command line on Windows:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'%HOMEPATH%\\Desktop\\4D\\4D.exe %HOMEPATH%\\Documents\\myDB.4dbase\\myDB.4db --user-param "First launch"\n'})}),"\n",(0,i.jsxs)(s.p,{children:["In the ",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/on-startup-database-method",children:"On Startup database method"}),", you write:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-4d",children:' var $realVal : Real\n var $welcome : Text\n $realVal:=Get database parameter(User param value;$welcome)\n If($welcome#"")\n    ALERT($welcome)\n    If($welcome="First launch") //it is the first launch\n  //... do some operations\n       SET DATABASE PARAMETER(User param value;"Database has restarted!") //for the next launch\n       RESTART 4D\n    End if\n End if\n'})}),"\n",(0,i.jsx)(s.h2,{id:"see-also",children:"See also"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/distinct-values",children:"DISTINCT VALUES"}),(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/application-info",children:"Application info"}),(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/query-selection",children:"QUERY SELECTION"}),(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.a,{href:"/docs/20-R9/commands/set-database-parameter",children:"SET DATABASE PARAMETER"})]}),"\n",(0,i.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{}),(0,i.jsx)(s.th,{})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Command number"}),(0,i.jsx)(s.td,{children:"643"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Thread safe"}),(0,i.jsx)(s.td,{children:"\u2717"})]})]})]})]})}function h(e={}){let{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},250065:function(e,s,n){n.d(s,{Z:()=>a,a:()=>o});var t=n(667294);let i={},r=t.createContext(i);function o(e){let s=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);