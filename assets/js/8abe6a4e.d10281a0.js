"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["97167"],{243838:function(e,n,i){i.r(n),i.d(n,{default:()=>h,frontMatter:()=>d,metadata:()=>t,assets:()=>o,toc:()=>c,contentTitle:()=>l});var t=JSON.parse('{"id":"Concepts/time","title":"Time","description":"A Time field, variable or expression can be in the range of 0000 to 596,00000.","source":"@site/versioned_docs/version-20/Concepts/dt_time.md","sourceDirName":"Concepts","slug":"/Concepts/time","permalink":"/docs/20/Concepts/time","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20Concepts%2Fdt_time.md%20(20)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"20","frontMatter":{"id":"time","title":"Time"},"sidebar":"docs","previous":{"title":"String","permalink":"/docs/20/Concepts/string"},"next":{"title":"Variant","permalink":"/docs/20/Concepts/variant"}}'),r=i("785893"),s=i("250065");let d={id:"time",title:"Time"},l=void 0,o={},c=[{value:"Time literals",id:"time-literals",level:2},{value:"Time operators",id:"time-operators",level:2},{value:"Example 1",id:"example-1",level:3},{value:"Example 2",id:"example-2",level:3}];function a(e){let n={code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"A Time field, variable or expression can be in the range of 00:00:00 to 596,000:00:00."}),"\n",(0,r.jsx)(n.p,{children:"Times are in 24-hour format."}),"\n",(0,r.jsx)(n.p,{children:"A time value can be treated as a number. The number returned from a time is the number of seconds since midnight (00:00:00) that time represents."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," In the ",(0,r.jsx)(n.em,{children:"4D Language Reference"})," manual, Time parameters in command descriptions are denoted as Time, except when marked otherwise."]}),"\n",(0,r.jsx)(n.h2,{id:"time-literals",children:"Time literals"}),"\n",(0,r.jsx)(n.p,{children:"A time literal constant is enclosed by question marks (?...?)."}),"\n",(0,r.jsx)(n.p,{children:"A time literal constant is ordered hour:minute:second, with a colon (:) setting off each part. Times are specified in 24-hour format."}),"\n",(0,r.jsx)(n.p,{children:"Here are some examples of time literals:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:"?00:00:00? ` midnight\n?09:30:00? ` 9:30 am\n?13:01:59? ` 1 pm, 1 minute, and 59 seconds\n"})}),"\n",(0,r.jsx)(n.p,{children:"A null time is specified by ?00:00:00?"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Tip:"})," The Code Editor includes a shortcut for entering a null time. To type a null time, enter the question mark (?) character and press Enter."]}),"\n",(0,r.jsx)(n.h2,{id:"time-operators",children:"Time operators"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Operation"}),(0,r.jsx)(n.th,{children:"Syntax"}),(0,r.jsx)(n.th,{children:"Returns"}),(0,r.jsx)(n.th,{children:"Expression"}),(0,r.jsx)(n.th,{children:"Value"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Addition"}),(0,r.jsx)(n.td,{children:"Time + Time"}),(0,r.jsx)(n.td,{children:"Time"}),(0,r.jsx)(n.td,{children:"?02:03:04? + ?01:02:03?"}),(0,r.jsx)(n.td,{children:"?03:05:07?"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Subtraction"}),(0,r.jsx)(n.td,{children:"Time \u2013 Time"}),(0,r.jsx)(n.td,{children:"Time"}),(0,r.jsx)(n.td,{children:"?02:03:04? \u2013 ?01:02:03?"}),(0,r.jsx)(n.td,{children:"?01:01:01?"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Addition"}),(0,r.jsx)(n.td,{children:"Time + Number"}),(0,r.jsx)(n.td,{children:"Number"}),(0,r.jsx)(n.td,{children:"?02:03:04? + 65"}),(0,r.jsx)(n.td,{children:"7449"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Subtraction"}),(0,r.jsx)(n.td,{children:"Time \u2013 Number"}),(0,r.jsx)(n.td,{children:"Number"}),(0,r.jsx)(n.td,{children:"?02:03:04? \u2013 65"}),(0,r.jsx)(n.td,{children:"7319"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Multiplication"}),(0,r.jsx)(n.td,{children:"Time * Number"}),(0,r.jsx)(n.td,{children:"Number"}),(0,r.jsx)(n.td,{children:"?02:03:04? * 2"}),(0,r.jsx)(n.td,{children:"14768"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Division"}),(0,r.jsx)(n.td,{children:"Time / Number"}),(0,r.jsx)(n.td,{children:"Number"}),(0,r.jsx)(n.td,{children:"?02:03:04? / 2"}),(0,r.jsx)(n.td,{children:"3692"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Longint division"}),(0,r.jsx)(n.td,{children:"Time \\ Number"}),(0,r.jsx)(n.td,{children:"Number"}),(0,r.jsx)(n.td,{children:"?02:03:04? \\ 2"}),(0,r.jsx)(n.td,{children:"3692"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Modulo"}),(0,r.jsx)(n.td,{children:"Time % Time"}),(0,r.jsx)(n.td,{children:"Time"}),(0,r.jsx)(n.td,{children:"?20:10:00? % ?04:20:00?"}),(0,r.jsx)(n.td,{children:"?02:50:00?"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Modulo"}),(0,r.jsx)(n.td,{children:"Time % Number"}),(0,r.jsx)(n.td,{children:"Number"}),(0,r.jsx)(n.td,{children:"?02:03:04? % 2"}),(0,r.jsx)(n.td,{children:"0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Equality"}),(0,r.jsx)(n.td,{children:"Time = Time"}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:"?01:02:03? = ?01:02:03?"}),(0,r.jsx)(n.td,{children:"True"})]})]})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"		||||?01:02:03? = ?01:02:04?	|False|\n"})}),"\n",(0,r.jsx)(n.p,{children:"|Inequality	|Time # Time	|Boolean	|?01:02:03? # ?01:02:04?	|True|\n||||?01:02:03? # ?01:02:03?	|False|\n|Greater than	|Time > Time	|Boolean	|?01:02:04? > ?01:02:03?	|True|\n||||		?01:02:03? > ?01:02:03?	|False|\n|Less than	|Time < Time	|Boolean	|?01:02:03? < ?01:02:04?	|True|\n||||	?01:02:03? < ?01:02:03?	|False|\n|Greater than or equal to	|Time >= Time	|Boolean	|?01:02:03? >=?01:02:03?	|True|\n||||?01:02:03? >=?01:02:04?	|False|\n|Less than or equal to	|Time <= Time	|Boolean	|?01:02:03? <=?01:02:03?|	True|\n||||?01:02:04? <=?01:02:03?	|False|"}),"\n",(0,r.jsx)(n.h3,{id:"example-1",children:"Example 1"}),"\n",(0,r.jsxs)(n.p,{children:["To obtain a time expression from an expression that combines a time expression with a number, use the commands ",(0,r.jsx)(n.code,{children:"Time"})," and ",(0,r.jsx)(n.code,{children:"Time string"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["You can combine expressions of the time and number types using the ",(0,r.jsx)(n.code,{children:"Time"})," or ",(0,r.jsx)(n.code,{children:"Current time"})," functions:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:"	//The following line assigns to $vlSeconds the number of seconds   \n	//that will be elapsed between midnight and one hour from now\n$vlSeconds:=Current time+3600\n	//The following line assigns to $vHSoon the time it will be in one hour\n$vhSoon:=Time(Current time+3600)\n"})}),"\n",(0,r.jsx)(n.p,{children:"The second line could be written in a simpler way:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:"  // The following line assigns to $vHSoon the time it will be in one hour\n $vhSoon:=Current time+?01:00:00?\n"})}),"\n",(0,r.jsx)(n.h3,{id:"example-2",children:"Example 2"}),"\n",(0,r.jsx)(n.p,{children:"The Modulo operator can be used, more specifically, to add times that take the 24-hour format into account:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:"$t1:=?23:00:00? // It is 23:00 hours\n  // We want to add 2 and a half hours\n$t2:=$t1 +?02:30:00? // With a simple addition, $t2 is ?25:30:00?\n$t2:=($t1 +?02:30:00?)%?24:00:00? // $t2 is ?01:30:00? and it is 1:30 hour the next morning\n"})})]})}function h(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return l},a:function(){return d}});var t=i(667294);let r={},s=t.createContext(r);function d(e){let n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);