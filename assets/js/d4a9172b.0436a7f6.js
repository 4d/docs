"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[80885],{817463:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var s=e(474848),a=e(28453);const r={id:"start-transaction",title:"START TRANSACTION",slug:"/commands/start-transaction",displayed_sidebar:"docs"},o=void 0,c={id:"commands-legacy/start-transaction",title:"START TRANSACTION",description:"START TRANSACTION",source:"@site/versioned_docs/version-20-R7/commands-legacy/start-transaction.md",sourceDirName:"commands-legacy",slug:"/commands/start-transaction",permalink:"/docs/commands/start-transaction",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fstart-transaction.md%20(20-R7)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R7",frontMatter:{id:"start-transaction",title:"START TRANSACTION",slug:"/commands/start-transaction",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"RESUME TRANSACTION",permalink:"/docs/commands/resume-transaction"},next:{title:"SUSPEND TRANSACTION",permalink:"/docs/commands/suspend-transaction"}},i={},d=[{value:"Description",id:"description",level:4},{value:"See also",id:"see-also",level:4}];function l(t){const n={a:"a",br:"br",em:"em",h4:"h4",p:"p",strong:"strong",table:"table",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"START TRANSACTION"})}),"\n\n\n\n\n\n\n\n",(0,s.jsx)(n.table,{children:(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Does not require any parameters"}),(0,s.jsx)(n.th,{})]})})}),"\n",(0,s.jsx)(n.h4,{id:"description",children:"Description"}),"\n",(0,s.jsx)(n.p,{children:"START TRANSACTION starts a transaction in the current process. All changes to the data (records) of the database within the transaction are stored temporarily until the transaction is accepted (validated) or canceled."}),"\n",(0,s.jsx)(n.p,{children:"Beginning with version 11 of 4D, you can nest several transactions (sub-transactions). Each transaction or sub-transaction must eventually be cancelled or validated. Note that if the main transaction is cancelled, all the sub-transactions are cancelled as well, regardless of their result."}),"\n",(0,s.jsx)(n.h4,{id:"see-also",children:"See also"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/docs/commands/cancel-transaction",children:"CANCEL TRANSACTION"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.a,{href:"/docs/commands/in-transaction",children:"In transaction"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.a,{href:"/docs/commands/transaction-level",children:"Transaction level"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.em,{children:"Using Transactions"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.a,{href:"/docs/commands/validate-transaction",children:"VALIDATE TRANSACTION"})]})]})}function m(t={}){const{wrapper:n}={...(0,a.R)(),...t.components};return n?(0,s.jsx)(n,{...t,children:(0,s.jsx)(l,{...t})}):l(t)}},28453:(t,n,e)=>{e.d(n,{R:()=>o,x:()=>c});var s=e(296540);const a={},r=s.createContext(a);function o(t){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function c(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:o(t.components),s.createElement(r.Provider,{value:n},t.children)}}}]);