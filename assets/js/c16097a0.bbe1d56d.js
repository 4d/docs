"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[61390],{603905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>h});var r=t(667294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,s=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(t),h=s,m=p["".concat(l,".").concat(h)]||p[h]||d[h]||o;return t?r.createElement(m,a(a({ref:n},c),{},{components:t})):r.createElement(m,a({ref:n},c))}));function h(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var o=t.length,a=new Array(o);a[0]=p;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:s,a[1]=i;for(var u=2;u<o;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},193627:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>c});t(667294);var r=t(603905);function s(){return s=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},s.apply(this,arguments)}function o(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}const a={id:"authUsers",title:"Users and sessions"},i=void 0,l={unversionedId:"REST/authUsers",id:"version-18/REST/authUsers",title:"Users and sessions",description:"Authenticating users",source:"@site/versioned_docs/version-18/REST/authUsers.md",sourceDirName:"REST",slug:"/REST/authUsers",permalink:"/docs/18/REST/authUsers",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20REST%2FauthUsers.md%20(18)&body=Please%20enter%20your%20comment%3A",tags:[],version:"18",frontMatter:{id:"authUsers",title:"Users and sessions"},sidebar:"docs",previous:{title:"Server Configuration",permalink:"/docs/18/REST/configuration"},next:{title:"Getting Server Information",permalink:"/docs/18/REST/genInfo"}},u={},c=[{value:"Authenticating users",id:"authenticating-users",level:2},{value:"Session cookie",id:"session-cookie",level:2},{value:"Example",id:"example",level:3}],d={toc:c};function p(e){var{components:n}=e,t=o(e,["components"]);return(0,r.kt)("wrapper",s({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",s({},{id:"authenticating-users"}),"Authenticating users"),(0,r.kt)("p",null,"As a first step to open a REST session on the 4D server, the user sending the request must be authenticated. "),(0,r.kt)("p",null,"You log in a user to your application by passing the user's name and password to ",(0,r.kt)("a",s({parentName:"p"},{href:"/docs/18/REST/directory#directorylogin"}),(0,r.kt)("inlineCode",{parentName:"a"},"$directory/login")),". "),(0,r.kt)("p",null,"Once a user is successfully logged, a session is open. See below to know how to handle the session cookie in subsequent client requests, if necessary."),(0,r.kt)("p",null,"The session will automatically be closed once the timeout is reached.    "),(0,r.kt)("h2",s({},{id:"session-cookie"}),"Session cookie"),(0,r.kt)("p",null,"Each REST request is handled through a specific session on the 4D server. "),(0,r.kt)("p",null,"When a first valid REST request is received, the server creates the session and sends a session cookie named ",(0,r.kt)("inlineCode",{parentName:"p"},"WASID4D")," in the ",(0,r.kt)("strong",{parentName:"p"},'"Set-Cookie" response header'),", containing the session UUID, for example:"),(0,r.kt)("pre",null,(0,r.kt)("code",s({parentName:"pre"},{}),"WASID4D=EA0400C4D58FF04F94C0A4XXXXXX3\n")),(0,r.kt)("p",null,"In the subsequent REST requests, make sure this cookie is included in the ",(0,r.kt)("strong",{parentName:"p"},'"Cookie" request header')," so that you will reuse the same session. Otherwise, a new session will be opened, and another license used. "),(0,r.kt)("h3",s({},{id:"example"}),"Example"),(0,r.kt)("p",null,"The way to handle session cookies actually depends on your HTTP client. This example shows how to extract and resend the session cookie in the context of requests handled through the 4D ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP Request")," command. "),(0,r.kt)("pre",null,(0,r.kt)("code",s({parentName:"pre"},{className:"language-4d"}),'// Creating headers\nARRAY TEXT(headerNames;0)\nARRAY TEXT(headerValues;0)\n\nAPPEND TO ARRAY(headerNames;"username-4D")\nAPPEND TO ARRAY(headerNames;"session-4D-length")\nAPPEND TO ARRAY(headerNames;"hashed-password-4D")\n\nAPPEND TO ARRAY(headerValues;"kind user")\nAPPEND TO ARRAY(headerValues;"60")\nAPPEND TO ARRAY(headerValues;Generate digest("test";4D digest))\n\nC_OBJECT($response)\n$response:=New object\n \n//This request opens a session for the user "kind user"\n$result:=HTTP Request(HTTP POST method;"127.0.0.1:8044/rest/$directory/login";"";\\  \n    $response;headerNames;headerValues;*)\n \n \n//Build new arrays for headers with only the cookie WASID4D\nbuildHeader(->headerNames;->headerValues)\n\n//This other request will not open a new session\n$result:=HTTP Request(HTTP GET method;"127.0.0.1:8044/rest/$catalog";"";\\  \n    $response;headerNames;headerValues;*)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",s({parentName:"pre"},{className:"language-4d"}),'// buildHeader project method  \n\nC_POINTER($pointerNames;$1;$pointerValues;$2)\nARRAY TEXT($headerNames;0)\nARRAY TEXT($headerValues;0)\n\nCOPY ARRAY($1->;$headerNames)\nCOPY ARRAY($2->;$headerValues)\n\n$indexCookie:=Find in array($headerValues;"WASID4D@")\n$cookie:=$headerValues{$indexCookie}\n$start:=Position("WASID4D";$cookie)\n$end:=Position(";";$cookie)\n$uuid:= Substring($cookie;$start;$end-$start)\n\nARRAY TEXT($headerNames;1)\nARRAY TEXT($headerValues;1)\n\n$headerNames{1}:="Cookie"\n$headerValues{1}:=$uuid\n\nCOPY ARRAY($headerNames;$1->)\nCOPY ARRAY($headerValues;$2->)\n')))}p.isMDXComponent=!0}}]);