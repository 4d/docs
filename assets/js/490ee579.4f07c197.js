"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[86225],{96898:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>r,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>a,toc:()=>u});var t=i(474848),s=i(28453);const o={id:"plug-ins",title:"Plug-ins"},l=void 0,a={id:"Concepts/plug-ins",title:"Plug-ins",description:"As you develop a 4D application, you will discover many capabilities that you did not notice when you started. You can even augment the standard version of 4D by adding plug-ins to your 4D development environment.",source:"@site/versioned_docs/version-20/Concepts/plug-ins.md",sourceDirName:"Concepts",slug:"/Concepts/plug-ins",permalink:"/docs/20/Concepts/plug-ins",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20Concepts%2Fplug-ins.md%20(20)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20",frontMatter:{id:"plug-ins",title:"Plug-ins"},sidebar:"docs",previous:{title:"Components",permalink:"/docs/20/Concepts/components"},next:{title:"Identifiers",permalink:"/docs/20/Concepts/identifiers"}},r={},u=[{value:"What is a plug-in and what can it do?",id:"what-is-a-plug-in-and-what-can-it-do",level:2},{value:"Where to find plug-ins?",id:"where-to-find-plug-ins",level:2},{value:"Installing plug-ins",id:"installing-plug-ins",level:2},{value:"Using plug-ins",id:"using-plug-ins",level:2}];function d(n){const e={a:"a",h2:"h2",p:"p",strong:"strong",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:["As you develop a 4D application, you will discover many capabilities that you did not notice when you started. You can even augment the standard version of 4D by adding ",(0,t.jsx)(e.strong,{children:"plug-ins"})," to your 4D development environment."]}),"\n",(0,t.jsx)(e.h2,{id:"what-is-a-plug-in-and-what-can-it-do",children:"What is a plug-in and what can it do?"}),"\n",(0,t.jsx)(e.p,{children:"A plug-in is a piece of code, written in any language such as C or C++, that 4D launches at start up. It adds functionality to 4D and thus increases its capacity. A plug-in usually contains a set of routines given to the 4D developer. It can handle external areas and run external processes."}),"\n",(0,t.jsx)(e.h2,{id:"where-to-find-plug-ins",children:"Where to find plug-ins?"}),"\n",(0,t.jsxs)(e.p,{children:["Multiple plug-ins have already been written by the 4D community. Published plug-ins ",(0,t.jsx)(e.a,{href:"https://github.com/search?q=4d-plugin&type=Repositories",children:"can be found on GitHub"}),". Additionnally, you can ",(0,t.jsx)(e.a,{href:"/docs/20/Extensions/develop-plug-ins",children:"develop your own plug-ins"}),"."]}),"\n",(0,t.jsx)(e.h2,{id:"installing-plug-ins",children:"Installing plug-ins"}),"\n",(0,t.jsxs)(e.p,{children:["You install plug-ins in the 4D environment by copying their files into the ",(0,t.jsx)(e.strong,{children:"Plugins"})," folder, at the ",(0,t.jsx)(e.a,{href:"/docs/20/Project/architecture#plugins",children:"same level as the Project folder"}),"."]}),"\n",(0,t.jsx)(e.p,{children:"Plug-ins are loaded by 4D when the application is launched so you will need to quit your 4D application before installing them. If a plug-in requires a specific license for use, it will be loaded but not available for use."}),"\n",(0,t.jsx)(e.h2,{id:"using-plug-ins",children:"Using plug-ins"}),"\n",(0,t.jsxs)(e.p,{children:["Plug-ins commands can be used as regular 4D commands in your 4D development. Plug-in commands appear in the ",(0,t.jsx)(e.strong,{children:"Plug-ins"})," page of the Explorer."]})]})}function c(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},28453:(n,e,i)=>{i.d(e,{R:()=>l,x:()=>a});var t=i(296540);const s={},o=t.createContext(s);function l(n){const e=t.useContext(o);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:l(n.components),t.createElement(o.Provider,{value:e},n.children)}}}]);