"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["80974"],{243585:function(e,s,r){r.r(s),r.d(s,{metadata:()=>t,contentTitle:()=>c,default:()=>h,assets:()=>l,toc:()=>a,frontMatter:()=>o});var t=JSON.parse('{"id":"commands-legacy/string-list-to-array","title":"STRING LIST TO ARRAY","description":"STRING LIST TO ARRAY ( resID ; strings {; resFile} )","source":"@site/versioned_docs/version-20-R7/commands-legacy/string-list-to-array.md","sourceDirName":"commands-legacy","slug":"/commands/string-list-to-array","permalink":"/docs/commands/string-list-to-array","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fstring-list-to-array.md%20(20-R7)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"20-R7","frontMatter":{"id":"string-list-to-array","title":"STRING LIST TO ARRAY","slug":"/commands/string-list-to-array","displayed_sidebar":"docs"},"sidebar":"docs","previous":{"title":"RESOURCE TYPE LIST","permalink":"/docs/commands/resource-type-list"},"next":{"title":"SQL","permalink":"/docs/category/sql"}}'),n=r("785893"),i=r("250065");let o={id:"string-list-to-array",title:"STRING LIST TO ARRAY",slug:"/commands/string-list-to-array",displayed_sidebar:"docs"},c=void 0,l={},a=[{value:"Description",id:"description",level:4},{value:"Compatibility with XLIFF architecture",id:"compatibility-with-xliff-architecture",level:4},{value:"System variables and sets",id:"system-variables-and-sets",level:4},{value:"See also",id:"see-also",level:4}];function d(e){let s={a:"a",br:"br",em:"em",h4:"h4",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"STRING LIST TO ARRAY"})," ( ",(0,n.jsx)(s.em,{children:"resID"})," ; ",(0,n.jsx)(s.em,{children:"strings"})," {; ",(0,n.jsx)(s.em,{children:"resFile"}),"} )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Parameter"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"resID"}),(0,n.jsx)(s.td,{children:"Integer"}),(0,n.jsx)(s.td,{children:"\u2192"}),(0,n.jsx)(s.td,{children:"Resource ID number or 'id' attribute of the 'group' element (XLIFF)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"strings"}),(0,n.jsx)(s.td,{children:"Text array"}),(0,n.jsx)(s.td,{children:"\u2190"}),(0,n.jsx)(s.td,{children:"Strings from the STR# resource or Strings from the 'group' element (XLIFF)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"resFile"}),(0,n.jsx)(s.td,{children:"Time"}),(0,n.jsx)(s.td,{children:"\u2192"}),(0,n.jsx)(s.td,{children:"Resource file reference number If omitted: all the XLIFF files or open resources files"})]})]})]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.em,{children:"This command is not thread-safe, it cannot be used in preemptive code."})}),"\n",(0,n.jsx)(s.h4,{id:"description",children:"Description"}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.strong,{children:"STRING LIST TO ARRAY"})," command populates the array ",(0,n.jsx)(s.em,{children:"strings"})," with:"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:['Either the strings stored in the string list ("STR#") resource whose ID is passed in ',(0,n.jsx)(s.em,{children:"resID"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Or a string stored in an open XLIFF file whose 'id' attribute of the 'group' element is passed in ",(0,n.jsx)(s.em,{children:"resID"}),' (see "Compatibility with XLIFF architecture" below).']}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["If the resource is not found, the array ",(0,n.jsx)(s.em,{children:"strings"})," is left unchanged and the OK variable is set to 0 (zero)."]}),"\n",(0,n.jsxs)(s.p,{children:["If you pass a valid resource file reference number in ",(0,n.jsx)(s.em,{children:"resFile"}),", the resource is searched for in that file only. If you do not pass ",(0,n.jsx)(s.em,{children:"resFile"}),", the first occurrence of the resource found in the resource files chain is returned."]}),"\n",(0,n.jsxs)(s.p,{children:["Before calling ",(0,n.jsx)(s.strong,{children:"STRING LIST TO ARRAY"}),", you can predeclare the array ",(0,n.jsx)(s.em,{children:"strings"})," as a String or Text array. If you do not predeclare the array, the command creates ",(0,n.jsx)(s.em,{children:"strings"})," as a Text array."]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Note:"})," Each string of a string list resource can contain up to 255 characters."]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Tip:"})," Limit your use of string list resources to those up to 32K in total size, and a maximum of a few hundred strings per resource."]}),"\n",(0,n.jsx)(s.h4,{id:"compatibility-with-xliff-architecture",children:"Compatibility with XLIFF architecture"}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.strong,{children:"STRING LIST TO ARRAY"})," command is compatible with the XLIFF architecture of 4D v11: the command first looks for values corresponding to ",(0,n.jsx)(s.em,{children:"resID"})," and ",(0,n.jsx)(s.em,{children:"strID"})," in all the open XLIFF files (when the ",(0,n.jsx)(s.em,{children:"resFile"})," parameter is omitted) and fills the ",(0,n.jsx)(s.em,{children:"strings"})," array with the corresponding values. In this case, ",(0,n.jsx)(s.em,{children:"resID"})," specifies the ",(0,n.jsx)(s.strong,{children:"id"})," attribute of the ",(0,n.jsx)(s.strong,{children:"group"})," element and the ",(0,n.jsx)(s.em,{children:"strings"})," array contains all the strings of the element. If the value is not found, the command continues searching in the open resources files.",(0,n.jsx)(s.br,{}),"\nFor more information about XLIFF architecture in 4D, refer to the Design Reference manual."]}),"\n",(0,n.jsx)(s.h4,{id:"system-variables-and-sets",children:"System variables and sets"}),"\n",(0,n.jsx)(s.p,{children:"If the resource is found, OK is set to 1. Otherwise, it is set to 0 (zero)."}),"\n",(0,n.jsx)(s.h4,{id:"see-also",children:"See also"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.a,{href:"/docs/commands/get-indexed-string",children:"Get indexed string"}),(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.a,{href:"/docs/commands/get-string-resource",children:"Get string resource"}),(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.a,{href:"/docs/commands/get-text-resource",children:"Get text resource"})]})]})}function h(e={}){let{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},250065:function(e,s,r){r.d(s,{Z:function(){return c},a:function(){return o}});var t=r(667294);let n={},i=t.createContext(n);function o(e){let s=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);