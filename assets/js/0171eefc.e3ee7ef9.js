"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["88190"],{414320:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>s,toc:()=>o,default:()=>c,metadata:()=>l,assets:()=>r,contentTitle:()=>a});var l=JSON.parse('{"id":"Concepts/null-undefined","title":"Null and Undefined","description":"Null","source":"@site/versioned_docs/version-18/Concepts/dt_null_undefined.md","sourceDirName":"Concepts","slug":"/Concepts/null-undefined","permalink":"/docs/18/Concepts/null-undefined","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20Concepts%2Fdt_null_undefined.md%20(18)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"18","frontMatter":{"id":"null-undefined","title":"Null and Undefined"},"sidebar":"docs","previous":{"title":"Date","permalink":"/docs/18/Concepts/date"},"next":{"title":"Number (Real, Longint, Integer)","permalink":"/docs/18/Concepts/number"}}'),i=t(785893),d=t(250065);let s={id:"null-undefined",title:"Null and Undefined"},a=void 0,r={},o=[{value:"Null",id:"null",level:2},{value:"Undefined",id:"undefined",level:2},{value:"Examples",id:"examples",level:2}];function u(e){let n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"null",children:"Null"}),"\n",(0,i.jsxs)(n.p,{children:["Null is a special data type with only one possible value: ",(0,i.jsx)(n.strong,{children:"null"}),". This value is returned by an expression that does not contain any value."]}),"\n",(0,i.jsxs)(n.p,{children:["In the 4D language and for object field attributes, null values are managed through the ",(0,i.jsx)(n.code,{children:"Null"})," function. This function can be used with the following expressions for setting or comparing the null value:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"object attributes"}),"\n",(0,i.jsx)(n.li,{children:"collection elements"}),"\n",(0,i.jsx)(n.li,{children:"variables of the object, collection, pointer, picture, or variant type."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"undefined",children:"Undefined"}),"\n",(0,i.jsxs)(n.p,{children:["Undefined is not actually a data type. It denotes a variable that has not yet been defined. A function (a project method that returns a result) can return an undefined value if, within the method, the function result ($0) is assigned an undefined expression (an expression calculated with at least one undefined variable). A field cannot be undefined (the ",(0,i.jsx)(n.code,{children:"Undefined"})," command always returns False for a field). A variant variable has ",(0,i.jsx)(n.strong,{children:"undefined"})," as default value."]}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsxs)(n.p,{children:["Here are the different results of the ",(0,i.jsx)(n.code,{children:"Undefined"})," command as well as the ",(0,i.jsx)(n.code,{children:"Null"})," command with object properties, depending on the context:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:'C_OBJECT($vEmp)\n$vEmp:=New object\n$vEmp.name:="Smith"\n$vEmp.children:=Null\n\n$undefined:=Undefined($vEmp.name) // False\n$null:=($vEmp.name=Null) //False\n\n$undefined:=Undefined($vEmp.children) // False\n$null:=($vEmp.children=Null) //True\n\n$undefined:=Undefined($vEmp.parent) // True\n$null:=($vEmp.parent=Null) //True\n'})})]})}function c(e={}){let{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},250065:function(e,n,t){t.d(n,{Z:()=>a,a:()=>s});var l=t(667294);let i={},d=l.createContext(i);function s(e){let n=l.useContext(d);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),l.createElement(d.Provider,{value:n},e.children)}}}]);