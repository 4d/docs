"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["79892"],{240890:function(e,r,i){i.r(r),i.d(r,{default:()=>h,frontMatter:()=>o,metadata:()=>n,assets:()=>a,toc:()=>c,contentTitle:()=>l});var n=JSON.parse('{"id":"API/ZipArchiveClass","title":"ZIPArchive","description":"A 4D ZIP archive is a File or Folder object containing one or more files or folders, which are compressed to be smaller than their original size. These archives are created with a \\".zip\\" extension and can be used to save disk space or transfer files via mediums which may have size limitations (e.g., email or network).","source":"@site/versioned_docs/version-20-R9/API/ZipArchiveClass.md","sourceDirName":"API","slug":"/API/ZipArchiveClass","permalink":"/docs/20-R9/API/ZipArchiveClass","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20API%2FZipArchiveClass.md%20(20-R9)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"20-R9","frontMatter":{"id":"ZipArchiveClass","title":"ZIPArchive"},"sidebar":"docs","previous":{"title":"WebSocketServer","permalink":"/docs/20-R9/API/WebSocketServerClass"},"next":{"title":"ZIPFile","permalink":"/docs/20-R9/API/ZipFileClass"}}'),t=i("785893"),s=i("250065");let o={id:"ZipArchiveClass",title:"ZIPArchive"},l=void 0,a={},c=[{value:"Example",id:"example",level:3},{value:"Summary",id:"summary",level:3},{value:".root",id:"root",level:2},{value:"Description",id:"description",level:4}];function d(e){let r={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(r.p,{children:["A 4D ZIP archive is a ",(0,t.jsx)(r.code,{children:"File"})," or ",(0,t.jsx)(r.code,{children:"Folder"}),' object containing one or more files or folders, which are compressed to be smaller than their original size. These archives are created with a ".zip" extension and can be used to save disk space or transfer files via mediums which may have size limitations (e.g., email or network).']}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["You create a 4D ZIP archive with the ",(0,t.jsx)(r.a,{href:"/docs/20-R9/commands/zip-create-archive",children:(0,t.jsx)(r.code,{children:"ZIP Create archive"})})," command."]}),"\n",(0,t.jsxs)(r.li,{children:["4D ",(0,t.jsx)(r.a,{href:"/docs/20-R9/API/ZipFileClass",children:(0,t.jsx)(r.code,{children:"ZIPFile"})})," and ",(0,t.jsx)(r.a,{href:"/docs/20-R9/API/ZipFolderClass",children:(0,t.jsx)(r.code,{children:"ZIPFolder"})})," instances are available through the ",(0,t.jsx)(r.a,{href:"#root",children:(0,t.jsx)(r.code,{children:"root"})})," property (",(0,t.jsx)(r.code,{children:"ZIPFolder"}),") of the object returned by ",(0,t.jsx)(r.a,{href:"/docs/20-R9/commands/zip-read-archive",children:(0,t.jsx)(r.code,{children:"ZIP Read archive"})})," command."]}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"example",children:"Example"}),"\n",(0,t.jsx)(r.p,{children:"To retrieve and view the contents of a ZIP file object:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-4d",children:'var $path; $archive : 4D.File\nvar $zipFile : 4D.ZipFile\nvar $zipFolder : 4D.ZipFolder\nvar $txt : Text\n\n$path:=Folder(fk desktop folder).file("MyDocs/Archive.zip")\n$archive:=ZIP Read archive($path)\n$zipFolder:=$archive.root // store the zip main folder\n$zipFile:=$zipFolder.files()[0] //read the first zipped file\n\nIf($zipFile.extension=".txt")\n $txt:=$zipFile.getText()\nEnd if\n'})}),"\n",(0,t.jsx)(r.h3,{id:"summary",children:"Summary"}),"\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsx)(r.tr,{children:(0,t.jsx)(r.th,{})})}),(0,t.jsx)(r.tbody,{children:(0,t.jsx)(r.tr,{children:(0,t.jsxs)(r.td,{children:[(0,t.jsxs)(r.a,{href:"#root",children:[(0,t.jsx)(r.strong,{children:".root"})," : 4D.ZipFolder"]}),(0,t.jsx)(r.br,{}),"a virtual folder providing access to the contents of the ZIP archive"]})})})]}),"\n",(0,t.jsx)(r.h2,{id:"root",children:".root"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:".root"})," : 4D.ZipFolder"]}),"\n",(0,t.jsx)(r.h4,{id:"description",children:"Description"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:".root"})," property contains a virtual folder providing access to the contents of the ZIP archive."]}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"root"})," folder and its contents can be manipulated with the ",(0,t.jsx)(r.a,{href:"/docs/20-R9/API/ZipFileClass",children:"ZipFile"})," and ",(0,t.jsx)(r.a,{href:"/docs/20-R9/API/ZipFolderClass",children:"ZipFolder"})," functions and properties."]}),"\n",(0,t.jsxs)(r.p,{children:["This property is ",(0,t.jsx)(r.strong,{children:"read-only"}),"."]})]})}function h(e={}){let{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},250065:function(e,r,i){i.d(r,{Z:function(){return l},a:function(){return o}});var n=i(667294);let t={},s=n.createContext(t);function o(e){let r=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(s.Provider,{value:r},e.children)}}}]);