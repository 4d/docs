"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[52656],{603905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var n=r(667294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),s=c(r),d=o,f=s["".concat(p,".").concat(d)]||s[d]||m[d]||a;return r?n.createElement(f,l(l({ref:t},u),{},{components:r})):n.createElement(f,l({ref:t},u))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=s;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},165592:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>p,toc:()=>u});r(667294);var n=r(603905);function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},o.apply(this,arguments)}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}const l={id:"vp-get-row-count",title:"VP Get row count"},i=void 0,p={unversionedId:"ViewPro/commands/vp-get-row-count",id:"version-20-R5/ViewPro/commands/vp-get-row-count",title:"VP Get row count",description:"VP Get row count ( vpAreaName Integer } ) : Integer",source:"@site/versioned_docs/version-20-R5/ViewPro/commands/vp-get-row-count.md",sourceDirName:"ViewPro/commands",slug:"/ViewPro/commands/vp-get-row-count",permalink:"/docs/ViewPro/commands/vp-get-row-count",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20ViewPro%2Fcommands%2Fvp-get-row-count.md%20(20-R5)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R5",frontMatter:{id:"vp-get-row-count",title:"VP Get row count"},sidebar:"docs",previous:{title:"VP Get row attributes",permalink:"/docs/ViewPro/commands/vp-get-row-attributes"},next:{title:"VP Get selection",permalink:"/docs/ViewPro/commands/vp-get-selection"}},c={},u=[{value:"Description",id:"description",level:4},{value:"Example",id:"example",level:4},{value:"See also",id:"see-also",level:4}],m={toc:u};function s(e){var{components:t}=e,r=a(e,["components"]);return(0,n.kt)("wrapper",o({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"VP Get row count")," ( ",(0,n.kt)("em",{parentName:"p"},"vpAreaName")," : Text {; ",(0,n.kt)("em",{parentName:"p"},"sheet")," : Integer } ) : Integer"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",o({parentName:"tr"},{align:null}),"Parameter"),(0,n.kt)("th",o({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",o({parentName:"tr"},{align:null})),(0,n.kt)("th",o({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",o({parentName:"tr"},{align:null}),"vpAreaName"),(0,n.kt)("td",o({parentName:"tr"},{align:null}),"Text"),(0,n.kt)("td",o({parentName:"tr"},{align:null}),"->"),(0,n.kt)("td",o({parentName:"tr"},{align:null}),"4D View Pro area from object name")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",o({parentName:"tr"},{align:null}),"sheet"),(0,n.kt)("td",o({parentName:"tr"},{align:null}),"Integer"),(0,n.kt)("td",o({parentName:"tr"},{align:null}),"->"),(0,n.kt)("td",o({parentName:"tr"},{align:null}),"Sheet index (current sheet if omitted)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",o({parentName:"tr"},{align:null}),"Result"),(0,n.kt)("td",o({parentName:"tr"},{align:null}),"Integer"),(0,n.kt)("td",o({parentName:"tr"},{align:null}),"<-"),(0,n.kt)("td",o({parentName:"tr"},{align:null}),"Total number of rows")))),(0,n.kt)("h4",o({},{id:"description"}),"Description"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"VP Get row count")," command returns the total number of rows from the designated ",(0,n.kt)("em",{parentName:"p"},"sheet"),"."),(0,n.kt)("p",null,"In ",(0,n.kt)("em",{parentName:"p"},"vpAreaName"),", pass the name property of the 4D View Pro area. If you pass a name that does not exist, an error is returned."),(0,n.kt)("p",null,"You can define where to get the row count in the optional ",(0,n.kt)("em",{parentName:"p"},"sheet")," parameter using the sheet index (counting begins at 0). If omitted or if you pass ",(0,n.kt)("inlineCode",{parentName:"p"},"vk current sheet"),", the current spreadsheet is used."),(0,n.kt)("h4",o({},{id:"example"}),"Example"),(0,n.kt)("p",null,"The following code returns the number of rows in the 4D View Pro area:"),(0,n.kt)("pre",null,(0,n.kt)("code",o({parentName:"pre"},{className:"language-4d"}),'var $rowCount : Integer\n$rowCount:=VP Get row count("ViewProarea")\n')),(0,n.kt)("h4",o({},{id:"see-also"}),"See also"),(0,n.kt)("p",null,(0,n.kt)("a",o({parentName:"p"},{href:"/docs/ViewPro/commands/vp-get-column-count"}),"VP Get column count"),(0,n.kt)("br",null),"\n",(0,n.kt)("a",o({parentName:"p"},{href:"/docs/ViewPro/commands/vp-set-column-count"}),"VP SET COLUMN COUNT"),(0,n.kt)("br",null),"\n",(0,n.kt)("a",o({parentName:"p"},{href:"/docs/ViewPro/commands/vp-set-row-count"}),"VP SET ROW COUNT")))}s.isMDXComponent=!0}}]);