"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[53407],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>s});var n=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=n.createContext({}),d=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=d(e.components);return n.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),k=d(a),s=l,N=k["".concat(o,".").concat(s)]||k[s]||u[s]||r;return a?n.createElement(N,i(i({ref:t},m),{},{components:a})):n.createElement(N,i({ref:t},m))}));function s(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=k;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:l,i[1]=p;for(var d=2;d<r;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},32254:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>k,frontMatter:()=>i,metadata:()=>o,toc:()=>m});a(67294);var n=a(3905);function l(){return l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},l.apply(this,arguments)}function r(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}const i={id:"CryptoKeyClass",title:"CryptoKey"},p=void 0,o={unversionedId:"API/CryptoKeyClass",id:"version-19/API/CryptoKeyClass",title:"CryptoKey",description:"La clase CryptoKey del lenguaje 4D contiene un par de llaves de cifrado asim\xe9trico.",source:"@site/i18n/es/docusaurus-plugin-content-docs/version-19/API/CryptoKeyClass.md",sourceDirName:"API",slug:"/API/CryptoKeyClass",permalink:"/docs/es/19/API/CryptoKeyClass",draft:!1,editUrl:"https://github.com/4D/docs/edit/main/versioned_docs/version-19/API/CryptoKeyClass.md",tags:[],version:"19",frontMatter:{id:"CryptoKeyClass",title:"CryptoKey"},sidebar:"docs",previous:{title:"Collection",permalink:"/docs/es/19/API/CollectionClass"},next:{title:"DataClass",permalink:"/docs/es/19/API/DataClassClass"}},d={},m=[{value:"Ejemplo",id:"ejemplo",level:3},{value:"Resumen",id:"resumen",level:3},{value:"4D.CryptoKey.new()",id:"4dcryptokeynew",level:2},{value:"<em>settings</em>",id:"settings",level:4},{value:"<em>CryptoKey</em>",id:"cryptokey",level:4},{value:".curve",id:"curve",level:2},{value:".decrypt()",id:"decrypt",level:2},{value:"<em>options</em>",id:"options",level:4},{value:"<em>Result</em>",id:"result",level:4},{value:".encrypt()",id:"encrypt",level:2},{value:"<em>options</em>",id:"options-1",level:5},{value:"<em>Result</em>",id:"result-1",level:4},{value:".getPrivateKey()",id:"getprivatekey",level:2},{value:"<em>Result</em>",id:"result-2",level:4},{value:".getPublicKey()",id:"getpublickey",level:2},{value:"<em>Result</em>",id:"result-3",level:4},{value:".pem",id:"pem",level:2},{value:".sign()",id:"sign",level:2},{value:"<em>options</em>",id:"options-2",level:4},{value:"<em>Result</em>",id:"result-4",level:4},{value:".size",id:"size",level:2},{value:".type",id:"type",level:2},{value:".verify()",id:"verify",level:2},{value:"<em>options</em>",id:"options-3",level:4},{value:"<em>Result</em>",id:"result-5",level:4}],u={toc:m};function k(e){var{components:t}=e,a=r(e,["components"]);return(0,n.kt)("wrapper",l({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"La clase ",(0,n.kt)("inlineCode",{parentName:"p"},"CryptoKey")," del lenguaje 4D contiene un par de llaves de cifrado asim\xe9trico."),(0,n.kt)("p",null,"Esta clase est\xe1 disponible en el almac\xe9n de clases de ",(0,n.kt)("inlineCode",{parentName:"p"},"4D"),"."),(0,n.kt)("h3",l({},{id:"ejemplo"}),"Ejemplo"),(0,n.kt)("p",null,"El siguiente c\xf3digo de ejemplo firma y verifica un mensaje utilizando un nuevo par de llaves ECDSA, por ejemplo para hacer un token web JSON ES256."),(0,n.kt)("pre",null,(0,n.kt)("code",l({parentName:"pre"},{className:"language-4d"}),' // Generar un nuevo par de llaves ECDSA\n$key:=4D.CryptoKey.new(New object("type";"ECDSA";"curve";"prime256v1"))\n\n  // Obtener la firma como base64\n$message:="hello world"\n$signature:=$key.sign($message;New object("hash";"SHA256"))\n\n  // Verificar firma\n$status:=$key.verify($message;$signature;New object("hash";"SHA256"))\nASSERT($status.success)\n')),(0,n.kt)("h3",l({},{id:"resumen"}),"Resumen"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null})))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),(0,n.kt)("a",l({parentName:"td"},{href:"#4dcryptokeynew"})," ",(0,n.kt)("strong",{parentName:"a"},"4D.CryptoKey.new"),"( ",(0,n.kt)("em",{parentName:"a"},"settings")," : Object ) : 4D.CryptoKey"),"\xa0","\xa0","\xa0","\xa0","crea un nuevo objeto ",(0,n.kt)("inlineCode",{parentName:"td"},"4D.CryptoKey")," que encapsula un par de llaves de cifrado")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),(0,n.kt)("a",l({parentName:"td"},{href:"#curve"}),(0,n.kt)("strong",{parentName:"a"},".curve")," : Text"),"\xa0","\xa0","\xa0","\xa0","nombre de la curva normalizada de la llave")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),(0,n.kt)("a",l({parentName:"td"},{href:"#decrypt"})," ",(0,n.kt)("strong",{parentName:"a"},".decrypt"),"( ",(0,n.kt)("em",{parentName:"a"},"message")," : Text ; ",(0,n.kt)("em",{parentName:"a"},"options")," : Object ) : Object"),"\xa0","\xa0","\xa0","\xa0","descifra el par\xe1metro ",(0,n.kt)("em",{parentName:"td"},"mensaje")," utilizando la llave ",(0,n.kt)("strong",{parentName:"td"},"privada"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),(0,n.kt)("a",l({parentName:"td"},{href:"#encrypt"})," ",(0,n.kt)("strong",{parentName:"a"},".encrypt"),"( ",(0,n.kt)("em",{parentName:"a"},"message")," : Text ; ",(0,n.kt)("em",{parentName:"a"},"options")," : Object ) : Text"),"\xa0","\xa0","\xa0","\xa0","encripta el par\xe1metro ",(0,n.kt)("em",{parentName:"td"},"mensaje")," utilizando la llave ",(0,n.kt)("strong",{parentName:"td"},"p\xfablica"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),(0,n.kt)("a",l({parentName:"td"},{href:"#getprivatekey"})," ",(0,n.kt)("strong",{parentName:"a"},".getPrivateKey()")," : Text"),"\xa0","\xa0","\xa0","\xa0","devuelve la llave privada del objeto ",(0,n.kt)("inlineCode",{parentName:"td"},"CryptoKey"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),(0,n.kt)("a",l({parentName:"td"},{href:"#getpublickey"})," ",(0,n.kt)("strong",{parentName:"a"},".getPublicKey( )")," : Text"),"\xa0","\xa0","\xa0","\xa0","devuelve la llave p\xfablica del objeto ",(0,n.kt)("inlineCode",{parentName:"td"},"CryptoKey"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),(0,n.kt)("a",l({parentName:"td"},{href:"#sign"}),".",(0,n.kt)("strong",{parentName:"a"},"sign")," (",(0,n.kt)("em",{parentName:"a"},"message")," : Text ; ",(0,n.kt)("em",{parentName:"a"},"options")," : Text) : Text"),"\xa0","\xa0","\xa0","\xa0","firma la representaci\xf3n utf8 de una cadena ",(0,n.kt)("em",{parentName:"td"},"mensaje"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),(0,n.kt)("a",l({parentName:"td"},{href:"#size"}),(0,n.kt)("strong",{parentName:"a"},".size")," : Integer"),"\xa0","\xa0","\xa0","\xa0","el tama\xf1o de la llave en bits")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),(0,n.kt)("a",l({parentName:"td"},{href:"#type"}),(0,n.kt)("strong",{parentName:"a"},".type")," : Text"),"\xa0","\xa0","\xa0","\xa0",'nombre del tipo de llave - "RSA", "ECDSA", "PEM"')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),(0,n.kt)("a",l({parentName:"td"},{href:"#verify"})," ",(0,n.kt)("strong",{parentName:"a"},".verify"),"( ",(0,n.kt)("em",{parentName:"a"},"message")," : Text ; ",(0,n.kt)("em",{parentName:"a"},"signature")," : Text ; ",(0,n.kt)("em",{parentName:"a"},"options")," : Object) : object"),"\xa0","\xa0","\xa0","\xa0","verifica la firma base64 contra la representaci\xf3n utf8 del ",(0,n.kt)("em",{parentName:"td"},"mensaje"))))),(0,n.kt)("h2",l({},{id:"4dcryptokeynew"}),"4D.CryptoKey.new()"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Hist\xf3rico"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Versi\xf3n"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Modificaciones"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"v18 R4"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"A\xf1adidos"))))),(0,n.kt)("p",null," ",(0,n.kt)("strong",{parentName:"p"},"4D.CryptoKey.new"),"( ",(0,n.kt)("em",{parentName:"p"},"settings")," : Object ) : 4D.CryptoKey"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Par\xe1metros"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",l({parentName:"tr"},{align:null})),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Descripci\xf3n"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"settings"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Object"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"->"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Par\xe1metros para generar o cargar un par de llaves")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"result"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"4D.CryptoKey"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"<-"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Objeto que contiene un par de llaves de encriptaci\xf3n")))),(0,n.kt)("p",null,"La funci\xf3n ",(0,n.kt)("inlineCode",{parentName:"p"},"4D.CryptoKey.new()")," crea un nuevo objeto ",(0,n.kt)("inlineCode",{parentName:"p"},"4D.CryptoKey")," que encapsula un par de llaves de cifrado, basado en el par\xe1metro objeto ",(0,n.kt)("em",{parentName:"p"},"settings"),". Permite generar una nueva llave RSA o ECDSA, o cargar un par de llaves existente desde una definici\xf3n PEM."),(0,n.kt)("h4",l({},{id:"settings"}),(0,n.kt)("em",{parentName:"h4"},"settings")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Propiedad"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Descripci\xf3n"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),(0,n.kt)("a",l({parentName:"td"},{href:"#type"}),"type")),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Define el tipo de la llave a crear: ",(0,n.kt)("li",null,'"RSA": genera un par de llaves RSA, utilizando ',(0,n.kt)("a",l({parentName:"td"},{href:"#size"}),".size")," como tama\xf1o."),(0,n.kt)("li",null,'"ECDSA": genera un par de llaves Elliptic Curve Digital Signature Algorithm, utilizando ',(0,n.kt)("a",l({parentName:"td"},{href:"#curve"}),".curve")," como curva. Tenga en cuenta que las llaves ECDSA no pueden utilizarse para el cifrado, sino s\xf3lo para la firma."),(0,n.kt)("li",null,'"PEM": carga una definici\xf3n de par de llaves en formato PEM, utilizando ',(0,n.kt)("a",l({parentName:"td"},{href:"#pem"}),".pem"),"."))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),(0,n.kt)("a",l({parentName:"td"},{href:"#curve"}),"curve")),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Nombre de la curva ECDSA")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),(0,n.kt)("a",l({parentName:"td"},{href:"#pem"}),"pem")),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Definici\xf3n PEM de una llave de cifrado a cargar")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),(0,n.kt)("a",l({parentName:"td"},{href:"#size"}),"size")),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"integer"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Tama\xf1o de la llave RSA en bits")))),(0,n.kt)("h4",l({},{id:"cryptokey"}),(0,n.kt)("em",{parentName:"h4"},"CryptoKey")),(0,n.kt)("p",null,"El objeto ",(0,n.kt)("inlineCode",{parentName:"p"},"CryptoKey")," devuelto encapsula un par de llaves de cifrado. Es un objeto compartido y, por tanto, puede ser utilizado por varios procesos 4D simult\xe1neamente."),(0,n.kt)("h2",l({},{id:"curve"}),".curve"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Hist\xf3rico"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Versi\xf3n"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Modificaciones"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"v18 R4"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"A\xf1adidos"))))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},".curve")," : Text"),(0,n.kt)("p",null,'Definido s\xf3lo para llaves ECDSA: el nombre de la curva normalizada de la llave. Generalmente "prime256v1" para ES256 (por defecto), "secp384r1" para ES384, "secp521r1" para ES512.'),(0,n.kt)("h2",l({},{id:"decrypt"}),".decrypt()"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Hist\xf3rico"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Versi\xf3n"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Modificaciones"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"v18 R4"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"A\xf1adidos"))))),(0,n.kt)("p",null," ",(0,n.kt)("strong",{parentName:"p"},".decrypt"),"( ",(0,n.kt)("em",{parentName:"p"},"message")," : Text ; ",(0,n.kt)("em",{parentName:"p"},"options")," : Object ) : Object"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Par\xe1metros"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",l({parentName:"tr"},{align:null})),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Descripci\xf3n"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"message"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Text"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"->"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Cadena de mensajes a decodificar utilizando ",(0,n.kt)("inlineCode",{parentName:"td"},"options.encodingEncrypted")," y descifrar.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"options"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Object"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"->"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Opciones de decodificaci\xf3n")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Result"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Object"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"<-"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Status")))),(0,n.kt)("p",null,"La funci\xf3n ",(0,n.kt)("inlineCode",{parentName:"p"},".decrypt()")," descifra el par\xe1metro ",(0,n.kt)("em",{parentName:"p"},"mensaje")," utilizando la llave ",(0,n.kt)("strong",{parentName:"p"},"privada"),". El algoritmo utilizado depende del tipo de la llave."),(0,n.kt)("p",null,"La llave debe ser una llave RSA, el algoritmo es RSA-OAEP (ver ",(0,n.kt)("a",l({parentName:"p"},{href:"https://tools.ietf.org/html/rfc3447"}),"RFC 3447"),")."),(0,n.kt)("h4",l({},{id:"options"}),(0,n.kt)("em",{parentName:"h4"},"options")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Propiedad"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Descripci\xf3n"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"hash"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),'Algoritmo Digest a utilizar. Por ejemplo: "SHA256", "SHA384" o "SHA512".')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"encodingEncrypted"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Codificaci\xf3n utilizada para convertir el par\xe1metro ",(0,n.kt)("inlineCode",{parentName:"td"},"mensaje"),' en la representaci\xf3n binaria a descifrar. Puede ser "Base64", o "Base64URL". Por defecto es "Base64".')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"encodingDecrypted"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),'Codificaci\xf3n utilizada para convertir el mensaje binario descifrado en la cadena de resultados. Puede ser "UTF-8", "Base64", o "Base64URL". Por defecto es "UTF-8".')))),(0,n.kt)("h4",l({},{id:"result"}),(0,n.kt)("em",{parentName:"h4"},"Result")),(0,n.kt)("p",null,'La funci\xf3n devuelve un objeto "status" con la propiedad ',(0,n.kt)("inlineCode",{parentName:"p"},"success")," definida como ",(0,n.kt)("inlineCode",{parentName:"p"},"true")," si el ",(0,n.kt)("em",{parentName:"p"},"message")," pudo ser descifrado con \xe9xito."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Propiedad"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Descripci\xf3n"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"success"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"boolean"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"True si el mensaje ha sido descifrado con \xe9xito")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"result"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Mensaje descifrado y decodificado utilizando ",(0,n.kt)("inlineCode",{parentName:"td"},"options.encodingDecrypted"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"errors"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"collection"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Si ",(0,n.kt)("inlineCode",{parentName:"td"},"success")," es ",(0,n.kt)("inlineCode",{parentName:"td"},"false"),", puede contener una colecci\xf3n de errores")))),(0,n.kt)("p",null,"En caso de que el ",(0,n.kt)("em",{parentName:"p"},"message")," no haya podido ser descifrado por no haber sido encriptado con la misma llave o algoritmo, el objeto ",(0,n.kt)("inlineCode",{parentName:"p"},"status")," que se devuelve contiene una colecci\xf3n de errores en ",(0,n.kt)("inlineCode",{parentName:"p"},"status.errors"),"."),(0,n.kt)("h2",l({},{id:"encrypt"}),".encrypt()"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Hist\xf3rico"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Versi\xf3n"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Modificaciones"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"v18 R4"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"A\xf1adidos"))))),(0,n.kt)("p",null," ",(0,n.kt)("strong",{parentName:"p"},".encrypt"),"( ",(0,n.kt)("em",{parentName:"p"},"message")," : Text ; ",(0,n.kt)("em",{parentName:"p"},"options")," : Object ) : Text"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Par\xe1metros"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",l({parentName:"tr"},{align:null})),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Descripci\xf3n"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"message"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Text"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"->"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Cadena de mensajes a codificar utilizando ",(0,n.kt)("inlineCode",{parentName:"td"},"options.encodingDecrypted")," y encriptado.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"options"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Object"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"->"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Opciones de codificaci\xf3n")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Result"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Text"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"<-"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Mensaje encriptado y codificado utilizando la opci\xf3n ",(0,n.kt)("inlineCode",{parentName:"td"},"options.encodingEncrypted"))))),(0,n.kt)("p",null,"La funci\xf3n ",(0,n.kt)("inlineCode",{parentName:"p"},".encrypt()")," encripta el par\xe1metro ",(0,n.kt)("em",{parentName:"p"},"mensaje")," utilizando la llave ",(0,n.kt)("strong",{parentName:"p"},"p\xfablica"),". El algoritmo utilizado depende del tipo de la llave."),(0,n.kt)("p",null,"La llave debe ser una llave RSA, el algoritmo es RSA-OAEP (ver ",(0,n.kt)("a",l({parentName:"p"},{href:"https://tools.ietf.org/html/rfc3447"}),"RFC 3447"),")."),(0,n.kt)("h5",l({},{id:"options-1"}),(0,n.kt)("em",{parentName:"h5"},"options")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Propiedad"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Descripci\xf3n"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"hash"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),'Algoritmo Digest a utilizar. Por ejemplo: "SHA256", "SHA384" o "SHA512".')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"encodingEncrypted"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),'Codificaci\xf3n utilizada para convertir el mensaje binario encriptado en la cadena de resultados. Puede ser "Base64", o "Base64URL". Por defecto es "Base64".')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"encodingDecrypted"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Codificaci\xf3n utilizada para convertir el par\xe1metro ",(0,n.kt)("inlineCode",{parentName:"td"},"mensaje"),' en la representaci\xf3n binaria a cifrar. Puede ser "UTF-8", "Base64", o "Base64URL". Por defecto es "UTF-8".')))),(0,n.kt)("h4",l({},{id:"result-1"}),(0,n.kt)("em",{parentName:"h4"},"Result")),(0,n.kt)("p",null,"El valor devuelto es un mensaje encriptado."),(0,n.kt)("h2",l({},{id:"getprivatekey"}),".getPrivateKey()"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Hist\xf3rico"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Versi\xf3n"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Modificaciones"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"v18 R4"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"A\xf1adidos"))))),(0,n.kt)("p",null," ",(0,n.kt)("strong",{parentName:"p"},".getPrivateKey()")," : Text"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Par\xe1metros"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",l({parentName:"tr"},{align:null})),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Descripci\xf3n"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Result"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Text"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"<-"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Llave privada en formato PEM")))),(0,n.kt)("p",null,"La funci\xf3n ",(0,n.kt)("inlineCode",{parentName:"p"},".getPrivateKey()"),"  devuelve la llave privada del objeto ",(0,n.kt)("inlineCode",{parentName:"p"},"CryptoKey")," en formato PEM, o una cadena vac\xeda si no hay ninguna disponible."),(0,n.kt)("h4",l({},{id:"result-2"}),(0,n.kt)("em",{parentName:"h4"},"Result")),(0,n.kt)("p",null,"El valor devuelto es la llave privada."),(0,n.kt)("h2",l({},{id:"getpublickey"}),".getPublicKey()"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Hist\xf3rico"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Versi\xf3n"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Modificaciones"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"v18 R4"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"A\xf1adidos"))))),(0,n.kt)("p",null," ",(0,n.kt)("strong",{parentName:"p"},".getPublicKey( )")," : Text"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Par\xe1metros"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",l({parentName:"tr"},{align:null})),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Descripci\xf3n"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Result"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Text"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"<-"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Llave p\xfablica en formato PEM")))),(0,n.kt)("p",null,"La funci\xf3n ",(0,n.kt)("inlineCode",{parentName:"p"},".getPublicKey()")," devuelve la llave p\xfablica del objeto ",(0,n.kt)("inlineCode",{parentName:"p"},"CryptoKey")," en formato PEM, o una cadena vac\xeda si no hay ninguna disponible."),(0,n.kt)("h4",l({},{id:"result-3"}),(0,n.kt)("em",{parentName:"h4"},"Result")),(0,n.kt)("p",null,"El valor devuelto es la llave p\xfablica."),(0,n.kt)("hr",null),(0,n.kt)("h2",l({},{id:"pem"}),".pem"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Hist\xf3rico"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Versi\xf3n"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Modificaciones"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"v18 R4"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"A\xf1adidos"))))),(0,n.kt)("p",null," ",(0,n.kt)("strong",{parentName:"p"},".pem")," : Text"),(0,n.kt)("p",null," Definici\xf3n PEM de una llave de cifrado a cargar. Si la llave es una llave privada, se deducir\xe1 de ella la llave p\xfablica RSA o ECDSA. "),(0,n.kt)("h2",l({},{id:"sign"}),".sign()"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Hist\xf3rico"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Versi\xf3n"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Modificaciones"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"v18 R4"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"A\xf1adidos"))))),(0,n.kt)("p",null,".",(0,n.kt)("strong",{parentName:"p"},"sign")," (",(0,n.kt)("em",{parentName:"p"},"message")," : Text ; ",(0,n.kt)("em",{parentName:"p"},"options")," : Text) : Text"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Par\xe1metros"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",l({parentName:"tr"},{align:null})),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Descripci\xf3n"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"message"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Text"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"->"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Cadena mensaje a firmar")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"options"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Object"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"->"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Opciones de firma")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Result"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Text"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"<-"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),'Firma en representaci\xf3n Base64 o Base64URL, seg\xfan la opci\xf3n "encoding')))),(0,n.kt)("p",null,"La funci\xf3n ",(0,n.kt)("inlineCode",{parentName:"p"},".sign()")," firma la representaci\xf3n utf8 de una cadena ",(0,n.kt)("em",{parentName:"p"},"mensaje")," utilizando las llaves del objeto ",(0,n.kt)("inlineCode",{parentName:"p"},"CryptoKey")," y las ",(0,n.kt)("em",{parentName:"p"},"opciones")," suministradas. Devuelve su firma en formato base64 o base64URL, dependiendo del valor del atributo ",(0,n.kt)("inlineCode",{parentName:"p"},"options.encoding")," que haya pasado."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"CryptoKey")," debe contener una llave v\xe1lida ",(0,n.kt)("strong",{parentName:"p"},"privada"),"."),(0,n.kt)("h4",l({},{id:"options-2"}),(0,n.kt)("em",{parentName:"h4"},"options")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Propiedad"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Descripci\xf3n"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"hash"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),'Algoritmo Digest a utilizar. Por ejemplo: "SHA256", "SHA384" o "SHA512". Cuando se utiliza para producir un JWT, el tama\xf1o del hash debe coincidir con el tama\xf1o del algoritmo PS@, ES@, RS@ o PS@')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"encodingEncrypted"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),'Codificaci\xf3n utilizada para convertir el mensaje binario encriptado en la cadena de resultados. Puede ser "Base64", o "Base64URL". Por defecto es "Base64".')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"pss"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"boolean"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Utilice el Probabilistic Signature Scheme (PSS). Se ignora si la llave no es una llave RSA. Pase ",(0,n.kt)("inlineCode",{parentName:"td"},"true")," al producir un JWT para el algoritmo PS@")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"encoding"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),'Representation of provided signature. Possible values are "Base64" or "Base64URL". Por defecto es "Base64".')))),(0,n.kt)("h4",l({},{id:"result-4"}),(0,n.kt)("em",{parentName:"h4"},"Result")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"CryptoKey")," debe contener una llave v\xe1lida ",(0,n.kt)("strong",{parentName:"p"},"privada"),"."),(0,n.kt)("h2",l({},{id:"size"}),".size"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Hist\xf3rico"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Versi\xf3n"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Modificaciones"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"v18 R4"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"A\xf1adidos"))))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},".size")," : Integer"),(0,n.kt)("p",null,"Definido s\xf3lo para llaves RSA: el tama\xf1o de la llave en bits. ."),(0,n.kt)("h2",l({},{id:"type"}),".type"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Hist\xf3rico"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Versi\xf3n"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Modificaciones"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"v18 R4"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"A\xf1adidos"))))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},".type")," : Text"),(0,n.kt)("p",null,'Contiene el nombre del tipo de llave - "RSA", "ECDSA", "PEM" .'),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'"RSA": un par de llaves RSA, utilizando l',(0,n.kt)("inlineCode",{parentName:"li"},"settings.size")," como ",(0,n.kt)("a",l({parentName:"li"},{href:"#size"}),".size"),"."),(0,n.kt)("li",{parentName:"ul"},'"ECDSA": un par de llaves del Algoritmo Elliptic Curve Digital Signature Algorithm, utilizando ',(0,n.kt)("inlineCode",{parentName:"li"},"settings.curve")," como ",(0,n.kt)("a",l({parentName:"li"},{href:"#curve"}),".curve"),". Tenga en cuenta que las llaves ECDSA no pueden utilizarse para el cifrado, sino s\xf3lo para la firma."),(0,n.kt)("li",{parentName:"ul"},'"PEM": una definici\xf3n de par de llaves en formato PEM, utilizando ',(0,n.kt)("inlineCode",{parentName:"li"},"settings.pem")," como ",(0,n.kt)("a",l({parentName:"li"},{href:"#pem"}),".pem"),".")),(0,n.kt)("h2",l({},{id:"verify"}),".verify()"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Hist\xf3rico"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Versi\xf3n"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Modificaciones"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"v18 R4"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"A\xf1adidos"))))),(0,n.kt)("p",null," ",(0,n.kt)("strong",{parentName:"p"},".verify"),"( ",(0,n.kt)("em",{parentName:"p"},"message")," : Text ; ",(0,n.kt)("em",{parentName:"p"},"signature")," : Text ; ",(0,n.kt)("em",{parentName:"p"},"options")," : Object) : object"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Par\xe1metros"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",l({parentName:"tr"},{align:null})),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Descripci\xf3n"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"message"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Text"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"->"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Cadena mensaje utilizada para generar la firma")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"signature"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Text"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"->"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Firma a verificar, en representaci\xf3n Base64 o Base64URL, dependiendo del valor de ",(0,n.kt)("inlineCode",{parentName:"td"},"options.encoding"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"options"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Object"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"->"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Opciones de firma")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Result"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Object"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"<-"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Estado de la verificaci\xf3n")))),(0,n.kt)("p",null,"La funci\xf3n ",(0,n.kt)("inlineCode",{parentName:"p"},".verify()")," verifica la firma base64 contra la representaci\xf3n utf8 del ",(0,n.kt)("em",{parentName:"p"},"mensaje")," utilizando las llaves del objeto ",(0,n.kt)("inlineCode",{parentName:"p"},"CryptoKey")," y las ",(0,n.kt)("em",{parentName:"p"},"opciones")," suministradas."),(0,n.kt)("p",null,"La funci\xf3n ",(0,n.kt)("inlineCode",{parentName:"p"},".verify()")," verifica la firma base64 contra la representaci\xf3n utf8 del ",(0,n.kt)("em",{parentName:"p"},"message")," utilizando las llaves del objeto ",(0,n.kt)("inlineCode",{parentName:"p"},"CryptoKey")," y las ",(0,n.kt)("em",{parentName:"p"},"options")," proporcionadas."),(0,n.kt)("h4",l({},{id:"options-3"}),(0,n.kt)("em",{parentName:"h4"},"options")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Propiedad"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Descripci\xf3n"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"hash"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),'Algoritmo Digest a utilizar. Por ejemplo: "SHA256", "SHA384" o "SHA512". Cuando se utiliza para producir un JWT, el tama\xf1o del hash debe coincidir con el tama\xf1o del algoritmo PS@, ES@, RS@ o PS@')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"pss"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"boolean"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Utilice el Probabilistic Signature Scheme (PSS). Se ignora si la llave no es una llave RSA. Pase ",(0,n.kt)("inlineCode",{parentName:"td"},"true")," al verificar un JWT para el algoritmo PS@")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"encoding"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"text"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),'Encoding used to convert the binary encrypted message into the result string. Can be "Base64", or "Base64URL". Por defecto es "Base64".')))),(0,n.kt)("h4",l({},{id:"result-5"}),(0,n.kt)("em",{parentName:"h4"},"Result")),(0,n.kt)("p",null,"La ",(0,n.kt)("inlineCode",{parentName:"p"},"CryptoKey")," debe contener una llave ",(0,n.kt)("strong",{parentName:"p"},"p\xfablica")," v\xe1lida."),(0,n.kt)("p",null,"La funci\xf3n devuelve un objeto de estado con la propiedad ",(0,n.kt)("inlineCode",{parentName:"p"},"success")," definida como ",(0,n.kt)("inlineCode",{parentName:"p"},"true")," si el ",(0,n.kt)("inlineCode",{parentName:"p"},"message")," pudo ser verificado con \xe9xito (es decir, la firma coincide)."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Propiedad"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Tipo"),(0,n.kt)("th",l({parentName:"tr"},{align:null}),"Descripci\xf3n"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"success"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"boolean"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"True si la firma coincide con el mensaje")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",l({parentName:"tr"},{align:null}),"errors"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"collection"),(0,n.kt)("td",l({parentName:"tr"},{align:null}),"Si ",(0,n.kt)("inlineCode",{parentName:"td"},"success")," es ",(0,n.kt)("inlineCode",{parentName:"td"},"false"),", puede contener una colecci\xf3n de errores")))))}k.isMDXComponent=!0}}]);