"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3205],{643217:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>r,toc:()=>t});var s=o(474848),i=o(28453);const a={id:"listbox-move-column",title:"LISTBOX MOVE COLUMN",slug:"/commands/listbox-move-column",displayed_sidebar:"docs"},l=void 0,r={id:"commands-legacy/listbox-move-column",title:"LISTBOX MOVE COLUMN",description:"LISTBOX MOVE COLUMN ( { ;} objeto ; posicionCol* )",source:"@site/i18n/es/docusaurus-plugin-content-docs/version-20-R7/commands-legacy/listbox-move-column.md",sourceDirName:"commands-legacy",slug:"/commands/listbox-move-column",permalink:"/docs/es/commands/listbox-move-column",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Flistbox-move-column.md%20(20-R7)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R7",frontMatter:{id:"listbox-move-column",title:"LISTBOX MOVE COLUMN",slug:"/commands/listbox-move-column",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"LISTBOX INSERT ROWS",permalink:"/docs/es/commands/listbox-insert-rows"},next:{title:"LISTBOX MOVED COLUMN NUMBER",permalink:"/docs/es/commands/listbox-moved-column-number"}},c={},t=[{value:"Descripci\xf3n",id:"descripci\xf3n",level:4},{value:"Ejemplo",id:"ejemplo",level:4},{value:"Ver tambi\xe9n",id:"ver-tambi\xe9n",level:4}];function d(e){const n={a:"a",br:"br",code:"code",em:"em",h4:"h4",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"LISTBOX MOVE COLUMN"})," ( {* ;} ",(0,s.jsx)(n.em,{children:"objeto"})," ; ",(0,s.jsx)(n.em,{children:"posicionCol"})," )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Par\xe1metro"}),(0,s.jsx)(n.th,{children:"Tipo"}),(0,s.jsx)(n.th,{}),(0,s.jsx)(n.th,{children:"Descripci\xf3n"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"*"}),(0,s.jsx)(n.td,{children:"Operador"}),(0,s.jsx)(n.td,{children:"\u2192"}),(0,s.jsx)(n.td,{children:"Si se especifica, objeto es un nombre de objeto (cadena) Si se omite, objeto es una variable"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"objeto"}),(0,s.jsx)(n.td,{children:"any"}),(0,s.jsx)(n.td,{children:"\u2192"}),(0,s.jsxs)(n.td,{children:["Nombre del objeto (si se especifica *) o",(0,s.jsx)(n.br,{}),"Variable (si se omite *) de la columna a mover"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"posicionCol"}),(0,s.jsx)(n.td,{children:"Integer"}),(0,s.jsx)(n.td,{children:"\u2192"}),(0,s.jsx)(n.td,{children:"Nueva ubicaci\xf3n de la columna"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Este comando no es hilo seguro, no puede ser utilizado en c\xf3digo apropiativo."})}),"\n",(0,s.jsx)(n.h4,{id:"descripci\xf3n",children:"Descripci\xf3n"}),"\n",(0,s.jsxs)(n.p,{children:["El comando ",(0,s.jsx)(n.strong,{children:"LISTBOX MOVE COLUMN"})," mueve por programaci\xf3n la columna designada por los par\xe1metros ",(0,s.jsx)(n.em,{children:"objeto"})," y ",(0,s.jsx)(n.em,{children:"*"})," en el contexto del formulario en ejecuci\xf3n (modo Aplicaci\xf3n). El formulario original, generado en modo Dise\xf1o, no se modifica."]}),"\n",(0,s.jsxs)(n.p,{children:["Los par\xe1metros ",(0,s.jsx)(n.em,{children:"objeto"})," y ",(0,s.jsx)(n.em,{children:"*"})," designan la columna a mover. Al pasar el par\xe1metro opcional ",(0,s.jsx)(n.em,{children:"*"})," indica que el par\xe1metro ",(0,s.jsx)(n.em,{children:"objeto"})," es un nombre de columna (cadena). Si no pasa este par\xe1metro, indica que el par\xe1metro ",(0,s.jsx)(n.em,{children:"objeto"})," es una variable de columna. En este caso, pase una referencia de variable en lugar de una cadena."]}),"\n",(0,s.jsxs)(n.p,{children:["La columna se mueve justo en frente de la designada por el par\xe1metro ",(0,s.jsx)(n.em,{children:"posicionCol"}),". Si el par\xe1metro ",(0,s.jsx)(n.em,{children:"posicionCol"})," es mayor al n\xfamero total de columnas, luego la columna se mueve hasta justo despu\xe9s de la \xfaltima columna."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Nota"}),": este comando no hace nada cuando se aplica a la primera columna de un list box que se muestra en el modo jer\xe1rquico."]}),"\n",(0,s.jsx)(n.p,{children:"El comando en cuenta las propiedades de las columnas est\xe1ticas y bloqueadas: por ejemplo, si intenta mover una columna est\xe1tica, el comando no hace nada."}),"\n",(0,s.jsx)(n.p,{children:"Esta funcionalidad est\xe1 presente en 4D en modo Aplicaci\xf3n: el usuario puede mover las columnas no est\xe1ticas utilizando el rat\xf3n. Sin embargo, a diferencia del desplazamiento efectuado por el usuario, este comando no genera el evento On Column Moved."}),"\n",(0,s.jsx)(n.h4,{id:"ejemplo",children:"Ejemplo"}),"\n",(0,s.jsx)(n.p,{children:"Usted quiere invertir la segunda y tercera columna del list box:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-4d",children:'\xa0LISTBOX MOVE COLUMN(*;"column2";3)\n'})}),"\n",(0,s.jsx)(n.h4,{id:"ver-tambi\xe9n",children:"Ver tambi\xe9n"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/docs/es/commands/listbox-duplicate-column",children:"LISTBOX DUPLICATE COLUMN"})})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>l,x:()=>r});var s=o(296540);const i={},a=s.createContext(i);function l(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);