"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["36384"],{315488:function(e,a,n){n.r(a),n.d(a,{frontMatter:()=>o,toc:()=>t,default:()=>u,metadata:()=>s,assets:()=>d,contentTitle:()=>r});var s=JSON.parse('{"id":"Develop-legacy/transactions","title":"Transactions","description":"Descripci\xf3n","source":"@site/i18n/es/docusaurus-plugin-content-docs/version-20-R10/Develop-legacy/transactions.md","sourceDirName":"Develop-legacy","slug":"/Develop-legacy/transactions","permalink":"/docs/es/Develop-legacy/transactions","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20Develop-legacy%2Ftransactions.md%20(20-R10)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"20-R10","frontMatter":{"id":"transactions","title":"Transactions"},"sidebar":"docs","previous":{"title":"Procesos apropiativos","permalink":"/docs/es/Develop/preemptive-processes"},"next":{"title":"Etiquetas de transformaci\xf3n","permalink":"/docs/es/Tags/transformation-tags"}}'),i=n(785893),c=n(250065);let o={id:"transactions",title:"Transactions"},r=void 0,d={},t=[{value:"Descripci\xf3n",id:"descripci\xf3n",level:2},{value:"Ejemplo",id:"ejemplo",level:3},{value:"Suspender transacciones",id:"suspender-transacciones",level:2},{value:"Principio",id:"principio",level:3},{value:"Ejemplo",id:"ejemplo-1",level:3},{value:"Operaci\xf3n detallada",id:"operaci\xf3n-detallada",level:3},{value:"\xbfC\xf3mo funciona una transacci\xf3n suspendida?",id:"c\xf3mo-funciona-una-transacci\xf3n-suspendida",level:4},{value:"Transacciones suspendidas y estado del proceso",id:"transacciones-suspendidas-y-estado-del-proceso",level:4}];function l(e){let a={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.h2,{id:"descripci\xf3n",children:"Descripci\xf3n"}),"\n",(0,i.jsxs)(a.p,{children:["Las transacciones son una serie de modificaciones de datos relacionadas que se realizan en una base de datos o almac\xe9n de datos dentro de un ",(0,i.jsx)(a.a,{href:"./processes.md",children:"proceso"}),". Una transacci\xf3n no se guarda en una base de datos de forma permanente hasta que se valida la transacci\xf3n. Si una transacci\xf3n no se completa, ya sea porque se cancela o por alg\xfan evento externo, las modificaciones no se guardan."]}),"\n",(0,i.jsxs)(a.p,{children:["Durante una transacci\xf3n, todos los cambios realizados en los datos de la base de datos dentro de un proceso se almacenan localmente en un buffer temporal. Si la transacci\xf3n se acepta con ",(0,i.jsx)(a.a,{href:"/docs/es/commands/validate-transaction",children:(0,i.jsx)(a.code,{children:"VALIDATE TRANSACTION"})})," o ",(0,i.jsx)(a.a,{href:"/docs/es/API/DataStoreClass#validatetransaction",children:(0,i.jsx)(a.code,{children:"validateTransaction()"})}),", los cambios se guardan permanentemente. Si la transacci\xf3n se cancela con ",(0,i.jsx)(a.a,{href:"/docs/es/commands/cancel-transaction",children:(0,i.jsx)(a.code,{children:"CANCEL TRANSACTION"})})," o ",(0,i.jsx)(a.a,{href:"/docs/es/API/DataStoreClass#canceltransaction",children:(0,i.jsx)(a.code,{children:"cancelTransaction()"})}),", los cambios no se guardan. En todos los casos, ni la selecci\xf3n actual ni el registro actual son modificados por los comandos de gesti\xf3n de transacciones."]}),"\n",(0,i.jsxs)(a.p,{children:["4D soporta transacciones anidadas, es decir, transacciones en varios niveles jer\xe1rquicos. El n\xfamero de subtransacciones permitidas es ilimitado. El comando ",(0,i.jsx)(a.a,{href:"/docs/es/commands/transaction-level",children:(0,i.jsx)(a.code,{children:"Transaction level"})})," puede utilizarse para averiguar el nivel de transacci\xf3n actual en el que se ejecuta el c\xf3digo. Cuando se utilizan transacciones anidadas, el resultado de cada subtransacci\xf3n depende de la validaci\xf3n o cancelaci\xf3n de la transacci\xf3n de nivel superior. Si se valida la transacci\xf3n de nivel superior, se confirman los resultados de las subtransacciones (validaci\xf3n o cancelaci\xf3n). Por el contrario, si se anula la operaci\xf3n de nivel superior, se anulan todas las suboperaciones, independientemente de sus respectivos resultados."]}),"\n",(0,i.jsxs)(a.p,{children:["4D incluye una funcionalidad que le permite ",(0,i.jsx)(a.a,{href:"#suspending-transactions",children:"suspender y resumir transacciones"})," dentro de su c\xf3digo 4D. Cuando una transacci\xf3n est\xe1 suspendida, puede ejecutar operaciones independientemente de la transacci\xf3n misma y luego reanudar la transacci\xf3n para validarla o cancelarla como de costumbre."]}),"\n",(0,i.jsx)(a.h3,{id:"ejemplo",children:"Ejemplo"}),"\n",(0,i.jsxs)(a.p,{children:["En este ejemplo, la base de datos es un simple sistema de facturaci\xf3n. Las l\xedneas de factura se almacenan en una tabla llamada [Invoice Lines], que est\xe1 relacionada con la tabla [Invoices] mediante una relaci\xf3n entre los campos [Invoices]Invoice ID y [Invoice Lines]Invoice ID. Cuando se a\xf1ade una factura, se calcula un ID \xfanico, utilizando el comando ",(0,i.jsx)(a.a,{href:"/docs/es/commands/sequence-number",children:(0,i.jsx)(a.code,{children:"Sequence number"})}),". La relaci\xf3n entre [Invoices] e [Invoice Lines] es una relaci\xf3n autom\xe1tica Relate Many. La casilla ",(0,i.jsx)(a.strong,{children:"Asignar autom\xe1ticamente valor relacionado en subformulario"})," est\xe1 marcada."]}),"\n",(0,i.jsx)(a.p,{children:"La relaci\xf3n entre [Invoice Lines] y [Parts] es manual."}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.img,{src:n(70776).Z+"",width:"489",height:"259"})}),"\n",(0,i.jsx)(a.p,{children:"Cuando un usuario introduce una factura, se ejecutan las siguientes acciones:"}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsx)(a.li,{children:"A\xf1adir un registro en la tabla [Invoices]."}),"\n",(0,i.jsx)(a.li,{children:"A\xf1adir varios registros en la tabla [Invoice Lines]."}),"\n",(0,i.jsx)(a.li,{children:"Actualizar el campo [Parts]In Warehouse de cada parte listada en la factura."}),"\n"]}),"\n",(0,i.jsx)(a.p,{children:"Este ejemplo es una situaci\xf3n t\xedpica en la que necesita utilizar una transacci\xf3n. Debe estar seguro de que podr\xe1 guardar todos estos registros durante la operaci\xf3n o de que podr\xe1 cancelar la transacci\xf3n si no se puede a\xf1adir o actualizar un registro. En otras palabras, debe guardar los datos relacionados. Si no utiliza una transacci\xf3n, no podr\xe1 garantizar la integridad l\xf3gica de los datos de su base de datos. Por ejemplo, si uno de los registros de [Parts] est\xe1 bloqueado, no podr\xe1 actualizar la cantidad almacenada en el campo [Parts]In Warehouse. Por lo tanto, este campo ser\xe1 l\xf3gicamente incorrecto. La suma de las piezas vendidas y las piezas que quedan en el almac\xe9n no ser\xe1 igual a la cantidad original introducida en el registro. Puede evitar esta situaci\xf3n utilizando transacciones."}),"\n",(0,i.jsx)(a.p,{children:"Existen varias formas de realizar la introducci\xf3n de datos utilizando transacciones:"}),"\n",(0,i.jsxs)(a.ol,{children:["\n",(0,i.jsxs)(a.li,{children:["Puede gestionar las transacciones usted mismo utilizando los comandos de transacci\xf3n ",(0,i.jsx)(a.a,{href:"/docs/es/commands/start-transaction",children:(0,i.jsx)(a.code,{children:"START TRANSACTION"})}),", ",(0,i.jsx)(a.a,{href:"/docs/es/commands/validate-transaction",children:(0,i.jsx)(a.code,{children:"VALIDATE TRANSACTION"})})," y ",(0,i.jsx)(a.a,{href:"/docs/es/commands/cancel-transaction",children:(0,i.jsx)(a.code,{children:"CANCEL TRANSACTION"})}),". Puede escribir, por ejemplo:"]}),"\n"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-4d",children:' READ WRITE([Invoice Lines])\n READ WRITE([Parts])\n FORM SET INPUT([Invoices];"Input")\n Repeat\n    START TRANSACTION\n    ADD RECORD([Invoices])\n    If(OK=1)\n       VALIDATE TRANSACTION\n    Else\n       CANCEL TRANSACTION\n    End if\n Until(OK=0)\n READ ONLY(*)\n'})}),"\n",(0,i.jsxs)(a.ol,{start:"2",children:["\n",(0,i.jsxs)(a.li,{children:["Para reducir el bloqueo de registros mientras se realiza la entrada de datos, tambi\xe9n puede optar por gestionar las transacciones desde el m\xe9todo del formulario y acceder a las tablas en ",(0,i.jsx)(a.code,{children:"READ WRITE"})," s\xf3lo cuando sea necesario. La entrada de datos se realiza mediante el formulario de entrada de [Invoices], que contiene la tabla relacionada [Invoice Lines] en un subformulario. El formulario tiene dos botones: ",(0,i.jsx)(a.em,{children:"bCancel"})," y ",(0,i.jsx)(a.em,{children:"bOK"}),", ue no son botones de acci\xf3n."]}),"\n"]}),"\n",(0,i.jsx)(a.p,{children:"El bucle de adici\xf3n se convierte en:"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-4d",children:' READ WRITE([Invoice Lines])\n READ ONLY([Parts])\n FORM SET INPUT([Invoices];"Input")\n Repeat\n    ADD RECORD([Invoices])\n Until(bOK=0)\n READ ONLY([Invoice Lines])\n'})}),"\n",(0,i.jsx)(a.p,{children:"Tenga en cuenta que la tabla [Parts] est\xe1 ahora en modo de acceso de s\xf3lo lectura durante la entrada de datos. El acceso de lectura/escritura s\xf3lo estar\xe1 disponible si se valida la entrada de datos."}),"\n",(0,i.jsx)(a.p,{children:"La transacci\xf3n se inicia en el m\xe9todo del formulario de entrada [Invoices] que se indica a continuaci\xf3n:"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-4d",children:" Case of\n    :(Form event code=On Load)\n       START TRANSACTION\n       [Invoices]Invoice ID:=Sequence number([Invoices]Invoice ID)\n    Else\n       [Invoices]Total Invoice:=Sum([Invoice Lines]Total line)\n End case\n"})}),"\n",(0,i.jsxs)(a.p,{children:["Si hace clic en el bot\xf3n ",(0,i.jsx)(a.em,{children:"bCancel"}),", e cancelar\xe1 tanto la entrada de datos como la transacci\xf3n. Este es el m\xe9todo objeto del bot\xf3n ",(0,i.jsx)(a.em,{children:"bCancel"}),":"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-4d",children:" Case of\n    :(Form event code=On Clicked)\n       CANCEL TRANSACTION\n       CANCEL\n End case\n"})}),"\n",(0,i.jsxs)(a.p,{children:["Si hace clic en el bot\xf3n ",(0,i.jsx)(a.em,{children:"bOK"}),", la entrada de datos debe ser aceptada y la transacci\xf3n debe ser validada. Este es el m\xe9todo objeto del bot\xf3n ",(0,i.jsx)(a.em,{children:"bOK"}),":"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-4d",children:' Case of\n    :(Form event code=On Clicked)\n       var $NbLines:=Records in selection([Invoice Lines])\n       READ WRITE([Parts]) //Switch to Read/Write access for the [Parts] table\n       FIRST RECORD([Invoice Lines]) //Start at the first line\n       var $ValidTrans:=True //Assume everything will be OK\n       var $Line : Integer\n       For($Line;1;$NbLines) //For each line\n          RELATE ONE([Invoice Lines]Part No)\n          OK:=1 //Assume you want to continue\n          While(Locked([Parts]) & (OK=1)) //Try getting the record in Read/Write access\n             CONFIRM("The Part "+[Invoice Lines]Part No+" is in use. Wait?")\n             If(OK=1)\n                DELAY PROCESS(Current process;60)\n                LOAD RECORD([Parts])\n             End if\n          End while\n          If(OK=1)\n               //Update quantity in the warehouse\n             [Parts]In Warehouse:=[Parts]In Warehouse-[Invoice Lines]Quantity\n             SAVE RECORD([Parts]) //Save the record\n          Else\n             $Line:=$NbLines+1 //Leave the loop\n             $ValidTrans:=False\n          End if\n          NEXT RECORD([Invoice Lines]) //Go next line\n       End for\n       READ ONLY([Parts]) //Set the table state to read only\n       If($ValidTrans)\n          SAVE RECORD([Invoices]) //Save the Invoices record\n          VALIDATE TRANSACTION //Validate all database modifications\n       Else\n          CANCEL TRANSACTION //Cancel everything\n       End if\n       CANCEL //Salir del formulario\n End case\n'})}),"\n",(0,i.jsxs)(a.p,{children:["En este c\xf3digo, llamamos al comando ",(0,i.jsx)(a.code,{children:"CANCEL"})," independientemente del bot\xf3n pulsado. El nuevo registro no se valida mediante una llamada a ",(0,i.jsx)(a.a,{href:"/docs/es/commands/accept",children:(0,i.jsx)(a.code,{children:"ACCEPT"})}),", sino mediante el comando ",(0,i.jsx)(a.a,{href:"/docs/es/commands/save-record",children:(0,i.jsx)(a.code,{children:"SAVE RECORD"})}),". Adem\xe1s, tenga en cuenta que ",(0,i.jsx)(a.code,{children:"SAVE RECORD"})," se ejecuta justo antes del comando ",(0,i.jsx)(a.a,{href:"/docs/es/commands/validate-transaction",children:(0,i.jsx)(a.code,{children:"VALIDATE TRANSACTION"})}),". Por lo tanto, guardar el registro [Invoices] es en realidad una parte de la transacci\xf3n. El comando  ",(0,i.jsx)(a.code,{children:"ACCEPT"})," tambi\xe9n validar\xeda el registro, pero en este caso la transacci\xf3n se validar\xeda antes de guardar el registro [Invoices]. En otras palabras, el registro se guardar\xeda fuera de la transacci\xf3n."]}),"\n",(0,i.jsx)(a.p,{children:"Dependiendo de sus necesidades, puede personalizar su base de datos, como se muestra en estos ejemplos. En el \xfaltimo ejemplo, la gesti\xf3n de registros bloqueados en la tabla [Parts] podr\xeda desarrollarse a\xfan m\xe1s."}),"\n",(0,i.jsx)(a.h2,{id:"suspender-transacciones",children:"Suspender transacciones"}),"\n",(0,i.jsx)(a.h3,{id:"principio",children:"Principio"}),"\n",(0,i.jsx)(a.p,{children:"Suspender una transacci\xf3n es \xfatil cuando necesita realizar, desde dentro de una transacci\xf3n, ciertas operaciones que no necesitan ser ejecutadas bajo el control de esta transacci\xf3n. Por ejemplo, imagine el caso en el que un cliente realiza un pedido, por tanto dentro de una transacci\xf3n, y tambi\xe9n actualiza su direcci\xf3n. A continuaci\xf3n, el cliente cambia de opini\xf3n y cancela el pedido. La transacci\xf3n se cancela, pero usted no desea que se revierta el cambio de direcci\xf3n. Este es un ejemplo t\xedpico en el que resulta \xfatil suspender la transacci\xf3n. Se utilizan tres comandos para suspender y reanudar transacciones:"}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsxs)(a.li,{children:[(0,i.jsx)(a.a,{href:"/docs/es/commands/suspend-transaction",children:(0,i.jsx)(a.code,{children:"SUSPEND TRANSACTION"})}),": pausa la transacci\xf3n actual. Los registros actualizados o a\xf1adidos permanecen bloqueados."]}),"\n",(0,i.jsxs)(a.li,{children:[(0,i.jsx)(a.a,{href:"/docs/es/commands/resume-transaction",children:(0,i.jsx)(a.code,{children:"RESUME TRANSACTION"})}),": reactiva una transacci\xf3n suspendida."]}),"\n",(0,i.jsxs)(a.li,{children:[(0,i.jsx)(a.a,{href:"/docs/es/commands/active-transaction",children:(0,i.jsx)(a.code,{children:"Active transaction"})}),": devuelve False si la transacci\xf3n est\xe1 suspendida o si no hay transacci\xf3n en curso, y True si se ha iniciado o reanudado."]}),"\n"]}),"\n",(0,i.jsx)(a.h3,{id:"ejemplo-1",children:"Ejemplo"}),"\n",(0,i.jsx)(a.p,{children:"Este ejemplo ilustra la necesidad de una transacci\xf3n suspendida. En una base Invoices, queremos obtener un nuevo n\xfamero de factura durante una transacci\xf3n. Este n\xfamero se calcula y almacena en una tabla [Settings]. En un entorno multiusuario, los accesos concurrentes deben estar protegidos; sin embargo, debido a la transacci\xf3n, la tabla [Settings] podr\xeda estar bloqueada por otro usuario, aunque estos datos sean independientes de la transacci\xf3n principal. En este caso, puede suspender la transacci\xf3n cuando acceda a la tabla."}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-4d",children:"  //M\xe9todo est\xe1ndar que crea una factura\n START TRANSACTION\n ...\n CREATE RECORD([Invoices])\n //llamar al m\xe9todo para obtener un n\xfamero disponible\n [Invoices]InvoiceID:=GetInvoiceNum \n ...\n SAVE RECORD([Invoices])\n VALIDATE TRANSACTION\n\n"})}),"\n",(0,i.jsxs)(a.p,{children:["El m\xe9todo ",(0,i.jsx)(a.em,{children:"GetInvoiceNum"})," suspende la transacci\xf3n antes de ejecutarse. Tenga en cuenta que este c\xf3digo funcionar\xe1 incluso cuando el m\xe9todo sea llamado desde fuera de una transacci\xf3n:"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-4d",children:'  //M\xe9todo proyecto GetInvoiceNum\n  //GetInvoiceNum -> Siguiente n\xfamero de factura disponible\n #DECLARE -> $freeNum : Integer\n SUSPEND TRANSACTION\n ALL RECORDS([Settings])\n If(Locked([Settings])) //acceso multiusuario\n    While(Locked([Settings]))\n       MESSAGE("Waiting for locked Settings record")\n       DELAY PROCESS(Current process;30)\n       LOAD RECORD([Settings])\n    End while\n End if\n [Settings]InvoiceNum:=[Settings]InvoiceNum+1\n $freeNum:=[Settings]InvoiceNum\n SAVE RECORD([Settings])\n UNLOAD RECORD([Settings])\n RESUME TRANSACTION\n\n'})}),"\n",(0,i.jsx)(a.h3,{id:"operaci\xf3n-detallada",children:"Operaci\xf3n detallada"}),"\n",(0,i.jsx)(a.h4,{id:"c\xf3mo-funciona-una-transacci\xf3n-suspendida",children:"\xbfC\xf3mo funciona una transacci\xf3n suspendida?"}),"\n",(0,i.jsx)(a.p,{children:"Cuando se suspende una transacci\xf3n, se aplican los siguientes principios:"}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsx)(a.li,{children:"Puede acceder a los registros que se a\xf1adieron o modificaron durante la transacci\xf3n, y no puede ver los registros que se eliminaron durante la transacci\xf3n."}),"\n",(0,i.jsx)(a.li,{children:"Puede crear, guardar, eliminar o modificar registros fuera de la transacci\xf3n."}),"\n",(0,i.jsx)(a.li,{children:"Puede iniciar una nueva transacci\xf3n, pero dentro de esta transacci\xf3n incluida no podr\xe1 ver ning\xfan registro o valor de registro que se haya a\xf1adido o modificado durante la transacci\xf3n suspendida. De hecho, esta nueva transacci\xf3n es totalmente independiente de la suspendida, similar a una transacci\xf3n de otro proceso, y dado que la transacci\xf3n suspendida podr\xeda reanudarse o cancelarse posteriormente, cualquier registro a\xf1adido o modificado se oculta autom\xe1ticamente para la nueva transacci\xf3n. En cuanto se reanude o cancele la nueva transacci\xf3n, se podr\xe1n ver de nuevo estos registros."}),"\n",(0,i.jsx)(a.li,{children:"Los registros modificados, borrados o a\xf1adidos dentro de la transacci\xf3n suspendida permanecen bloqueados para otros procesos. Si se intenta modificar o eliminar estos registros fuera de la transacci\xf3n o en una nueva transacci\xf3n, se genera un error."}),"\n"]}),"\n",(0,i.jsx)(a.p,{children:"Estas implementaciones se resumen en el siguiente gr\xe1fico:"}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.img,{src:n(896261).Z+"",width:"671",height:"302"})}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.em,{children:"Los valores editados durante la transacci\xf3n A (el registro ID1 obtiene Val11) no est\xe1n disponibles en una nueva transacci\xf3n (B) creada durante el periodo \xabsuspendido\xbb. Los valores editados durante el periodo \xabsuspendido\xbb (el registro ID2 obtiene Val22 y el registro ID3 obtiene Val33) se guardan incluso despu\xe9s de cancelar la transacci\xf3n A."})}),"\n",(0,i.jsx)(a.p,{children:"Se han a\xf1adido funcionalidades espec\xedficas para gestionar los errores:"}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsx)(a.li,{children:"El registro actual de cada tabla se bloquea temporalmente si se modifica durante la transacci\xf3n y se desbloquea autom\xe1ticamente cuando \xe9sta se reanuda. Este mecanismo es importante para evitar guardados no deseados en partes de la transacci\xf3n."}),"\n",(0,i.jsx)(a.li,{children:"Si se ejecuta una secuencia no v\xe1lida como iniciar transacci\xf3n / suspender transacci\xf3n / iniciar transacci\xf3n / reanudar transacci\xf3n, se genera un error. Este mecanismo evita que los desarrolladores olviden consignar o cancelar cualquier transacci\xf3n incluida antes de reanudar la transacci\xf3n suspendida."}),"\n"]}),"\n",(0,i.jsx)(a.h4,{id:"transacciones-suspendidas-y-estado-del-proceso",children:"Transacciones suspendidas y estado del proceso"}),"\n",(0,i.jsxs)(a.p,{children:["El comando ",(0,i.jsx)(a.a,{href:"/docs/es/commands/in-transaction",children:(0,i.jsx)(a.code,{children:"In transaction"})})," devuelve True cuando se ha iniciado una transacci\xf3n, aunque est\xe9 suspendida. Para saber si la transacci\xf3n actual est\xe1 suspendida, es necesario utilizar el comando ",(0,i.jsx)(a.a,{href:"/docs/es/commands/active-transaction",children:(0,i.jsx)(a.code,{children:"Active transaction"})}),", que devuelve False en este caso."]}),"\n",(0,i.jsxs)(a.p,{children:["Ambos comandos, sin embargo, tambi\xe9n devuelven False si no se ha iniciado ninguna transacci\xf3n. En ese caso, es posible que tenga que utilizar el comando ",(0,i.jsx)(a.a,{href:"/docs/es/commands/transaction-level",children:(0,i.jsx)(a.code,{children:"Transaction level"})}),", que devuelve 0 en este contexto (no se ha iniciado ninguna transacci\xf3n)."]}),"\n",(0,i.jsx)(a.p,{children:"El siguiente gr\xe1fico ilustra los distintos contextos de transacci\xf3n y los valores correspondientes devueltos por los comandos de transacci\xf3n:"}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.img,{src:n(997284).Z+"",width:"691",height:"304"})})]})}function u(e={}){let{wrapper:a}={...(0,c.a)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},896261:function(e,a,n){n.d(a,{Z:()=>s});let s=n.p+"assets/images/transactions-schema1-b8e1bad3d5f701207c70ba0375006274.png"},997284:function(e,a,n){n.d(a,{Z:()=>s});let s=n.p+"assets/images/transactions-schema2-aafb10d686c45336a126b62e3cb113bd.png"},70776:function(e,a,n){n.d(a,{Z:()=>s});let s=n.p+"assets/images/transactions-structure-c214a6d4a24718af8586b4af126d02bd.png"},250065:function(e,a,n){n.d(a,{Z:()=>r,a:()=>o});var s=n(667294);let i={},c=s.createContext(i);function o(e){let a=s.useContext(c);return s.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function r(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(c.Provider,{value:a},e.children)}}}]);