"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[52498],{603905:(e,a,t)=>{t.d(a,{Zo:()=>p,kt:()=>u});var n=t(667294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=n.createContext({}),c=function(e){var a=n.useContext(i),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},p=function(e){var a=c(e.components);return n.createElement(i.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(t),u=r,b=m["".concat(i,".").concat(u)]||m[u]||d[u]||o;return t?n.createElement(b,s(s({ref:a},p),{},{components:t})):n.createElement(b,s({ref:a},p))}));function u(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=m;var l={};for(var i in a)hasOwnProperty.call(a,i)&&(l[i]=a[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var c=2;c<o;c++)s[c]=t[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},404871:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>p});t(667294);var n=t(603905);function r(){return r=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},r.apply(this,arguments)}function o(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}const s={id:"identifiers",title:"Identificadores"},l=void 0,i={unversionedId:"Concepts/identifiers",id:"version-20-R5/Concepts/identifiers",title:"Identificadores",description:"Esta secci\xf3n describe las convenciones y reglas para nombrar los distintos elementos del lenguaje 4D (variables, propiedades objeto, tablas, formularios, etc.).",source:"@site/i18n/es/docusaurus-plugin-content-docs/version-20-R5/Concepts/identifiers.md",sourceDirName:"Concepts",slug:"/Concepts/identifiers",permalink:"/docs/es/Concepts/identifiers",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20Concepts%2Fidentifiers.md%20(20-R5)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R5",frontMatter:{id:"identifiers",title:"Identificadores"},sidebar:"docs",previous:{title:"Plug-ins",permalink:"/docs/es/Concepts/plug-ins"},next:{title:"Rutas de acceso",permalink:"/docs/es/Concepts/paths"}},c={},p=[{value:"Arrays",id:"arrays",level:2},{value:"Clases",id:"clases",level:2},{value:"Funciones",id:"funciones",level:2},{value:"Propiedades de los objetos",id:"propiedades-de-los-objetos",level:2},{value:"Par\xe1metros",id:"par\xe1metros",level:2},{value:"M\xe9todos proyecto",id:"m\xe9todos-proyecto",level:2},{value:"Tablas y campos",id:"tablas-y-campos",level:2},{value:"Variables",id:"variables",level:2},{value:"Otros nombres",id:"otros-nombres",level:2}],d={toc:p};function m(e){var{components:a}=e,t=o(e,["components"]);return(0,n.kt)("wrapper",r({},d,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Esta secci\xf3n describe las convenciones y reglas para nombrar los distintos elementos del lenguaje 4D (variables, propiedades objeto, tablas, formularios, etc.)."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Si se utilizan caracteres no romanos en los nombres de los identificadores, su longitud m\xe1xima puede ser menor.")),(0,n.kt)("h2",r({},{id:"arrays"}),"Arrays"),(0,n.kt)("p",null,"Array names follow the same rules as ",(0,n.kt)("a",r({parentName:"p"},{href:"#variables"}),"variables"),"."),(0,n.kt)("h2",r({},{id:"clases"}),"Clases"),(0,n.kt)("p",null,"El nombre de una clase puede contener hasta 31 caracteres."),(0,n.kt)("p",null,"A class name must be compliant with standard ",(0,n.kt)("a",r({parentName:"p"},{href:"#object-properties"}),"property naming rules")," for dot notation."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Giving the same name to a class and a ",(0,n.kt)("a",r({parentName:"p"},{href:"#tables"}),"database table")," is not recommended, in order to prevent any conflict.")),(0,n.kt)("h2",r({},{id:"funciones"}),"Funciones"),(0,n.kt)("p",null,"Function names must be compliant with standard ",(0,n.kt)("a",r({parentName:"p"},{href:"#object-properties"}),"property naming rules")," for dot notation."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("strong",{parentName:"p"},"Tip:"),' Starting the function name with an underscore character ("_") will exclude the function from the autocompletion features in the 4D code editor.')),(0,n.kt)("h2",r({},{id:"propiedades-de-los-objetos"}),"Propiedades de los objetos"),(0,n.kt)("p",null,"The name of an object property (also called object ",(0,n.kt)("em",{parentName:"p"},"attribute"),") can contain up to 255 characters."),(0,n.kt)("p",null,"Las propiedades de los objetos pueden hacer referencia a valores escalares, elementos ORDA, funciones de clase, otros objetos, etc. Whatever their nature, object property names must follow the following rules ",(0,n.kt)("strong",{parentName:"p"},"if you want to use the ",(0,n.kt)("a",r({parentName:"strong"},{href:"/docs/es/Concepts/object#object-properties"}),"dot notation")),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'El nombre de una propiedad debe comenzar con una letra, un gui\xf3n bajo o un d\xf3lar "$".'),(0,n.kt)("li",{parentName:"ul"},'A partir de ah\xed, el nombre puede incluir cualquier letra, d\xedgito, el caracter de subrayado ("_"), o el caracter de d\xf3lar ("$").'),(0,n.kt)("li",{parentName:"ul"},"Los nombres de propiedades son sensibles a las may\xfasculas y min\xfasculas.")),(0,n.kt)("p",null,"Ejemplos:"),(0,n.kt)("pre",null,(0,n.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'myObject.myAttribute:="10"\n$value:=$clientObj.data.address.city\n')),(0,n.kt)("admonition",r({},{type:"tip"}),(0,n.kt)("p",{parentName:"admonition"},'Comenzar el nombre de una propiedad objeto con un car\xe1cter de subrayado ("_") excluir\xe1 la propiedad de las caracter\xedsticas de autocompletado en el editor de c\xf3digo de 4D. For example, if you declare ',(0,n.kt)("inlineCode",{parentName:"p"},"$o._myPrivateProperty"),", it will not be proposed in the code editor when you type in ",(0,n.kt)("inlineCode",{parentName:"p"},'"$o. "'),".")),(0,n.kt)("p",null,"See also ",(0,n.kt)("a",r({parentName:"p"},{href:"https://www.ecma-international.org/ecma-262/5.1/#sec-7.6"}),"ECMA Script standard"),"."),(0,n.kt)("admonition",r({},{type:"note"}),(0,n.kt)("p",{parentName:"admonition"},"If you use ",(0,n.kt)("strong",{parentName:"p"},"string notation")," within square brackets, property names can contain any characters (ex: ",(0,n.kt)("inlineCode",{parentName:"p"},'myObject["1. First property"]'),").")),(0,n.kt)("h2",r({},{id:"par\xe1metros"}),"Par\xe1metros"),(0,n.kt)("p",null,"Parameter names must start with a ",(0,n.kt)("inlineCode",{parentName:"p"},"$")," character and follow the same rules as ",(0,n.kt)("a",r({parentName:"p"},{href:"#variables"}),"variable names"),"."),(0,n.kt)("p",null,"Ejemplos:"),(0,n.kt)("pre",null,(0,n.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"Function getArea($width : Integer; $height : Integer)-> $area : Integer\n\n#DECLARE ($i : Integer ; $param : Date) -> $myResult : Object\n")),(0,n.kt)("h2",r({},{id:"m\xe9todos-proyecto"}),"M\xe9todos proyecto"),(0,n.kt)("p",null,"El nombre de un m\xe9todo proyecto puede contener hasta 31 caracteres."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Un nombre de m\xe9todo proyecto debe comenzar por una letra, un d\xedgito o un gui\xf3n bajo"),(0,n.kt)("li",{parentName:"ul"},'A partir de ah\xed, el nombre puede incluir cualquier letra o d\xedgito, el caracter de subrayado ("_"), o el caracter de espacio.'),(0,n.kt)("li",{parentName:"ul"},"Do not use reserved names, i.e. 4D command names (",(0,n.kt)("inlineCode",{parentName:"li"},"Date"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"Time"),", etc), keywords (",(0,n.kt)("inlineCode",{parentName:"li"},"If"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"For"),", etc.), or constant names (",(0,n.kt)("inlineCode",{parentName:"li"},"Euro"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"Black"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"Friday"),", etc.)."),(0,n.kt)("li",{parentName:"ul"},"Los nombres de m\xe9todos proyecto son sensibles a las may\xfasculas y min\xfasculas.")),(0,n.kt)("p",null,"Ejemplos:"),(0,n.kt)("pre",null,(0,n.kt)("code",r({parentName:"pre"},{className:"language-4d"}),"If(New client)\nDELETE DUPLICATED VALUES\nAPPLY TO SELECTION([Employees];INCREASE SALARIES)\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Tip:")," It is a good programming technique to adopt the same naming convention as the one used by 4D for built-in methods. Utilice may\xfasculas para nombrar sus m\xe9todos; sin embargo, si un m\xe9todo devuelve un valor, ponga en may\xfascula el primer car\xe1cter de su nombre. De este modo, cuando vuelva a abrir un proyecto para su mantenimiento despu\xe9s de unos meses, ya sabr\xe1 si un m\xe9todo devuelve un resultado simplemente mirando su nombre en la ventana del Explorador."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Cuando se llama a un m\xe9todo, s\xf3lo hay que escribir su nombre. However, some 4D built-in commands, such as ",(0,n.kt)("inlineCode",{parentName:"p"},"ON EVENT CALL"),", as well as all plug-in commands, expect the name of a method as a string when a method parameter is passed.")),(0,n.kt)("p",null,"Ejemplos:"),(0,n.kt)("pre",null,(0,n.kt)("code",r({parentName:"pre"},{className:"language-4d"}),' //Este comando espera un m\xe9todo (funci\xf3n) o una f\xf3rmula\nQUERY BY FORMULA([aTable];Special query)\n //Este comando espera un m\xe9todo (procedimiento) o una instrucci\xf3n\nAPPLY TO SELECTION([Employees];INCREASE SALARIES)\n //Pero este comando espera un nombre de m\xe9todo\nON EVENT CALL("HANDLE EVENTS")\n')),(0,n.kt)("h2",r({},{id:"tablas-y-campos"}),"Tablas y campos"),(0,n.kt)("p",null,"Una tabla se designa colocando su nombre entre par\xe9ntesis: ","[","...]. Para designar un campo hay que especificar primero la tabla a la que pertenece (el nombre del campo sigue inmediatamente al nombre de la tabla)."),(0,n.kt)("p",null,"Un nombre de tabla y un nombre de campo pueden contener hasta 31 caracteres."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'Un nombre de tabla o campo debe comenzar con una letra, un gui\xf3n bajo o un signo d\xf3lar ("$")'),(0,n.kt)("li",{parentName:"ul"},'A partir de ah\xed, el nombre puede incluir caracteres alfab\xe9ticos, num\xe9ricos, el car\xe1cter espacio y el car\xe1cter de subrayado ("_").'),(0,n.kt)("li",{parentName:"ul"},"Do not use reserved names, i.e. 4D command names (",(0,n.kt)("inlineCode",{parentName:"li"},"Date"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"Time"),", etc), keywords (",(0,n.kt)("inlineCode",{parentName:"li"},"If"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"For"),", etc.), or constant names (",(0,n.kt)("inlineCode",{parentName:"li"},"Euro"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"Black"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"Friday"),", etc.)."),(0,n.kt)("li",{parentName:"ul"},"Deben respetarse reglas adicionales cuando la base deba manejarse v\xeda SQL: s\xf3lo se aceptan los caracteres _0123456789abcdefghijklmnopqrstuvwxyz, y el nombre no debe incluir ninguna palabra clave SQL (comando, atributo, etc.).")),(0,n.kt)("p",null,"Ejemplos:"),(0,n.kt)("pre",null,(0,n.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'FORM SET INPUT([Clients];"Entry")\nADD RECORD([Letters])\n[Orders]Total:=Sum([Line]Amount)\nQUERY([Clients];[Clients]Name="Smith")\n[Letters]Text:=Capitalize text([Letters]Text)\n\n')),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Giving the same name to a table and a ",(0,n.kt)("a",r({parentName:"p"},{href:"#classes"}),"class")," is not recommended, in order to prevent any conflict.")),(0,n.kt)("h2",r({},{id:"variables"}),"Variables"),(0,n.kt)("p",null,"The name of a variable can be up to 31 characters, not including the scope symbols (",(0,n.kt)("inlineCode",{parentName:"p"},"$")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"<>"),")."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'A variable name must begin with a letter, an underscore, or a dollar ("$") for ',(0,n.kt)("a",r({parentName:"li"},{href:"/docs/es/Concepts/parameters"}),"parameters")," and ",(0,n.kt)("a",r({parentName:"li"},{href:"/docs/es/Concepts/variables#local-variables"}),"local variables"),", or ",(0,n.kt)("inlineCode",{parentName:"li"},"<>")," for ",(0,n.kt)("a",r({parentName:"li"},{href:"/docs/es/Concepts/variables#interprocess-variables"}),"interprocess variables"),"."),(0,n.kt)("li",{parentName:"ul"},"A digit as first character is allowed but not recommended, and is not supported by the ",(0,n.kt)("a",r({parentName:"li"},{href:"/docs/es/Concepts/variables#using-the-var-keyword"}),(0,n.kt)("inlineCode",{parentName:"a"},"var")," declaration syntax"),"."),(0,n.kt)("li",{parentName:"ul"},'A partir de ah\xed, el nombre puede incluir cualquier letra o d\xedgito, y el caracter de subrayado ("_").'),(0,n.kt)("li",{parentName:"ul"},"Space character is allowed but not recommended, and is not supported by the ",(0,n.kt)("a",r({parentName:"li"},{href:"/docs/es/Concepts/variables#using-the-var-keyword"}),(0,n.kt)("inlineCode",{parentName:"a"},"var")," declaration syntax"),"."),(0,n.kt)("li",{parentName:"ul"},"Do not use reserved names, i.e. 4D command names (",(0,n.kt)("inlineCode",{parentName:"li"},"Date"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"Time"),", etc), keywords (",(0,n.kt)("inlineCode",{parentName:"li"},"If"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"For"),", etc.), or constant names (",(0,n.kt)("inlineCode",{parentName:"li"},"Euro"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"Black"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"Friday"),", etc.)."),(0,n.kt)("li",{parentName:"ul"},"Los nombres de las variables son sensibles a las may\xfasculas y min\xfasculas.")),(0,n.kt)("p",null,"Ejemplos:"),(0,n.kt)("pre",null,(0,n.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'For($vlRecord;1;100) //local variable\n$vsMyString:="Hello there" //local variable\nvar $vName; $vJob : Text //local variales \nIf(bValidate=1) //process variable\n<>vlProcessID:=Current process() //interprocess variable\n')),(0,n.kt)("h2",r({},{id:"otros-nombres"}),"Otros nombres"),(0,n.kt)("p",null,"In the 4D language, several elements have their names handled as strings: ",(0,n.kt)("strong",{parentName:"p"},"forms"),", ",(0,n.kt)("strong",{parentName:"p"},"form objects"),", ",(0,n.kt)("strong",{parentName:"p"},"named selections"),", ",(0,n.kt)("strong",{parentName:"p"},"processes"),", ",(0,n.kt)("strong",{parentName:"p"},"sets"),", ",(0,n.kt)("strong",{parentName:"p"},"menu bars"),", etc."),(0,n.kt)("p",null,"Such string names can contain up to 255 characters, not including the ",(0,n.kt)("inlineCode",{parentName:"p"},"$")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"<>")," characters (if any)."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Los nombres de las cadenas pueden contener cualquier car\xe1cter."),(0,n.kt)("li",{parentName:"ul"},"Los nombres de las cadenas son sensibles a las may\xfasculas y min\xfasculas.")),(0,n.kt)("p",null,"Ejemplos:"),(0,n.kt)("pre",null,(0,n.kt)("code",r({parentName:"pre"},{className:"language-4d"}),'DIALOG([Storage];"Note box"+String($vlStage))\nOBJECT SET FONT(*;"Binfo";"Times")\nUSE NAMED SELECTION([Customers];"Closed")//Process Named Selection\nUSE NAMED SELECTION([Customers];"<>ByZipcode") //Interprocess Named Selection\n //Starting the global process "Add Customers"\n$vlProcessID:=New process("P_ADD_CUSTOMERS";48*1024;"Add Customers")\n //Starting the local process "$Follow Mouse Moves"\n$vlProcessID:=New process("P_MOUSE_SNIFFER";16*1024;"$Follow Mouse Moves")\nCREATE SET([Customers];"Customer Orders")//Process set\nUSE SET("<>Deleted Records") //Interprocess set\nIf(Records in set("$Selection"+String($i))>0) //Client set\n\n')))}m.isMDXComponent=!0}}]);