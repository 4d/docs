"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[90782],{603905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>m});var o=t(667294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,o,n=function(e,a){if(null==e)return{};var t,o,n={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var i=o.createContext({}),p=function(e){var a=o.useContext(i),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},d=function(e){var a=p(e.components);return o.createElement(i.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return o.createElement(o.Fragment,{},a)}},u=o.forwardRef((function(e,a){var t=e.components,n=e.mdxType,r=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(t),m=n,b=u["".concat(i,".").concat(m)]||u[m]||c[m]||r;return t?o.createElement(b,l(l({ref:a},d),{},{components:t})):o.createElement(b,l({ref:a},d))}));function m(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var r=t.length,l=new Array(r);l[0]=u;var s={};for(var i in a)hasOwnProperty.call(a,i)&&(s[i]=a[i]);s.originalType=e,s.mdxType="string"==typeof e?e:n,l[1]=s;for(var p=2;p<r;p++)l[p]=t[p];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},801161:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>d});t(667294);var o=t(603905);function n(){return n=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e},n.apply(this,arguments)}function r(e,a){if(null==e)return{};var t,o,n=function(e,a){if(null==e)return{};var t,o,n={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}const l={id:"object",title:"Object"},s=void 0,i={unversionedId:"Concepts/object",id:"version-20-R4/Concepts/object",title:"Object",description:'Las variables, campos o expresiones de tipo objeto pueden contener datos de diversos tipos. La estructura de los objetos nativos de 4D se basa en el principio cl\xe1sico de los pares "propiedad/valor". La sintaxis de estos objetos se basa en la notaci\xf3n JSON:',source:"@site/i18n/es/docusaurus-plugin-content-docs/version-20-R4/Concepts/dt_object.md",sourceDirName:"Concepts",slug:"/Concepts/object",permalink:"/docs/es/Concepts/object",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20Concepts%2Fdt_object.md%20(20-R4)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R4",frontMatter:{id:"object",title:"Object"},sidebar:"docs",previous:{title:"Number (Real, Longint, Integer)",permalink:"/docs/es/Concepts/number"},next:{title:"Picture",permalink:"/docs/es/Concepts/picture"}},p={},d=[{value:"Instanciaci\xf3n",id:"instanciaci\xf3n",level:2},{value:"Comando <code>New object</code>",id:"comando-new-object",level:3},{value:"operador `{}",id:"operador-",level:3},{value:"Objeto est\xe1ndar o compartido",id:"objeto-est\xe1ndar-o-compartido",level:3},{value:"Propiedades",id:"propiedades",level:2},{value:"Valor Null",id:"valor-null",level:3},{value:"Valor indefinido",id:"valor-indefinido",level:3},{value:"Punteros",id:"punteros",level:3},{value:"Resources",id:"resources",level:2},{value:"Ejemplos",id:"ejemplos",level:2}],c={toc:d};function u(e){var{components:a}=e,t=r(e,["components"]);return(0,o.kt)("wrapper",n({},c,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("p",null,'Las variables, campos o expresiones de tipo objeto pueden contener datos de diversos tipos. La estructura de los objetos nativos de 4D se basa en el principio cl\xe1sico de los pares "propiedad/valor". La sintaxis de estos objetos se basa en la notaci\xf3n JSON:'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},'El nombre de una propiedad es siempre un texto, por ejemplo "Name". It must follow ',(0,o.kt)("a",n({parentName:"p"},{href:"/docs/es/Concepts/identifiers#object-properties"}),"specific rules"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Un valor de propiedad puede ser del tipo siguiente:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"n\xfamero (Real, Entero, etc.)"),(0,o.kt)("li",{parentName:"ul"},"text"),(0,o.kt)("li",{parentName:"ul"},"null"),(0,o.kt)("li",{parentName:"ul"},"boolean"),(0,o.kt)("li",{parentName:"ul"},"pointer (stored as such, evaluated using the ",(0,o.kt)("inlineCode",{parentName:"li"},"JSON Stringify")," command or when copying),"),(0,o.kt)("li",{parentName:"ul"},"fecha (tipo fecha o cadena en formato fecha ISO)"),(0,o.kt)("li",{parentName:"ul"},"objeto(1) (los objetos pueden ser anidados en varios niveles)"),(0,o.kt)("li",{parentName:"ul"},"imagen(2)"),(0,o.kt)("li",{parentName:"ul"},"collection")))),(0,o.kt)("p",null,"(1) ",(0,o.kt)("strong",{parentName:"p"},"Non-streamable objects")," such as ORDA objects (",(0,o.kt)("a",n({parentName:"p"},{href:"/docs/es/ORDA/dsmapping#entity"}),"entities"),", ",(0,o.kt)("a",n({parentName:"p"},{href:"/docs/es/ORDA/dsmapping#entity-selection"}),"entity selections"),", etc.), ",(0,o.kt)("a",n({parentName:"p"},{href:"/docs/es/API/FileHandleClass"}),"file handles"),", ",(0,o.kt)("a",n({parentName:"p"},{href:"/docs/es/API/WebServerClass"}),"web server"),"... no pueden almacenarse en ",(0,o.kt)("strong",{parentName:"p"},"campos objeto"),". An error is returned if you try to do it; however, they are fully supported in ",(0,o.kt)("strong",{parentName:"p"},"object variables")," in memory."),(0,o.kt)("p",null,'(2) Cuando se expone como texto en el depurador o se exporta a JSON, las propiedades de los objetos de tipo imagen indican "',"[objeto Imagen]",'".'),(0,o.kt)("admonition",n({},{type:"caution"}),(0,o.kt)("p",{parentName:"admonition"},"Tenga en cuenta que los nombres de las propiedades distinguen entre may\xfasculas y min\xfasculas.")),(0,o.kt)("p",null,"You manage Object type variables, fields or expressions using the standard ",(0,o.kt)("a",n({parentName:"p"},{href:"#properties"}),"object notation")," or the commands available in the ",(0,o.kt)("strong",{parentName:"p"},"Objects (Language)")," theme. Note that specific commands of the ",(0,o.kt)("strong",{parentName:"p"},"Queries")," theme such as ",(0,o.kt)("inlineCode",{parentName:"p"},"QUERY BY ATTRIBUTE"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"QUERY SELECTION BY ATTRIBUTE"),", or ",(0,o.kt)("inlineCode",{parentName:"p"},"ORDER BY ATTRIBUTE")," can be used to carry out processing on object fields."),(0,o.kt)("p",null,"Cada valor de propiedad al que se accede a trav\xe9s de la notaci\xf3n de objeto se considera una expresi\xf3n. Puede utilizar estos valores siempre que se esperen expresiones 4D:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"in 4D code, either written in the methods (Code Editor) or externalized (formulas, 4D tags files processed by ",(0,o.kt)("inlineCode",{parentName:"li"},"PROCESS 4D TAGS")," or the Web Server, export files, 4D Write Pro documents...),"),(0,o.kt)("li",{parentName:"ul"},"en las \xe1reas de expresiones del depurador y del explorador de ejecuci\xf3n,"),(0,o.kt)("li",{parentName:"ul"},"en la lista de propiedades del editor de formularios para los objetos formulario: campo Variable o Expresi\xf3n, as\xed como diversas expresiones de list box y columnas (fuente de datos, color de fondo, estilo o color de fuente).")),(0,o.kt)("h2",n({},{id:"instanciaci\xf3n"}),"Instanciaci\xf3n"),(0,o.kt)("p",null,"Los objetos deben haber sido instanciados, de lo contrario intentar leer o modificar sus propiedades generar\xe1 un error de sintaxis."),(0,o.kt)("p",null,"La instanciaci\xf3n de objetos puede realizarse de una de las siguientes maneras:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"using the ",(0,o.kt)("a",n({parentName:"li"},{href:"https://doc.4d.com/4dv19R/help/command/en/page1471.html"}),(0,o.kt)("inlineCode",{parentName:"a"},"New object"))," command,"),(0,o.kt)("li",{parentName:"ul"},"utilizando el operador ",(0,o.kt)("inlineCode",{parentName:"li"},"{}"),".")),(0,o.kt)("admonition",n({},{type:"info"}),(0,o.kt)("p",{parentName:"admonition"},"Several 4D commands and functions return objects, for example ",(0,o.kt)("a",n({parentName:"p"},{href:"https://doc.4d.com/4Dv19R7/4D/19-R7/Get-database-measures.301-5945423.en.html"}),(0,o.kt)("inlineCode",{parentName:"a"},"Get database measures"))," or ",(0,o.kt)("a",n({parentName:"p"},{href:"/docs/es/API/FileClass#file"}),(0,o.kt)("inlineCode",{parentName:"a"},"File")),". En este caso, no es necesario instanciar expl\xedcitamente el objeto, el lenguaje 4D lo hace por usted.")),(0,o.kt)("h3",n({},{id:"comando-new-object"}),"Comando ",(0,o.kt)("inlineCode",{parentName:"h3"},"New object")),(0,o.kt)("p",null,"The ",(0,o.kt)("a",n({parentName:"p"},{href:"https://doc.4d.com/4dv19R/help/command/en/page1471.html"}),(0,o.kt)("inlineCode",{parentName:"a"},"New object"))," command creates a new empty or prefilled object and returns its reference."),(0,o.kt)("p",null,"Ejemplos:"),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"}),' var $obVar : Object //declaration of an object type 4D variable\n $obVar:=New object //instantiation of an object and assignment to the 4D variable\n \n var $obFilled : Object \n $obFilled:=New object("name";"Smith";"age";42) //instantiation and assignment of a prefilled object\n')),(0,o.kt)("h3",n({},{id:"operador-"}),"operador ","`","{}"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"{}")," operator allows you to create an ",(0,o.kt)("strong",{parentName:"p"},"object literal"),". An object literal is a semi-column separated list of zero or more pairs of property names and associated values of an object, enclosed in curly braces (",(0,o.kt)("inlineCode",{parentName:"p"},"{}"),"). La sintaxis literal de objeto crea objetos vac\xedos o llenos."),(0,o.kt)("p",null,"Since any property value is considered an expression, you can create sub-objects using ",(0,o.kt)("inlineCode",{parentName:"p"},"{}")," in property values.  You can also create and reference ",(0,o.kt)("strong",{parentName:"p"},"collection literals"),"."),(0,o.kt)("p",null,"Ejemplos:"),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"}),' var $o ; $o2 ; $o3 : Object //declaration of object variables\n $o := {} // instantiation of an empty object \n $o2 := {a: "foo"; b: 42; c: {}; d: ($toto) ? true : false } // instantiation of an object\n        // with properties {"a":"foo","b":42,"c":{},"d":false})\n\n    // same properties using variables\n var $a : Text\n var $b : Number\n var $c : Object\n $a:="foo"\n $b:=42\n $c:={}\n $o3:={ a: $a; b: $b; c: $c } // {"a":"foo";b":42;"c":{}}\n\n')),(0,o.kt)("p",null,"You can mix the ",(0,o.kt)("inlineCode",{parentName:"p"},"New object")," and literal syntaxes:"),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"}),'$o:={\\\n    ob1: {age: 42}; \\\n    ob2: New object("message"; "Hello"); \\\n    form1: Formula(return This.ob1.age+10); \\\n    form2 : Formula(ALERT($1)); \\\n    col: [1; 2; 3; 4; 5; 6]\\\n    }\n\n$o.form1()  //52\n$o.form2($o.ob2.message)  // displays Hello\n$col:=$o.col[5] //6\n')),(0,o.kt)("h3",n({},{id:"objeto-est\xe1ndar-o-compartido"}),"Objeto est\xe1ndar o compartido"),(0,o.kt)("p",null,"Puede crear dos tipos de objetos:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"regular (non-shared) objects, using the ",(0,o.kt)("a",n({parentName:"li"},{href:"https://doc.4d.com/4Dv20/4D/20/New-object.301-6237618.en.html"}),(0,o.kt)("inlineCode",{parentName:"a"},"New object"))," command or object literal syntax (",(0,o.kt)("inlineCode",{parentName:"li"},"{}"),"). Estos objetos pueden ser editados sin ning\xfan control de acceso espec\xedfico, pero no pueden ser compartidos entre procesos."),(0,o.kt)("li",{parentName:"ul"},"shared objects, using the ",(0,o.kt)("a",n({parentName:"li"},{href:"https://doc.4d.com/4Dv20/4D/20/New-shared-object.301-6237617.en.html"}),(0,o.kt)("inlineCode",{parentName:"a"},"New shared object"))," command. Estos objetos pueden ser compartidos entre procesos, incluidos los hilos apropiativos. Access to these objects is controlled by ",(0,o.kt)("inlineCode",{parentName:"li"},"Use...End use")," structures.\nPara m\xe1s informaci\xf3n, consulte la secci\xf3n ",(0,o.kt)("a",n({parentName:"li"},{href:"/docs/es/Concepts/shared"}),"Objetos y colecciones compartidos"),".")),(0,o.kt)("h2",n({},{id:"propiedades"}),"Propiedades"),(0,o.kt)("p",null,"Se accede a los valores de las propiedades de los objetos a trav\xe9s de una cadena de tokens. Se puede acceder a las propiedades de los objetos de dos maneras:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},'utilizando un s\xedmbolo de "punto":',(0,o.kt)("blockquote",{parentName:"li"},(0,o.kt)("p",{parentName:"blockquote"},"object.propertyName")))),(0,o.kt)("p",null,"Ejemplo:"),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"}),'     employee.name:="Smith"\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"utilizando una cadena entre corchetes:",(0,o.kt)("blockquote",{parentName:"li"},(0,o.kt)("p",{parentName:"blockquote"},"object",'["propertyName"]')))),(0,o.kt)("p",null,"Ejemplos:"),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"}),'     $vName:=employee["name"]\n     //or also:\n     $property:="name"\n     $vName:=employee[$property]\n\n')),(0,o.kt)("p",null,"Dado que un valor de propiedad de un objeto puede ser un objeto o una colecci\xf3n, puede utilizar una secuencia de s\xedmbolos para acceder a subpropiedades, por ejemplo:"),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"})," $vAge:=employee.children[2].age\n")),(0,o.kt)("p",null,"La notaci\xf3n de objetos est\xe1 disponible en cualquier elemento del lenguaje que pueda contener o devolver un objeto, es decir:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Objects")," themselves (stored in variables, fields, object properties, object arrays, or collection elements).\nEjemplos:")),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"     $age:=$myObjVar.employee.age //variable\n     $addr:=[Emp]data_obj.address //field\n     $city:=$addr.city //property of an object\n     $pop:=$aObjCountries{2}.population //object array\n     $val:=$myCollection[3].subvalue //collection element\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Comandos 4D")," que devuelven objetos.\nEjemplo:")),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"     $measures:=Get database measures.DB.tables\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Project methods")," or ",(0,o.kt)("strong",{parentName:"li"},"Functions")," that return objects.\nEjemplo:")),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"}),'      // MyMethod1\n     #DECLARE -> $o : Object\n     $o:=New object("a";10;"b";20)\n     \n      //myMethod2\n     $result:=MyMethod1.a //10\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Colecciones"),"\nEjemplo:")),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"     myColl.length //tama\xf1o de la colecci\xf3n\n")),(0,o.kt)("h3",n({},{id:"valor-null"}),"Valor Null"),(0,o.kt)("p",null,"When using the objects, the ",(0,o.kt)("strong",{parentName:"p"},"null")," value is supported though the ",(0,o.kt)("strong",{parentName:"p"},"Null")," command. Este comando se puede utilizar para asignar o comparar el valor null a propiedades de objetos, por ejemplo:"),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"})," myObject.address.zip:=Null\n If(myColl[2]=Null)\n")),(0,o.kt)("p",null,"For more information, please refer to ",(0,o.kt)("a",n({parentName:"p"},{href:"/docs/es/Concepts/null-undefined"}),"Null and Undefined"),"."),(0,o.kt)("h3",n({},{id:"valor-indefinido"}),"Valor indefinido"),(0,o.kt)("p",null,"La evaluaci\xf3n de una propiedad de un objeto puede producir a veces un valor indefinido. Asignar un valor indefinido a una propiedad de objeto existente reinicializa o borra su valor. La asignaci\xf3n de un valor indefinido a una propiedad de objeto no existente no hace nada."),(0,o.kt)("p",null,"For more information, please refer to ",(0,o.kt)("a",n({parentName:"p"},{href:"/docs/es/Concepts/null-undefined"}),"Null and Undefined")),(0,o.kt)("h3",n({},{id:"punteros"}),"Punteros"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Preliminary Note:")," Since objects are always passed by reference, there is usually no need to use pointers. Al pasar el objeto, internamente 4D utiliza autom\xe1ticamente un mecanismo similar a un puntero, minimizando la necesidad de memoria y permitiendo modificar el par\xe1metro y devolver las modificaciones. Como resultado, no es necesario utilizar punteros. Sin embargo, en caso de querer utilizar punteros, se puede acceder a los valores de las propiedades mediante punteros."),(0,o.kt)("p",null,'El uso de la notaci\xf3n de objetos con punteros es muy similar al uso de la notaci\xf3n de objetos directamente con objetos, excepto que el s\xedmbolo "punto" debe omitirse.'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Acceso directo:")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"pointerOnObject->propertyName")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Acceso por nombre:")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"pointerOnObject->",'["propertyName"]')),(0,o.kt)("p",null,"Ejemplo:"),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"})," var vObj : Object\n var vPtr : Pointer\n vObj:=New object\n vObj.a:=10\n vPtr:=->vObj\n x:=vPtr->a //x=10\n")),(0,o.kt)("h2",n({},{id:"resources"}),"Resources"),(0,o.kt)("p",null,"Objects use ",(0,o.kt)("em",{parentName:"p"},"resources")," such a documents, entity locks, and of course, memory. Estos recursos se conservan siempre que los objetos los necesiten. Normalmente, no tiene que preocuparse por ellos, 4D libera autom\xe1ticamente todos los recursos adjuntos a un objeto cuando detecta que el objeto en s\xed ya no est\xe1 referenciado por ninguna variable u otro objeto."),(0,o.kt)("p",null,"Por ejemplo, cuando ya no hay referencias a una entidad sobre la que se ha establecido un bloqueo con ",(0,o.kt)("a",n({parentName:"p"},{href:"/docs/es/API/EntityClass#lock"}),(0,o.kt)("inlineCode",{parentName:"a"},"$entity.lock()")),", 4D liberar\xe1 la memoria pero tambi\xe9n liberar\xe1 autom\xe1ticamente el bloqueo asociado, una llamada a ",(0,o.kt)("a",n({parentName:"p"},{href:"/docs/es/API/EntityClass#unlock"}),(0,o.kt)("inlineCode",{parentName:"a"},"$entity.unlock()"))," es in\xfatil."),(0,o.kt)("p",null,"Si desea liberar inmediatamente todos los recursos ocupados por un objeto sin tener que esperar que 4D lo haga autom\xe1ticamente (al final de la ejecuci\xf3n del m\xe9todo para variables locales, por ejemplo), solo tiene que ",(0,o.kt)("strong",{parentName:"p"},"anular todas sus referencias"),". Por ejemplo:"),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"}),'\n$doc:=WP Import document("large_novel.4wp")\n    ... // do something with $doc\n$doc:=Null  // free resources occupied by $doc\n    ... // continue execution with more free memory\n\n')),(0,o.kt)("h2",n({},{id:"ejemplos"}),"Ejemplos"),(0,o.kt)("p",null,"La utilizaci\xf3n de la notaci\xf3n de objetos simplifica el c\xf3digo 4D en el manejo de los mismos. Sin embargo, tenga en cuenta que la notaci\xf3n basada en comandos sigue siendo totalmente soportada."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Escritura y lectura de propiedades de objetos (este ejemplo compara la notaci\xf3n de objetos y la notaci\xf3n de comandos):")),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"}),'  // Using the object notation\n var $myObj : Object //declares a 4D variable object\n $myObj:={} //creates an object literal and assigns it to the variable\n $myObj.age:=56\n $age:=$myObj.age //56\n \n  // Using the command notation\n var $myObj2 : Object //declares a 4D variable object\n OB SET($myObj2;"age";42) //creates an object and adds the age property\n $age:=OB Get($myObj2;"age") //42\n \n  // Of course, both notations can be mixed\n var $myObj3 : Object\n OB SET($myObj3;"age";10)\n $age:=$myObj3.age //10\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Creaci\xf3n de propiedades y asignaci\xf3n de valores, incluyendo objetos:")),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"}),' var $Emp : Object\n $Emp:=New object\n $Emp.city:="London" //crea la propiedad city y establece su valor como"London"\n $Emp.city:="Paris" //modifica la propiedad city\n $Emp.phone:=New object("office";"123456789";"home";"0011223344")\n  //crea la propiedad phone y establece su valor para un objeto\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Obtener un valor en un subobjeto es muy sencillo utilizando la notaci\xf3n de objetos:")),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"}),' $vCity:=$Emp.city //"Paris"\n $vPhone:=$Emp.phone.home //"0011223344"\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Puede acceder a las propiedades como cadenas utilizando el operador ",(0,o.kt)("inlineCode",{parentName:"li"},"[]"))),(0,o.kt)("pre",null,(0,o.kt)("code",n({parentName:"pre"},{className:"language-4d"}),' $Emp["city"]:="Berlin" //modifica la propiedad city\n  //esto puede ser \xfatil para crear propiedades a trav\xe9s de variables\n var $addr : Text\n $addr:="address"\n For($i;1;4)\n    $Emp[$addr+String($i)]:=""\n End for\n  // crea 4 propiedades vac\xedas "address1...address4" en el objeto $Emp\n')))}u.isMDXComponent=!0}}]);