"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["36794"],{650272:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>t,toc:()=>o,default:()=>h,metadata:()=>r,assets:()=>a,contentTitle:()=>i});var r=JSON.parse('{"id":"commands-legacy/value-type","title":"Value type","description":"Value type ( expresion ) : Integer","source":"@site/i18n/es/docusaurus-plugin-content-docs/version-21/commands-legacy/value-type.md","sourceDirName":"commands-legacy","slug":"/commands/value-type","permalink":"/docs/es/commands/value-type","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fvalue-type.md%20(21)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"21","frontMatter":{"id":"value-type","title":"Value type","slug":"/commands/value-type","displayed_sidebar":"docs"},"sidebar":"docs"}'),d=s(785893),l=s(250065);let t={id:"value-type",title:"Value type",slug:"/commands/value-type",displayed_sidebar:"docs"},i=void 0,a={},o=[{value:"Descripci\xf3n",id:"descripci\xf3n",level:2},{value:"Ejemplo 1",id:"ejemplo-1",level:2},{value:"Ejemplo 2",id:"ejemplo-2",level:2},{value:"Ver tambi\xe9n",id:"ver-tambi\xe9n",level:2},{value:"Propiedades",id:"propiedades",level:2}];function c(e){let n={a:"a",br:"br",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Value type"})," ( ",(0,d.jsx)(n.em,{children:"expresion"})," ) : Integer"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Par\xe1metro"}),(0,d.jsx)(n.th,{children:"Tipo"}),(0,d.jsx)(n.th,{}),(0,d.jsx)(n.th,{children:"Descripci\xf3n"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"expresion"}),(0,d.jsx)(n.td,{children:"Expression"}),(0,d.jsx)(n.td,{children:"\u2192"}),(0,d.jsx)(n.td,{children:"Expresi\xf3n cuyo valor resultante debe ser probado"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Resultado"}),(0,d.jsx)(n.td,{children:"Integer"}),(0,d.jsx)(n.td,{children:"\u2190"}),(0,d.jsx)(n.td,{children:"N\xfamero de tipo de dato"})]})]})]}),"\n",(0,d.jsx)(n.h2,{id:"descripci\xf3n",children:"Descripci\xf3n"}),"\n",(0,d.jsxs)(n.p,{children:["El comando Value type devuelve el tipo del valor resultante de la evaluaci\xf3n de la ",(0,d.jsx)(n.em,{children:"expresion"})," que pas\xf3 como par\xe1metro."]}),"\n",(0,d.jsxs)(n.p,{children:["El comando devuelve un valor num\xe9rico que se puede comparar con una de las siguientes constantes del tema ",(0,d.jsx)(n.em,{children:"Tipos de campos y variables"}),":"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Constante"}),(0,d.jsx)(n.th,{children:"Tipo"}),(0,d.jsx)(n.th,{children:"Valor"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"_o_Is float"}),(0,d.jsx)(n.td,{children:"Entero largo"}),(0,d.jsx)(n.td,{children:"35"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Is BLOB"}),(0,d.jsx)(n.td,{children:"Entero largo"}),(0,d.jsx)(n.td,{children:"30"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Is Boolean"}),(0,d.jsx)(n.td,{children:"Entero largo"}),(0,d.jsx)(n.td,{children:"6"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Is collection"}),(0,d.jsx)(n.td,{children:"Entero largo"}),(0,d.jsx)(n.td,{children:"42"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Is date"}),(0,d.jsx)(n.td,{children:"Entero largo"}),(0,d.jsx)(n.td,{children:"4"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Is longint"}),(0,d.jsx)(n.td,{children:"Entero largo"}),(0,d.jsx)(n.td,{children:"9"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Is null"}),(0,d.jsx)(n.td,{children:"Entero largo"}),(0,d.jsx)(n.td,{children:"255"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Is object"}),(0,d.jsx)(n.td,{children:"Entero largo"}),(0,d.jsx)(n.td,{children:"38"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Is picture"}),(0,d.jsx)(n.td,{children:"Entero largo"}),(0,d.jsx)(n.td,{children:"3"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Is pointer"}),(0,d.jsx)(n.td,{children:"Entero largo"}),(0,d.jsx)(n.td,{children:"23"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Is real"}),(0,d.jsx)(n.td,{children:"Entero largo"}),(0,d.jsx)(n.td,{children:"1"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Is text"}),(0,d.jsx)(n.td,{children:"Entero largo"}),(0,d.jsx)(n.td,{children:"2"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Is time"}),(0,d.jsx)(n.td,{children:"Entero largo"}),(0,d.jsx)(n.td,{children:"11"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Is undefined"}),(0,d.jsx)(n.td,{children:"Entero largo"}),(0,d.jsx)(n.td,{children:"5"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Is variant"}),(0,d.jsx)(n.td,{children:"Entero largo"}),(0,d.jsx)(n.td,{children:"12"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Object array"}),(0,d.jsx)(n.td,{children:"Entero largo"}),(0,d.jsx)(n.td,{children:"39"})]})]})]}),"\n",(0,d.jsxs)(n.p,{children:["Este comando est\xe1 designado para devolver el tipo de una expresi\xf3n escalar, por ejemplo el valor almacenado o devuelto por el par\xe1metro ",(0,d.jsx)(n.em,{children:"expresion"}),". En particular, se puede aplicar a las siguientes expresiones 4D:"]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["Propiedades del objetos (",(0,d.jsx)(n.em,{children:"emp.name"}),"),"]}),"\n",(0,d.jsxs)(n.li,{children:["Elementos de la colecci\xf3n (",(0,d.jsx)(n.em,{children:"myCol[5]"}),")."]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Nota"}),": las propiedades num\xe9ricas de los objetos siempre se consideran valores reales:"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-4d",children:'\xa0var $o : Object\n\xa0$o:=New object("value";42)\n\xa0$vType:=Value type($o.value)\xa0//$vType=Is real\n'})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Value type"})," se puede aplicar a cualquier expresi\xf3n 4D v\xe1lida, incluyendo campos, variables y par\xe1metros. En este caso, a diferencia del comando ",(0,d.jsx)(n.a,{href:"/docs/es/commands/type",children:"Type"}),", ",(0,d.jsx)(n.strong,{children:"Value type"})," devuelve el tipo ",(0,d.jsx)(n.em,{children:"internal"})," del valor resultante de la evaluaci\xf3n de la ",(0,d.jsx)(n.em,{children:"expresion"})," y no su tipo declarado. Dado que el lenguaje 4D convierte algunos tipos de valores internamente, el resultado de ",(0,d.jsx)(n.strong,{children:"Value type"}),' puede diferir del tipo declarado. Por ejemplo, 4D convierte internamente los valores de campo de tipo "',(0,d.jsx)(n.em,{children:"Entero 64 bits"}),'". Esto da los siguientes resultados:']}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-4d",children:"\xa0$vType1:=Type([myTable]Long64field)\xa0//$vType=Is integer 64 bits\n\xa0$vType2:=Value type([myTable]Long64field)\xa0//$vType=Is real (en modo interpretado)\n"})}),"\n",(0,d.jsx)(n.p,{children:"Otras diferencias est\xe1n relacionadas con arrays (la evaluaci\xf3n de una array devuelve el \xedndice de elementos actual) y el modo compilado. En la tabla siguiente se enumeran estas diferencias:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:(0,d.jsx)(n.strong,{children:"Tipo declarado"})}),(0,d.jsxs)(n.th,{children:[(0,d.jsx)(n.a,{href:"/docs/es/commands/type",children:"Type"})," ",(0,d.jsx)(n.strong,{children:"resultado"})]}),(0,d.jsx)(n.th,{children:(0,d.jsx)(n.strong,{children:"Value type resultado (interpretado)"})}),(0,d.jsx)(n.th,{children:(0,d.jsx)(n.strong,{children:"Value type resultado (compilado)"})}),(0,d.jsx)(n.th,{children:(0,d.jsx)(n.strong,{children:"Comentario"})})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"ARRAY TEXT($t;1)"}),(0,d.jsx)(n.td,{children:"Text array"}),(0,d.jsx)(n.td,{children:"Is real"}),(0,d.jsx)(n.td,{children:"Is longint"}),(0,d.jsx)(n.td,{children:"$t contiene el \xedndice del elemento actual, que es un n\xfamero"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:["Campo ",(0,d.jsx)(n.em,{children:"Alfa"})]}),(0,d.jsx)(n.td,{children:"Is alpha field"}),(0,d.jsx)(n.td,{children:"Is text"}),(0,d.jsx)(n.td,{children:"Is text"}),(0,d.jsx)(n.td,{children:"4D maneja internamente todas las cadenas como textos"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:["Campo ",(0,d.jsx)(n.em,{children:"Entero"})]}),(0,d.jsx)(n.td,{children:"Is integer"}),(0,d.jsx)(n.td,{children:"Is real"}),(0,d.jsx)(n.td,{children:"Is longint"}),(0,d.jsx)(n.td,{children:"Por motivos de optimizaci\xf3n, en modo interpretado todos los valores num\xe9ricos se consideran reales y..."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:["Campo ",(0,d.jsx)(n.em,{children:"Entero largo"})]}),(0,d.jsx)(n.td,{children:"Is longint"}),(0,d.jsx)(n.td,{children:"Is real"}),(0,d.jsx)(n.td,{children:"Is longint"}),(0,d.jsx)(n.td,{children:"... en modo compilado, todos los valores enteros se consideran enteros largos (*)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:["Campo ",(0,d.jsx)(n.em,{children:"Entero 64 bits"})]}),(0,d.jsx)(n.td,{children:"Is integer 64 bits"}),(0,d.jsx)(n.td,{children:"Is real"}),(0,d.jsx)(n.td,{children:"Is longint"}),(0,d.jsx)(n.td,{})]})]})]}),"\n",(0,d.jsx)(n.p,{children:"(*) Si desea escribir una prueba para un valor de tipo num\xe9rico v\xe1lido para los modos compilado e interpretado, puede considerar el uso de un c\xf3digo como:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-4d",children:"\xa0If(Value type($myValue)=Is longint)|(Value type($myValue)=Is real)\n"})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Nota de compatibilidad:"})," a partir de 4D v16 R6, las fechas se almacenan en las propiedades objeto, ya sea con el tipo fecha o como texto en formato de fecha ISO. Para m\xe1s informaci\xf3n, consulte el selector Dates inside objects del comando ",(0,d.jsx)(n.a,{href:"/docs/es/commands/set-database-parameter",children:"SET DATABASE PARAMETER"}),"."]}),"\n",(0,d.jsx)(n.h2,{id:"ejemplo-1",children:"Ejemplo 1"}),"\n",(0,d.jsx)(n.p,{children:"Usted desea manejar los varios tipos posibles de un valor propiedad objeto:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-4d",children:"\xa0Case of\n\xa0\xa0\xa0\xa0:(Value type($o.value)=Is real)\n\xa0\xa0//handle a numeric value\n\xa0\xa0\xa0\xa0:(Value type($o.value)=Is text)\n\xa0\xa0//handle a text\n\xa0\xa0\xa0\xa0:(Value type($o.value)=Is object)\n\xa0\xa0//handle a sub-object\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0...\n\xa0End case\n"})}),"\n",(0,d.jsx)(n.h2,{id:"ejemplo-2",children:"Ejemplo 2"}),"\n",(0,d.jsx)(n.p,{children:"Desea obtener la suma de todos los valores num\xe9ricos en una colecci\xf3n:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-4d",children:'\xa0var $col : Collection\n\xa0var $sum : Real\n\xa0$col:=New collection("Hello";20;"World2";15;50;Current date;True;10)\n\xa0For($i;0;$col.length-1)\xa0//-1 since collections start at 0\n\xa0\xa0\xa0\xa0If(Value type($col[$i])=Is real)\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0$sum:=$sum+$col[$i]\n\xa0\xa0\xa0\xa0End if\n\xa0End for\n\xa0ALERT(String($sum))\xa0//95\n'})}),"\n",(0,d.jsx)(n.h2,{id:"ver-tambi\xe9n",children:"Ver tambi\xe9n"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.a,{href:"/docs/es/commands/ob-get-type",children:"OB Get type"}),(0,d.jsx)(n.br,{}),"\n",(0,d.jsx)(n.a,{href:"/docs/es/commands/type",children:"Type"})]}),"\n",(0,d.jsx)(n.h2,{id:"propiedades",children:"Propiedades"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{}),(0,d.jsx)(n.th,{})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"N\xfamero de comando"}),(0,d.jsx)(n.td,{children:"1509"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Hilo seguro"}),(0,d.jsx)(n.td,{children:"\u2713"})]})]})]})]})}function h(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(c,{...e})}):c(e)}},250065:function(e,n,s){s.d(n,{Z:()=>i,a:()=>t});var r=s(667294);let d={},l=r.createContext(d);function t(e){let n=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:t(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);