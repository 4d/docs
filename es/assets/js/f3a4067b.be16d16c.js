"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[95428],{222221:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>d,default:()=>m,frontMatter:()=>o,metadata:()=>t,toc:()=>c});var r=s(474848),a=s(28453);const o={id:"assert",title:"ASSERT",slug:"/commands/assert",displayed_sidebar:"docs"},d=void 0,t={id:"commands-legacy/assert",title:"ASSERT",description:"ASSERT ( expresionBool {; textoMensaje} )",source:"@site/i18n/es/docusaurus-plugin-content-docs/version-20-R7/commands-legacy/assert.md",sourceDirName:"commands-legacy",slug:"/commands/assert",permalink:"/docs/es/commands/assert",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fassert.md%20(20-R7)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R7",frontMatter:{id:"assert",title:"ASSERT",slug:"/commands/assert",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"ABORT",permalink:"/docs/es/commands/abort"},next:{title:"Asserted",permalink:"/docs/es/commands/asserted"}},i={},c=[{value:"Descripci\xf3n",id:"descripci\xf3n",level:4},{value:"Ejemplo 1",id:"ejemplo-1",level:4},{value:"Ejemplo 2",id:"ejemplo-2",level:4},{value:"Ver tambi\xe9n",id:"ver-tambi\xe9n",level:4}];function l(e){const n={a:"a",br:"br",code:"code",em:"em",h4:"h4",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"ASSERT"})," ( ",(0,r.jsx)(n.em,{children:"expresionBool"})," {; ",(0,r.jsx)(n.em,{children:"textoMensaje"}),"} )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Par\xe1metro"}),(0,r.jsx)(n.th,{children:"Tipo"}),(0,r.jsx)(n.th,{}),(0,r.jsx)(n.th,{children:"Descripci\xf3n"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"expresionBool"}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:"\u2192"}),(0,r.jsx)(n.td,{children:"Expresi\xf3n booleana"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"textoMensaje"}),(0,r.jsx)(n.td,{children:"Text"}),(0,r.jsx)(n.td,{children:"\u2192"}),(0,r.jsx)(n.td,{children:"Texto del mensaje de error"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"descripci\xf3n",children:"Descripci\xf3n"}),"\n",(0,r.jsxs)(n.p,{children:["El comando ",(0,r.jsx)(n.strong,{children:"ASSERT"}),"eval\xfaa la aserci\xf3n ",(0,r.jsx)(n.em,{children:"expresionBool"})," pasada en par\xe1metro y, si se vuelve falsa, interrumpe la ejecuci\xf3n del c\xf3digo y muestra un error."]}),"\n",(0,r.jsx)(n.p,{children:"El comando funciona en modo interpretado y en modo compilado."}),"\n",(0,r.jsxs)(n.p,{children:['Si la expresi\xf3n es verdadera, no pasa nada. Si es falsa, el comando dispara el error -10518 y muestra por defecto el texto de la aserci\xf3n precedido del mensaje "Aserci\xf3n fallida:". Puede interceptar este error v\xeda un m\xe9todo instalado utilizando el comando ',(0,r.jsx)(n.a,{href:"/docs/es/commands/on-err-call",children:"ON ERR CALL"}),", para por ejemplo alimentar un archivo de historial."]}),"\n",(0,r.jsx)(n.p,{children:"El comando acepta un segundo par\xe1metro opcional que puede utilizarse para proporcionar un texto que se mostrar\xe1 en el mensaje de error en lugar de la expresi\xf3n booleana cuando sea falsa."}),"\n",(0,r.jsxs)(n.p,{children:["Opcionalmente, puede pasar un par\xe1metro ",(0,r.jsx)(n.em,{children:"texto"})," ",(0,r.jsx)(n.em,{children:"Mensaje"})," para mostrar un mensaje de error personalizado en lugar del texto de la aserci\xf3n."]}),"\n",(0,r.jsxs)(n.p,{children:["Una aserci\xf3n es un instrucci\xf3n insertada en el c\xf3digo que es responsable de detectar posibles anomal\xedas durante su ejecuci\xf3n. El principio consiste en verificar que una expresi\xf3n es verdadera en un momento dado y en caso contrario, producir una excepci\xf3n. Las aserciones se utilizan sobre todo para detectar casos que no deber\xedan ocurrir nunca. Principalmente se utilizan para detectar bugs de programaci\xf3n. Es posible activar o desactivar globalmente todas las aserciones de una aplicaci\xf3n (por ejemplo de acuerdo al tipo de versi\xf3n) v\xeda el comando ",(0,r.jsx)(n.a,{href:"/docs/es/commands/set-assert-enabled",children:"SET ASSERT ENABLED"}),". Para m\xe1s informaci\xf3n acerca de las aserciones en programaci\xf3n, por favor consulte el art\xedculo en Wikipedia: ",(0,r.jsx)(n.a,{href:"http://en.wikipedia.org/wiki/Assertion%5C_(computing)",children:"http://en.wikipedia.org/wiki/Assertion\\_(computing)"})]}),"\n",(0,r.jsx)(n.h4,{id:"ejemplo-1",children:"Ejemplo 1"}),"\n",(0,r.jsx)(n.p,{children:"Antes de efectuar operaciones en un registro, el desarrollador quiere asegurarse de que est\xe1 cargado en modo lectura/escritura:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:"\xa0READ WRITE([Tabla 1])\n\xa0LOAD RECORD([Tabla 1])\n\xa0ASSERT(Not(Locked([Tabla 1])))\n\xa0\xa0// dispara el error -10518 si el registro est\xe1 bloqueado\n"})}),"\n",(0,r.jsx)(n.h4,{id:"ejemplo-2",children:"Ejemplo 2"}),"\n",(0,r.jsx)(n.p,{children:"Una aserci\xf3n permite probar los par\xe1metros pasados a un m\xe9todo de proyecto para detectar los valores aberrantes. En este ejemplo, se utiliza un mensaje de alerta personalizado."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:'\xa0\xa0// M\xe9todo que devuelve el n\xfamero de un cliente en funci\xf3n de su nombre pasado en $1\n\xa0var $1 : Text\xa0// Nombre del cliente\n\xa0ASSERT($1#"";"B\xfasqueda de un nombre de cliente vac\xedo")\n\xa0\xa0// Un nombre vac\xedo en este caso es un valor aberrante\n\xa0\xa0// Si la aserci\xf3n es falsa, se mostrar\xe1 en la caja de di\xe1logo el error:\n\xa0\xa0// "Aserci\xf3n fallida: b\xfasqueda de un nombre de cliente vac\xeda"\n'})}),"\n",(0,r.jsx)(n.h4,{id:"ver-tambi\xe9n",children:"Ver tambi\xe9n"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/docs/es/commands/asserted",children:"Asserted"}),(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.a,{href:"/docs/es/commands/get-assert-enabled",children:"Get assert enabled"}),(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.a,{href:"/docs/es/commands/set-assert-enabled",children:"SET ASSERT ENABLED"})]})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>t});var r=s(296540);const a={},o=r.createContext(a);function d(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);