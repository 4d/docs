"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["18057"],{114254:function(e,n,s){s.r(n),s.d(n,{default:()=>u,frontMatter:()=>l,metadata:()=>r,assets:()=>d,toc:()=>t,contentTitle:()=>i});var r=JSON.parse('{"id":"commands-legacy/query-by-attribute","title":"QUERY BY ATTRIBUTE","description":"QUERY BY ATTRIBUTE ( {;}{opConj ;} campoObjeto ; rutaAtributo ; opBusq ; valor {; *} )","source":"@site/i18n/es/docusaurus-plugin-content-docs/version-20-R9/commands-legacy/query-by-attribute.md","sourceDirName":"commands-legacy","slug":"/commands/query-by-attribute","permalink":"/docs/es/20-R9/commands/query-by-attribute","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fquery-by-attribute.md%20(20-R9)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"20-R9","frontMatter":{"id":"query-by-attribute","title":"QUERY BY ATTRIBUTE","slug":"/commands/query-by-attribute","displayed_sidebar":"docs"},"sidebar":"docs","previous":{"title":"QUERY","permalink":"/docs/es/20-R9/commands/query"},"next":{"title":"QUERY BY EXAMPLE","permalink":"/docs/es/20-R9/commands/query-by-example"}}'),a=s("785893"),o=s("250065");let l={id:"query-by-attribute",title:"QUERY BY ATTRIBUTE",slug:"/commands/query-by-attribute",displayed_sidebar:"docs"},i=void 0,d={},t=[{value:"Descripci\xf3n",id:"descripci\xf3n",level:2},{value:"Uso del operador",id:"uso-del-operador",level:3},{value:"Crear b\xfasquedas m\xfaltiples",id:"crear-b\xfasquedas-m\xfaltiples",level:3},{value:"Valores fecha en el objeto",id:"valores-fecha-en-el-objeto",level:3},{value:"Utilizaci\xf3n de la propiedad virtual longitud",id:"utilizaci\xf3n-de-la-propiedad-virtual-longitud",level:3},{value:"Asociar los criterios para las b\xfasquedas en los elementos de array",id:"asociar-los-criterios-para-las-b\xfasquedas-en-los-elementos-de-array",level:3},{value:"Ejemplo 1",id:"ejemplo-1",level:2},{value:"Ejemplo 2",id:"ejemplo-2",level:2},{value:"Ejemplo 3",id:"ejemplo-3",level:2},{value:"Ejemplo 4",id:"ejemplo-4",level:2},{value:"Ejemplo 5",id:"ejemplo-5",level:2},{value:"Variables y conjuntos del sistema",id:"variables-y-conjuntos-del-sistema",level:2},{value:"Ver tambi\xe9n",id:"ver-tambi\xe9n",level:2},{value:"Propiedades",id:"propiedades",level:2}];function c(e){let n={a:"a",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"QUERY BY ATTRIBUTE"})," ( {",(0,a.jsx)(n.em,{children:"tabla"}),"}{;}{",(0,a.jsx)(n.em,{children:"opConj"})," ;} ",(0,a.jsx)(n.em,{children:"campoObjeto"})," ; ",(0,a.jsx)(n.em,{children:"rutaAtributo"})," ; ",(0,a.jsx)(n.em,{children:"opBusq"})," ; ",(0,a.jsx)(n.em,{children:"valor"})," {; *} )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Par\xe1metro"}),(0,a.jsx)(n.th,{children:"Tipo"}),(0,a.jsx)(n.th,{}),(0,a.jsx)(n.th,{children:"Descripci\xf3n"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"tabla"}),(0,a.jsx)(n.td,{children:"Table"}),(0,a.jsx)(n.td,{children:"\u2192"}),(0,a.jsx)(n.td,{children:"Tabla para la cual devolver una selecci\xf3n de registros o Tabla por defecto si se omite"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"opConj"}),(0,a.jsx)(n.td,{children:"*"}),(0,a.jsx)(n.td,{children:"\u2192"}),(0,a.jsx)(n.td,{children:"Operador de conjunci\xf3n ausar para combinar varias b\xfasquedas (si las hay)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"campoObjeto"}),(0,a.jsx)(n.td,{children:"Field"}),(0,a.jsx)(n.td,{children:"\u2192"}),(0,a.jsx)(n.td,{children:"Campo objeto cuyos atributos utilizar para la b\xfasqueda"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"rutaAtributo"}),(0,a.jsx)(n.td,{children:"Text"}),(0,a.jsx)(n.td,{children:"\u2192"}),(0,a.jsx)(n.td,{children:"Nombre o ruta de atributo"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"opBusq"}),(0,a.jsx)(n.td,{children:"Text, *"}),(0,a.jsx)(n.td,{children:"\u2192"}),(0,a.jsx)(n.td,{children:"Operador de b\xfasqueda (comparador)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"valor"}),(0,a.jsx)(n.td,{children:"Text, Number, Date, Time"}),(0,a.jsx)(n.td,{children:"\u2192"}),(0,a.jsx)(n.td,{children:"Valor a comparar"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"*"}),(0,a.jsx)(n.td,{children:"Operador"}),(0,a.jsx)(n.td,{children:"\u2192"}),(0,a.jsx)(n.td,{children:"Espera de ejecuci\xf3n de la b\xfasqueda"})]})]})]}),"\n",(0,a.jsx)(n.h2,{id:"descripci\xf3n",children:"Descripci\xf3n"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"QUERY BY ATTRIBUTE"})," busca los registros que coincidan con la cadena de consulta definida utilizando los par\xe1metros ",(0,a.jsx)(n.em,{children:"campoObjeto"}),", ",(0,a.jsx)(n.em,{children:"rutaAtributo"}),", ",(0,a.jsx)(n.em,{children:"opBusq"})," y ",(0,a.jsx)(n.em,{children:"valor"}),", y devuelve una selecci\xf3n de registros para ",(0,a.jsx)(n.em,{children:"tabla"}),".cambia la selecci\xf3n actual de ",(0,a.jsx)(n.em,{children:"tabla"})," para el proceso actual y vuelve el primer registro de la nueva selecci\xf3n el registro actual. Si se omite el par\xe1metro ",(0,a.jsx)(n.em,{children:"tabla"}),", el comando se aplica a la tabla por defecto. Si no se ha definido ninguna tabla por defecto, se produce un error."]}),"\n",(0,a.jsxs)(n.p,{children:["El par\xe1metro opcional ",(0,a.jsx)(n.em,{children:"opC"})," ",(0,a.jsx)(n.em,{children:"onj"})," se utilizar para combinar varias llamadas a ",(0,a.jsx)(n.strong,{children:"QUERY BY ATTRIBUTE"})," en caso de b\xfasquedas m\xfaltiples. Los operadores de conjunci\xf3n disponibles son los mismos que los del comando ",(0,a.jsx)(n.a,{href:"/docs/es/20-R9/commands/query",children:"QUERY"}),":"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:(0,a.jsx)(n.strong,{children:"Conjunci\xf3n"})}),(0,a.jsx)(n.th,{children:(0,a.jsx)(n.strong,{children:"S\xedmbolo a utilizar con QUERY BY ATTRIBUTE"})})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"AND"}),(0,a.jsx)(n.td,{children:"&"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"OR"}),(0,a.jsx)(n.td,{children:"|"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Except"}),(0,a.jsx)(n.td,{children:"#"})]})]})]}),"\n",(0,a.jsxs)(n.p,{children:["El par\xe1metro ",(0,a.jsx)(n.em,{children:"opC"})," ",(0,a.jsx)(n.em,{children:"onj"})," no se utiliza para la primera llamada a ",(0,a.jsx)(n.strong,{children:"QUERY BY ATTRIBUTE"})," de una b\xfasqueda m\xfaltiple, o si la b\xfasqueda es una b\xfasqueda simple. Si lo omite dentro de una b\xfasqueda m\xfaltiple, el operador AND (&) se utiliza por defecto."]}),"\n",(0,a.jsxs)(n.p,{children:["En ",(0,a.jsx)(n.em,{children:"campoObjeto"}),", pase el campo objeto cuyos atributos desea buscar. Si pertenece a una tabla Uno relacionada a ",(0,a.jsx)(n.em,{children:"tabla"})," con una relaci\xf3n autom\xe1tica o manual, el ",(0,a.jsx)(n.em,{children:"campoObjeto"})," pueden pertenecer a otra tabla.",(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.strong,{children:"QUERY BY ATTRIBUTE"})," soporta los atributos personalizados 4D Write Pro cuando los documentos son almacenados en campos Objeto. Para mayor informaci\xf3n, consulte la secci\xf3n ",(0,a.jsx)(n.em,{children:"Almacenar los documentos 4D Write Pro en los campos objeto 4D"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["En ",(0,a.jsx)(n.em,{children:"rutaAtributo"}),', pase la ruta del atributo cuyos valores desea comparar para cada registro, por ejemplo "ni\xf1os.ni\xf1as.edad". Si pasa un simple nombres, por ejemplo "lugar", designa el atributo correspondiente ubicado en el primer nivel del campo objeto.',(0,a.jsx)(n.br,{}),'\nSi un atributo "x" es un array, ',(0,a.jsx)(n.strong,{children:"QUERY BY ATTRIBUTE"}),' buscar\xe1 registros que contengan un atributo "x" en el cual al menos un elemento coincida con los criterios. Para buscar entre los atributos de array, es necesario indicar al comando ',(0,a.jsx)(n.strong,{children:"QUERY BY ATTRIBUTE"}),' que el atributo "x" es un array a\xf1adiendo ".[]" a su nombre en el par\xe1metro ',(0,a.jsx)(n.em,{children:"rutaAtributo"}),' (ver ejemplo 3). Puede a\xf1adir una letra entre brackets (i.e. "[b]") para enlazar los argumentos (ver el p\xe1rrafo ',(0,a.jsx)(n.em,{children:"Asociar los criterios para las b\xfasquedas en los elementos de array"})," abajo)."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Notas:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:'Tenga en cuenta que los nombres de atributos tienen en cuenta las may\xfasculas y min\xfasculas: puede tener diferentes nombres de atributos "MyAtt" y "myAtt" en el mismo registro.'}),"\n",(0,a.jsx)(n.li,{children:'Los nombres de atributos se recortan para eliminar espacios adicionales. Por ejemplo, "mi primer atributo .mi segundo atributo" se interpreta como "mi primer atributo.mi segundo atributo".'}),"\n",(0,a.jsxs)(n.li,{children:['No puede consultar los atributos cuyo nombre contengan caracteres especiales como "." o "[]", porque ser\xe1n evaluados incorrectamente como tokens en la cadena de consulta. Para m\xe1s informaci\xf3n, por favor consulte el p\xe1rrafo ',(0,a.jsx)(n.em,{children:"Identificadores de propiedades de objetos"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["El par\xe1metro ",(0,a.jsx)(n.em,{children:"opBusq"})," es el operador de comparaci\xf3n que se aplica entre ",(0,a.jsx)(n.em,{children:"campoObjeto"})," y ",(0,a.jsx)(n.em,{children:"valor"}),". Puede pasar uno de los s\xedmbolos que se muestran aqu\xed:"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:(0,a.jsx)(n.strong,{children:"Comparaci\xf3n"})}),(0,a.jsxs)(n.th,{children:[(0,a.jsx)(n.strong,{children:"S\xedmbolo a utilizar con"})," ",(0,a.jsx)(n.strong,{children:"QUERY BY ATTRIBUTE"})]})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Igual a"}),(0,a.jsx)(n.td,{children:"="})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Diferente de (*)"}),(0,a.jsx)(n.td,{children:"#"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Menor que"}),(0,a.jsx)(n.td,{children:"<"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Mayor que"}),(0,a.jsx)(n.td,{children:">"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Menor o igual a"}),(0,a.jsx)(n.td,{children:"<="})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Mayor o igual a"}),(0,a.jsx)(n.td,{children:">="})]})]})]}),"\n",(0,a.jsx)(n.p,{children:'(*) Cuando se utiliza con los elementos del array, el operador # significa "no contiene ninguno".'}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Nota:"})," se puede especificar el operador de comparaci\xf3n como una expresi\xf3n texto en lugar de un s\xedmbolo. Consulte la descripci\xf3n del comando ",(0,a.jsx)(n.a,{href:"/docs/es/20-R9/commands/query",children:"QUERY"})," para m\xe1s informaci\xf3n."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"valor"})," valor es el dato contra el que se va a comparar ",(0,a.jsx)(n.em,{children:"rutaAtributo"}),". El valor que puede ser cualquier expresi\xf3n del mismo tipo que ",(0,a.jsx)(n.em,{children:"rutaAtributo"}),'. El valor se eval\xfaa una vez, al inicio de la b\xfasqueda. El valor no se eval\xfaa para cada registro. Para buscar una cadena dentro de una cadena (una b\xfasqueda "contains"), utilice el s\xedmbolo arroba (@) en ',(0,a.jsx)(n.em,{children:"valor"}),' para aislar la cadena a buscar, como se muestra en este ejemplo: "@Smith@". Note que en este caso, la b\xfasqueda s\xf3lo se beneficia parcialmente desde el \xedndice (compacidad de almacenamiento de datos).']}),"\n",(0,a.jsx)(n.p,{children:"Esta es la estructura de una consulta por atributos:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-4d",children:'\xa0QUERY BY ATTRIBUTE([Table] ;[Table]ObjectField ;"attribute1.attribute2";=;value)\n'})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Nota"}),": un criterio impl\xedcito para todos los operadores (excepto #) es que el campo Objeto contiene un atributo. Sin embargo, para el operador #, puede definirse (ver m\xe1s adelante)."]}),"\n",(0,a.jsx)(n.h3,{id:"uso-del-operador",children:"Uso del operador"}),"\n",(0,a.jsxs)(n.p,{children:["Al consultar por atributo utilizando el operador ",(0,a.jsx)(n.strong,{children:"#"}),", debe tener en cuenta los casos en que un atributo puede no estar presente en un registro. Por ejemplo, considere la siguiente afirmaci\xf3n:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-4d",children:'\xa0QUERY BY ATTRIBUTE([People];[People]Animals;"dog.name";#;"Rex")\n'})}),"\n",(0,a.jsxs)(n.p,{children:['Esta b\xfasqueda devolver\xe1 los registros de personas que tienen un perro cuyo nombre no es "Rex", as\xed como tambi\xe9n los registros de personas que no tienen perro, o que tienen perro si nombre, ',(0,a.jsx)(n.em,{children:"es decir,"}),' registros para los cuales la el valor de la propiedad "dog.name" es ',(0,a.jsx)(n.strong,{children:"null"}),". El concepto subyacente es: si el motor de consulta no conoce los datos para compararlos con los criterios de b\xfasqueda, no puede decidir si coinciden o no. Por lo tanto, el registro se excluye de la consulta."]}),"\n",(0,a.jsx)(n.p,{children:"Para usar un ejemplo m\xe1s gen\xe9rico:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-4d",children:'\xa0QUERY BY ATTRIBUTE([Table];[Table]ObjectField;"attribute1.attribute2";#;value)\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Esta b\xfasqueda devolver\xe1 todos los registros para los que ",(0,a.jsx)(n.em,{children:"[Table]ObjectField"})," contiene un objeto que contiene un atributo attribute1, que es en s\xed un objeto que contiene un atributo attribute2 cuyo valor no es el valor. NO va a devolver los registros donde:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["el campo objeto no contiene ",(0,a.jsx)(n.em,{children:"attribute1"})]}),"\n",(0,a.jsx)(n.li,{children:"el campo objeto no contiene **attribute1.attribute*2"}),"\n",(0,a.jsx)(n.li,{children:"el campo objeto contiene **attribute1.attribute*2=null"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Este principio tambi\xe9n aplica a los atributos array. Por ejemplo, la b\xfasqueda devolver\xe1 los registros de las personas que tienen una o varias direcciones, pero ninguna en Paris."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-4d",children:'\xa0QUERY BY ATTRIBUTE([People];[People]OB_Field;"locations[].city";#;"paris")\n'})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Nota:"})," Para obtener espec\xedficamente los registros donde el atributo no est\xe1 definido, puede utilizar un objeto vac\xedo (ver ejemplo 2). Note sin embargo que la b\xfasqueda de valores NULL en elementos array no es soportada."]}),"\n",(0,a.jsx)(n.h3,{id:"crear-b\xfasquedas-m\xfaltiples",children:"Crear b\xfasquedas m\xfaltiples"}),"\n",(0,a.jsx)(n.p,{children:"Aqu\xed est\xe1n las reglas a seguir para la construcci\xf3n de varias b\xfasquedas por atributo:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"La primera l\xednea no debe contener una conjunci\xf3n."}),"\n",(0,a.jsx)(n.li,{children:"Cada argumento de b\xfasqueda sucesivo puede comenzar con una conjunci\xf3n. Si lo omite, el operador AND (&) se utiliza por defecto."}),"\n",(0,a.jsxs)(n.li,{children:["Todas las l\xedneas, excepto la \xfaltima, deben utilizar el par\xe1metro ",(0,a.jsx)(n.em,{children:"*"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"QUERY BY ATTRIBUTE"})," se puede combinar con los comandos ",(0,a.jsx)(n.a,{href:"/docs/es/20-R9/commands/query",children:"QUERY"})," (ver ejemplo)."]}),"\n",(0,a.jsxs)(n.li,{children:["Para realizar la b\xfasqueda, no especifique el par\xe1metro ",(0,a.jsx)(n.em,{children:"*"})," en el \xfaltimo comando ",(0,a.jsx)(n.strong,{children:"QUERY BY ATTRIBUTE"}),". Alternativamente, puede ejecutar el comando ",(0,a.jsx)(n.a,{href:"/docs/es/20-R9/commands/query",children:"QUERY"})," sin par\xe1metros distintos a la tabla."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Nota:"})," cada tabla mantiene su propia construcci\xf3n de b\xfasqueda actual. Esto significa que puede crear varias b\xfasquedas simult\xe1neamente, una para cada tabla."]}),"\n",(0,a.jsx)(n.p,{children:"No importa la forma en que una b\xfasqueda se haya definido:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Si la operaci\xf3n de b\xfasqueda va a tomar alg\xfan tiempo para llevarse a cabo, 4D muestra autom\xe1ticamente un mensaje que contiene un term\xf3metro de progreso. Estos mensajes se pueden activar y desactivar mediante el uso de los comandos ",(0,a.jsx)(n.a,{href:"/docs/es/20-R9/commands/messages-on",children:"MESSAGES ON"})," y ",(0,a.jsx)(n.a,{href:"/docs/es/20-R9/commands/messages-off",children:"MESSAGES OFF"}),". Si se muestra un term\xf3metro de progreso, el usuario puede hacer clic en el bot\xf3n Detener para interrumpir la b\xfasqueda. Si se completa la consulta, OK toma el valor 1. De lo contrario, si la consulta se interrumpe, OK toma el valor 0 (cero)."]}),"\n",(0,a.jsx)(n.li,{children:"Si no se especifica ning\xfan campo objeto indexado, la b\xfasqueda se optimiza cada vez que es posible (los campos indexados se buscan primero), resultando en una b\xfasqueda que toma la menor cantidad de tiempo posible."}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"valores-fecha-en-el-objeto",children:"Valores fecha en el objeto"}),"\n",(0,a.jsxs)(n.p,{children:["Las fechas se almacenan en los objetos en funci\xf3n de los par\xe1metros de la base; por defecto, se tiene en cuenta la zona horaria (ver el selector JSON use local time en el comando ",(0,a.jsx)(n.a,{href:"/docs/es/20-R9/commands/set-database-parameter",children:"SET DATABASE PARAMETER"}),")."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'!1973-05-22! -> "1973-05-21T23:00:00.000Z"\n'})}),"\n",(0,a.jsx)(n.p,{children:'Este ajuste tambi\xe9n se tiene en cuenta durante las b\xfasquedas, por lo que no tiene que preocuparse por ello si siempre utiliza su base en el mismo lugar y si los par\xe1metros son los mismos en todos los equipos que acceden a los datos. En este caso, la siguiente b\xfasqueda devolver\xe1 correctamente los registros cuyo atributo Birthday sea igual a !1973-05-22! (guardada como "1973-05-21T23:00:00.00Z"):'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-4d",children:'\xa0QUERY BY ATTRIBUTE([Persons];[Persons]OB_Info;"Birthday";=;!1973-05-22!)\n'})}),"\n",(0,a.jsx)(n.p,{children:"Si no desea utilizar el par\xe1metro GMT, puede modificar estos par\xe1metros utilizando la siguiente instrucci\xf3n:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-4d",children:"\xa0SET DATABASE PARAMETER(JSON use local time;0)\n"})}),"\n",(0,a.jsx)(n.p,{children:'Tenga en cuenta que el alcance de este par\xe1metro est\xe1 limitado al process. Si ejecuta esta instrucci\xf3n, el 1 de octubre de 1965 se almacenar\xe1 "1965-10-01T00: 00: 00.000Z" pero usted deber\xe1 ajustar el mismo par\xe1metro antes de lanzar sus b\xfasquedas:'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-4d",children:'\xa0SET DATABASE PARAMETER(JSON use local time;0)\n\xa0QUERY BY ATTRIBUTE([Persons];[Persons]OB_Info;"Birthday";=;!1976-11-27!)\n'})}),"\n",(0,a.jsx)(n.h3,{id:"utilizaci\xf3n-de-la-propiedad-virtual-longitud",children:"Utilizaci\xf3n de la propiedad virtual longitud"}),"\n",(0,a.jsxs)(n.p,{children:['Puede utilizar la propiedad virtual "longitud" con este comando. Esta propiedad est\xe1 disponible autom\xe1ticamente para todos los atributos de tipo array y devuelve el tama\xf1o del array, es decir, el n\xfamero de elementos que contiene. Se puede utilizar en el contexto de la ejecuci\xf3n del comando ',(0,a.jsx)(n.strong,{children:"QUERY BY ATTRIBUTE"})," (ver ejemplo 4)."]}),"\n",(0,a.jsx)(n.h3,{id:"asociar-los-criterios-para-las-b\xfasquedas-en-los-elementos-de-array",children:"Asociar los criterios para las b\xfasquedas en los elementos de array"}),"\n",(0,a.jsx)(n.p,{children:"(Nuevo en 4D v16 R2) Al buscar en atributos array con varios argumentos de b\xfasqueda unidos por el operador AND, puede que quiera asegurarse de que s\xf3lo se devuelvan los registros que contengan elementos que coincidan con todos los argumentos y no los registros donde se pueden encontrar argumentos en diferentes elementos. Para ello, debe vincular los argumentos de b\xfasqueda a elementos del array, de modo que solo se encuentren elementos \xfanicos que contengan argumentos vinculados."}),"\n",(0,a.jsx)(n.p,{children:"Por ejemplo, con los dos registros siguientes:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n\xa0\xa0\xa0 "name":"martin",\n\xa0\xa0\xa0 "locations" : [ {\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "kind":"home",\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "city":"paris" \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 } ]\n} , {\n\xa0\xa0\xa0 "name":"smith",\n\xa0\xa0\xa0 "locations" : [ {\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "kind":"home",\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "city":"lyon" \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 } , {\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "kind":"office",\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "city":"paris" \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 } ]\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:'Usted quiere encontrar la gente con un tipo de ubicaci\xf3n "home" en la ciudad "Paris". Si escribe:'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-4d",children:'\xa0QUERY BY ATTRIBUTE([People];[People]OB_Field;"locations[].city";=;"paris";*)\n\xa0QUERY BY ATTRIBUTE([People];[People]OB_Field;"locations[].kind";=;"home")\n'})}),"\n",(0,a.jsx)(n.p,{children:'... la b\xfasqueda devolver\xe1 "martin" y "smith" porque "smith" tiene un elemento "locations" cuyo "kind" es "home" y un elemento "locations" cuya "city" es "paris", aunque son elementos diferentes.'}),"\n",(0,a.jsxs)(n.p,{children:["Si s\xf3lo desea obtener los registros donde los argumentos coincidentes est\xe9n en el mismo elemento, debe ",(0,a.jsx)(n.strong,{children:"asociar los criterios"}),". Para vincular criterios de b\xfasqueda:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Agregue una letra entre el [] de la primera ruta a asociar y repita la misma letra en todos los argumentos vinculados. Por ejemplo: ",(0,a.jsx)(n.strong,{children:"locations[a].city"})," y ",(0,a.jsx)(n.strong,{children:"locations[a].kind"}),". Puede utilizar cualquier letra del alfabeto latino (no sensible a may\xfasculas y min\xfasculas)."]}),"\n",(0,a.jsx)(n.li,{children:"Para agregar diferentes criterios vinculados en la misma b\xfasqueda, utilice otra letra (vea los ejemplos a continuaci\xf3n). Puede crear hasta 26 combinaciones de criterios en una sola b\xfasqueda."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Con los registros anteriores, si escribe:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-4d",children:'\xa0QUERY BY ATTRIBUTE([People];[People]OB_Field;"locations[a].city";=;"paris";*)\n\xa0QUERY BY ATTRIBUTE([People];[People]OB_Field;"locations[a].kind";=;"home")\n'})}),"\n",(0,a.jsx)(n.p,{children:'... la b\xfasqueda s\xf3lo devolver\xe1 "martin" porque tiene un elemento "locations" cuyo "kind" es "home" y cuya "city" es "paris". La consulta no devolver\xe1 "smith" porque los valores "home" y "paris" no est\xe1n en el mismo elemento de array. Vea los ejemplos a continuaci\xf3n para ver m\xe1s ejemplos de esta funcionalidad.'}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Nota:"}),' utilizar la sintaxis relacionada en una sola l\xednea de b\xfasqueda dar\xe1 los mismos resultados que una b\xfasqueda est\xe1ndar, excepto cuando se utiliza el operador "#": en este caso, se pueden devolver resultados no v\xe1lidos. Por lo tanto, esta sintaxis espec\xedfica no es soportada.']}),"\n",(0,a.jsx)(n.h2,{id:"ejemplo-1",children:"Ejemplo 1"}),"\n",(0,a.jsx)(n.p,{children:'En este ejemplo, el atributo "age" es una cadena o un entero y queremos encontrar personas cuyas edades est\xe9n entre 20 y 29. Las primeras dos l\xedneas buscan el atributo como un entero (>=20 y <30) y las \xfaltimas consultan el campo como una cadena (comienza por "2" pero es diferente de "2".)'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-4d",children:'\xa0QUERY BY ATTRIBUTE([Persons];[Persons]OB_Info;"age";>=;20;*)\n\xa0QUERY BY ATTRIBUTE([Persons];&;[Persons]OB_Info;"age";<;30;*)\n\xa0QUERY BY ATTRIBUTE([Persons];|;[Persons]OB_Info;"age";=;"2@";*)\n\xa0QUERY BY ATTRIBUTE([Persons];&;[Persons]OB_Info;"age";#;"2")\xa0//sin * para lanzar la ejecuci\xf3n\n'})}),"\n",(0,a.jsx)(n.h2,{id:"ejemplo-2",children:"Ejemplo 2"}),"\n",(0,a.jsxs)(n.p,{children:["El comando ",(0,a.jsx)(n.strong,{children:"QUERY BY ATTRIBUTE"})," se puede utilizar para encontrar registros en los que algunos atributos se definen (o no). Para ello, debe utilizar un objeto vac\xedo."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-4d",children:'\xa0\xa0//Buscar los registros donde el correo electr\xf3nico se define en el campo objeto\n\xa0var $undefined : Object\n\xa0QUERY BY ATTRIBUTE([Persons];[Persons]Info;"email";#;$undefined)\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-4d",children:'\xa0\xa0//Buscar los registros donde el c\xf3digo postal no est\xe1 definido en el campo objeto\n\xa0var $undefined : Object\n\xa0QUERY BY ATTRIBUTE([Persons];[Persons]Info;"zip code";=;$undefined)\n'})}),"\n",(0,a.jsx)(n.h2,{id:"ejemplo-3",children:"Ejemplo 3"}),"\n",(0,a.jsx)(n.p,{children:"Usted quiere buscar un campo que contiene los atributos array. Con los dos registros siguientes:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n\xa0\xa0\xa0 "name":"martin",\n\xa0\xa0\xa0 "locations" : [ {\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "kind":"office",\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "city":"paris" \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 } ]\n} , {\n\xa0\xa0\xa0 "name":"smith",\n\xa0\xa0\xa0 "locations" : [ {\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "kind":"home",\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "city":"lyon" \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 } , {\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "kind":"office",\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 "city":"paris" \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 } ]\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["... ",(0,a.jsx)(n.strong,{children:"QUERY BY ATTRIBUTE"}),' encontrar\xe1 personas con una ubicaci\xf3n en "paris" utilizando esta instrucci\xf3n:']}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-4d",children:'\xa0\xa0//indica el atributo array con la sintaxis "[]"\n\xa0QUERY BY ATTRIBUTE([People];[People]OB_Field;"locations[].city";=;"paris")\n\xa0\xa0//Selecciona "martin" y "smith"\n'})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Nota:"}),' si ha definido varios criterios en el mismo atributo array, los criterios coincidentes no se aplicar\xe1n necesariamente al mismo elemento de array. En el siguiente ejemplo, la b\xfasqueda devolver\xe1 "smith" porque tiene un elemento "locations" cuyo "kind" es "home" y un elemento "locations" cuya "city" es "paris", Incluso si no es el mismo elemento:']}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-4d",children:'\xa0QUERY BY ATTRIBUTE([People];[People]OB_Field;"locations[].kind";=;"home";*)\n\xa0QUERY BY ATTRIBUTE([People];&;[People]OB_Field;"locations[].city";=;"paris")\n\xa0\xa0//Selecciona "smith"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"ejemplo-4",children:"Ejemplo 4"}),"\n",(0,a.jsx)(n.p,{children:'Este ejemplo ilustra el uso de la propiedad "longitud" virtual. Su base tiene un campo objeto [Customer]full_Data con los siguientes datos:'}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:s(921429).Z+"",width:"892",height:"416"})}),"\n",(0,a.jsx)(n.p,{children:"Usted quiere obtener los registros de los clientes que tienen dos o m\xe1s hijos. Para ello, se puede escribir:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-4d",children:'\xa0QUERY BY ATTRIBUTE([Customer];[Customer]full_Data;"Children.length";>=;2)\n'})}),"\n",(0,a.jsx)(n.h2,{id:"ejemplo-5",children:"Ejemplo 5"}),"\n",(0,a.jsx)(n.p,{children:"Estos ejemplos ilustran las diversas combinaciones disponibles de argumentos de consulta vinculados en arrays. Asumiendo que tiene los siguientes registros:"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Record1:"}),(0,a.jsx)(n.br,{}),'\n[Person]Name: "Sam"',(0,a.jsx)(n.br,{}),"\n[Person]ObjectField:",(0,a.jsx)(n.br,{}),'\n"Children": [ {',(0,a.jsx)(n.br,{}),'\n"Name": "Harry",',(0,a.jsx)(n.br,{}),'\n"Age": "15",',(0,a.jsx)(n.br,{}),'\n"Toy": [ {',(0,a.jsx)(n.br,{}),'\n"Name": "Car",',(0,a.jsx)(n.br,{}),'\n"Color": "Blue"',(0,a.jsx)(n.br,{}),"\n}, {",(0,a.jsx)(n.br,{}),'\n"Name": "Teddy Bear",',(0,a.jsx)(n.br,{}),'\n"Color": "Brown"',(0,a.jsx)(n.br,{}),"\n} ]",(0,a.jsx)(n.br,{}),"\n}, {",(0,a.jsx)(n.br,{}),'\n"Name": "Betty",',(0,a.jsx)(n.br,{}),'\n"Age": "9",',(0,a.jsx)(n.br,{}),'\n"Toy": [ {',(0,a.jsx)(n.br,{}),'\n"Name": "Car",',(0,a.jsx)(n.br,{}),'\n"Color": "Green"',(0,a.jsx)(n.br,{}),"\n}, {",(0,a.jsx)(n.br,{}),'\n"Name": "Puzzle",',(0,a.jsx)(n.br,{}),'\n"Color": "Blue"',(0,a.jsx)(n.br,{}),"\n} ]",(0,a.jsx)(n.br,{}),"\n} ]"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Record2:"}),(0,a.jsx)(n.br,{}),'\n[Person]Name: "Louis"',(0,a.jsx)(n.br,{}),"\n[Person]ObjectField:",(0,a.jsx)(n.br,{}),'\n"Children": [ {',(0,a.jsx)(n.br,{}),'\n"Name": "Harry",',(0,a.jsx)(n.br,{}),'\n"Age": "15",',(0,a.jsx)(n.br,{}),'\n"Toy": [ {',(0,a.jsx)(n.br,{}),'\n"Name": "Water gun",',(0,a.jsx)(n.br,{}),'\n"Color": "Blue"',(0,a.jsx)(n.br,{}),"\n} ]",(0,a.jsx)(n.br,{}),"\n}, {",(0,a.jsx)(n.br,{}),'\n"Name": "Betty",',(0,a.jsx)(n.br,{}),'\n"Age": "3",',(0,a.jsx)(n.br,{}),'\n"Toy": [ {',(0,a.jsx)(n.br,{}),'\n"Name": "Car",',(0,a.jsx)(n.br,{}),'\n"Color": "Blue"',(0,a.jsx)(n.br,{}),"\n}, {",(0,a.jsx)(n.br,{}),'\n"Name": "Puzzle",',(0,a.jsx)(n.br,{}),'\n"Color": "Green"',(0,a.jsx)(n.br,{}),"\n} ]",(0,a.jsx)(n.br,{}),"\n} ]"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Record3:"}),(0,a.jsx)(n.br,{}),'\n[Person]Name: "Victor"',(0,a.jsx)(n.br,{}),"\n[Person]ObjectField:",(0,a.jsx)(n.br,{}),'\n"Children": [ {',(0,a.jsx)(n.br,{}),'\n"Name": "Harry",',(0,a.jsx)(n.br,{}),'\n"Age": "9",',(0,a.jsx)(n.br,{}),'\n"Toy": [ {',(0,a.jsx)(n.br,{}),'\n"Name": "Doll",',(0,a.jsx)(n.br,{}),'\n"Color": "Pink"',(0,a.jsx)(n.br,{}),"\n}, {",(0,a.jsx)(n.br,{}),'\n"Name": "Puzzle",',(0,a.jsx)(n.br,{}),'\n"Color": "Blue"',(0,a.jsx)(n.br,{}),"\n} ]",(0,a.jsx)(n.br,{}),"\n}, {",(0,a.jsx)(n.br,{}),'\n"Name": "Betty",',(0,a.jsx)(n.br,{}),'\n"Age": "15",',(0,a.jsx)(n.br,{}),'\n"Toy": [ {',(0,a.jsx)(n.br,{}),'\n"Name": "Water gun",',(0,a.jsx)(n.br,{}),'\n"Color": "Blue"',(0,a.jsx)(n.br,{}),"\n} ]",(0,a.jsx)(n.br,{}),"\n} ]"]}),"\n",(0,a.jsx)(n.p,{children:'Para encontrar personas que tienen un hijo llamado "Betty" que tiene 15 a\xf1os:'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-4d",children:'\xa0QUERY BY ATTRIBUTE([Person];[Person]ObjectField;"Children[a].Name";=;"Betty";*)\n\xa0QUERY BY ATTRIBUTE([Person];&;[Person]ObjectField;"Children[a].Age";=;"15")\n\xa0\xa0//returns "Victor"\n\xa0\n\xa0QUERY BY ATTRIBUTE([Person];[Person]ObjectField;"Children[].Name";=;"Betty";*)\n\xa0QUERY BY ATTRIBUTE([Person];&;[Person]ObjectField;"Children[].Age";=;"15")\n\xa0\xa0//returns "Sam", "Louis" and "Victor"\n'})}),"\n",(0,a.jsx)(n.p,{children:'Para encontrar personas que tienen un hijo llamado "Betty" que tiene 15 a\xf1os y un hijo llamado "Harry" que tiene 9 a\xf1os:'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-4d",children:'\xa0QUERY BY ATTRIBUTE([Person];[Person]ObjectField;"Children[a].Name";=;"Betty";*)\n\xa0QUERY BY ATTRIBUTE([Person];&;[Person]ObjectField;"Children[a].Age";=;"15";*)\n\xa0QUERY BY ATTRIBUTE([Person];[Person]ObjectField;"Children[b].Name";=;"Harry";*)\n\xa0QUERY BY ATTRIBUTE([Person];&;[Person]ObjectField;"Children[b].Age";=;"9")\n\xa0\xa0//returns "Victor"\n\xa0\n\xa0QUERY BY ATTRIBUTE([Person];[Person]ObjectField;"Children[].Name";=;"Betty";*)\n\xa0QUERY BY ATTRIBUTE([Person];&;[Person]ObjectField;"Children[].Age";=;"15";*)\n\xa0QUERY BY ATTRIBUTE([Person];[Person]ObjectField;"Children[].Name";=;"Harry";*)\n\xa0QUERY BY ATTRIBUTE([Person];&;[Person]ObjectField;"Children[].Age";=;"9")\n\xa0\xa0//devuelve"Sam" y "Victor"\n'})}),"\n",(0,a.jsx)(n.p,{children:'Para buscar personas que tienen un hijo de 15 a\xf1os llamado "Harry" con un juguete "blue car" (buscar en un array de arrays):'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-4d",children:'\xa0QUERY BY ATTRIBUTE([Person];[Person]ObjectField;"Children[a].Name";=;"Harry";*)\n\xa0QUERY BY ATTRIBUTE([Person];&;[Person]ObjectField;"Children[a].Age";=;"15";*)\n\xa0QUERY BY ATTRIBUTE([Person];&;[Person]ObjectField;"Children[a].Toy[b].Name";=;"Car";*)\n\xa0QUERY BY ATTRIBUTE([Person];&;[Person]ObjectField;"Children[a].Toy[b].Color";=;"Blue")\n\xa0\xa0//returns "Sam"\n\xa0\n\xa0QUERY BY ATTRIBUTE([Person];[Person]ObjectField;"Children[].Name";=;"Harry";*)\n\xa0QUERY BY ATTRIBUTE([Person];&;[Person]ObjectField;"Children[].Age";=;"15";*)\n\xa0QUERY BY ATTRIBUTE([Person];&;[Person]ObjectField;"Children[].Toy[].Name";=;"Car";*)\n\xa0QUERY BY ATTRIBUTE([Person];&;[Person]ObjectField;"Children[].Toy[].Color";=;"Blue")\n\xa0\xa0//devuelve "Sam" y "Louis"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"variables-y-conjuntos-del-sistema",children:"Variables y conjuntos del sistema"}),"\n",(0,a.jsxs)(n.p,{children:["Si la b\xfasqueda se lleva a cabo correctamente, la variable sistema OK toma el valor 1.",(0,a.jsx)(n.br,{}),"\nLa variable OK toma el valor 0 si: - el usuario hace clic en Cancelar en la caja de di\xe1logo de b\xfasqueda,",(0,a.jsx)(n.br,{}),"\n- en modo 'b\xfasqueda y bloqueo' (ver el comando ",(0,a.jsx)(n.a,{href:"/docs/es/20-R9/commands/set-query-and-lock",title:"SET QUERY AND LOCK",children:"SET QUERY AND LOCK"}),"), la b\xfasqueda encuentra al menos un registro bloqueado. En este caso igualmente, el conjunto sistema LockedSet se actualiza."]}),"\n",(0,a.jsx)(n.h2,{id:"ver-tambi\xe9n",children:"Ver tambi\xe9n"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.em,{children:"Estructura de los objetos de lenguaje 4D"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.a,{href:"/docs/es/20-R9/commands/query-selection-by-attribute",children:"QUERY SELECTION BY ATTRIBUTE"})]}),"\n",(0,a.jsx)(n.h2,{id:"propiedades",children:"Propiedades"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{}),(0,a.jsx)(n.th,{})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"N\xfamero de comando"}),(0,a.jsx)(n.td,{children:"1331"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Hilo seguro"}),(0,a.jsx)(n.td,{children:"\u2713"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Modifica variables"}),(0,a.jsx)(n.td,{children:"OK"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Modifica el registro actual"}),(0,a.jsx)(n.td,{})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Modifica la selecci\xf3n actual"}),(0,a.jsx)(n.td,{})]})]})]})]})}function u(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},921429:function(e,n,s){s.d(n,{Z:function(){return r}});let r=s.p+"assets/images/pict2994114.en-68a05af42526ae8a3e86ce9c6c663112.png"},250065:function(e,n,s){s.d(n,{Z:function(){return i},a:function(){return l}});var r=s(667294);let a={},o=r.createContext(a);function l(e){let n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);