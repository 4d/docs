"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["37878"],{255875:function(e,o,s){s.r(o),s.d(o,{default:()=>m,frontMatter:()=>l,metadata:()=>n,assets:()=>c,toc:()=>t,contentTitle:()=>i});var n=JSON.parse('{"id":"commands-legacy/semaphore","title":"Semaphore","description":"Semaphore ( semaforo {; ticCont} ) : Boolean","source":"@site/i18n/es/docusaurus-plugin-content-docs/version-20-R8/commands-legacy/semaphore.md","sourceDirName":"commands-legacy","slug":"/commands/semaphore","permalink":"/docs/es/commands/semaphore","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fsemaphore.md%20(20-R8)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"20-R8","frontMatter":{"id":"semaphore","title":"Semaphore","slug":"/commands/semaphore","displayed_sidebar":"docs"},"sidebar":"docs","previous":{"title":"New signal","permalink":"/docs/es/commands/new-signal"},"next":{"title":"SET PROCESS VARIABLE","permalink":"/docs/es/commands/set-process-variable"}}'),a=s("785893"),r=s("250065");let l={id:"semaphore",title:"Semaphore",slug:"/commands/semaphore",displayed_sidebar:"docs"},i=void 0,c={},t=[{value:"Descripci\xf3n",id:"descripci\xf3n",level:4},{value:"Ejemplo 1",id:"ejemplo-1",level:4},{value:"Ejemplo 2",id:"ejemplo-2",level:4},{value:"Ejemplo 3",id:"ejemplo-3",level:4},{value:"Ejemplo 4",id:"ejemplo-4",level:4},{value:"Ver tambi\xe9n",id:"ver-tambi\xe9n",level:4},{value:"Propiedades",id:"propiedades",level:4}];function d(e){let o={a:"a",br:"br",code:"code",em:"em",h4:"h4",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.strong,{children:"Semaphore"})," ( ",(0,a.jsx)(o.em,{children:"semaforo"})," {; ",(0,a.jsx)(o.em,{children:"ticCont"}),"} ) : Boolean"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(o.table,{children:[(0,a.jsx)(o.thead,{children:(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.th,{children:"Par\xe1metro"}),(0,a.jsx)(o.th,{children:"Tipo"}),(0,a.jsx)(o.th,{}),(0,a.jsx)(o.th,{children:"Descripci\xf3n"})]})}),(0,a.jsxs)(o.tbody,{children:[(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.td,{children:"semaforo"}),(0,a.jsx)(o.td,{children:"Text"}),(0,a.jsx)(o.td,{children:"\u2192"}),(0,a.jsx)(o.td,{children:"Sem\xe1foro a probar y posicionar"})]}),(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.td,{children:"ticCont"}),(0,a.jsx)(o.td,{children:"Integer"}),(0,a.jsx)(o.td,{children:"\u2192"}),(0,a.jsx)(o.td,{children:"M\xe1ximo tiempo de espera"})]}),(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.td,{children:"Resultado"}),(0,a.jsx)(o.td,{children:"Boolean"}),(0,a.jsx)(o.td,{children:"\u2190"}),(0,a.jsx)(o.td,{children:"El sem\xe1foro se ha creado correctamente (FALSE) o El sem\xe1foro ya hab\xeda sido creado (TRUE)"})]})]})]}),"\n",(0,a.jsx)(o.h4,{id:"descripci\xf3n",children:"Descripci\xf3n"}),"\n",(0,a.jsx)(o.p,{children:"Un sem\xe1foro es una bandera compartida entre estaciones de trabajo o entre procesos en la misma estaci\xf3n de trabajo. Un sem\xe1foro simplemente existe o no existe. Los m\xe9todos que cada usuario ejecuta pueden probar la existencia de un sem\xe1foro. Un sem\xe1foro s\xf3lo puede ser eliminado por la estaci\xf3n de trabajo cliente o proceso que lo cre\xf3. Creando y probando sem\xe1foros, los m\xe9todos pueden comunicarse entre estaciones de trabajo. No utilice sem\xe1foros para proteger el acceso a los registros. Esto lo hace autom\xe1ticamente 4D y 4D Server. Utilice los sem\xe1foros para evitar que varios usuarios realice la misma operaci\xf3n al mismo tiempo."}),"\n",(0,a.jsxs)(o.p,{children:["La funci\xf3n Semaphore devuelve TRUE y no hace nada si el ",(0,a.jsx)(o.em,{children:"semaforo"})," existe. Si ",(0,a.jsx)(o.em,{children:"semaforo"})," no existe, Semaphore lo crea y devuelve FALSE. S\xf3lo un usuario a la vez puede crear un sem\xe1foro. Si ",(0,a.jsx)(o.em,{children:"semaforo"})," devuelve FALSE, esto significa que el sem\xe1foro no existe, pero tambi\xe9n significa que el sem\xe1foro ha sido creado para el proceso en el cual la llamada se ha efectuado."]}),"\n",(0,a.jsx)(o.p,{children:"Semaphore devuelve FALSE si el sem\xe1foro no fue definido. Tambi\xe9n devuelve FALSE si el sem\xe1foro ya fue definido por el mismo proceso en el cual la llamada ha sido efectuada. Un sem\xe1foro est\xe1 limitado a 255 caracteres, incluyendo el prefijo ($). Si pasa una cadena m\xe1s larga, el sem\xe1foro se probar\xe1 con la cadena truncada."}),"\n",(0,a.jsx)(o.p,{children:'Recuerde que los nombres de los sem\xe1foros son sensibles a las may\xfasculas y min\xfasculas en 4D (por ejemplo, el programa considera que "MySemaphore" es diferente de "mysemaphore"'}),"\n",(0,a.jsxs)(o.p,{children:["El par\xe1metro opcional ",(0,a.jsx)(o.em,{children:"ticCont"})," le permite especificar un tiempo de espera (en tics) si ",(0,a.jsx)(o.em,{children:"semaforo"})," ya est\xe1 definido. En este caso, la funci\xf3n esperar\xe1 o que el sem\xe1foro sea liberado o el tiempo de espera para terminar antes de devolver ",(0,a.jsx)(o.a,{href:"/docs/es/commands/true",title:"True",children:"True"}),"."]}),"\n",(0,a.jsx)(o.p,{children:"Hay dos tipos de sem\xe1foros en 4D: sem\xe1foros locales y sem\xe1foros globales."}),"\n",(0,a.jsxs)(o.p,{children:["\u2022 Un sem\xe1foro local es visible para todos los procesos de una misma estaci\xf3n de trabajo y solamente en la estaci\xf3n de trabajo. Declare un sem\xe1foro local colocando al nombre del sem\xe1foro el signo d\xf3lar ($) como prefijo. Los sem\xe1foros locales permiten controlar las operaciones entre los diferentes procesos ejecutados en la misma estaci\xf3n de trabajo. Por ejemplo, un sem\xe1foro local puede ser utilizado para monitorear los accesos a un array interproceso compartido por todos los procesos de una base mono usuario o de un equipo cliente.",(0,a.jsx)(o.br,{}),"\n\u2022 Un sem\xe1foro global es visible para todos los usuarios y todos los procesos. Los sem\xe1foros globales permiten controlar las operaciones entre los equipos clientes de una base multiusuarios."]}),"\n",(0,a.jsxs)(o.p,{children:["Los sem\xe1foros globales y locales son id\xe9nticos en su l\xf3gica. La diferencia reside en su alcance, es decir en su visibilidad. En cliente-servidor, los sem\xe1foros globales son visibles para todos los procesos de todos los equipos clientes y del servidor. Un sem\xe1foro local s\xf3lo es visible para los procesos del equipo en el que ha sido creado.",(0,a.jsx)(o.br,{}),"\nCon 4D, los sem\xe1foros globales y locales tienen el mismo alcance porque usted es el \xfanico usuario. Sin embargo, si su base est\xe1 siendo utilizada en los dos entornos, aseg\xfarese de utilizar sem\xe1foros globales y locales dependiendo de lo que quiera hacer."]}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.strong,{children:"Nota:"})," los sem\xe1foros locales se recomiendan cuando el uso de un sem\xe1foro es necesario para manejar un aspecto local para un cliente de la aplicaci\xf3n, tal como la interfaz o un array de valores interproceso. El uso de un sem\xe1foro global provocar\xe1 en este caso, no s\xf3lo intercambios de red innecesarios, sino tambi\xe9n puede afectar otras m\xe1quinas cliente. El uso de un sem\xe1foro local evitar\xe1 estos efectos indeseables."]}),"\n",(0,a.jsx)(o.h4,{id:"ejemplo-1",children:"Ejemplo 1"}),"\n",(0,a.jsx)(o.p,{children:"Este es el c\xf3digo t\xedpico para utilizar un sem\xe1foro:"}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-4d",children:'\xa0While(Semaphore("MySemaphore";300))\n\xa0\xa0\xa0\xa0IDLE\n\xa0End while\n\xa0\xa0// coloque el c\xf3digo protegido por el sem\xe1foro aqu\xed\n\xa0CLEAR SEMAPHORE("MySemaphore")\n'})}),"\n",(0,a.jsx)(o.h4,{id:"ejemplo-2",children:"Ejemplo 2"}),"\n",(0,a.jsx)(o.p,{children:"En este ejemplo, usted quiere evitar que dos usuarios efect\xfaen simult\xe1neamente una actualizaci\xf3n global de los precios en una tabla Productos. El siguiente m\xe9todo utiliza sem\xe1foros para hacer esto:"}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-4d",children:'\xa0If(Semaphore("ActualizacionPrecios"))\xa0// Trate de crear el sem\xe1foro\n\xa0\xa0\xa0\xa0ALERT("Otro usuario ya est\xe1 actualizando los precios. Int\xe9ntelo m\xe1s tarde.")\n\xa0Else\n\xa0\xa0\xa0\xa0ActualizarPrecios\xa0// Actualizaci\xf3n de todos los precios\n\xa0\xa0\xa0\xa0CLEAR SEMAPHORE("ActualizacionPrecios")\xa0// Borrar el sem\xe1foro\n\xa0End if\n'})}),"\n",(0,a.jsx)(o.h4,{id:"ejemplo-3",children:"Ejemplo 3"}),"\n",(0,a.jsx)(o.p,{children:'El siguiente ejemplo utiliza un sem\xe1foro local. En una base con varios procesos, usted quiere mantener una lista de "Cosas por hacer". Usted quiere mantener la lista en un array interproceso y no en una tabla. Usted utiliza un sem\xe1foro para evitar el acceso simult\xe1neo. En esta situaci\xf3n, s\xf3lo necesita utilizar un sem\xe1foro local, porque su lista "Cosas por hacer" es s\xf3lo para su uso personal.'}),"\n",(0,a.jsx)(o.p,{children:"El array interproceso se inicializa en el m\xe9todo Startup:"}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-4d",children:"\xa0ARRAY TEXT(\u25CAListaHacer;0)\xa0// La lista de cosas por hacer est\xe1 inicialmente vac\xeda\n"})}),"\n",(0,a.jsx)(o.p,{children:"Este es el m\xe9todo utilizado para a\xf1adir elementos a la lista de cosas por hacer:"}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-4d",children:'\xa0\xa0// M\xe9todo de proyecto AGREGAR A LISTA DE COSAS POR HACER\n\xa0\xa0// AGREGAR A LISTA DE COSAS POR HACER ( Texto )\n\xa0\xa0// AGREGAR A LISTA DE COSAS POR HACER ( Elemento de la lista de cosas por hacer)\n\xa0var $1 : Text\n\xa0If(Not(Semaphore("$AccesoLista";300)))\n\xa0\xa0// Espera 5 segundos si el sem\xe1foro ya existe\n\xa0\xa0\xa0\xa0$vlElem:=Size of array(\u25CAListaHacer)+1\n\xa0\xa0\xa0\xa0INSERT IN ARRAY(\u25CAListaHacer;$vlElem)\n\xa0\xa0\xa0\xa0\u25CAListaHacer{$vlElem}:=$1\n\xa0\xa0\xa0\xa0CLEAR SEMAPHORE("$AccesoLista")\xa0// Borrar el sem\xe1foro\n\xa0End if\n'})}),"\n",(0,a.jsx)(o.p,{children:"Puede llamar este m\xe9todo desde cualquier proceso."}),"\n",(0,a.jsx)(o.h4,{id:"ejemplo-4",children:"Ejemplo 4"}),"\n",(0,a.jsx)(o.p,{children:"Este m\xe9todo permite no ejecutar un m\xe9todo si el sem\xe1foro est\xe1 presente; el m\xe9todo informa el m\xe9todo de llamada con un c\xf3digo de error y un texto plano."}),"\n",(0,a.jsx)(o.p,{children:"Sintaxis:"}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-4d",children:"\xa0$L_Error:=Semaphore_proof(->$T_Text_error)\n"})}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-4d",children:'\xa0\xa0// Estructura de protecci\xf3n por sem\xe1foro\n\xa0var $0 : Integer\n\xa0var $1 : Pointer\xa0// mensaje de error\n\xa0\n\xa0\xa0// Inicio del m\xe9todo\n\xa0var $L_MyError : Integer\n\xa0$L_MyError:=1\n\xa0\n\xa0var $T_Sema_local : Text\n\xa0$T_Sema_local:="$tictac"\n\xa0\n\xa0If(Semaphore($T_Sema_local;300))\n\xa0\xa0// Esper\xe1bamos 300 tics pero el sem\xe1foro\n\xa0\xa0// no fue lanzado por el que lo ubic\xf3:\n\xa0\xa0// terminamos aqu\xed\n\xa0\xa0\xa0\xa0$L_MyError:=-1\n\xa0\n\xa0Else\n\xa0\n\xa0\xa0// Este m\xe9todo solo se ejecuta por un proceso a la vez\n\xa0\n\xa0\xa0// Ubicamos el sem\xe1foro al mismo tiempo que lo introducimos\n\xa0\xa0// as\xed que somos los \xfanicos que lo podemos eliminar\n\xa0\n\xa0\xa0// Hacer algo\n\xa0\xa0\xa0\xa0...\n\xa0\xa0// Terminar eliminando el sem\xe1foro\n\xa0\xa0\xa0\xa0CLEAR SEMAPHORE($T_Sema_local)\n\xa0End if\n\xa0\n\xa0var $T_Message : Text\n\xa0If($L_MyError=-1)\n\xa0\xa0\xa0\xa0$T_Message:="El sem\xe1foro "+$T_Sema_local+" tiene el acceso bloqueado al resto del c\xf3digo"\n\xa0Else\n\xa0\xa0\xa0\xa0$T_Message:="OK"\n\xa0End if\n\xa0\n\xa0$0:=$L_MyError\n\xa0$1->:=$T_Message \xa0// El m\xe9todo llamante recibe un c\xf3digo de error y una explicaci\xf3n en texto plano\n'})}),"\n",(0,a.jsx)(o.h4,{id:"ver-tambi\xe9n",children:"Ver tambi\xe9n"}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.a,{href:"/docs/es/commands/clear-semaphore",children:"CLEAR SEMAPHORE"}),(0,a.jsx)(o.br,{}),"\n",(0,a.jsx)(o.em,{children:"Sem\xe1foros y se\xf1ales"}),(0,a.jsx)(o.br,{}),"\n",(0,a.jsx)(o.a,{href:"/docs/es/commands/test-semaphore",children:"Test semaphore"})]}),"\n",(0,a.jsx)(o.h4,{id:"propiedades",children:"Propiedades"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(o.table,{children:[(0,a.jsx)(o.thead,{children:(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.th,{}),(0,a.jsx)(o.th,{})]})}),(0,a.jsxs)(o.tbody,{children:[(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.td,{children:"N\xfamero de comando"}),(0,a.jsx)(o.td,{children:"143"})]}),(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.td,{children:"Hilo seguro"}),(0,a.jsx)(o.td,{children:"\u2713"})]})]})]})]})}function m(e={}){let{wrapper:o}={...(0,r.a)(),...e.components};return o?(0,a.jsx)(o,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},250065:function(e,o,s){s.d(o,{Z:function(){return i},a:function(){return l}});var n=s(667294);let a={},r=n.createContext(a);function l(e){let o=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),n.createElement(r.Provider,{value:o},e.children)}}}]);