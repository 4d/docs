/*! For license information please see 8846341a.89a94d38.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6010],{489912:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var i=l(474848),r=l(28453);const s={id:"looping",title:"Estructuras repetitivas (bucles)"},a=void 0,o={id:"Concepts/looping",title:"Estructuras repetitivas (bucles)",description:"Las estructuras en bucle repiten una secuencia de instrucciones hasta que se cumple una condici\xf3n o se alcanza un n\xfamero de veces.",source:"@site/i18n/es/docusaurus-plugin-content-docs/version-19/Concepts/cf_looping.md",sourceDirName:"Concepts",slug:"/Concepts/looping",permalink:"/docs/es/19/Concepts/looping",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20Concepts%2Fcf_looping.md%20(19)&body=Please%20enter%20your%20comment%3A",tags:[],version:"19",frontMatter:{id:"looping",title:"Estructuras repetitivas (bucles)"},sidebar:"docs",previous:{title:"Estructuras condicionales",permalink:"/docs/es/19/Concepts/branching"},next:{title:"Etiquetas de transformaci\xf3n",permalink:"/docs/es/19/Tags/tags"}},c={},d=[{value:"While...End while",id:"whileend-while",level:2},{value:"Ejemplo",id:"ejemplo",level:3},{value:"Repeat...Until",id:"repeatuntil",level:2},{value:"Ejemplo",id:"ejemplo-1",level:3},{value:"For...End for",id:"forend-for",level:2},{value:"Ejemplos b\xe1sicos",id:"ejemplos-b\xe1sicos",level:3},{value:"Disminuir la variable contador",id:"disminuir-la-variable-contador",level:3},{value:"Incrementar la variable del contador en m\xe1s de uno",id:"incrementar-la-variable-del-contador-en-m\xe1s-de-uno",level:3},{value:"Comparaci\xf3n de estructuras de bucle",id:"comparaci\xf3n-de-estructuras-de-bucle",level:3},{value:"Optimizing the execution of the For... End for loops",id:"optimizing-the-execution-of-the-for-end-for-loops",level:3},{value:"Nested For... End for looping structures",id:"nested-for-end-for-looping-structures",level:3},{value:"For each... End for each",id:"for-each-end-for-each",level:2},{value:"Bucle en las colecciones",id:"bucle-en-las-colecciones",level:3},{value:"Ejemplo",id:"ejemplo-2",level:4},{value:"Bucle en las selecciones de entidades",id:"bucle-en-las-selecciones-de-entidades",level:3},{value:"Ejemplo",id:"ejemplo-3",level:4},{value:"Bucles en las propiedades de objetos",id:"bucles-en-las-propiedades-de-objetos",level:3},{value:"Ejemplo",id:"ejemplo-4",level:4},{value:"Par\xe1metros begin / end",id:"par\xe1metros-begin--end",level:3},{value:"Ejemplo",id:"ejemplo-5",level:4},{value:"Condiciones Until y While",id:"condiciones-until-y-while",level:3},{value:"Ejemplo",id:"ejemplo-6",level:4}];function t(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Las estructuras en bucle repiten una secuencia de instrucciones hasta que se cumple una condici\xf3n o se alcanza un n\xfamero de veces."}),"\n",(0,i.jsx)(n.h2,{id:"whileend-while",children:"While...End while"}),"\n",(0,i.jsxs)(n.p,{children:["La sintaxis de la estructura condicional ",(0,i.jsx)(n.code,{children:"While...End while"})," es:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:" While(Boolean_Expression)\n    statement(s)\n End while\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Un bucle ",(0,i.jsx)(n.code,{children:"While...End while"})," ejecuta las instrucciones dentro del bucle mientras la expresi\xf3n booleana sea TRUE. Comprueba la expresi\xf3n booleana al inicio del bucle y no entra en el bucle si la expresi\xf3n es FALSE."]}),"\n",(0,i.jsxs)(n.p,{children:["Es com\xfan inicializar el valor probado en la expresi\xf3n booleana inmediatamente antes de entrar en el bucle ",(0,i.jsx)(n.code,{children:"While...End while"}),". Inicializar el valor significa asignarle un contenido adecuado, normalmente para que la expresi\xf3n booleana sea TRUE y ",(0,i.jsx)(n.code,{children:"While...End while"})," ejecute el bucle."]}),"\n",(0,i.jsxs)(n.p,{children:["El valor de la expresi\xf3n booleana debe poder ser modificado por un elemento dentro del bucle, de lo contrario se ejecutar\xe1 indefinidamente. El siguiente bucle contin\xfaa para siempre porque ",(0,i.jsx)(n.em,{children:"NeverStop"})," es siempre TRUE:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:" NeverStop:=True\n While(NeverStop)\n End while\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Si se encuentra en una situaci\xf3n de este tipo, en la que un m\xe9todo se ejecuta de forma incontrolada, puede utilizar las funciones de rastreo para detener el bucle y localizar el problema. Para m\xe1s informaci\xf3n sobre el seguimiento de un m\xe9todo, consulte la p\xe1gina ",(0,i.jsx)(n.a,{href:"/docs/es/19/Concepts/error-handling",children:"Gesti\xf3n de errores"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"ejemplo",children:"Ejemplo"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:' CONFIRM("\xbfA\xf1adir un nuevo registro?") CONFIRM("Add a new record?") //The user wants to add a record?\n While(OK=1) //Bucle mientras el usuario quiera\n    ADD RECORD([aTable]) /A\xf1adir un nuevo registro\n End while //El bucle siempre termina con End while\n'})}),"\n",(0,i.jsxs)(n.p,{children:["En este ejemplo, el valor de la variable sistema ",(0,i.jsx)(n.code,{children:"OK"})," es definido por el comando ",(0,i.jsx)(n.code,{children:"CONFIRM"})," antes de que se inicie el bucle. Si el usuario hace clic en el bot\xf3n ",(0,i.jsx)(n.strong,{children:"OK"})," de la caja de di\xe1logo de confirmaci\xf3n, la variable del sistema ",(0,i.jsx)(n.code,{children:"OK"})," toma el valor 1 y se inicia el bucle. En caso contrario, la variable del sistema ",(0,i.jsx)(n.code,{children:"OK"})," toma el valor 0 y se omite el bucle. Una vez se inicia el bucle, el comando ",(0,i.jsx)(n.code,{children:"ADD RECORD"})," permite continuar la ejecuci\xf3n del bucle porque se define la variable sistema ",(0,i.jsx)(n.code,{children:"OK"})," en 1 cuando el usuario guarda el registro. Cuando el usuario cancela (no guarda) el \xfaltimo registro, la variable del sistema ",(0,i.jsx)(n.code,{children:"OK"})," toma el valor 0 y el bucle se detiene."]}),"\n",(0,i.jsx)(n.h2,{id:"repeatuntil",children:"Repeat...Until"}),"\n",(0,i.jsxs)(n.p,{children:["La sintaxis de la estructura condicional ",(0,i.jsx)(n.code,{children:"Repeat...Until"})," es:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:" Repeat\n    statement(s)\n Until(Boolean_Expression)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Un bucle ",(0,i.jsx)(n.code,{children:"Repeat...Until"})," es similar a un bucle ",(0,i.jsx)(n.a,{href:"flow-control#whileend-while",children:"While...End while"}),", excepto que comprueba la expresi\xf3n booleana despu\xe9s del bucle en lugar de antes. As\xed, un bucle ",(0,i.jsx)(n.code,{children:"Repeat...Until"})," siempre ejecuta el bucle una vez, mientras que si la expresi\xf3n booleana es inicialmente False, un bucle ",(0,i.jsx)(n.code,{children:"While...End while"})," no ejecuta el bucle en absoluto."]}),"\n",(0,i.jsxs)(n.p,{children:["La otra diferencia con un bucle ",(0,i.jsx)(n.code,{children:"Repeat...Until"})," es que el bucle contin\xfaa hasta que la expresi\xf3n booleana sea TRUE."]}),"\n",(0,i.jsx)(n.h3,{id:"ejemplo-1",children:"Ejemplo"}),"\n",(0,i.jsxs)(n.p,{children:["Compara el siguiente ejemplo con el ejemplo del bucle ",(0,i.jsx)(n.code,{children:"While...End while"}),". Tenga en cuenta que la expresi\xf3n booleana no necesita ser inicializada-no hay un comando ",(0,i.jsx)(n.code,{children:"CONFIRM"})," para inicializar la variable ",(0,i.jsx)(n.code,{children:"OK"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:" Repeat\n    ADD RECORD([aTable])\n Until(OK=0)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"forend-for",children:"For...End for"}),"\n",(0,i.jsxs)(n.p,{children:["La sintaxis de la estructura condicional ",(0,i.jsx)(n.code,{children:"For...End for"})," es:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:" For(Counter_Variable;Start_Expression;End_Expression{;Increment_Expression})\n    statement(s)\n End for\n"})}),"\n",(0,i.jsxs)(n.p,{children:["El bucle ",(0,i.jsx)(n.code,{children:"For...End for"})," es un bucle controlado por un contador:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["La variable contador ",(0,i.jsx)(n.em,{children:"Counter_Variable"})," es una variable num\xe9rica (Real o Entero largo) inicializada por ",(0,i.jsx)(n.code,{children:"For...End for"})," con el valor especificado por ",(0,i.jsx)(n.em,{children:"Start_Expression"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Cada vez que se ejecuta el bucle, la variable del contador se incrementa en el valor especificado en el valor opcional ",(0,i.jsx)(n.em,{children:"Increment_Expression"}),". Si no se especifica ",(0,i.jsx)(n.em,{children:"Increment_Expression"}),", la variable del contador se incrementa en uno (1), que es el valor predeterminado."]}),"\n",(0,i.jsxs)(n.li,{children:["Cuando la variable del contador pasa el valor ",(0,i.jsx)(n.em,{children:"End_Expression"}),", el bucle se detiene."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Importante:"})," las expresiones num\xe9ricas ",(0,i.jsx)(n.em,{children:"Start_Expression"}),", ",(0,i.jsx)(n.em,{children:"End_Expression"})," y ",(0,i.jsx)(n.em,{children:"Increment_Expression"})," se eval\xfaan una vez al principio del bucle. Si estas expresiones son variables, el cambio de una de estas variables dentro del bucle no afectar\xe1 al bucle."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Consejo:"})," Sin embargo, para fines especiales, puede cambiar el valor de la variable ",(0,i.jsx)(n.em,{children:"Counter_Variable"})," dentro del bucle; esto afectar\xe1 al bucle."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Normalmente ",(0,i.jsx)(n.em,{children:"Start_Expression"})," es menor que ",(0,i.jsx)(n.em,{children:"End_Expression"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Si ",(0,i.jsx)(n.em,{children:"Start_Expression"})," y ",(0,i.jsx)(n.em,{children:"End_Expression"})," son iguales, el bucle se ejecutar\xe1 s\xf3lo una vez."]}),"\n",(0,i.jsxs)(n.li,{children:["Si ",(0,i.jsx)(n.em,{children:"Start_Expression"})," es mayor que ",(0,i.jsx)(n.em,{children:"End_Expression"}),", el bucle no se ejecutar\xe1 en absoluto a menos que se especifique una ",(0,i.jsx)(n.em,{children:"Increment_Expression"})," negativa. Ver los ejemplos."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"ejemplos-b\xe1sicos",children:"Ejemplos b\xe1sicos"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"El siguiente ejemplo ejecuta 100 iteraciones:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:" For(vCounter;1;100)\n  //Hacer algo\n End for\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"El siguiente ejemplo recorre todos los elementos del array anArray:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:" For($vlElem;1;Size of array(anArray))\n  //Hacer algo con el elemento\n    anArray{$vlElem}:=...\n End for\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:"El siguiente ejemplo recorre todos los caracteres del texto vtSomeText:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:" For($vlChar;1;Length(vtSomeText))\n  //Hacer algo con el car\xe1cter si es un TAB\n    If(Character code(vtSomeText[[$vlChar]])=Tab)\n  //...\n    End if\n End for\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsx)(n.li,{children:"El siguiente ejemplo recorre los registros seleccionados para la tabla [aTable]:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:" FIRST RECORD([aTable])\n For($vlRecord;1;Records in selection([aTable]))\n  //Hacer algo con el registro\n    SEND RECORD([aTable])\n  //...\n  //Ir al siguiente registro\n    NEXT RECORD([aTable])\n End for\n"})}),"\n",(0,i.jsxs)(n.p,{children:["La mayor\xeda de los bucles ",(0,i.jsx)(n.code,{children:"For...End for"})," que escribir\xe1 en sus proyectos se parecer\xe1n a los que se presentan en estos ejemplos."]}),"\n",(0,i.jsx)(n.h3,{id:"disminuir-la-variable-contador",children:"Disminuir la variable contador"}),"\n",(0,i.jsxs)(n.p,{children:["En algunos casos, puede querer tener un bucle cuya variable de contador sea decreciente en lugar de creciente. Para ello, debe especificar ",(0,i.jsx)(n.em,{children:"Start_Expression"})," mayor que ",(0,i.jsx)(n.em,{children:"End_Expression"})," y ",(0,i.jsx)(n.em,{children:"Increment_Expression"})," debe ser negativa. Los siguientes ejemplos hacen lo mismo que los anteriores, pero en orden inverso:"]}),"\n",(0,i.jsxs)(n.ol,{start:"5",children:["\n",(0,i.jsx)(n.li,{children:"El siguiente ejemplo ejecuta 100 iteraciones:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:" For(vCounter;100;1;-1)\n  //Hacer algo\n End for\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"6",children:["\n",(0,i.jsx)(n.li,{children:"El siguiente ejemplo recorre todos los elementos del array anArray:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:" For($vlElem;Size of array(anArray);1;-1)\n  //Hacer algo con el elemento\n    anArray{$vlElem}:=...\n End for\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"7",children:["\n",(0,i.jsx)(n.li,{children:"El siguiente ejemplo recorre todos los caracteres del texto vtSomeText:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:" For($vlChar;Length(vtSomeText);1;-1)\n  //Hacer algo con el car\xe1cter si es un TAB\n    If(Character code(vtSomeText[[$vlChar]])=Tab)\n  //...\n    End if\n End for\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"8",children:["\n",(0,i.jsx)(n.li,{children:"El siguiente ejemplo recorre los registros seleccionados para la tabla [aTable]:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:" LAST RECORD([aTable])\n For($vlRecord;1;Records in selection([aTable]))\n  //Hacer algo con el registro\n    SEND RECORD([aTable])\n  //...\n  //Ir al registro anterior\n    PREVIOUS RECORD([aTable])\n End for\n"})}),"\n",(0,i.jsx)(n.h3,{id:"incrementar-la-variable-del-contador-en-m\xe1s-de-uno",children:"Incrementar la variable del contador en m\xe1s de uno"}),"\n",(0,i.jsxs)(n.p,{children:["Si lo requiere, puede utilizar una ",(0,i.jsx)(n.em,{children:"Increment_Expression"})," (positiva o negativa) cuyo valor absoluto sea mayor que uno."]}),"\n",(0,i.jsxs)(n.ol,{start:"9",children:["\n",(0,i.jsx)(n.li,{children:"El siguiente bucle aborda s\xf3lo los elementos pares del array anArray:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:" For($vlElem;2;Size of array(anArray);2)\n  //Hacer algo con el elemento #2,#4...#2n\n    anArray{$vlElem}:=...\n End for\n"})}),"\n",(0,i.jsx)(n.h3,{id:"comparaci\xf3n-de-estructuras-de-bucle",children:"Comparaci\xf3n de estructuras de bucle"}),"\n",(0,i.jsxs)(n.p,{children:["Volvamos al primer ejemplo de ",(0,i.jsx)(n.code,{children:"For...End for"}),". El siguiente ejemplo ejecuta 100 iteraciones:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:" For(vCounter;1;100)\n  //Hacer algo\n End for\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Es interesante ver c\xf3mo el bucle ",(0,i.jsx)(n.code,{children:"While...End while"})," y el bucle ",(0,i.jsx)(n.code,{children:"Repeat...Until"})," realizar\xedan la misma acci\xf3n. Aqu\xed est\xe1 el bucle equivalente ",(0,i.jsx)(n.code,{children:"While...End while"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:" $i:=1 //Inicializar el contador\n While($i<=100) //Bucle 100 veces\n  //Hacer algo\n    $i:=$i+1 //Necesita incrementar el contador\n End while\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Aqu\xed est\xe1 el bucle equivalente ",(0,i.jsx)(n.code,{children:"Repeat...Until"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:" $i:=1 //Inicializar el contador\n Repeat\n  //Hacer algo\n    $i:=$i+1 //Necesita incrementar el contador\n Until($i=100) //Bucle 100 veces\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Consejo:"})," el bucle ",(0,i.jsx)(n.code,{children:"For...End for"})," suele ser m\xe1s r\xe1pido que los bucles ",(0,i.jsx)(n.code,{children:"While...End while"})," y ",(0,i.jsx)(n.code,{children:"Repeat...Until"}),", porque 4D comprueba la condici\xf3n internamente en cada ciclo del bucle e incrementa el contador. Por lo tanto, utilice el bucle ",(0,i.jsx)(n.code,{children:"For...End for"})," siempre que sea posible."]}),"\n",(0,i.jsx)(n.h3,{id:"optimizing-the-execution-of-the-for-end-for-loops",children:"Optimizing the execution of the For... End for loops"}),"\n",(0,i.jsx)(n.p,{children:"Puede utilizar variables reales y enteras, as\xed como contadores interproceso, de proceso y de variables locales. Para bucles repetitivos largos, especialmente en modo compilado, utilice variables locales de tipo Entero largo."}),"\n",(0,i.jsxs)(n.ol,{start:"10",children:["\n",(0,i.jsx)(n.li,{children:"Aqu\xed un ejemplo:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:" C_LONGINT($vlCounter) //Utilizaci\xf3n de variables locales de tipo Entero largo\n For($vlCounter;1;10000)\n  //Hacer algo\n End for\n"})}),"\n",(0,i.jsx)(n.h3,{id:"nested-for-end-for-looping-structures",children:"Nested For... End for looping structures"}),"\n",(0,i.jsxs)(n.p,{children:["Puede anidar tantas estructuras de control como necesite (razonablemente). Esto incluye la anidaci\xf3n de bucles ",(0,i.jsx)(n.code,{children:"For...End for"}),". Para evitar errores, aseg\xfarese de utilizar diferentes variables de contador para cada estructura de bucle."]}),"\n",(0,i.jsx)(n.p,{children:"He aqu\xed dos ejemplos:"}),"\n",(0,i.jsxs)(n.ol,{start:"11",children:["\n",(0,i.jsx)(n.li,{children:"El siguiente ejemplo recorre todos los elementos de un array de dos dimensiones:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:" For($vlElem;1;Size of array(anArray))\n  //...\n  //Hacer algo con la l\xednea\n  //...\n    For($vlSubElem;1;Size of array(anArray{$vlElem}))\n  //Hacer algo con el elemento\n       anArray{$vlElem}{$vlSubElem}:=...\n    End for\n End for\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"12",children:["\n",(0,i.jsx)(n.li,{children:"El siguiente ejemplo construye un array de punteros a todos los campos de fecha presentes en la base:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:" ARRAY POINTER($apDateFields;0)\n $vlElem:=0\n For($vlTable;1;Get last table number)\n    If(Is table number valid($vlTable))\n       For($vlField;1;Get last field number($vlTable))\n          If(Is field number valid($vlTable;$vlField))\n             $vpField:=Field($vlTable;$vlField)\n             If(Type($vpField->)=Is date)\n                $vlElem:=$vlElem+1\n                INSERT IN ARRAY($apDateFields;$vlElem)\n                $apDateFields{$vlElem}:=$vpField\n             End if\n          End if\n       End for\n    End if\n End for\n"})}),"\n",(0,i.jsx)(n.h2,{id:"for-each-end-for-each",children:"For each... End for each"}),"\n",(0,i.jsxs)(n.p,{children:["La sintaxis de la estructura condicional ",(0,i.jsx)(n.code,{children:"For each... End for each"})," es:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:" For each(Current_Item;Expression{;begin{;end}}){Until|While}(Boolean_Expression)}\n    instrucci\xf3n(es)\n End for each\n"})}),"\n",(0,i.jsxs)(n.p,{children:["La estructura ",(0,i.jsx)(n.code,{children:"For each... End for each"})," ejecuta un ",(0,i.jsx)(n.em,{children:"Current_item"})," especificado sobre todos los valores de ",(0,i.jsx)(n.em,{children:"Expression"}),". El tipo ",(0,i.jsx)(n.em,{children:"Current_item"})," depende del tipo ",(0,i.jsx)(n.em,{children:"Expression"}),". El bucle ",(0,i.jsx)(n.code,{children:"For each... End for each"})," puede iterar a trav\xe9s de tres tipos de ",(0,i.jsx)(n.em,{children:"Expression"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"colecciones: bucle en cada elemento de la colecci\xf3n,"}),"\n",(0,i.jsx)(n.li,{children:"selecciones de entidades: bucle en cada entidad,"}),"\n",(0,i.jsx)(n.li,{children:"objetos: bucle en cada propiedad del objeto."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["La siguiente tabla compara los tres tipos de ",(0,i.jsx)(n.code,{children:"For each... End for each"}),":"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{}),(0,i.jsx)(n.th,{children:"Bucle en las colecciones"}),(0,i.jsx)(n.th,{children:"Bucle en las selecciones de entidades"}),(0,i.jsx)(n.th,{children:"Bucle en los objetos"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Tipo Current_Item"}),(0,i.jsx)(n.td,{children:"Variable del mismo tipo que los elementos de la colecci\xf3n"}),(0,i.jsx)(n.td,{children:"Entity"}),(0,i.jsx)(n.td,{children:"Variable texto"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Tipos de expresiones"}),(0,i.jsx)(n.td,{children:"Colecci\xf3n (con elementos del mismo tipo)"}),(0,i.jsx)(n.td,{children:"Entity selection"}),(0,i.jsx)(n.td,{children:"Object"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"N\xfamero de bucles (por defecto)"}),(0,i.jsx)(n.td,{children:"N\xfamero de elementos de la colecci\xf3n"}),(0,i.jsx)(n.td,{children:"N\xfamero de entidades en la selecci\xf3n"}),(0,i.jsx)(n.td,{children:"N\xfamero de propiedades del objeto"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Soporte de par\xe1metros begin / end"}),(0,i.jsx)(n.td,{children:"S\xed"}),(0,i.jsx)(n.td,{children:"S\xed"}),(0,i.jsx)(n.td,{children:"No"})]})]})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"El n\xfamero de bucles se eval\xfaa al inicio y no cambiar\xe1 durante el proceso. La adici\xf3n o eliminaci\xf3n de elementos durante el bucle no suele ser recomendable, ya que puede resultar en redundancia o perdidas de iteraciones."}),"\n",(0,i.jsxs)(n.li,{children:["Por defecto, la(s) ",(0,i.jsx)(n.em,{children:"instrucciones"})," adjuntas se ejecutan para cada valor de ",(0,i.jsx)(n.em,{children:"Expresi\xf3n"}),". Sin embargo, es posible salir del bucle comprobando una condici\xf3n al principio del bucle ( ",(0,i.jsx)(n.code,{children:"While"}),") o al final del bucle (",(0,i.jsx)(n.code,{children:"Until"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:["Los par\xe1metros opcionales ",(0,i.jsx)(n.em,{children:"begin"})," y ",(0,i.jsx)(n.em,{children:"end"})," pueden utilizarse con colecciones y selecciones de entidades para definir los l\xedmites del bucle."]}),"\n",(0,i.jsxs)(n.li,{children:["El bucle ",(0,i.jsx)(n.code,{children:"For each... End for each"})," puede utilizarse en una ",(0,i.jsx)(n.strong,{children:"colecci\xf3n compartida"})," o en un ",(0,i.jsx)(n.strong,{children:"objeto compartido"}),". Si su c\xf3digo necesita modificar uno o m\xe1s elementos de la colecci\xf3n o de las propiedades del objeto, debe utilizar las palabras clave ",(0,i.jsx)(n.code,{children:"Use...End use"}),". Dependiendo de sus necesidades, puede llamar a las palabras clave ",(0,i.jsx)(n.code,{children:"Use...End use"}),":\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"antes de entrar en el bucle, si los elementos deben modificarse juntos por razones de integridad, o"}),"\n",(0,i.jsx)(n.li,{children:"dentro del bucle cuando s\xf3lo hay que modificar algunos elementos/propiedades y no es necesario gestionar la integridad."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"bucle-en-las-colecciones",children:"Bucle en las colecciones"}),"\n",(0,i.jsxs)(n.p,{children:["Cuando ",(0,i.jsx)(n.code,{children:"For each...End for each"})," se utiliza con una ",(0,i.jsx)(n.em,{children:"Expression"})," del tipo ",(0,i.jsx)(n.em,{children:"Collection"}),", el par\xe1metro ",(0,i.jsx)(n.em,{children:"Current_Item"})," es una variable del mismo tipo que los elementos de la colecci\xf3n. El n\xfamero de bucles se basa en el n\xfamero de elementos de la colecci\xf3n."]}),"\n",(0,i.jsxs)(n.p,{children:["La colecci\xf3n debe contener s\xf3lo elementos del mismo tipo, de lo contrario se devolver\xe1 un error en cuanto a la variable ",(0,i.jsx)(n.em,{children:"Current_Item"})," se le asigne el primer tipo de valor diferente."]}),"\n",(0,i.jsxs)(n.p,{children:["En cada iteraci\xf3n del bucle, la variable ",(0,i.jsx)(n.em,{children:"Current_Item"})," se llena autom\xe1ticamente con el elemento correspondiente de la colecci\xf3n. Hay que tener en cuenta los siguientes puntos:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Si la variable ",(0,i.jsx)(n.em,{children:"Current_Item"})," es de tipo objeto o de tipo colecci\xf3n (es decir, si ",(0,i.jsx)(n.em,{children:"Expresi\xf3n"})," es una colecci\xf3n de objetos o de colecciones), al modificar esta variable se modificar\xe1 autom\xe1ticamente el elemento coincidente de la colecci\xf3n (porque los objetos y las colecciones comparten las mismas referencias). Si la variable es de tipo escalar, s\xf3lo se modificar\xe1 la variable."]}),"\n",(0,i.jsxs)(n.li,{children:["La variable ",(0,i.jsx)(n.em,{children:"Current_Item"})," debe ser del mismo tipo que los elementos de la colecci\xf3n. Si alg\xfan elemento de la colecci\xf3n no es del mismo tipo que la variable, se genera un error y el bucle se detiene."]}),"\n",(0,i.jsxs)(n.li,{children:["Si la colecci\xf3n contiene elementos con un valor ",(0,i.jsx)(n.strong,{children:"Null"}),", se generar\xe1 un error si el tipo de variable ",(0,i.jsx)(n.em,{children:"Current_Item"})," no soporta valores ",(0,i.jsx)(n.strong,{children:"Null"})," (como las variables de tipo entero largo)."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"ejemplo-2",children:"Ejemplo"}),"\n",(0,i.jsx)(n.p,{children:"Usted quiere calcular algunas estad\xedsticas para una colecci\xf3n de n\xfameros:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:" C_COLLECTION($nums)\n $nums:=New collection(10;5001;6665;33;1;42;7850)\n C_LONGINT($item;$vEven;$vOdd;$vUnder;$vOver)\n For each($item;$nums)\n    If($item%2=0)\n       $vEven:=$vEven+1\n    Else\n       $vOdd:=$vOdd+1\n    End if\n    Case of\n       :($item<5000)\n          $vUnder:=$vUnder+1\n       :($item>6000)\n          $vOver:=$vOver+1\n    End case\n End for each\n  //$vEven=3, $vOdd=4\n  //$vUnder=4,$vOver=2\n"})}),"\n",(0,i.jsx)(n.h3,{id:"bucle-en-las-selecciones-de-entidades",children:"Bucle en las selecciones de entidades"}),"\n",(0,i.jsxs)(n.p,{children:["Cuando ",(0,i.jsx)(n.code,{children:"For each... End for each"})," se utiliza con una ",(0,i.jsx)(n.em,{children:"Expression"})," del tipo ",(0,i.jsx)(n.em,{children:"Collection"}),", el par\xe1metro ",(0,i.jsx)(n.em,{children:"Current_Item"})," es una variable del mismo tipo que los elementos de la colecci\xf3n."]}),"\n",(0,i.jsxs)(n.p,{children:["El n\xfamero de bucles se basa en el n\xfamero de entidades de la selecci\xf3n de entidades. En cada iteraci\xf3n del bucle, el par\xe1metro ",(0,i.jsx)(n.em,{children:"Current_Item"})," se llena autom\xe1ticamente con la entidad de la selecci\xf3n de entidades que se procesa actualmente."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Nota:"})," si la selecci\xf3n de entidades contiene una entidad que fue eliminada mientras tanto por otro proceso, se salta autom\xe1ticamente durante el bucle."]}),"\n",(0,i.jsxs)(n.p,{children:["Tenga en cuenta que cualquier modificaci\xf3n aplicada en la entidad actual debe ser guardada expl\xedcitamente utilizando ",(0,i.jsx)(n.code,{children:"entity.save( )"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"ejemplo-3",children:"Ejemplo"}),"\n",(0,i.jsx)(n.p,{children:"Quiere aumentar el salario de todos los empleados brit\xe1nicos en una selecci\xf3n de entidades:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:" C_OBJECT(emp)\n For each(emp;ds.Employees.query(\"country='UK'\"))\n    emp.salary:=emp.salary*1,03\n    emp.save()\n End for each\n"})}),"\n",(0,i.jsx)(n.h3,{id:"bucles-en-las-propiedades-de-objetos",children:"Bucles en las propiedades de objetos"}),"\n",(0,i.jsxs)(n.p,{children:["Cuando se utiliza ",(0,i.jsx)(n.code,{children:"For each... End for each"})," con una ",(0,i.jsx)(n.em,{children:"Expression"})," de tipo Object, el par\xe1metro ",(0,i.jsx)(n.em,{children:"Current_Item"})," es una variable texto que se llena autom\xe1ticamente con el nombre de la propiedad actualmente procesada."]}),"\n",(0,i.jsx)(n.p,{children:"Las propiedades del objeto se procesan de acuerdo con su orden de creaci\xf3n. Durante el bucle, se pueden a\xf1adir o eliminar propiedades en el objeto, sin modificar el n\xfamero de bucles que quedar\xe1n en funci\xf3n del n\xfamero original de propiedades del objeto."}),"\n",(0,i.jsx)(n.h4,{id:"ejemplo-4",children:"Ejemplo"}),"\n",(0,i.jsx)(n.p,{children:"Quiere pasar los nombres a may\xfasculas en el siguiente objeto:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:'{\n    "firstname": "gregory",\n    "lastname": "badikora",\n    "age": 20\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Puede escribir:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:" For each(property;vObject)\n    If(Value type(vObject[property])=Is text)\n       vObject[property]:=Uppercase(vObject[property])\n    End if\n End for each\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'{\n    "firstname": "GREGORY",\n    "lastname": "BADIKORA",\n    "age": 20\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"par\xe1metros-begin--end",children:"Par\xe1metros begin / end"}),"\n",(0,i.jsx)(n.p,{children:"Puede definir los l\xedmites de la iteraci\xf3n utilizando los par\xe1metros opcionales inicio y fin."}),"\n",(0,i.jsxs)(n.p,{children:["**Nota:**los par\xe1metros ",(0,i.jsx)(n.em,{children:"inicio"})," y ",(0,i.jsx)(n.em,{children:"fin"})," s\xf3lo pueden utilizarse en iteraciones a trav\xe9s de colecciones y selecciones de entidades (se ignoran en las propiedades de objetos)."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["En el par\xe1metro ",(0,i.jsx)(n.em,{children:"begin"}),", pase la posici\xf3n del elemento en ",(0,i.jsx)(n.em,{children:"Expression"})," en la que se iniciar\xe1 la iteraci\xf3n (se incluye ",(0,i.jsx)(n.em,{children:"begin"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:["En el par\xe1metro ",(0,i.jsx)(n.em,{children:"end"}),", tambi\xe9n se puede pasar la posici\xf3n del elemento en ",(0,i.jsx)(n.em,{children:"Expression"})," en la que se debe detener la iteraci\xf3n (se excluye ",(0,i.jsx)(n.em,{children:"end"}),")."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Si se omite ",(0,i.jsx)(n.em,{children:"fin"})," o si ",(0,i.jsx)(n.em,{children:"fin"}),"es mayor que el n\xfamero de elementos de ",(0,i.jsx)(n.em,{children:"Expression"}),", se iteran los elementos desde ",(0,i.jsx)(n.em,{children:"inicio"})," hasta el \xfaltimo (incluido). Si los par\xe1metros ",(0,i.jsx)(n.em,{children:"inicio"})," y ",(0,i.jsx)(n.em,{children:"fin"})," son valores positivos, representan posiciones reales de elementos en ",(0,i.jsx)(n.em,{children:"Expression"}),". Si ",(0,i.jsx)(n.em,{children:"comienzo"})," es un valor negativo, se recalcula como ",(0,i.jsx)(n.code,{children:"comienzo:=comienzo+tama\xf1o de la expresi\xf3n"})," (se considera como el desplazamiento desde el final de ",(0,i.jsx)(n.em,{children:"Expression"}),"). Si el valor calculado es negativo, ",(0,i.jsx)(n.em,{children:"inicio"})," toma el valor 0. ",(0,i.jsx)(n.strong,{children:"Nota:"})," aunque inicio sea negativo, la iteraci\xf3n se sigue realizando en el orden est\xe1ndar. Si ",(0,i.jsx)(n.em,{children:"fin"})," es un valor negativo, se recalcula como ",(0,i.jsx)(n.code,{children:"fin:=fin+tama\xf1o de la expresi\xf3n"})]}),"\n",(0,i.jsx)(n.p,{children:"Por ejemplo:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"una colecci\xf3n contiene 10 elementos (numerados de 0 a 9)"}),"\n",(0,i.jsx)(n.li,{children:"begin=-4 > -> begin=-4+10=6 >-> la iteraci\xf3n comienza en el sexto elemento (#5)"}),"\n",(0,i.jsx)(n.li,{children:"end=-2 -> end=-2+10=8 -> la iteraci\xf3n se detiene antes del 8\xba elemento (#7), es decir, en el 7\xba elemento."}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"ejemplo-5",children:"Ejemplo"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:' C_COLLECTION($col;$col2)\n $col:=New collection("a";"b";"c";"d";"e")\n $col2:=New collection(1;2;3)\n C_TEXT($item)\n For each($item;$col;0;3)\n    $col2.push($item)\n End for each\n  //$col2=[1,2,3,"a","b","c"]\n For each($item;$col;-2;-1)\n    $col2.push($item)\n End for each\n  //$col2=[1,2,3,"a","b","c","d"]\n'})}),"\n",(0,i.jsx)(n.h3,{id:"condiciones-until-y-while",children:"Condiciones Until y While"}),"\n",(0,i.jsxs)(n.p,{children:["Puede controlar la ejecuci\xf3n de ",(0,i.jsx)(n.code,{children:"For each... End for each"})," a\xf1adiendo una condici\xf3n ",(0,i.jsx)(n.code,{children:"Until"})," o una condici\xf3n ",(0,i.jsx)(n.code,{children:"While"})," al bucle. Cuando una instrucci\xf3n ",(0,i.jsx)(n.code,{children:"Until(condici\xf3n)"})," est\xe1 asociada al bucle, la iteraci\xf3n se detendr\xe1 tan pronto como la condici\xf3n se eval\xfae como ",(0,i.jsx)(n.code,{children:"True"}),", mientras que cuando se trata de una instrucci\xf3n ",(0,i.jsx)(n.code,{children:"While(condici\xf3n)"}),", la iteraci\xf3n se detendr\xe1 cuando la condici\xf3n se eval\xfae por primera vez como ",(0,i.jsx)(n.code,{children:"False"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Puede pasar cualquiera de las dos palabras clave en funci\xf3n de sus necesidades:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["La condici\xf3n ",(0,i.jsx)(n.code,{children:"Until"})," se comprueba al final de cada iteraci\xf3n, por lo que si ",(0,i.jsx)(n.em,{children:"Expression"})," no est\xe1 vac\xeda o es nula, el bucle se ejecutar\xe1 al menos una vez."]}),"\n",(0,i.jsxs)(n.li,{children:["La condici\xf3n ",(0,i.jsx)(n.code,{children:"While"})," se prueba al principio de cada iteraci\xf3n, por lo que seg\xfan el resultado de la condici\xf3n, el bucle puede no ejecutarse en absoluto."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"ejemplo-6",children:"Ejemplo"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4d",children:" $colNum:=New collection(1;2;3;4;5;6;7;8;9;10)\n\n $total:=0\n For each($num;$colNum)While($total<30) //probada al inicio\n    $total:=$total+$num\n End for each\n ALERT(String($total)) //$total = 36 (1+2+3+4+5+6+7+8)\n\n $total:=1000\n For each($num;$colNum)Until($total>30) //probada al final\n    $total:=$total+$num\n End for each\n ALERT(String($total)) //$total = 1001 (1000+1)\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}},221020:(e,n,l)=>{var i=l(296540),r=Symbol.for("react.element"),s=Symbol.for("react.fragment"),a=Object.prototype.hasOwnProperty,o=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function d(e,n,l){var i,s={},d=null,t=null;for(i in void 0!==l&&(d=""+l),void 0!==n.key&&(d=""+n.key),void 0!==n.ref&&(t=n.ref),n)a.call(n,i)&&!c.hasOwnProperty(i)&&(s[i]=n[i]);if(e&&e.defaultProps)for(i in n=e.defaultProps)void 0===s[i]&&(s[i]=n[i]);return{$$typeof:r,type:e,key:d,ref:t,props:s,_owner:o.current}}n.Fragment=s,n.jsx=d,n.jsxs=d},474848:(e,n,l)=>{e.exports=l(221020)},28453:(e,n,l)=>{l.d(n,{R:()=>a,x:()=>o});var i=l(296540);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);