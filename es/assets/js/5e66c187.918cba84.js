"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[70624],{603905:(e,a,t)=>{t.d(a,{Zo:()=>p,kt:()=>m});var r=t(667294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var u=r.createContext({}),i=function(e){var a=r.useContext(u),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},p=function(e){var a=i(e.components);return r.createElement(u.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},d=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,u=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=i(t),m=n,y=d["".concat(u,".").concat(m)]||d[m]||c[m]||o;return t?r.createElement(y,l(l({ref:a},p),{},{components:t})):r.createElement(y,l({ref:a},p))}));function m(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,l=new Array(o);l[0]=d;var s={};for(var u in a)hasOwnProperty.call(a,u)&&(s[u]=a[u]);s.originalType=e,s.mdxType="string"==typeof e?e:n,l[1]=s;for(var i=2;i<o;i++)l[i]=t[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},64202:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>u,toc:()=>p});t(667294);var r=t(603905);function n(){return n=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},n.apply(this,arguments)}function o(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}const l={id:"pointer",title:"Puntero"},s=void 0,u={unversionedId:"Concepts/pointer",id:"version-20-R5/Concepts/pointer",title:"Puntero",description:"Una variable o expresi\xf3n puntero es una referencia a otra variable (incluyendo arrays y elementos de arrays), tabla, campo u objeto. No hay ning\xfan campo de tipo Puntero.",source:"@site/i18n/es/docusaurus-plugin-content-docs/version-20-R5/Concepts/dt_pointer.md",sourceDirName:"Concepts",slug:"/Concepts/pointer",permalink:"/docs/es/Concepts/pointer",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20Concepts%2Fdt_pointer.md%20(20-R5)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R5",frontMatter:{id:"pointer",title:"Puntero"},sidebar:"docs",previous:{title:"Picture",permalink:"/docs/es/Concepts/picture"},next:{title:"String",permalink:"/docs/es/Concepts/string"}},i={},p=[{value:"Utilizar punteros: ejemplo b\xe1sico",id:"utilizar-punteros-ejemplo-b\xe1sico",level:2},{value:"Operadores en punteros",id:"operadores-en-punteros",level:2},{value:"Principales usos",id:"principales-usos",level:2},{value:"Punteros a tablas",id:"punteros-a-tablas",level:3},{value:"Punteros a campos",id:"punteros-a-campos",level:3},{value:"Punteros a variables locales",id:"punteros-a-variables-locales",level:3},{value:"Punteros a elementos del array",id:"punteros-a-elementos-del-array",level:3},{value:"Punteros a arrays",id:"punteros-a-arrays",level:3},{value:"Punteros como par\xe1metros a los m\xe9todos",id:"punteros-como-par\xe1metros-a-los-m\xe9todos",level:3},{value:"Punteros a punteros",id:"punteros-a-punteros",level:3}],c={toc:p};function d(e){var{components:a}=e,t=o(e,["components"]);return(0,r.kt)("wrapper",n({},c,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Una variable o expresi\xf3n puntero es una referencia a otra variable (incluyendo arrays y elementos de arrays), tabla, campo u objeto. No hay ning\xfan campo de tipo Puntero."),(0,r.kt)("p",null,"Los punteros ofrecen una forma avanzada (en programaci\xf3n) de referirse a los datos. Cuando se utiliza el lenguaje, se accede a varios objetos -en particular, tablas, campos, variables, objetos y arrays- simplemente utilizando sus nombres. Sin embargo, con frecuencia es \xfatil referirse a estos elementos y acceder a ellos sin conocer sus nombres. Esto es lo que los punteros le permiten hacer."),(0,r.kt)("p",null,'El concepto de los punteros no es tan raro en la vida cotidiana. A menudo se hace referencia a algo sin conocer su identidad exacta. Por ejemplo, puede decirle a un amigo: "Vamos a dar una vuelta en tu coche" en lugar de "Vamos a dar una vuelta en el coche con matr\xedcula 123ABD." En este caso, se refiere al coche con matr\xedcula 123ABD utilizando la frase " tu coche." La frase "coche con matr\xedcula 123ABD" es como el nombre de un objeto, y usar la frase "tu coche" es como usar un puntero para referenciar el objeto.'),(0,r.kt)("p",null,'Poder referirse a algo sin conocer su identidad exacta es muy \xfatil. De hecho, su amigo podr\xeda comprarse un coche nuevo, y la frase " tu coche" seguir\xeda siendo correcta: seguir\xeda siendo un coche y usted podr\xeda seguir dando un paseo en \xe9l. Los punteros funcionan de la misma manera. Por ejemplo, un puntero podr\xeda referirse en un momento dado a un campo num\xe9rico llamado Edad, y m\xe1s tarde referirse a una variable num\xe9rica llamada Vejez. En ambos casos, el puntero hace referencia a datos num\xe9ricos que podr\xedan utilizarse en un c\xe1lculo.'),(0,r.kt)("p",null,"Puede utilizar punteros para referenciar tablas, campos, variables, arrays, elementos de arrays y objetos. La siguiente tabla ofrece un ejemplo de cada tipo de datos:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Tipo"),(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Referenciaci\xf3n"),(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Uso"),(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Asignaci\xf3n"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Tabla"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"vpTable:=->","[Table]"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"DEFAULT TABLE(vpTable->)"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"n/a")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Campo"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"vpField:=->","[Table]","Field"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"ALERT(vpField->)"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),'vpField->:="John"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Variable"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"vpVar:=->Variable"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"ALERT(vpVar->)"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),'vpVar->:="John"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Array"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"vpArr:=->Array"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"SORT ARRAY(vpArr->;>)"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"COPY ARRAY (Arr;vpArr->)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null}),"array"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"vpElem:=->Array{1}"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"ALERT (vpElem->)"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),'vpElem->:="John"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Object"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"vpObj:=->myObject"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"ALERT (vpObj->myProp)"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),'vpObj->myProp:="John"')))),(0,r.kt)("h2",n({},{id:"utilizar-punteros-ejemplo-b\xe1sico"}),"Utilizar punteros: ejemplo b\xe1sico"),(0,r.kt)("p",null,"Lo m\xe1s f\xe1cil es explicar el uso de los punteros mediante un ejemplo. Este ejemplo muestra c\xf3mo acceder a una variable a trav\xe9s de un puntero. Comenzamos creando una variable:"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),'$MyVar:="Hello"\n')),(0,r.kt)("p",null,"$MyVar es ahora una variable que contiene la cadena \u201cHello.\u201d Ahora podemos crear un puntero a $MyVar:"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"C_POINTER($MyPointer)  \n$MyPointer:=->$MyVar\n")),(0,r.kt)("p",null,'The -> symbol means \u201cget a pointer to.\u201d Este s\xedmbolo est\xe1 formado por un gui\xf3n seguido de un signo "mayor que". En este caso, obtiene el puntero que hace referencia o "apunta" a $MyVar. Este puntero se asigna a MyPointer con el operador de asignaci\xf3n.'),(0,r.kt)("p",null,'$MyPointer es ahora una variable que contiene un puntero a $MyVar. $MyPointer no contiene " Hello ", que es el valor en $MyVar, pero se puede utilizar $MyPointer para obtener este valor. La siguiente expresi\xf3n devuelve el valor de $MyVar:'),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"$MyPointer->\n")),(0,r.kt)("p",null,'En este caso, devuelve la cadena "Hello". The -> symbol, when it follows a pointer, references the object pointed to. Esto se llama desreferenciaci\xf3n.'),(0,r.kt)("p",null,"It is important to understand that you can use a pointer followed by the -> symbol anywhere that you could have used the object that the pointer points to. This means that you could use the expression $MyPointer-> anywhere that you could use the original $MyVar variable. Por ejemplo, la siguiente l\xednea muestra un cuadro de alerta con la palabra Hello:"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"ALERT($MyPointer->)\n")),(0,r.kt)("p",null,'Tambi\xe9n puede utilizar $MyPointer para cambiar los datos en $MyVar. Por ejemplo, la siguiente instrucci\xf3n almacena la cadena "Goodbye" en la variable $MyVar:'),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),'$MyPointer->:="Goodbye"\n')),(0,r.kt)("p",null,"If you examine the two uses of the expression $MyPointer->, you will see that it acts just as if you had used $MyVar instead. En resumen, las dos l\xedneas siguientes realizan la misma acci\xf3n: ambas muestran un cuadro de alerta con el valor actual de la variable $MyVar:"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"ALERT($MyPointer->)\nALERT($MyVar)\n")),(0,r.kt)("p",null,'Las siguientes dos l\xedneas realizan la misma acci\xf3n - ambas asignan la cadena "Goodbye" a $MyVar:'),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),'$MyPointer->:="Goodbye"\n$MyVar:="Goodbye"\n')),(0,r.kt)("h2",n({},{id:"operadores-en-punteros"}),"Operadores en punteros"),(0,r.kt)("p",null,"Con:"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"  ` vPtrA and vPtrB point to the same object\n vPtrA:=->anObject\n vPtrB:=->anObject\n  ` vPtrC points to another object\n vPtrC:=->anotherObject\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Operaci\xf3n"),(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Sintaxis"),(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Devuelve"),(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Expression"),(0,r.kt)("th",n({parentName:"tr"},{align:null}),"Valor"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Igual"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Puntero = Puntero"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"Boolean"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"vPtrA = vPtrB"),(0,r.kt)("td",n({parentName:"tr"},{align:null}),"True")))),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{}),"    |   |||vPtrA = vPtrC    |False|\n")),(0,r.kt)("p",null,"|Inequality\t|Pointer # Pointer\t|Boolean\t|vPtrA # vPtrC\t|True|\n||||\t\t\tvPtrA # vPtrB\t|False|"),(0,r.kt)("h2",n({},{id:"principales-usos"}),"Principales usos"),(0,r.kt)("h3",n({},{id:"punteros-a-tablas"}),"Punteros a tablas"),(0,r.kt)("p",null,"En cualquier lugar en el que el lenguaje espere ver una tabla, se puede utilizar un puntero desreferenciado a la tabla. Se crea un puntero a una tabla utilizando una l\xednea de instrucci\xf3n como esta:"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"$TablePtr:=->[anyTable]\n")),(0,r.kt)("p",null,"You can also get a pointer to a table by using the ",(0,r.kt)("inlineCode",{parentName:"p"},"Table")," command:"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"$TablePtr:=Table(20)\n")),(0,r.kt)("p",null,"Puedes utilizar el puntero desreferenciado en los comandos, as\xed:"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"DEFAULT TABLE($TablePtr->)\n")),(0,r.kt)("h3",n({},{id:"punteros-a-campos"}),"Punteros a campos"),(0,r.kt)("p",null,"En cualquier lugar en el que el lenguaje espere ver un campo, se puede utilizar un puntero desreferenciado para referenciar el campo. Se crea un puntero a un campo utilizando una l\xednea de instrucci\xf3n como esta:"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"$FieldPtr:=->[aTable]ThisField\n")),(0,r.kt)("p",null,"You can also get a pointer to a field by using the ",(0,r.kt)("inlineCode",{parentName:"p"},"Field")," command, for example:"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"$FieldPtr:=Field(1;2)\n")),(0,r.kt)("p",null,"Puedes utilizar el puntero desreferenciado en los comandos, as\xed:"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),'OBJECT SET FONT($FieldPtr->;"Arial")\n')),(0,r.kt)("h3",n({},{id:"punteros-a-variables-locales"}),"Punteros a variables locales"),(0,r.kt)("p",null,"Cuando se utilizan punteros a variables de proceso o locales, hay que asegurarse de que la variable a la que se apunta ya est\xe1 definida cuando se utilice el puntero. Tenga en cuenta que las variables locales se borran cuando el m\xe9todo que las cre\xf3 ha terminado su ejecuci\xf3n y las variables de proceso se borran al final del proceso que las cre\xf3. Cuando un puntero llama a una variable que ya no existe, esto provoca un error de sintaxis en modo interpretado (variable no definida) pero puede generar un error m\xe1s grave en modo compilado."),(0,r.kt)("p",null,"Los punteros a variables locales permiten guardar las variables del proceso en muchos casos. Los punteros a variables locales s\xf3lo pueden utilizarse dentro del mismo proceso. En el depurador, cuando se muestra un puntero a una variable local que ha sido declarada en otro m\xe9todo, el nombre del m\xe9todo original se indica entre par\xe9ntesis, despu\xe9s del puntero. Por ejemplo, si se escribe en Method1:"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),' $MyVar:="Hello world"\n Method2(->$MyVar)\n')),(0,r.kt)("p",null,"En Method2, el depurador mostrar\xe1 $1 de la siguiente manera:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",n({parentName:"tr"},{align:null}),"$1"),(0,r.kt)("th",n({parentName:"tr"},{align:null}),"->$MyVar (Method1)")))),(0,r.kt)("p",null,"El valor de 1 d\xf3lar ser\xe1:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",n({parentName:"tr"},{align:null}),"$MyVar (Method1)"),(0,r.kt)("th",n({parentName:"tr"},{align:null}),'"Hello world"')))),(0,r.kt)("h3",n({},{id:"punteros-a-elementos-del-array"}),"Punteros a elementos del array"),(0,r.kt)("p",null,"Puede crear un puntero a un elemento del array. Por ejemplo, las siguientes l\xedneas crean un array y asignan un puntero al primer elemento del array a una variable llamada $ElemPtr:"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"ARRAY REAL($anArray;10) //Create an array\n$ElemPtr:=->$anArray{1} //Create a pointer to the array element\n")),(0,r.kt)("p",null,"Puede utilizar el puntero desreferenciado para asignar un valor al elemento, as\xed:"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"$ElemPtr->:=8\n")),(0,r.kt)("h3",n({},{id:"punteros-a-arrays"}),"Punteros a arrays"),(0,r.kt)("p",null,"Puede crear un puntero a un array. Por ejemplo, las siguientes l\xedneas crean un array y asignan un puntero al array a una variable llamada $ArrPtr:"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"ARRAY REAL($anArray;10) //Create an array\n$ArrPtr:=->$anArray //Create a pointer to the array\n")),(0,r.kt)("p",null,"Es importante entender que el puntero apunta al array; no apunta a un elemento del array. Por ejemplo, puede utilizar el puntero desreferenciado de las l\xedneas anteriores de esta manera:"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"SORT ARRAY($ArrPtr->;>) //Sort the array\n")),(0,r.kt)("p",null,"Si debe referirse al cuarto elemento del array utilizando el puntero, haga lo siguiente:"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"})," ArrPtr->{4}:=84\n")),(0,r.kt)("h3",n({},{id:"punteros-como-par\xe1metros-a-los-m\xe9todos"}),"Punteros como par\xe1metros a los m\xe9todos"),(0,r.kt)("p",null,"Puede pasar un puntero como par\xe1metro de un m\xe9todo. Dentro del m\xe9todo, puede modificar el objeto referenciado por el puntero. For example, the following method, ",(0,r.kt)("inlineCode",{parentName:"p"},"takeTwo"),", takes two parameters that are pointers. Cambia el objeto referenciado por el primer par\xe1metro a caracteres en may\xfasculas, y el objeto referenciado por el segundo par\xe1metro a caracteres en min\xfasculas. Este es el m\xe9todo del proyecto:"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"  //takeTwo project method\n  //$1 \u2013 Pointer to a string field or variable. Change this to uppercase.\n  //$2 \u2013 Pointer to a string field or variable. Change this to lowercase.\n $1->:=Uppercase($1->)\n $2->:=Lowercase($2->)\n")),(0,r.kt)("p",null,"The following line uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"takeTwo")," method to change a field to uppercase characters and to change a variable to lowercase characters:"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{}),"takeTwo(->[myTable]myField;->$MyVar)\n")),(0,r.kt)("p",null,"Si el campo ","[myTable]",'myField conten\xeda la cadena "jones", se cambiar\xeda por la cadena "JONES". Si la variable $MyVar conten\xeda la cadena "HELLO", se cambiar\xeda por la cadena "hello".'),(0,r.kt)("p",null,"En el m\xe9todo takeTwo, y de hecho, siempre que se utilicen punteros, es importante que el tipo de datos del objeto al que se hace referencia sea correcto. En el ejemplo anterior, los punteros deben apuntar a algo que contenga una cadena o texto."),(0,r.kt)("h3",n({},{id:"punteros-a-punteros"}),"Punteros a punteros"),(0,r.kt)("p",null,"Si realmente le gusta complicar las cosas, puede utilizar punteros para referenciar otros punteros. Considere este ejemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),' $MyVar:="Hello"\n $PointerOne:=->$MyVar\n $PointerTwo:=->$PointerOne\n ($PointerTwo->)->:="Goodbye"\n ALERT(($PointerTwo->)->)\n')),(0,r.kt)("p",null,'Muestra un cuadro de alerta con la palabra "Goodbye".'),(0,r.kt)("p",null,"A continuaci\xf3n se explica cada l\xednea del ejemplo:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'$MyVar:="Hello"\n',"-",'-> This line puts the string "Hello" into the variable $MyVar.'),(0,r.kt)("li",{parentName:"ul"},"$PointerOne:=->$MyVar\n","-","-> $PointerOne now contains a pointer to $MyVar."),(0,r.kt)("li",{parentName:"ul"},"$PointerTwo:=->$PointerOne\n","-","-> $PointerTwo (a new variable) contains a pointer to $PointerOne, which in turn points to $MyVar."),(0,r.kt)("li",{parentName:"ul"},'($PointerTwo->)->:="Goodbye"\n',"-",'-> $PointerTwo-> references the contents of $PointerOne, which in turn references $MyVar. Therefore ($PointerTwo->)-> references the contents of $MyVar. As\xed que en este caso, a $MyVar se le asigna "Goodbye".'),(0,r.kt)("li",{parentName:"ul"},"ALERT (($PointerTwo->)->)\n","-","-> Same thing: $PointerTwo-> references the contents of $PointerOne, which in turn references $MyVar. Therefore ($PointerTwo->)-> references the contents of $MyVar. Therefore ($PointerTwo->)-> references the contents of $MyVar.")),(0,r.kt)("p",null,'La siguiente l\xednea pone "Hello" en $MyVar:'),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{className:"language-4d"}),'($PointerTwo->)->:="Hello"\n')),(0,r.kt)("p",null,'La siguiente l\xednea obtiene "Hello de $MyVar y lo pone en $NewVar:'),(0,r.kt)("pre",null,(0,r.kt)("code",n({parentName:"pre"},{}),"$NewVar:=($PointerTwo->)->\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Important:")," Multiple dereferencing requires parentheses."))}d.isMDXComponent=!0}}]);