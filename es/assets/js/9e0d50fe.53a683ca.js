"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["47376"],{716249:function(e,n,a){a.r(n),a.d(n,{frontMatter:()=>i,default:()=>m,toc:()=>c,metadata:()=>r,assets:()=>o,contentTitle:()=>d});var r=JSON.parse('{"id":"commands-legacy/dom-parse-xml-variable","title":"DOM Parse XML variable","description":"DOM Parse XML variable ( variable {; validacion {; dtd | esquema}} ) : Text","source":"@site/i18n/es/docusaurus-plugin-content-docs/version-20-R9/commands-legacy/dom-parse-xml-variable.md","sourceDirName":"commands-legacy","slug":"/commands/dom-parse-xml-variable","permalink":"/docs/es/20-R9/commands/dom-parse-xml-variable","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fdom-parse-xml-variable.md%20(20-R9)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"20-R9","frontMatter":{"id":"dom-parse-xml-variable","title":"DOM Parse XML variable","slug":"/commands/dom-parse-xml-variable","displayed_sidebar":"docs"},"sidebar":"docs","previous":{"title":"DOM Parse XML source","permalink":"/docs/es/20-R9/commands/dom-parse-xml-source"},"next":{"title":"DOM REMOVE XML ATTRIBUTE","permalink":"/docs/es/20-R9/commands/dom-remove-xml-attribute"}}'),s=a(785893),l=a(250065);let i={id:"dom-parse-xml-variable",title:"DOM Parse XML variable",slug:"/commands/dom-parse-xml-variable",displayed_sidebar:"docs"},d=void 0,o={},c=[{value:"Descripci\xf3n",id:"descripci\xf3n",level:2},{value:"Ejemplo 1",id:"ejemplo-1",level:2},{value:"Ejemplo 2",id:"ejemplo-2",level:2},{value:"Variables y conjuntos del sistema",id:"variables-y-conjuntos-del-sistema",level:2},{value:"Ver tambi\xe9n",id:"ver-tambi\xe9n",level:2},{value:"Propiedades",id:"propiedades",level:2}];function t(e){let n={a:"a",br:"br",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"DOM Parse XML variable"})," ( ",(0,s.jsx)(n.em,{children:"variable"})," {; ",(0,s.jsx)(n.em,{children:"validacion"})," {; dtd | esquema}} ) : Text"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Par\xe1metro"}),(0,s.jsx)(n.th,{children:"Tipo"}),(0,s.jsx)(n.th,{}),(0,s.jsx)(n.th,{children:"Descripci\xf3n"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"variable"}),(0,s.jsx)(n.td,{children:"Blob, Text"}),(0,s.jsx)(n.td,{children:"\u2192"}),(0,s.jsx)(n.td,{children:"Nombre de la variable"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"validacion"}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:"\u2192"}),(0,s.jsx)(n.td,{children:"True = Validaci\xf3n por la DTD, False = No validacion"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"dtd | esquema"}),(0,s.jsx)(n.td,{children:"Cadena"}),(0,s.jsx)(n.td,{children:"\u2192"}),(0,s.jsx)(n.td,{children:"Ubicaci\xf3n de la DTD o del esquema XML"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Resultado"}),(0,s.jsx)(n.td,{children:"Text"}),(0,s.jsx)(n.td,{children:"\u2190"}),(0,s.jsx)(n.td,{children:"Referencia del elemento XML"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"descripci\xf3n",children:"Descripci\xf3n"}),"\n",(0,s.jsx)(n.p,{children:"El comando DOM Parse XML variable analiza una variable de tipo BLOB o Texto que contiene una estructura XML y devuelve una referencia para esta variable. El comando puede validar o no la estructura v\xeda un DTD o un esquema XML (XML Schema Definition (XSD) document)."}),"\n",(0,s.jsxs)(n.p,{children:["Pase en el par\xe1metro ",(0,s.jsx)(n.em,{children:"variable"})," el nombre de la variable BLOB o el Texto que contiene el objeto XML."]}),"\n",(0,s.jsxs)(n.p,{children:["El par\xe1metro booleano ",(0,s.jsx)(n.em,{children:"validacion"})," permite indicar si validar o no la estructura utilizando la DTD."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Si ",(0,s.jsx)(n.em,{children:"validacion"})," es igual a True, la estructura se validar\xe1. En este caso, el analizador intentar\xe1 validar la estructura XML del documento basado en la referencia DTD o XSD incluida en el documento, o v\xeda la DTD o el esquema XML designado por el tercer par\xe1metro si se pasa."]}),"\n",(0,s.jsxs)(n.li,{children:["Si ",(0,s.jsx)(n.em,{children:"validacion"})," es igual a False, la estructura no se validar\xe1."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Si pasa True en ",(0,s.jsx)(n.em,{children:"validacion"})," y omite el tercer par\xe1metro, el comando intentar\xe1 validar la estructura XML v\xeda una referencia DTD o XSD que se encuentra en la estructura misma. La validaci\xf3n puede ser indirecta: si la estructura contiene una referencia a un archivo DTD que contiene a su vez una referencia a un archivo XSD, el comando intentar\xe1 efectuar ambas validaciones."]}),"\n",(0,s.jsxs)(n.p,{children:["El tercer par\xe1metro ",(0,s.jsx)(n.em,{children:"dtd"}),", permite indicar una DTD espec\xedfica o un esquema XML para el an\xe1lisis del documento. Si utiliza este par\xe1metro, el comando no tendr\xe1 en cuenta la DTD referenciada en el documento XML."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Validaci\xf3n por DTD"}),"\nHay dos formas de especificar un DTD:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:['como una referencia. Para hacer esto, pase la ruta de acceso completa de la nueva DTD (extensi\xf3n "dtd) en el par\xe1metro ',(0,s.jsx)(n.em,{children:"dtd"}),". Si el documento indicado no contiene una DTD v\xe1lida, el par\xe1metro ",(0,s.jsx)(n.em,{children:"dtd"})," se ignora y se genera un error."]}),"\n",(0,s.jsxs)(n.li,{children:["directamente en un texto. En este caso, si el contenido del par\xe1metro comienza por \u201C<?xml\u201D, 4D lo considerar\xe1 como la DTD; de lo contrario, 4D lo considerar\xe1 como una ruta de acceso.\n",(0,s.jsx)(n.strong,{children:"Validaci\xf3n por esquema"}),'\nPara validar el documento v\xeda un esquema XML, s\xf3lo debe pasar un archivo o URL con una extensi\xf3n "xsd" en lugar de una "dtd" en el tercer par\xe1metro. La validaci\xf3n por esquema XML se considera m\xe1s flexible y poderosa que la validaci\xf3n por DTD. El lenguaje de documentos XSD est\xe1 basado en lenguaje XML. Los esquemas XML soportan particularmente tipos de datos. Para mayor informaci\xf3n sobre los esquemas XML, consulte la siguiente direcci\xf3n: ',(0,s.jsx)(n.em,{children:(0,s.jsx)(n.a,{href:"http://www.w3.org/XML/Schema",children:"http://www.w3.org/XML/Schema"})}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Si no se puede efectuar la validaci\xf3n (no DTD o XSD, URL incorrecto, etc.), se genera un error. La variable sistema Error indica el n\xfamero del error. Puede interceptar este error con la ayuda de un m\xe9todo instalado por el comando ",(0,s.jsx)(n.a,{href:"/docs/es/20-R9/commands/on-err-call",children:"ON ERR CALL"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"El comando devuelve una cadena de caracteres (RefElement) que constituye la referencia en memoria de la estructura virtual de la variable. Esta referencia debe utilizarse con otros comandos de an\xe1lisis XML."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Importante:"})," una vez no lo necesite m\xe1s, recuerde llamar al comando ",(0,s.jsx)(n.a,{href:"/docs/es/20-R9/commands/dom-close-xml",children:"DOM CLOSE XML"})," con esta referencia para liberar memoria."]}),"\n",(0,s.jsx)(n.h2,{id:"ejemplo-1",children:"Ejemplo 1"}),"\n",(0,s.jsx)(n.p,{children:"Apertura sin validaci\xf3n de un objeto XML ubicado en una variable Texto 4D:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-4d",children:'\xa0var myTextVar : Text\n\xa0var vDoc : Time\n\xa0var $xml_Struct_Ref : Text\n\xa0\n\xa0vDoc:=Open document("Document.xml")\n\xa0If(OK=1)\n\xa0\xa0\xa0\xa0RECEIVE PACKET(vDoc;myTextVar;32000)\n\xa0\xa0\xa0\xa0CLOSE DOCUMENT(vDoc)\n\xa0\xa0\xa0\xa0$xml_Struct_Ref:=DOM Parse XML variable(myTextVar)\n\xa0End if\n'})}),"\n",(0,s.jsx)(n.h2,{id:"ejemplo-2",children:"Ejemplo 2"}),"\n",(0,s.jsx)(n.p,{children:"Apertura sin validaci\xf3n de un documento XML ubicado en un BLOB 4D:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-4d",children:"\xa0var myBlobVar : Blob\n\xa0var $ref_XML_Struct : Text\n\xa0\n\xa0DOCUMENT TO BLOB(\u201Cc:\\\\import.xml\u201D;myBlobVar)\n\xa0$xml_Struct_Ref:=DOM Parse XML variable(myBlobVar)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"variables-y-conjuntos-del-sistema",children:"Variables y conjuntos del sistema"}),"\n",(0,s.jsx)(n.p,{children:"Si el comando se ejecuta correctamente, la variable sistema OK toma el valor 1. Si ocurre un error, toma el valor 0."}),"\n",(0,s.jsx)(n.h2,{id:"ver-tambi\xe9n",children:"Ver tambi\xe9n"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/docs/es/20-R9/commands/dom-close-xml",children:"DOM CLOSE XML"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.a,{href:"/docs/es/20-R9/commands/dom-parse-xml-source",children:"DOM Parse XML source"})]}),"\n",(0,s.jsx)(n.h2,{id:"propiedades",children:"Propiedades"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{}),(0,s.jsx)(n.th,{})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"N\xfamero de comando"}),(0,s.jsx)(n.td,{children:"720"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Hilo seguro"}),(0,s.jsx)(n.td,{children:"\u2713"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Modifica variables"}),(0,s.jsx)(n.td,{children:"OK, error"})]})]})]})]})}function m(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}},250065:function(e,n,a){a.d(n,{Z:()=>d,a:()=>i});var r=a(667294);let s={},l=r.createContext(s);function i(e){let n=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);