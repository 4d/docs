"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["90600"],{417221:function(e,n,s){s.r(n),s.d(n,{default:()=>m,frontMatter:()=>o,metadata:()=>i,assets:()=>t,toc:()=>d,contentTitle:()=>c});var i=JSON.parse('{"id":"commands-legacy/position","title":"Position","description":"Position ( buscar ; laCadena {; inicio {; longEncont}}{; *} ) -> Resultado","source":"@site/i18n/es/docusaurus-plugin-content-docs/version-20-R7/commands-legacy/position.md","sourceDirName":"commands-legacy","slug":"/commands/position","permalink":"/docs/es/20-R7/commands/position","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fposition.md%20(20-R7)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"20-R7","frontMatter":{"id":"position","title":"Position","slug":"/commands/position","displayed_sidebar":"docs"},"sidebar":"docs","previous":{"title":"Num","permalink":"/docs/es/20-R7/commands/num"},"next":{"title":"Replace string","permalink":"/docs/es/20-R7/commands/replace-string"}}'),a=s("785893"),r=s("250065");let o={id:"position",title:"Position",slug:"/commands/position",displayed_sidebar:"docs"},c=void 0,t={},d=[{value:"Descripci\xf3n",id:"descripci\xf3n",level:2},{value:"Ejemplo 1",id:"ejemplo-1",level:2},{value:"Ejemplo 2",id:"ejemplo-2",level:2},{value:"Ejemplo 3",id:"ejemplo-3",level:2},{value:"Ver tambi\xe9n",id:"ver-tambi\xe9n",level:2},{value:"Propiedades",id:"propiedades",level:2}];function l(e){let n={a:"a",br:"br",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Position"})," ( ",(0,a.jsx)(n.em,{children:"buscar"})," ; ",(0,a.jsx)(n.em,{children:"laCadena"})," {; ",(0,a.jsx)(n.em,{children:"inicio"})," {; ",(0,a.jsx)(n.em,{children:"longEncont"}),"}}{; *} ) -> Resultado\xa0",(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.strong,{children:"Position"})," ( ",(0,a.jsx)(n.em,{children:"buscar"})," ; ",(0,a.jsx)(n.em,{children:"laCadena"})," ; ",(0,a.jsx)(n.em,{children:"inicio"})," ; ",(0,a.jsx)(n.em,{children:"longEncont"})," ; ",(0,a.jsx)(n.em,{children:"opciones"})," ) -> Resultado"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Par\xe1metro"}),(0,a.jsx)(n.th,{children:"Tipo"}),(0,a.jsx)(n.th,{}),(0,a.jsx)(n.th,{children:"Descripci\xf3n"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"buscar"}),(0,a.jsx)(n.td,{children:"Text"}),(0,a.jsx)(n.td,{children:"\u2192"}),(0,a.jsx)(n.td,{children:"Cadena a buscar"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"laText"}),(0,a.jsx)(n.td,{children:"Text"}),(0,a.jsx)(n.td,{children:"\u2192"}),(0,a.jsx)(n.td,{children:"Cadena en la cual buscar"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"inicio"}),(0,a.jsx)(n.td,{children:"Integer"}),(0,a.jsx)(n.td,{children:"\u2192"}),(0,a.jsx)(n.td,{children:"Posici\xf3n en la cadena donde comenzar la b\xfasqueda"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"longEncont"}),(0,a.jsx)(n.td,{children:"Integer"}),(0,a.jsx)(n.td,{children:"\u2190"}),(0,a.jsx)(n.td,{children:"Longitud de la cadena encontrada"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"*"}),(0,a.jsx)(n.td,{children:"Operador"}),(0,a.jsx)(n.td,{children:"\u2192"}),(0,a.jsx)(n.td,{children:"Si se pasa: b\xfasqueda diacr\xedtica"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Resultado"}),(0,a.jsx)(n.td,{children:"Integer"}),(0,a.jsx)(n.td,{children:"\u2190"}),(0,a.jsx)(n.td,{children:"Posici\xf3n de la primera ocurrencia"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Position ( buscar ; laCadena ; inicio ; longEncont ; opciones ) -> Resultado"}),(0,a.jsx)(n.td,{}),(0,a.jsx)(n.td,{}),(0,a.jsx)(n.td,{})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Par\xe1metro"}),(0,a.jsx)(n.td,{children:"Tipo"}),(0,a.jsx)(n.td,{children:"Descripci\xf3n"}),(0,a.jsx)(n.td,{})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"buscar"}),(0,a.jsx)(n.td,{children:"Text"}),(0,a.jsx)(n.td,{children:"\u2192"}),(0,a.jsx)(n.td,{children:"Cadena a buscar"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"laText"}),(0,a.jsx)(n.td,{children:"Text"}),(0,a.jsx)(n.td,{children:"\u2192"}),(0,a.jsx)(n.td,{children:"Cadena en la cual buscar"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"inicio"}),(0,a.jsx)(n.td,{children:"Integer"}),(0,a.jsx)(n.td,{children:"\u2192"}),(0,a.jsx)(n.td,{children:"Posici\xf3n en la cadena donde comenzar la b\xfasqueda"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"longEncont"}),(0,a.jsx)(n.td,{children:"Integer"}),(0,a.jsx)(n.td,{children:"\u2192"}),(0,a.jsx)(n.td,{children:"Longitud de la cadena encontrada"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"opciones"}),(0,a.jsx)(n.td,{children:"Integer"}),(0,a.jsx)(n.td,{children:"\u2192"}),(0,a.jsx)(n.td,{children:"Condici\xf3n(es) de b\xfasqueda"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Resultado"}),(0,a.jsx)(n.td,{children:"Integer"}),(0,a.jsx)(n.td,{children:"\u2190"}),(0,a.jsx)(n.td,{children:"Posici\xf3n de la primera ocurrencia"})]})]})]}),"\n",(0,a.jsx)(n.h2,{id:"descripci\xf3n",children:"Descripci\xf3n"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Position"})," devuelve la posici\xf3n de la primera ocurrencia de ",(0,a.jsx)(n.em,{children:"buscar"})," en ",(0,a.jsx)(n.em,{children:"laCadena"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Si ",(0,a.jsx)(n.em,{children:"laCadena"})," no contiene ",(0,a.jsx)(n.em,{children:"buscar"}),", devuelve cero (0)."]}),"\n",(0,a.jsxs)(n.p,{children:["Si ",(0,a.jsx)(n.strong,{children:"Position"})," ubica una ocurrencia de ",(0,a.jsx)(n.em,{children:"buscar"}),", la funci\xf3n devuelve la posici\xf3n del primer car\xe1cter de esta ocurrencia en ",(0,a.jsx)(n.em,{children:"laCadena"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Si pregunta por la posici\xf3n de una cadena vac\xeda dentro de una cadena vac\xeda, ",(0,a.jsx)(n.strong,{children:"Position"})," devuelve cero (0)."]}),"\n",(0,a.jsxs)(n.p,{children:["Por defecto, la b\xfasqueda comienza en el primer car\xe1cter de ",(0,a.jsx)(n.em,{children:"laCadena"}),". El par\xe1metro ",(0,a.jsx)(n.em,{children:"inicio"})," permite precisar el car\xe1cter donde la b\xfasqueda debe comenzar en ",(0,a.jsx)(n.em,{children:"laCadena"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["El par\xe1metro ",(0,a.jsx)(n.em,{children:"longEncont"}),", devuelve la longitud de la cadena encontrada por la b\xfasqueda. Este par\xe1metro es necesario para poder gestionar correctamente cartas escritas con uno o m\xe1s caracteres (ejemplo: \xe6 y ae, \xdf y ss, etc.).",(0,a.jsx)(n.br,{}),"\nSi se pasa el par\xe1metro ",(0,a.jsx)(n.em,{children:"*"})," (ver abajo), estas letras no se consideran como equivalente (\xe6 # ae); en modo diacr\xedtico, ",(0,a.jsx)(n.em,{children:"longEncont"})," siempre es igual a la longitud de ",(0,a.jsx)(n.em,{children:"buscar"})," (si se encuentra una ocurrencia)."]}),"\n",(0,a.jsxs)(n.p,{children:['Por defecto, el comando hace comparaciones globales teniendo en cuenta particularidades ling\xfc\xedsticas y letras que pueden estar escritas con uno o m\xe1s caracteres (por ejemplo \xe6 = ae). Por otra parte, no es diacr\xedtica (a=A, a=\xe0 etc.) y no tiene en cuenta los caracteres "ignorables". Los caracteres ignorables incluyen todos los caracteres del subset unicode ',(0,a.jsx)(n.em,{children:"CO Control"})," (U+0000 a U+001F, ascii character control set) excepto los caracteres imprimibles (U+0009 TAB, U+0010 LF, U+0011 VT, U+0012 FF y U+0013 CR)."]}),"\n",(0,a.jsx)(n.p,{children:"Para modificar este funcionamiento, puede pasar:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["(",(0,a.jsx)(n.strong,{children:"primera sintaxis - par\xe1metro *"}),") el asterisco ",(0,a.jsx)(n.em,{children:"*"})," como \xfaltimo par\xe1metro. En este caso, las comparaciones se basan en los c\xf3digos de los caracteres. Debe pasar el par\xe1metro ",(0,a.jsx)(n.em,{children:"*"}),":\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Si quiere tener en cuenta caracteres especiales, utilizados por ejemplo como delimitadores (",(0,a.jsx)(n.strong,{children:"Char"}),"(1), etc.),"]}),"\n",(0,a.jsxs)(n.li,{children:["Si la evaluaci\xf3n de caracteres debe ser sensible a las may\xfasculas y min\xfasculas y tener en cuenta los caracteres acentuados (a#A, a#\xe0, etc.).",(0,a.jsx)(n.br,{}),"\nNote que en este modo, la evaluaci\xf3n no maneja variaciones en la escritura de las palabras."]}),"\n"]}),"\n",(0,a.jsx)(n.strong,{children:"Nota:"})," en ciertos casos, utilizar el par\xe1metro ",(0,a.jsx)(n.em,{children:"*"})," puede acelerar significativamente la ejecuci\xf3n del comando."]}),"\n",(0,a.jsxs)(n.li,{children:["(",(0,a.jsx)(n.strong,{children:"segunda sintaxis -"})," *",(0,a.jsx)(n.strong,{children:"par\xe1metro opciones"}),") una o una combinaci\xf3n de las siguientes constantes del tema ",(0,a.jsx)(n.em,{children:"Cadenas"}),":"]}),"\n"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Constante"}),(0,a.jsx)(n.th,{children:"Valor"}),(0,a.jsx)(n.th,{children:"Comentario"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"sk case insensitive"}),(0,a.jsx)(n.td,{children:"2"}),(0,a.jsxs)(n.td,{children:['Las cadenas se comparan seg\xfan el lenguaje actual de los datos sin tener en cuenta las diferencias de may\xfasculas y min\xfasculas. Note que los signos diacr\xedticos se tienen en cuenta. Por ejemplo, "A" se considera lo mismo que "a", sin embargo "a" no se considera lo mismo que "\xe0" . Por defecto, la comparaci\xf3n de cadenas de 4D no diferencia entre may\xfasculas y min\xfasculas. Puede combinarse con: sk char codes O sk diacritic insensitive sk whole word (comando ',(0,a.jsx)(n.a,{href:"/docs/es/20-R7/commands/position",children:"Position"})," \xfanicamente) Esta constante implica el uso de las siguientes constantes (que tambi\xe9n pueden combinarse para mejorar la legibilidad): sk kana insensitive sk width insensitive sk strict"]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"sk char codes"}),(0,a.jsx)(n.td,{children:"1"}),(0,a.jsx)(n.td,{children:'Las cadenas se comparan seg\xfan los c\xf3digos de caracteres. Los par\xe1metros actuales del lenguaje de datos no se tienen en cuenta durante la comparaci\xf3n. Se puede combinar con: sk case insensitive S\xf3lo para los rangos "a-z" o "A-Z". (e.g., Alpha = alpha, pero Alpha # \xe2lph\xe0)'})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"sk diacritic insensitive"}),(0,a.jsx)(n.td,{children:"4"}),(0,a.jsxs)(n.td,{children:['Las cadenas se comparan seg\xfan el lenguaje actual de los datos sin embargo los acentos o s\xedmbolos de las letras se ignoran. Por ejemplo, "a" se considera lo mismo que "\xe0". Puede combinarse con: sk case insensitive sk whole word (comando ',(0,a.jsx)(n.a,{href:"/docs/es/20-R7/commands/position",children:"Position"})," \xfanicamente) Esta constante implica el uso de las siguientes constantes (que tambi\xe9n pueden combinarse para mejorar la legibilidad): sk kana insensitive sk width insensitive sk strict"]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"sk kana insensitive"}),(0,a.jsx)(n.td,{children:"8"}),(0,a.jsxs)(n.td,{children:['Para el idioma japon\xe9s. Controla la distinci\xf3n entre s\xedlabas Hiragana y Katakana. Desde el punto de vista sem\xe1ntico, la diferencia entre el hiragana y el katakana suele ser significativa, pero para capturar el mayor n\xfamero posible de resultados, el modo por defecto en 4D es ignorar la diferencia (kana insensible). Por ejemplo, "\u3042" se considera igual que "\u30A2". La opci\xf3n sk strict realiza una comparaci\xf3n sensible al kana. sk kana insensitive puede utilizarse para relajar parcialmente la regla para que sea insensible al kana. ',(0,a.jsx)(n.strong,{children:"Nota:"})," el idioma de los datos debe ser el japon\xe9s para utilizar esta opci\xf3n. Para todos los dem\xe1s idiomas, la opci\xf3n se ignora y ",(0,a.jsx)(n.a,{href:"/docs/es/20-R7/commands/compare-strings",children:"Compare strings"})," funcionar\xe1 como si se especificara sk strict. En otras palabras, establecer esta opci\xf3n en un contexto no japon\xe9s har\xeda que la comparaci\xf3n fuera sensible al kana (el efecto contrario). Se puede combinar con: sk case insensitive sk diacritic insensitive Esta constante implica el uso de las siguientes constantes (que tambi\xe9n pueden combinarse para mejorar la legibilidad): sk width insensitive sk strict"]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"sk strict"}),(0,a.jsx)(n.td,{children:"0"}),(0,a.jsx)(n.td,{children:"Las cadenas se comparan para obtener coincidencias exactas seg\xfan el lenguaje de datos actual. En la mayor\xeda de los casos, durante la comparaci\xf3n se tienen en cuenta las may\xfasculas y min\xfasculas y las marcas diacr\xedticas de las letras. Se puede combinar con: sk case insensitive sk diacritic insensitive sk kana insensitive Esta constante implica el uso de la siguiente constante (que tambi\xe9n se puede combinar para mejorar la legibilidad): sk width insensitive"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"sk whole word"}),(0,a.jsx)(n.td,{children:"32"}),(0,a.jsxs)(n.td,{children:['Las cadenas se comparan seg\xfan el lenguaje de datos actual. S\xf3lo se consideran las cadenas que son palabras completas. Las cadenas que coinciden dentro de otras cadenas no se consideran. Por ejemplo, "where" no se considera cuando se encuentra dentro de "somewhere". Se puede combinar con: sk case insensitive (comando ',(0,a.jsx)(n.a,{href:"/docs/es/20-R7/commands/position",children:"Position"})," \xfanicamente) sk diacritic insensitive (comando ",(0,a.jsx)(n.a,{href:"/docs/es/20-R7/commands/position",children:"Position"})," \xfanicamente)"]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"sk width insensitive"}),(0,a.jsx)(n.td,{children:"16"}),(0,a.jsxs)(n.td,{children:['Para el idioma japon\xe9s. Corresponde a la norma Unicode "East Asian Width", definida en el ',(0,a.jsx)(n.a,{href:"http://www.unicode.org/reports/tr11/",children:"Anexo #11 del est\xe1ndar Unicode"}),'.Desde un punto de vista sem\xe1ntico, la diferencia entre un car\xe1cter "estrecho" y "ancho" o un car\xe1cter "ancho completo" y "medio ancho" suele ser insignificante, que es el modo por defecto en 4D.Por ejemplo, "\uFF71" se considera lo mismo que "\u30A2". La opci\xf3n sk strict realiza una comparaci\xf3n sensible al ancho. ',(0,a.jsx)(n.strong,{children:"Notas:"})," El idioma de los datos debe ser el japon\xe9s para poder utilizar esta opci\xf3n. Para todos los dem\xe1s idiomas, la opci\xf3n se ignora y ",(0,a.jsx)(n.a,{href:"/docs/es/20-R7/commands/compare-strings",children:"Compare strings"})," funcionar\xe1 como si se especificara sk strict. En otras palabras, establecer esta opci\xf3n en un contexto que no sea japon\xe9s har\xeda que la comparaci\xf3n fuera sensible al ancho (el efecto contrario). Esta opci\xf3n es ignorada por la funci\xf3n ",(0,a.jsx)(n.a,{href:"/docs/es/20-R7/commands/position",children:"Position"}),". La comparaci\xf3n insensible al ancho de Unicode es asim\xe9trica e imposible de localizar por posici\xf3n o longitud. Se puede combinar con: sk case insensitive sk diacritic insensitive sk kana insensitive Esta constante implica el uso de la siguiente constante (que tambi\xe9n se puede combinar para mejorar la legibilidad): sk strict"]})]})]})]}),"\n",(0,a.jsxs)(n.p,{children:["Para informaci\xf3n sobre la definici\xf3n del lenguaje de datos, ver la secci\xf3n en la ",(0,a.jsx)(n.em,{children:"Referencia de Dise\xf1o"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Advertencia:"})," no puede utilizar el car\xe1cter arroba @ con ",(0,a.jsx)(n.strong,{children:"Position"}),". Por ejemplo, si pasa ",(0,a.jsx)(n.em,{children:'"abc@"'})," en ",(0,a.jsx)(n.em,{children:"buscar"}),", el comando buscar\xe1 la cadena ",(0,a.jsx)(n.em,{children:'"abc@"'}),' y no "abc" seguido de otros caracteres.']}),"\n",(0,a.jsx)(n.h2,{id:"ejemplo-1",children:"Ejemplo 1"}),"\n",(0,a.jsxs)(n.p,{children:["Este ejemplo ilustra el uso de Position. Los resultados, descritos en los comentarios, se asignan a la variable ",(0,a.jsx)(n.em,{children:"vlResult"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-4d",children:'\xa0vlResult:=Position("ll";"Billar")\xa0// vlResult toma el valor 3\n\xa0vlResult:=Position(vtText1;vtText2)\xa0// Posici\xf3n de la primera ocurrencia de vtText1 en vtText2\n\xa0vlResult:=Position("todo";"todos los procesos dentro de un m\xe9todo";1)\xa0// vlResult toma el valor 1\n\xa0vlResult:=Position("todo";"todos los procesos dentro de un m\xe9todo";2)\xa0// vlResult toma el valor 35\n\xa0vlResult:=Position("TODO";"todos los procesos dentro de un m\xe9todo";1;*)\xa0// vlResult toma el valor 0\n\xa0vlResult:=Position("\u0153";"B\u0153uf";1;$largo)\xa0// vlResult =2, $largo= 1\n'})}),"\n",(0,a.jsx)(n.h2,{id:"ejemplo-2",children:"Ejemplo 2"}),"\n",(0,a.jsxs)(n.p,{children:["En el siguiente ejemplo, el par\xe1metro ",(0,a.jsx)(n.em,{children:"longEncont"}),' permite buscar todas las ocurrencias de "aegis" en un texto, sin importar c\xf3mo est\xe1 escrito:']}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-4d",children:'\xa0$inicio:=1\n\xa0Repeat\n\xa0\xa0\xa0\xa0vlResult:=Position("aegis";$text;$inicio;$longEncont)\n\xa0\xa0\xa0\xa0$inicio:=$inicio+$longEncont\n\xa0Until(vlResult=0)\n'})}),"\n",(0,a.jsx)(n.h2,{id:"ejemplo-3",children:"Ejemplo 3"}),"\n",(0,a.jsx)(n.p,{children:"En el siguiente ejemplo, usted quiere encontrar todas las instancias de una cadena y reemplazarla:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-4d",children:'\xa0var $lengthFound : Integer\n\xa0\n\xa0$string:="Hello Joelle et joel!"\n\xa0$find:="joel"\n\xa0$replace:="Jo\xebl"\n\xa0$option:=sk case insensitive+sk diacritic insensitive\n\xa0\n\xa0$p:=0\n\xa0Repeat\n\xa0\xa0\xa0\xa0$p:=Position($find;$string;$p+1;$lengthFound;$option)\n\xa0\xa0\xa0\xa0If($p>0)\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0$string:=Substring($string;1;$p-1)+$replace+Substring($string;$p+$lengthFound)\n\xa0\xa0\xa0\xa0End if\n\xa0Until($p<=0)\xa0//result: $string -> Hello Jo\xeblle and Jo\xebl!\n'})}),"\n",(0,a.jsx)(n.h2,{id:"ver-tambi\xe9n",children:"Ver tambi\xe9n"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"/docs/es/20-R7/commands/compare-strings",children:"Compare strings"}),(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.a,{href:"/docs/es/20-R7/commands/substring",children:"Substring"})]}),"\n",(0,a.jsx)(n.h2,{id:"propiedades",children:"Propiedades"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{}),(0,a.jsx)(n.th,{})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"N\xfamero de comando"}),(0,a.jsx)(n.td,{children:"15"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Hilo seguro"}),(0,a.jsx)(n.td,{children:"\u2713"})]})]})]})]})}function m(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return c},a:function(){return o}});var i=s(667294);let a={},r=i.createContext(a);function o(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);