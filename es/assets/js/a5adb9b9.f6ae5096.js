"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["64586"],{919450:function(e,n,a){a.r(n),a.d(n,{default:()=>m,frontMatter:()=>r,metadata:()=>i,assets:()=>d,toc:()=>l,contentTitle:()=>s});var i=JSON.parse('{"id":"commands-legacy/blob-to-picture","title":"BLOB TO PICTURE","description":"BLOB TO PICTURE ( blobImag ; imagen {; codec} )","source":"@site/i18n/es/docusaurus-plugin-content-docs/version-20-R8/commands-legacy/blob-to-picture.md","sourceDirName":"commands-legacy","slug":"/commands/blob-to-picture","permalink":"/docs/es/commands/blob-to-picture","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fblob-to-picture.md%20(20-R8)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"20-R8","frontMatter":{"id":"blob-to-picture","title":"BLOB TO PICTURE","slug":"/commands/blob-to-picture","displayed_sidebar":"docs"},"sidebar":"docs","previous":{"title":"Pictures","permalink":"/docs/es/category/pictures"},"next":{"title":"COMBINE PICTURES","permalink":"/docs/es/commands/combine-pictures"}}'),c=a("785893"),o=a("250065");let r={id:"blob-to-picture",title:"BLOB TO PICTURE",slug:"/commands/blob-to-picture",displayed_sidebar:"docs"},s=void 0,d={},l=[{value:"Descripci\xf3n",id:"descripci\xf3n",level:4},{value:"Variables y conjuntos del sistema",id:"variables-y-conjuntos-del-sistema",level:4},{value:"Ver tambi\xe9n",id:"ver-tambi\xe9n",level:4},{value:"Propiedades",id:"propiedades",level:4}];function t(e){let n={a:"a",br:"br",em:"em",h4:"h4",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"BLOB TO PICTURE"})," ( ",(0,c.jsx)(n.em,{children:"blobImag"})," ; ",(0,c.jsx)(n.em,{children:"imagen"})," {; ",(0,c.jsx)(n.em,{children:"codec"}),"} )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,c.jsxs)(n.table,{children:[(0,c.jsx)(n.thead,{children:(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.th,{children:"Par\xe1metro"}),(0,c.jsx)(n.th,{children:"Tipo"}),(0,c.jsx)(n.th,{}),(0,c.jsx)(n.th,{children:"Descripci\xf3n"})]})}),(0,c.jsxs)(n.tbody,{children:[(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"blobImag"}),(0,c.jsx)(n.td,{children:"Blob"}),(0,c.jsx)(n.td,{children:"\u2192"}),(0,c.jsx)(n.td,{children:"BLOB contiene una imagen"})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"imagen"}),(0,c.jsx)(n.td,{children:"Picture"}),(0,c.jsx)(n.td,{children:"\u2190"}),(0,c.jsx)(n.td,{children:"Campo o variable imagen 4D"})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"codec"}),(0,c.jsx)(n.td,{children:"Text"}),(0,c.jsx)(n.td,{children:"\u2192"}),(0,c.jsx)(n.td,{children:"Identificador de codec de imagen"})]})]})]}),"\n",(0,c.jsx)(n.h4,{id:"descripci\xf3n",children:"Descripci\xf3n"}),"\n",(0,c.jsx)(n.p,{children:"El comando BLOB TO PICTURE inserta una imagen almacenada en un BLOB en un campo o variable imagen 4D, sin importar su formato original."}),"\n",(0,c.jsxs)(n.p,{children:["Este comando es similar al comando ",(0,c.jsx)(n.a,{href:"/docs/es/commands/read-picture-file",children:"READ PICTURE FILE"}),", simplemente se aplica a un BLOB en lugar de a un archivo. Esto permite mostrar im\xe1genes almacenadas en formato nativo en los BLOBs. Puede cargar una imagen en un BLOB utilizando, por ejemplo, el comando ",(0,c.jsx)(n.a,{href:"/docs/es/commands/document-to-blob",children:"DOCUMENT TO BLOB"})," o ",(0,c.jsx)(n.a,{href:"/docs/es/commands/picture-to-blob",children:"PICTURE TO BLOB"}),"."]}),"\n",(0,c.jsxs)(n.p,{children:["En el par\xe1metro ",(0,c.jsx)(n.em,{children:"blobImag"})," se pasa el campo o imagen BLOB que contiene la imagen. La imagen puede estar en cualquier formato soportado nativamente por 4D. Puede obtener la lista de formatos disponibles utilizando el comando ",(0,c.jsx)(n.a,{href:"/docs/es/commands/picture-codec-list",children:"PICTURE CODEC LIST"}),". Si pasa el par\xe1metro opcional ",(0,c.jsx)(n.em,{children:"codec"}),", 4D utilizar\xe1 el valor en este par\xe1metro para decodificar el BLOB (ver el funcionamiento espec\xedfico del comando con este tercer par\xe1metro a continuaci\xf3n)."]}),"\n",(0,c.jsxs)(n.p,{children:["Pase en el par\xe1metro ",(0,c.jsx)(n.em,{children:"imagen"})," la variable o el campo 4D de tipo imagen el cual debe mostrar la imagen."]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"Nota:"})," el formato interno de la imagen se conserva dentro de la variable o campo 4D."]}),"\n",(0,c.jsxs)(n.p,{children:["Despu\xe9s de la ejecuci\xf3n del comando, ",(0,c.jsx)(n.em,{children:"imagen"})," contiene la imagen a mostrar en 4D."]}),"\n",(0,c.jsxs)(n.p,{children:["El par\xe1metro opcional ",(0,c.jsx)(n.em,{children:"codec"})," le permite especificar el codec a utilizar para la decodificaci\xf3n del BLOB."]}),"\n",(0,c.jsxs)(n.p,{children:["Si pasa en ",(0,c.jsx)(n.em,{children:"codec"})," un codec reconocido por 4D (devuelto por el comando ",(0,c.jsx)(n.a,{href:"/docs/es/commands/picture-codec-list",children:"PICTURE CODEC LIST"})," ), se aplica al BLOB y la imagen se devuelve en el campo o variable imagen."]}),"\n",(0,c.jsxs)(n.p,{children:["Si pasa en ",(0,c.jsx)(n.em,{children:"codec"})," un codec no reconocido por 4D, un nuevo codec se registra din\xe1micamente con el identificador pasado en el par\xe1metro. 4D devuelve una imagen que encapsula el BLOB y la variable OK toma el valor 1. En este caso, para recuperar el BLOB deber\xe1 utilizar el comando ",(0,c.jsx)(n.a,{href:"/docs/es/commands/picture-to-blob",children:"PICTURE TO BLOB"})," con el mismo identificador personalizado. Este mecanismo en particular puede utilizarse para cumplir con dos necesidades espec\xedficas:"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"encapsulaci\xf3n de un BLOB (que no es una imagen) en una imagen,"}),"\n",(0,c.jsx)(n.li,{children:"carga de una imagen sin utilizar un codec."}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:'La implementaci\xf3n de estos mecanismos permite, m\xe1s espec\xedficamente, la creaci\xf3n de "arrays de BLOBs " v\xeda arrays de imagen. Este t\xe9cnica debe utilizarse con precauci\xf3n porque como los arrays se cargan completamente en la memoria, trabajar con BLOBs de gran tama\xf1o puede afectar el funcionamiento de la aplicaci\xf3n.'}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"Nota"}),": un BLOB creado por el comando ",(0,c.jsx)(n.a,{href:"/docs/es/commands/variable-to-blob",children:"VARIABLE TO BLOB"}),' se administra autom\xe1ticamente; no es necesario pasar un codec para encapsularlo ya que el BLOB est\xe1 "firmado". En este caso, para la operaci\xf3n contraria, deber\xe1 pasar ".4DVarBlog" como identificador de codec al comando ',(0,c.jsx)(n.a,{href:"/docs/es/commands/picture-to-blob",children:"PICTURE TO BLOB"}),"."]}),"\n",(0,c.jsx)(n.h4,{id:"variables-y-conjuntos-del-sistema",children:"Variables y conjuntos del sistema"}),"\n",(0,c.jsx)(n.p,{children:"Si el comando se ejecuta correctamente, la variable sistema OK toma el valor 1. Si la conversi\xf3n ha fallado (QuickTime no est\xe1 instalado, el BLOB no contiene una imagen legible, par\xe1metro codec reconocido pero no validado por el BLOB , etc.), OK toma el valor 0 y el campo o variable imagen 4D se devuelve vac\xedo."}),"\n",(0,c.jsx)(n.h4,{id:"ver-tambi\xe9n",children:"Ver tambi\xe9n"}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.a,{href:"/docs/es/commands/picture-codec-list",children:"PICTURE CODEC LIST"}),(0,c.jsx)(n.br,{}),"\n",(0,c.jsx)(n.a,{href:"/docs/es/commands/picture-to-blob",children:"PICTURE TO BLOB"}),(0,c.jsx)(n.br,{}),"\n",(0,c.jsx)(n.a,{href:"/docs/es/commands/read-picture-file",children:"READ PICTURE FILE"})]}),"\n",(0,c.jsx)(n.h4,{id:"propiedades",children:"Propiedades"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,c.jsxs)(n.table,{children:[(0,c.jsx)(n.thead,{children:(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.th,{}),(0,c.jsx)(n.th,{})]})}),(0,c.jsxs)(n.tbody,{children:[(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"N\xfamero de comando"}),(0,c.jsx)(n.td,{children:"682"})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"Hilo seguro"}),(0,c.jsx)(n.td,{children:"\u2713"})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"Modifica variables"}),(0,c.jsx)(n.td,{children:"OK"})]})]})]})]})}function m(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(t,{...e})}):t(e)}},250065:function(e,n,a){a.d(n,{Z:function(){return s},a:function(){return r}});var i=a(667294);let c={},o=i.createContext(c);function r(e){let n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);