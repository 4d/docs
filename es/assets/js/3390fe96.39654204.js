"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[80607],{603905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>c});var a=t(667294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var d=a.createContext({}),p=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(d.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},s=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,d=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),s=p(t),c=l,N=s["".concat(d,".").concat(c)]||s[c]||m[c]||r;return t?a.createElement(N,o(o({ref:n},u),{},{components:t})):a.createElement(N,o({ref:n},u))}));function c(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,o=new Array(r);o[0]=s;var i={};for(var d in n)hasOwnProperty.call(n,d)&&(i[d]=n[d]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var p=2;p<r;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}s.displayName="MDXCreateElement"},564610:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>o,metadata:()=>d,toc:()=>u});t(667294);var a=t(603905);function l(){return l=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},l.apply(this,arguments)}function r(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}const o={id:"null-undefined",title:"Null e indefinido"},i=void 0,d={unversionedId:"Concepts/null-undefined",id:"version-20-R4/Concepts/null-undefined",title:"Null e indefinido",description:"Null e Indefinido son tipos de datos que manejan los casos en los que no se conoce el valor de una expresi\xf3n.",source:"@site/i18n/es/docusaurus-plugin-content-docs/version-20-R4/Concepts/dt_null_undefined.md",sourceDirName:"Concepts",slug:"/Concepts/null-undefined",permalink:"/docs/es/Concepts/null-undefined",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20Concepts%2Fdt_null_undefined.md%20(20-R4)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R4",frontMatter:{id:"null-undefined",title:"Null e indefinido"},sidebar:"docs",previous:{title:"Fecha",permalink:"/docs/es/Concepts/date"},next:{title:"N\xfamero (Real, Longint, Integer)",permalink:"/docs/es/Concepts/number"}},p={},u=[{value:"Null",id:"null",level:2},{value:"Indefinido",id:"indefinido",level:2},{value:"Operadores Null",id:"operadores-null",level:2},{value:"Operadores indefinidos",id:"operadores-indefinidos",level:2},{value:"Ejemplos",id:"ejemplos",level:2}],m={toc:u};function s(e){var{components:n}=e,t=r(e,["components"]);return(0,a.kt)("wrapper",l({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Null e Indefinido son tipos de datos que manejan los casos en los que no se conoce el valor de una expresi\xf3n."),(0,a.kt)("h2",l({},{id:"null"}),"Null"),(0,a.kt)("p",null,"Null es un tipo de datos especial con un solo valor posible: ",(0,a.kt)("strong",{parentName:"p"},"null"),". Este valor es devuelto por una expresi\xf3n que no contiene ning\xfan valor. Al intentar leer una propiedad de un valor ",(0,a.kt)("strong",{parentName:"p"},"null")," se produce un error."),(0,a.kt)("p",null,"En el lenguaje 4D y para los atributos de los campos de los objetos, los valores nulos se gestionan a trav\xe9s de la funci\xf3n ",(0,a.kt)("inlineCode",{parentName:"p"},"Null"),". Esta funci\xf3n puede utilizarse con las siguientes expresiones para definir o comparar el valor nulo:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"atributos de objetos"),(0,a.kt)("li",{parentName:"ul"},"elementos de colecciones"),(0,a.kt)("li",{parentName:"ul"},"variables de tipo objeto, colecci\xf3n, puntero, imagen o variante (ver tambi\xe9n ",(0,a.kt)("a",l({parentName:"li"},{href:"/docs/es/Concepts/data-types#null-as-default-value"}),"Null como valor por defecto"),".")),(0,a.kt)("h2",l({},{id:"indefinido"}),"Indefinido"),(0,a.kt)("p",null,"Indefinido no es realmente un tipo de datos. Denota una variable que a\xfan no ha sido definida. La evaluaci\xf3n de una propiedad de objeto tambi\xe9n puede producir un valor indefinido. La lectura de una propiedad de valor indefinido devuelve ",(0,a.kt)("strong",{parentName:"p"},"undefined"),"."),(0,a.kt)("p",null,"Una variable variante tiene ",(0,a.kt)("strong",{parentName:"p"},"undefined")," como ",(0,a.kt)("a",l({parentName:"p"},{href:"/docs/es/Concepts/data-types#default-values"}),"valor por defecto"),"."),(0,a.kt)("p",null,"Un campo no puede ser indefinido (el comando ",(0,a.kt)("inlineCode",{parentName:"p"},"Undefined")," siempre devuelve False para un campo)."),(0,a.kt)("p",null,"Normalmente, al intentar leer o asignar expresiones indefinidas, 4D generar\xe1 errores, excepto en los siguientes casos:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Asignar un valor indefinido a variables (excepto arrays) tiene el mismo efecto que llamar a ",(0,a.kt)("a",l({parentName:"li"},{href:"https://doc.4d.com/4dv20/help/command/en/page89.html"}),(0,a.kt)("inlineCode",{parentName:"a"},"CLEAR VARIABLE"))," con ellas:")),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-4d"}),"     var $o : Object\n     var $val : Integer\n     $val:=10 //$val=10\n     $val:=$o.a //$o. es indefinido (no hay error) y la asignaci\xf3n de este valor borra la variable\n      //$val=0\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"La asignaci\xf3n de un valor indefinido a una propiedad de objeto existente reinicializa o borra su valor, dependiendo de su tipo:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Objeto, colecci\xf3n, puntero: Null"),(0,a.kt)("li",{parentName:"ul"},"Imagen: imagen vac\xeda"),(0,a.kt)("li",{parentName:"ul"},"Booleano: False"),(0,a.kt)("li",{parentName:"ul"},'Cadena: ""'),(0,a.kt)("li",{parentName:"ul"},"N\xfamero: 0"),(0,a.kt)("li",{parentName:"ul"},'Fecha: !00-00-00! Date: !00-00-00! if "Use date type instead of ISO date format in objects" setting is enabled, otherwise ""'),(0,a.kt)("li",{parentName:"ul"},"Hora: 0 (n\xfamero de ms)"),(0,a.kt)("li",{parentName:"ul"},"Indefinido, Null: sin cambios")))),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-4d"}),'     var $o : Object\n     $o:=New object("a";2)\n     $o.a:=$o.b //$o.a=0\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"La asignaci\xf3n de un valor indefinido a una propiedad de objeto no existente no hace nada.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},'Un valor indefinido pasado como par\xe1metro a un m\xe9todo proyecto se convierte autom\xe1ticamente en 0 o "" seg\xfan el tipo de par\xe1metro declarado.'))),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-4d"}),'     var $o : Object\n     mymethod($o.a) //Pasar un par\xe1metro indefinido\n     \n      //En el m\xe9todo mymethod\n     #Declare ($myText : Text) //El tipo de par\xe1metro es texto\n      // $myText contiene ""\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Una expresi\xf3n de condici\xf3n se convierte autom\xe1ticamente en falsa cuando se eval\xfaa a indefinido con las palabras clave If y Case of:")),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-4d"}),"     var $o : Object\n     If($o.a) // false\n     End if\n     Case of\n        :($o.a) // false\n     End case\n")),(0,a.kt)("admonition",l({},{type:"tip"}),(0,a.kt)("p",{parentName:"admonition"},"Cuando se esperan expresiones de un tipo dado en su c\xf3digo 4D, puede asegurarse de que tienen el tipo correcto incluso cuando se eval\xfaan como indefinido rode\xe1ndolas con el comando cast 4D apropiado: ",(0,a.kt)("inlineCode",{parentName:"p"},"String"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Num"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Date"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Time"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Bool"),". Estos comandos devuelven un valor vac\xedo del tipo especificado cuando la expresi\xf3n se eval\xfaa como indefinida. Por ejemplo:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",l({parentName:"pre"},{className:"language-4d"})," $myString:=Lowercase(String($o.a.b)) //asegurarse de obtener un valor de cadena aunque sea indefinido\n  //para evitar errores en el c\xf3digo\n"))),(0,a.kt)("h2",l({},{id:"operadores-null"}),"Operadores Null"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",l({parentName:"tr"},{align:null}),"Operaci\xf3n"),(0,a.kt)("th",l({parentName:"tr"},{align:null}),"Sintaxis"),(0,a.kt)("th",l({parentName:"tr"},{align:null}),"Devuelve"),(0,a.kt)("th",l({parentName:"tr"},{align:null}),"Expression"),(0,a.kt)("th",l({parentName:"tr"},{align:null}),"Valor"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Igual"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Null ",(0,a.kt)("inlineCode",{parentName:"td"},"=")," Null"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Boolean"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"a.nullProp ",(0,a.kt)("inlineCode",{parentName:"td"},"=")," b.nullProp"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"True")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null})),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Null ",(0,a.kt)("inlineCode",{parentName:"td"},"=")," Undefined"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Boolean"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"a.nullProp ",(0,a.kt)("inlineCode",{parentName:"td"},"=")," b.undefinedProp"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"True")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null})),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Null ",(0,a.kt)("inlineCode",{parentName:"td"},"=")," ",(0,a.kt)("em",{parentName:"td"},"scalar value")),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Boolean"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"a.nullProp ",(0,a.kt)("inlineCode",{parentName:"td"},"=")," 42"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"False")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Desigualdad"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Null ",(0,a.kt)("inlineCode",{parentName:"td"},"#")," Null"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Boolean"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"a.nullProp ",(0,a.kt)("inlineCode",{parentName:"td"},"#")," b.nullProp"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"False")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null})),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Null ",(0,a.kt)("inlineCode",{parentName:"td"},"#")," Undefined"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Boolean"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"a.nullProp ",(0,a.kt)("inlineCode",{parentName:"td"},"#")," b.undefinedProp"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"False")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null})),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Null ",(0,a.kt)("inlineCode",{parentName:"td"},"#")," ",(0,a.kt)("em",{parentName:"td"},"scalar value")),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Boolean"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"a.nullProp ",(0,a.kt)("inlineCode",{parentName:"td"},"#")," 42"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"True")))),(0,a.kt)("p",null,"Los ",(0,a.kt)("em",{parentName:"p"},"valores escalares")," son valores de tipo cadena, Fecha, Hora, Booleano, n\xfamero o Blob. Cuando se declaran, su ",(0,a.kt)("a",l({parentName:"p"},{href:"/docs/es/Concepts/data-types#default-values"}),"valor por defecto")," no es ni indefinido ni null. Otros tipos (Puntero, Imagen, Objeto, Colecci\xf3n) tienen un valor por defecto indefinido o null. Ej:"),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-4d"}),'var $object : Object\nvar $text : Text\n\n//$object = null\n//$text = "" \n')),(0,a.kt)("admonition",l({},{type:"info"}),(0,a.kt)("p",{parentName:"admonition"},"Las comparaciones con los operadores Mayor que (",(0,a.kt)("inlineCode",{parentName:"p"},">"),"), Menor que (",(0,a.kt)("inlineCode",{parentName:"p"},"<"),"), Greater than or equal to (",(0,a.kt)("inlineCode",{parentName:"p"},">="),") y Menor o igual que (",(0,a.kt)("inlineCode",{parentName:"p"},"<="),") no son soportadas con valores Null y devuelven un error.")),(0,a.kt)("h2",l({},{id:"operadores-indefinidos"}),"Operadores indefinidos"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",l({parentName:"tr"},{align:null}),"Operaci\xf3n"),(0,a.kt)("th",l({parentName:"tr"},{align:null}),"Sintaxis"),(0,a.kt)("th",l({parentName:"tr"},{align:null}),"Devuelve"),(0,a.kt)("th",l({parentName:"tr"},{align:null}),"Expression"),(0,a.kt)("th",l({parentName:"tr"},{align:null}),"Valor"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Igual"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Undefined ",(0,a.kt)("inlineCode",{parentName:"td"},"=")," Undefined"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Boolean"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"a.undefinedProp ",(0,a.kt)("inlineCode",{parentName:"td"},"=")," b.undefinedProp"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"True")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null})),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Undefined ",(0,a.kt)("inlineCode",{parentName:"td"},"=")," Null"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Boolean"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"a.undefinedProp ",(0,a.kt)("inlineCode",{parentName:"td"},"=")," c.nullProp"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"True")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null})),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Undefined ",(0,a.kt)("inlineCode",{parentName:"td"},"=")," ",(0,a.kt)("em",{parentName:"td"},"otros valores")),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Boolean"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"a.undefinedProp ",(0,a.kt)("inlineCode",{parentName:"td"},"=")," 42"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"False")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Desigualdad"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Undefined ",(0,a.kt)("inlineCode",{parentName:"td"},"#")," Undefined"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Boolean"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"a.undefinedProp ",(0,a.kt)("inlineCode",{parentName:"td"},"#")," b.undefinedProp"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"False")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null})),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Undefined ",(0,a.kt)("inlineCode",{parentName:"td"},"#")," Null"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Boolean"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"a.undefinedProp ",(0,a.kt)("inlineCode",{parentName:"td"},"#")," b.nullProp"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"False")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null})),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Undefined ",(0,a.kt)("inlineCode",{parentName:"td"},"#")," ",(0,a.kt)("em",{parentName:"td"},"otros valores")),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Boolean"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"a.undefinedProp ",(0,a.kt)("inlineCode",{parentName:"td"},"#")," 42"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"True")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Mayor que"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Undefined ",(0,a.kt)("inlineCode",{parentName:"td"},">")," string, Date, Time, Boolean, number"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Boolean"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"a.undefinedProp ",(0,a.kt)("inlineCode",{parentName:"td"},">"),' "abc"'),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"False")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Menor que"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Undefined ",(0,a.kt)("inlineCode",{parentName:"td"},"<")," string, Date, Time, Boolean, number"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Boolean"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"a.undefinedProp ",(0,a.kt)("inlineCode",{parentName:"td"},"<"),' "abc"'),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"False")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Mayor o igual que"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Undefined ",(0,a.kt)("inlineCode",{parentName:"td"},">=")," string, Date, Time, Boolean, number"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Boolean"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"a.undefinedProp ",(0,a.kt)("inlineCode",{parentName:"td"},">="),' "abc"'),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"False")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Menor o igual que"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Undefined ",(0,a.kt)("inlineCode",{parentName:"td"},"<=")," string, Date, Time, Boolean, number"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"Boolean"),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"a.undefinedProp ",(0,a.kt)("inlineCode",{parentName:"td"},"<="),' "abc"'),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"False")))),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"otros valores")," son expresiones de todo tipo con un valor ni Undefined ni Null."),(0,a.kt)("admonition",l({},{type:"info"}),(0,a.kt)("p",{parentName:"admonition"},"Las comparaciones de valores Undefined con valores Pointer, Picture, Blob, Object, Collection, Undefined o Null mediante los operadores Mayor que (",(0,a.kt)("inlineCode",{parentName:"p"},">"),"), Menor que (",(0,a.kt)("inlineCode",{parentName:"p"},"<"),"), Mayor o igual que (",(0,a.kt)("inlineCode",{parentName:"p"},">="),") y Menor o igual que (",(0,a.kt)("inlineCode",{parentName:"p"},"<="),") no se admiten y devuelven un error.")),(0,a.kt)("h2",l({},{id:"ejemplos"}),"Ejemplos"),(0,a.kt)("p",null,"A continuaci\xf3n se muestran los diferentes resultados del comando ",(0,a.kt)("inlineCode",{parentName:"p"},"Undefined")," as\xed como del comando ",(0,a.kt)("inlineCode",{parentName:"p"},"Null")," con propiedades de objetos, dependiendo del contexto:"),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-4d"}),'var $vEmp : Object\nvar $result : Boolean\n$vEmp:=New object\n$vEmp.name:="Smith"\n\n$vEmp.children:=Null\n \n$result:=Undefined($vEmp.name) //False\n$result:=($vEmp.name=Null) //False\n \n$result:=Undefined($vEmp.children) //False\n$result:=($vEmp.children=Null) //True\n \n$result:=Undefined($vEmp.parent) //True\n$result:=($vEmp.parent=Null) //True\n')),(0,a.kt)("p",null,"Ejemplos de resultados de comparaci\xf3n con valores indefinidos y null:"),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-4d"}),'var $result : Boolean\nvar $vObj : Object\nvar $vVar : Variant\n\n$vObj:=New object\n$vObj.null:=Null\n//note que $vVar no est\xe1 asignado\n\n$result:=($vObj.undefined=42) //False\n$result:=($vObj.undefined=$vObj.null) //True\n$result:=($vObj.undefined=$vVar)  //True\n\n$result:=($vObj.undefined#$vObj.null) //False\n$result:=($vObj.undefined#42) //True\n$result:=($vObj.undefined#$vVar) //False\n\n$result:=($vObj.undefined>"hello") //False\n$result:=($vObj.undefined>$vVar)  //Error\n$result:=($vObj.undefined>$vObj.null)  //Error\n$result:=($vVar < 42) //False\n\n')))}s.isMDXComponent=!0}}]);