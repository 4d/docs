"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[57050],{3905:(e,a,t)=>{t.d(a,{Zo:()=>c,kt:()=>m});var s=t(67294);function o(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function n(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);a&&(s=s.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,s)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?n(Object(t),!0).forEach((function(a){o(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,s,o=function(e,a){if(null==e)return{};var t,s,o={},n=Object.keys(e);for(s=0;s<n.length;s++)t=n[s],a.indexOf(t)>=0||(o[t]=e[t]);return o}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(s=0;s<n.length;s++)t=n[s],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var r=s.createContext({}),d=function(e){var a=s.useContext(r),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},c=function(e){var a=d(e.components);return s.createElement(r.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return s.createElement(s.Fragment,{},a)}},p=s.forwardRef((function(e,a){var t=e.components,o=e.mdxType,n=e.originalType,r=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=d(t),m=o,b=p["".concat(r,".").concat(m)]||p[m]||u[m]||n;return t?s.createElement(b,l(l({ref:a},c),{},{components:t})):s.createElement(b,l({ref:a},c))}));function m(e,a){var t=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var n=t.length,l=new Array(n);l[0]=p;var i={};for(var r in a)hasOwnProperty.call(a,r)&&(i[r]=a[r]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var d=2;d<n;d++)l[d]=t[d];return s.createElement.apply(null,l)}return s.createElement.apply(null,t)}p.displayName="MDXCreateElement"},99475:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>c});t(67294);var s=t(3905);function o(){return o=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s])}return e},o.apply(this,arguments)}function n(e,a){if(null==e)return{};var t,s,o=function(e,a){if(null==e)return{};var t,s,o={},n=Object.keys(e);for(s=0;s<n.length;s++)t=n[s],a.indexOf(t)>=0||(o[t]=e[t]);return o}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(s=0;s<n.length;s++)t=n[s],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}const l={id:"glossary",title:"Glosario"},i=void 0,r={unversionedId:"ORDA/glossary",id:"version-19/ORDA/glossary",title:"Glosario",description:"Visi\xf3n general de los principales conceptos",source:"@site/i18n/es/docusaurus-plugin-content-docs/version-19/ORDA/glossary.md",sourceDirName:"ORDA",slug:"/ORDA/glossary",permalink:"/docs/es/19/ORDA/glossary",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20ORDA%2Fglossary.md%20(19)&body=Please%20enter%20your%20comment%3A",tags:[],version:"19",frontMatter:{id:"glossary",title:"Glosario"},sidebar:"docs",previous:{title:"Utilizar un almac\xe9n de datos remoto",permalink:"/docs/es/19/ORDA/datastores"},next:{title:"Generalidades - API de clases",permalink:"/docs/es/19/API/overview"}},d={},c=[{value:"Visi\xf3n general de los principales conceptos",id:"visi\xf3n-general-de-los-principales-conceptos",level:2},{value:"Atributo",id:"atributo",level:2},{value:"AttributePath",id:"attributepath",level:2},{value:"Class code",id:"class-code",level:2},{value:"Data model class",id:"data-model-class",level:2},{value:"Data model object",id:"data-model-object",level:2},{value:"Data model function",id:"data-model-function",level:2},{value:"Dataclass",id:"dataclass",level:2},{value:"DataClass class",id:"dataclass-class",level:2},{value:"Datastore",id:"datastore",level:2},{value:"DataStore class",id:"datastore-class",level:2},{value:"DataStoreImplementation",id:"datastoreimplementation",level:2},{value:"Copia profunda",id:"copia-profunda",level:2},{value:"ds",id:"ds",level:2},{value:"Entity",id:"entity",level:2},{value:"Entity selection",id:"entity-selection",level:2},{value:"Generic class",id:"generic-class",level:2},{value:"Lazy loading",id:"lazy-loading",level:2},{value:"Datastore principal",id:"datastore-principal",level:2},{value:"M\xe9todo",id:"m\xe9todo",level:2},{value:"Tipo de datos mixtos",id:"tipo-de-datos-mixtos",level:2},{value:"Bloqueo optimista",id:"bloqueo-optimista",level:2},{value:"Bloqueo pesimista",id:"bloqueo-pesimista",level:2},{value:"Propiedad",id:"propiedad",level:2},{value:"PropertyPath",id:"propertypath",level:2},{value:"Regular class",id:"regular-class",level:2},{value:"Related dataclass",id:"related-dataclass",level:2},{value:"Atributo relacional",id:"atributo-relacional",level:2},{value:"Related entities",id:"related-entities",level:2},{value:"Remote datastore",id:"remote-datastore",level:2},{value:"Session",id:"session",level:2},{value:"Copia superficial (Shallow copy)",id:"copia-superficial-shallow-copy",level:2},{value:"Stamp",id:"stamp",level:2}],u={toc:c};function p(e){var{components:a}=e,l=n(e,["components"]);return(0,s.kt)("wrapper",o({},u,l,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h2",o({},{id:"visi\xf3n-general-de-los-principales-conceptos"}),"Visi\xf3n general de los principales conceptos"),(0,s.kt)("p",null,(0,s.kt)("img",{src:t(47017).Z,width:"478",height:"433"})),(0,s.kt)("h2",o({},{id:"atributo"}),"Atributo"),(0,s.kt)("p",null,"Un atributo es la celda de almacenamiento m\xe1s peque\xf1a de una base de datos relacional (ver tambi\xe9n ",(0,s.kt)("a",o({parentName:"p"},{href:"#relaci%C3%B3n-atributo"}),"Atributo relacional"),"). No hay que confundir los atributos de la dataclass con los atributos de las entidades:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"En un objeto dataclass, cada propiedad es un atributo de dataclass que se asigna a un campo correspondiente en la tabla correspondiente (mismo nombre y tipo)."),(0,s.kt)("li",{parentName:"ul"},"En un objeto entity, los atributos de entidades son propiedades que contienen los valores para los atributos del almac\xe9n de datos correspondientes.",(0,s.kt)("blockquote",{parentName:"li"},(0,s.kt)("p",{parentName:"blockquote"},'Attributes and properties are similar concepts. "Atributo" se utiliza para designar las propiedades de la dataclass que almacena datos, mientras que "propiedad" es m\xe1s gen\xe9rico y define un dato almacenado dentro de un objeto.')))),(0,s.kt)("h2",o({},{id:"attributepath"}),"AttributePath"),(0,s.kt)("p",null,"Un attributePath es la ruta de un atributo al interior de una determinada clase de datos o de una entidad. Ver tambi\xe9n ",(0,s.kt)("a",o({parentName:"p"},{href:"#propertyPath"}),"PropertyPath"),"."),(0,s.kt)("h2",o({},{id:"class-code"}),"Class code"),(0,s.kt)("p",null,"C\xf3digo para la(s) funci\xf3n(es) de clase usuarios."),(0,s.kt)("h2",o({},{id:"data-model-class"}),"Data model class"),(0,s.kt)("p",null,"Clase extendida disponible para un objeto del modelo de datos."),(0,s.kt)("h2",o({},{id:"data-model-object"}),"Data model object"),(0,s.kt)("p",null,"Objetos de base de datos disponibles a trav\xe9s del concepto ORDA, es decir, datastore, dataclasses, entities y entity selections."),(0,s.kt)("h2",o({},{id:"data-model-function"}),"Data model function"),(0,s.kt)("p",null,"Funci\xf3n de una clase de modelo de datos ORDA."),(0,s.kt)("h2",o({},{id:"dataclass"}),"Dataclass"),(0,s.kt)("p",null,"Una dataclass es un modelo de objeto que describe los datos. Las tablas de la base de datos suministradas por el datastore se manejan mediante clases de datos. Cada tabla de la base de datos ofrecida por el almac\xe9n de datos tiene una clase de datos correspondiente con el mismo nombre. Cada campo de la tabla es un atributo de la dataclass."),(0,s.kt)("p",null,"Un dataclass est\xe1 relacionado con un \xfanico datastore."),(0,s.kt)("h2",o({},{id:"dataclass-class"}),"DataClass class"),(0,s.kt)("p",null,"Clase para los objetos dataclass espec\xedficos, en la que se pueden a\xf1adir funciones personalizadas."),(0,s.kt)("h2",o({},{id:"datastore"}),"Datastore"),(0,s.kt)("p",null,"Un dtastore es el objeto de interfaz suministrado por ORDA para referenciar una estructura y acceder a sus datos. La base de datos principal, devuelta por el comando ",(0,s.kt)("inlineCode",{parentName:"p"},"ds"),", est\xe1 disponible como datastore (el datastore principal)."),(0,s.kt)("p",null,"Un datastore ofrece:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"una conexi\xf3n a la base de datos 4D"),(0,s.kt)("li",{parentName:"ul"},"un conjunto de clases de datos para trabajar con la base de datos")),(0,s.kt)("p",null,"La base puede ser una base local 4D (el datastore principal), o una base 4D Server expuesta como recurso REST (un datastore remoto)."),(0,s.kt)("p",null,"Un datastore referencia solo a una base de datos. Sin embargo, es posible abrir varios datastores para acceder a varias bases."),(0,s.kt)("h2",o({},{id:"datastore-class"}),"DataStore class"),(0,s.kt)("p",null,"Clase para los objetos datastore, en la que puede agregar funciones personalizadas."),(0,s.kt)("h2",o({},{id:"datastoreimplementation"}),"DataStoreImplementation"),(0,s.kt)("p",null,"Nombre interno de la clase gen\xe9rica DataStore en el class store ",(0,s.kt)("inlineCode",{parentName:"p"},"4D"),"."),(0,s.kt)("h2",o({},{id:"copia-profunda"}),"Copia profunda"),(0,s.kt)("p",null,"Una copia profunda (deep copy) duplica un objeto y todas las referencias que contiene. Tras una copia profunda, una colecci\xf3n copiada contiene elementos duplicados y, por tanto, nuevas referencias de todos los elementos originales. Ver tambi\xe9n Copia superficial."),(0,s.kt)("h2",o({},{id:"ds"}),"ds"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"ds")," es el comando del lenguaje 4D que devuelve una referencia de objeto ",(0,s.kt)("a",o({parentName:"p"},{href:"/docs/es/19/ORDA/dsmapping#datastore"}),"datastore"),". Coincide con el datastore disponible en la base de datos principal 4D."),(0,s.kt)("h2",o({},{id:"entity"}),"Entity"),(0,s.kt)("p",null,"Una entidad es un objeto que corresponde a un modelo de dataclass. Una entidad contiene los mismos atributos que la dataclass."),(0,s.kt)("p",null,"Una entidad puede verse como una instancia de la dataclass, como un registro de la tabla correspondiente a la dataclass en su datastore asociado. Sin embargo, una entidad tambi\xe9n contiene los datos relacionados. La finalidad de la entidad es gestionar los datos (crear, actualizar, eliminar)."),(0,s.kt)("p",null,"Para m\xe1s informaci\xf3n, consulte Entidades."),(0,s.kt)("h2",o({},{id:"entity-selection"}),"Entity selection"),(0,s.kt)("p",null,"Una selecci\xf3n de entidades es un objeto. Cuando se consulta el datastore, se devuelve una selecci\xf3n de entidades. Una selecci\xf3n de entidades es un conjunto de referencias a las entidades relacionadas con la dataclass."),(0,s.kt)("p",null,"Una selecci\xf3n de entidades contiene:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"un conjunto de 0 a X referencias de entidades,"),(0,s.kt)("li",{parentName:"ul"},"una propiedad length (siempre),"),(0,s.kt)("li",{parentName:"ul"},"las propiedades queryPlan y queryPath (si se preguntan durante la consulta).")),(0,s.kt)("p",null,"Una selecci\xf3n de entidades tambi\xe9n puede estar vac\xeda."),(0,s.kt)("h2",o({},{id:"generic-class"}),"Generic class"),(0,s.kt)("p",null,"Clase integrada para los objetos ORDA tales como las entidades o las dataclasses. Las funciones y propiedades de las clases gen\xe9ricas est\xe1n disponibles autom\xe1ticamente en las clases usuario extendidas, por ejemplo ",(0,s.kt)("inlineCode",{parentName:"p"},"EmployeeEntity"),"."),(0,s.kt)("h2",o({},{id:"lazy-loading"}),"Lazy loading"),(0,s.kt)("p",null,'Dado que las entidades se gestionan como referencias, los datos s\xf3lo se cargan cuando es necesario, es decir, cuando se accede a ellos en el c\xf3digo o a trav\xe9s de los widgets de la interfaz. Este principio de optimizaci\xf3n se denomina "lazy loading".'),(0,s.kt)("h2",o({},{id:"datastore-principal"}),"Datastore principal"),(0,s.kt)("p",null,"El objeto Datastore correspondiente a la base 4D abierta (aut\xf3noma o cliente/servidor). El datastore principal es devuelto por el comando ds."),(0,s.kt)("h2",o({},{id:"m\xe9todo"}),"M\xe9todo"),(0,s.kt)("p",null,"Los objetos ORDA, como los datastores, dataclasses, entity selections y entities, definen las clases de objetos. Proporcionan los m\xe9todos espec\xedficos para interactuar directamente con ellos. Estos m\xe9todos tambi\xe9n se llaman funciones miembros (member functions). Estos m\xe9todos se utilizan llam\xe1ndolos sobre una instancia del objeto."),(0,s.kt)("p",null,"Por ejemplo, el m\xe9todo ",(0,s.kt)("inlineCode",{parentName:"p"},"query()")," es una member function de dataclass. Si ha almacenado un objeto dataclass en la variable ",(0,s.kt)("inlineCode",{parentName:"p"},"$myClass"),", puede escribir:"),(0,s.kt)("pre",null,(0,s.kt)("code",o({parentName:"pre"},{className:"language-code4d"}),'$myClass.query("name = smith")\n')),(0,s.kt)("h2",o({},{id:"tipo-de-datos-mixtos"}),"Tipo de datos mixtos"),(0,s.kt)("p",null,'En esta documentaci\xf3n, el tipo de datos "Mixto" se utiliza para designar los distintos tipos de valores que pueden almacenarse en los atributos de las clases de datos. Incluye:'),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"number"),(0,s.kt)("li",{parentName:"ul"},"text"),(0,s.kt)("li",{parentName:"ul"},"null"),(0,s.kt)("li",{parentName:"ul"},"boolean"),(0,s.kt)("li",{parentName:"ul"},"date"),(0,s.kt)("li",{parentName:"ul"},"object"),(0,s.kt)("li",{parentName:"ul"},"collection"),(0,s.kt)("li",{parentName:"ul"},"imagen(","*",")")),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"(","*",") el tipo Imagen no es soportado por los m\xe9todos estad\xedsticos tales como")," ",(0,s.kt)("inlineCode",{parentName:"p"},"entitySelection.max( )"),"."),(0,s.kt)("h2",o({},{id:"bloqueo-optimista"}),"Bloqueo optimista"),(0,s.kt)("p",null,'En el modo "bloqueo optimista", las entidades no se bloquean expl\xedcitamente antes de actualizarlas. Cada entidad tiene un marcador interno que se incrementa autom\xe1ticamente cada vez que la entidad se guarda en el disco. Los m\xe9todos entity.save( ) o entity.drop( ) devolver\xe1n un error si el marcador de la entidad cargada (en memoria) y el marcador de la entidad en el disco no coinciden, o si la entidad ha sido suprimida. El bloqueo optimista s\xf3lo est\xe1 disponible en la implementaci\xf3n ORDA. Ver tambi\xe9n " Bloqueo pesimista ".'),(0,s.kt)("h2",o({},{id:"bloqueo-pesimista"}),"Bloqueo pesimista"),(0,s.kt)("p",null,'Un "bloqueo pesimista" significa que una entidad se bloquea antes de que se acceda a ella, utilizando el m\xe9todo entity.lock( ). Los otros procesos no pueden actualizar ni suprimir la entidad hasta que se desbloquee. El lenguaje 4D cl\xe1sico s\xf3lo permite bloqueos pesimistas. Ver "Bloqueo optimista".'),(0,s.kt)("h2",o({},{id:"propiedad"}),"Propiedad"),(0,s.kt)("p",null,"Ver ",(0,s.kt)("a",o({parentName:"p"},{href:"#attribute"}),"Atributo"),"."),(0,s.kt)("blockquote",null,(0,s.kt)("blockquote",{parentName:"blockquote"},(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("em",{parentName:"p"},"Attributes")," and ",(0,s.kt)("em",{parentName:"p"},"properties"),' are similar concepts. "Atributo" se utiliza para designar las propiedades de la dataclass que almacena datos, mientras que "propiedad" es m\xe1s gen\xe9rico y define un dato almacenado dentro de un objeto.'))),(0,s.kt)("h2",o({},{id:"propertypath"}),"PropertyPath"),(0,s.kt)("p",null,'Un propertyPath es la ruta de acceso a una propiedad en un objeto dado. Si la propiedad est\xe1 anidada en varios niveles, cada nivel estar\xe1 separado por un punto (".").'),(0,s.kt)("h2",o({},{id:"regular-class"}),"Regular class"),(0,s.kt)("p",null,"Clase usuario no relacionada a un objeto ORDA."),(0,s.kt)("h2",o({},{id:"related-dataclass"}),"Related dataclass"),(0,s.kt)("p",null,"Estas son dataclasses vinculadas por los atributos de relaci\xf3n."),(0,s.kt)("h2",o({},{id:"atributo-relacional"}),"Atributo relacional"),(0,s.kt)("p",null,"Los atributos de relaci\xf3n se utilizan para conceptualizar las relaciones entre las clases de datos (muchos a uno y uno a muchos)."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Relaci\xf3n Muchos a uno (la dataclassA hace referencia a una instancia de la dataclassB): un atributo de relaci\xf3n est\xe1 disponible en la dataclassA y hace referencia a una instancia de dataclassB."),(0,s.kt)("li",{parentName:"ul"},"Relaci\xf3n Uno a muchos (una ocurrencia de la dataclassB hace referencia a varias ocurrencias de la dataclassA): un atributo de relaci\xf3n est\xe1 disponible en la dataclassB y hace referencia a varias instancias de la dataclassA.")),(0,s.kt)("p",null,"Una dataclass puede tener atributos de relaci\xf3n recursivos."),(0,s.kt)("p",null,"En una entidad, el valor de un atributo de relaci\xf3n puede ser una entidad o una selecci\xf3n de entidades."),(0,s.kt)("h2",o({},{id:"related-entities"}),"Related entities"),(0,s.kt)("p",null,"Una entidad relacionada puede verse como la instancia de un atributo de relaci\xf3n en una clase de datos."),(0,s.kt)("p",null,"Las selecciones de entidades pueden referirse a entidades relacionadas seg\xfan los atributos de relaci\xf3n definidos en las clases de datos correspondientes."),(0,s.kt)("h2",o({},{id:"remote-datastore"}),"Remote datastore"),(0,s.kt)("p",null,"Una base de datos 4D abierta en un servidor 4D o 4D Server (disponible a trav\xe9s de HTTP) y expuesta como recurso REST. Esta base de datos puede ser referenciada localmente como un Datastore desde otras estaciones de trabajo, donde se le asigna un locaID. El almac\xe9n de datos remoto puede utilizarse mediante los conceptos ORDA (almac\xe9n de datos, clase de datos, selecci\xf3n de entidades...). Este uso se somete a un sistema de licencia."),(0,s.kt)("h2",o({},{id:"session"}),"Session"),(0,s.kt)("p",null,"Cuando la aplicaci\xf3n 4D se conecta a un datastore Remoto, se crea una sesi\xf3n en el 4D Server (HTTP). Se genera una cookie de sesi\xf3n y se asocia al identificador del datastore local."),(0,s.kt)("p",null,"Cada vez que se abre una nueva sesi\xf3n, se utiliza una licencia. Cada vez que se cierra una sesi\xf3n, se libera la licencia."),(0,s.kt)("p",null,"Las sesiones inactivas se cierran autom\xe1ticamente despu\xe9s de un tiempo de espera. El tiempo de espera por defecto es de 48 horas, puede ser fijado por el desarrollador (debe ser >= 60 minutos)."),(0,s.kt)("h2",o({},{id:"copia-superficial-shallow-copy"}),"Copia superficial (Shallow copy)"),(0,s.kt)("p",null,"Una copia superficial s\xf3lo duplica la estructura de los elementos y mantiene las mismas referencias internas. Tras una copia superficial, dos colecciones compartir\xe1n los elementos individuales. Ver tambi\xe9n Copia profunda."),(0,s.kt)("h2",o({},{id:"stamp"}),"Stamp"),(0,s.kt)("p",null,'Utilizado en tecnolog\xeda de bloqueo "optimista". Todas las entidades tienen un contador interno, el marcador, que se incrementa cada vez que se guarda la entidad. Al comparar autom\xe1ticamente los marcadores entre una entidad que se est\xe1 guardando y su versi\xf3n almacenada en disco, 4D puede evitar las modificaciones concurrentes en las mismas entidades.'))}p.isMDXComponent=!0},47017:(e,a,t)=>{t.d(a,{Z:()=>s});const s=t.p+"assets/images/mainConcepts-f749b0303b2e0c0e718d1b7cb8374126.png"}}]);