"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[23819],{14968:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>m,frontMatter:()=>d,metadata:()=>t,toc:()=>l});var r=o(474848),s=o(28453);const d={id:"form-set-entry-order",title:"FORM SET ENTRY ORDER",slug:"/commands/form-set-entry-order",displayed_sidebar:"docs"},a=void 0,t={id:"commands-legacy/form-set-entry-order",title:"FORM SET ENTRY ORDER",description:"FORM SET ENTRY ORDER ( nomObjetos {; numPag} )",source:"@site/i18n/es/docusaurus-plugin-content-docs/version-20-R7/commands-legacy/form-set-entry-order.md",sourceDirName:"commands-legacy",slug:"/commands/form-set-entry-order",permalink:"/docs/es/commands/form-set-entry-order",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fform-set-entry-order.md%20(20-R7)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R7",frontMatter:{id:"form-set-entry-order",title:"FORM SET ENTRY ORDER",slug:"/commands/form-set-entry-order",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"FORM SCREENSHOT",permalink:"/docs/es/commands/form-screenshot"},next:{title:"FORM SET HORIZONTAL RESIZING",permalink:"/docs/es/commands/form-set-horizontal-resizing"}},i={},l=[{value:"Descripci\xf3n",id:"descripci\xf3n",level:4},{value:"Ejemplo",id:"ejemplo",level:4},{value:"Ver tambi\xe9n",id:"ver-tambi\xe9n",level:4}];function c(e){const n={a:"a",br:"br",code:"code",em:"em",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"FORM SET ENTRY ORDER"})," ( ",(0,r.jsx)(n.em,{children:"nomObjetos"})," {; ",(0,r.jsx)(n.em,{children:"numPag"}),"} )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Par\xe1metro"}),(0,r.jsx)(n.th,{children:"Tipo"}),(0,r.jsx)(n.th,{}),(0,r.jsx)(n.th,{children:"Descripci\xf3n"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"nomObjetos"}),(0,r.jsx)(n.td,{children:"Text array"}),(0,r.jsx)(n.td,{children:"\u2192"}),(0,r.jsx)(n.td,{children:"Array de nombres de objetos en su orden de entrada esperado"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"numPag"}),(0,r.jsx)(n.td,{children:"Integer"}),(0,r.jsx)(n.td,{children:"\u2192"}),(0,r.jsx)(n.td,{children:"N\xfamero de la p\xe1gina para definir el orden de entrada (p\xe1gina actual si se omite)"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Este comando no es hilo seguro, no puede ser utilizado en c\xf3digo apropiativo."})}),"\n",(0,r.jsx)(n.h4,{id:"descripci\xf3n",children:"Descripci\xf3n"}),"\n",(0,r.jsxs)(n.p,{children:["El comando ",(0,r.jsx)(n.strong,{children:"FORM SET ENTRY ORDER"})," permite definir din\xe1micamente el orden de entrada del formulario actual para el proceso actual basado en el array ",(0,r.jsx)(n.em,{children:"nomObjetos"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Pase en ",(0,r.jsx)(n.em,{children:"nomObjetos"})," un array que contenga los nombres de los objetos de formulario a incluir en el orden de entrada. El orden de los objetos en el array define el orden de entrada del formulario. Todo objeto de formulario v\xe1lido perteneciente al formulario actual puede ser listado. Un objeto es v\xe1lido si:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["tiene la propiedad enfocable (",(0,r.jsx)(n.strong,{children:"Nota"}),": el comando ignora la propiedad ",(0,r.jsx)(n.strong,{children:"Tabulable"})," de los objetos),"]}),"\n",(0,r.jsx)(n.li,{children:"existe en el formulario (su nombre est\xe1 definido),"}),"\n",(0,r.jsxs)(n.li,{children:["se utiliza en la p\xe1gina actual (o en la p\xe1gina ",(0,r.jsx)(n.em,{children:"numPag"}),", ver abajo). Tenga en cuenta que una p\xe1gina de formulario incluye los objetos de la p\xe1gina 0 y los objetos del formulario heredado."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Si se detecta un objeto no v\xe1lido en tiempo de ejecuci\xf3n, simplemente se omite y 4D intentar\xe1 utilizar el siguiente objeto v\xe1lido en el array ",(0,r.jsx)(n.em,{children:"nomObjetos"}),". Puede conocer el orden de entrada actual de la p\xe1gina actual (basada en objetos v\xe1lidos) utilizando el comando ",(0,r.jsx)(n.a,{href:"/docs/es/commands/form-get-entry-order",children:"FORM GET ENTRY ORDER"})," con el par\xe1metro *."]}),"\n",(0,r.jsxs)(n.p,{children:["Opcionalmente, puede pasar el ",(0,r.jsx)(n.em,{children:"numPag"})," para el cual definir el orden de entrada. Si se omite, el comando se aplica a la p\xe1gina actual."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Notas:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["El orden de entrada de un subformulario se define en el propio subformulario. Debe llamar al comando ",(0,r.jsx)(n.strong,{children:"FORM SET ENTRY ORDER"})," en el contexto del subformulario."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Este comando no define el primer objeto enfocable en el formulario en tiempo de ejecuci\xf3n. Si desea definir un primer objeto en el orden de entrada, debe utilizar el comando ",(0,r.jsx)(n.a,{href:"/docs/es/commands/goto-object",children:"GOTO OBJECT"})," en el evento On Load del formulario. Si utiliz\xf3 el comando ",(0,r.jsx)(n.a,{href:"/docs/es/commands/object-duplicate",children:"OBJECT DUPLICATE"}),", puede definir el objeto duplicado como el primero pasando la constante Object First in entry order en el par\xe1metro ",(0,r.jsx)(n.em,{children:"ligadoA"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Acerca del orden de entrada de los datos"}),(0,r.jsx)(n.br,{}),"\nEl orden de entrada de los datos es el orden en que se seleccionan los campos, subformularios y todos los dem\xe1s objetos activos cuando el usuario toca la teclae ",(0,r.jsx)(n.strong,{children:"Tab"})," o ",(0,r.jsx)(n.strong,{children:"Retorno de carro"})," en un formulario. El orden inverso de entrada de datos tambi\xe9n est\xe1 disponible presionando las teclas ",(0,r.jsx)(n.strong,{children:"May\xfas +Tab"})," o ",(0,r.jsx)(n.strong,{children:"May\xfas +"})," ",(0,r.jsx)(n.strong,{children:"Retorno de carro"}),". El orden de entrada puede definirse por defecto o modificarse en el editor de formularios. Para m\xe1s informaci\xf3n, consulte la secci\xf3n ",(0,r.jsx)(n.em,{children:"Modificar el orden de entrada de los datos"})," del manual de ",(0,r.jsx)(n.em,{children:"Dise\xf1o"}),"."]}),"\n",(0,r.jsx)(n.h4,{id:"ejemplo",children:"Ejemplo"}),"\n",(0,r.jsx)(n.p,{children:"Usted desea definir el orden de entrada de los objetos en el formulario basado en sus nombres:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:"\xa0ARRAY TEXT(tabNames;0)\n\xa0\n\xa0FORM GET OBJECTS(tabNames;Form current page+Form inherited)\xa0//obtenemos los nombres de los objeto del formulario\n\xa0SORT ARRAY(tabNames;>)\xa0//clasifica los nombres en orden ascendente\n\xa0FORM SET ENTRY ORDER(tabNames)\xa0//utiliza el orden alfab\xe9tico para el orden de entrada\n\xa0\xa0//se ignoran los objetos no enfocables\n"})}),"\n",(0,r.jsx)(n.h4,{id:"ver-tambi\xe9n",children:"Ver tambi\xe9n"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/docs/es/commands/form-get-entry-order",children:"FORM GET ENTRY ORDER"})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>t});var r=o(296540);const s={},d=r.createContext(s);function a(e){const n=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);