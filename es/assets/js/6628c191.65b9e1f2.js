"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9083],{438717:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var s=n(474848),a=n(28453);const i={id:"attributes",title:"$attributes"},r=void 0,l={id:"REST/attributes",title:"$attributes",description:"Permite seleccionar los atributos relacionales a obtener de la dataclass (por ejemplo, Company(1)?$attributes=employees.lastname o Employee?$attributes=employer.name).",source:"@site/i18n/es/docusaurus-plugin-content-docs/version-20-R6/REST/$attributes.md",sourceDirName:"REST",slug:"/REST/attributes",permalink:"/docs/es/REST/attributes",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20REST%2F%24attributes.md%20(20-R6)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R6",frontMatter:{id:"attributes",title:"$attributes"},sidebar:"docs",previous:{title:"$atomic/$atOnce",permalink:"/docs/es/REST/atomic_$atonce"},next:{title:"$binary",permalink:"/docs/es/REST/binary"}},o={},d=[{value:"Descripci\xf3n",id:"descripci\xf3n",level:2},{value:"Ejemplo con varias entidades relacionadas",id:"ejemplo-con-varias-entidades-relacionadas",level:2},{value:"Ejemplo con una entidad relacionada",id:"ejemplo-con-una-entidad-relacionada",level:2}];function c(e){const t={code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["Permite seleccionar los atributos relacionales a obtener de la dataclass (",(0,s.jsx)(t.em,{children:"por ejemplo"}),", ",(0,s.jsx)(t.code,{children:"Company(1)?$attributes=employees.lastname"})," o ",(0,s.jsx)(t.code,{children:"Employee?$attributes=employer.name"}),")."]}),"\n",(0,s.jsx)(t.h2,{id:"descripci\xf3n",children:"Descripci\xf3n"}),"\n",(0,s.jsxs)(t.p,{children:["Cuando tenga atributos relacionales en una dataclass, utilice ",(0,s.jsx)(t.code,{children:"$attributes"})," para definir la ruta de los atributos cuyos valores desea obtener para la entidad o entidades relacionadas."]}),"\n",(0,s.jsxs)(t.p,{children:["Puede aplicar ",(0,s.jsx)(t.code,{children:"$attributes"})," a una entidad (",(0,s.jsx)(t.em,{children:"p. Ej."}),", People(1)) o una entity selection (",(0,s.jsx)(t.em,{children:"p. Ej."}),", People/$entityset/0AF4679A5C394746BFEB68D2162A19FF)."]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Si ",(0,s.jsx)(t.code,{children:"$attributes"}),' no se especifica en una consulta, o si se pasa el valor "*", se extraen todos los atributos disponibles. Los atributos **de entidad relacionada ** se extraen con la forma simple: un objeto con la propiedad ',(0,s.jsx)(t.code,{children:"__KEY"})," (llave primaria) y ",(0,s.jsx)(t.code,{children:"URI"}),". Los atributos de las ",(0,s.jsx)(t.strong,{children:"entidades relacionadas"})," no se extraen."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Si se especifica ",(0,s.jsx)(t.code,{children:"$attributes"})," para los atributos ",(0,s.jsx)(t.strong,{children:"de entidad relacionada"}),":"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"$attributes=relatedEntity"}),": se devuelve la entidad relacionada con forma simple (propiedad __KEY diferida (llave primaria)) y ",(0,s.jsx)(t.code,{children:"URI"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"$attributes=relatedEntity.*"}),": se devuelven todos los atributos de la entidad relacionada"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"$attributes=relatedEntity.attributePath1, relatedEntity.attributePath2, ..."}),": s\xf3lo se devuelven los atributos de la entidad relacionada."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Si se especifica ",(0,s.jsx)(t.code,{children:"$attributes"})," para los atributos ",(0,s.jsx)(t.strong,{children:"de entidades relacionadas"}),":"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"$attributes=relatedEntities.*"}),": se devuelven todas las propiedades de todas las entidades relacionadas"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"$attributes=relatedEntities.attributePath1, relatedEntities.attributePath2, ..."}),": s\xf3lo se devuelven los atributos de las entidades relacionadas."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"ejemplo-con-varias-entidades-relacionadas",children:"Ejemplo con varias entidades relacionadas"}),"\n",(0,s.jsx)(t.p,{children:'Si pasamos la petici\xf3n REST siguiente para nuestra clase de datos Company (que tiene un atributo de relaci\xf3n "empleados"):'}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"GET  /rest/Company(1)/?$attributes=employees.lastname"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Response"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'{\n    "__entityModel": "Company",\n    "__KEY": "1",  \n    "__TIMESTAMP": "2018-04-25T14:41:16.237Z",\n    "__STAMP": 2,\n    "employees": {\n\t\t"__ENTITYSET": "/rest/Company(1)/employees?$expand=employees",\n\t\t"__GlobalStamp": 50,\n\t\t"__COUNT": 135,\n\t\t"__FIRST": 0,\n\t\t"__ENTITIES": [\n\t\t\t{\n\t\t\t\t"__KEY": "1",\n\t\t\t\t"__TIMESTAMP": "2019-12-01T20:18:26.046Z",\n\t\t\t\t"__STAMP": 5,\n\t\t\t\t"lastname": "ESSEAL"\n\t\t\t},\n\t\t\t{\n\t\t\t\t"__KEY": "2",\n\t\t\t\t"__TIMESTAMP": "2019-12-04T10:58:42.542Z",\n\t\t\t\t"__STAMP": 6,\n\t\t\t\t"lastname": "JONES"\n\t\t\t},\n\t\t\t...\n    }\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:"Si desea obtener todos los atributos de los empleados:"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"GET  /rest/Company(1)/?$attributes=employees.*"})}),"\n",(0,s.jsx)(t.p,{children:"Si quiere obtener el apellido y los atributos de nombre del trabajo de los empleados:"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"GET  /rest/Company(1)/?$attributes=employees.lastname,employees.jobname"})}),"\n",(0,s.jsx)(t.h2,{id:"ejemplo-con-una-entidad-relacionada",children:"Ejemplo con una entidad relacionada"}),"\n",(0,s.jsx)(t.p,{children:'Si pasamos la petici\xf3n REST siguiente para nuestra clase de datos Employee (que tiene varios atributos relacionales, incluyendo "employer"):'}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"GET  /rest/Employee(1)?$attributes=employer.name"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Response"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'{\n\t"__entityModel": "Employee",\n\t"__KEY": "1",\n\t"__TIMESTAMP": "2019-12-01T20:18:26.046Z",\n\t"__STAMP": 5,\n\t"employer": {\n\t\t"__KEY": "1",\n\t\t"__TIMESTAMP": "2018-04-25T14:41:16.237Z",\n\t\t"__STAMP": 0,\n\t\t"name": "Adobe"\n\t}\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:"Si desea obtener todos los atributos del empleador:"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"GET  /rest/Employee(1)?$attributes=employer.*"})}),"\n",(0,s.jsx)(t.p,{children:"Si desea obtener los apellidos de todos los empleados de la empresa:"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"GET  /rest/Employee(1)?$attributes=employer.employees.lastname"})})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var s=n(296540);const a={},i=s.createContext(a);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);